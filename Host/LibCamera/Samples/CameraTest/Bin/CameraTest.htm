<!doctype html public "-//w3c//dtd html 4.0 transitional//en">                 <html><head>
<title>Static Call Graph - [D:\IPCam_W99802\Release\Source\Host\LibCamera\Samples\CameraTest\Bin\CameraTest.axf]</title>
</head>
<body><HR>
<H1>Static Call Graph for image D:\IPCam_W99802\Release\Source\Host\LibCamera\Samples\CameraTest\Bin\CameraTest.axf</H1><HR>
<BR><P><STRONG>Maximum Stack Usage =      20296 bytes + Unknown
</STRONG><HR><P><STRONG><a name="[5d5f520]"></a>__exception_handlers</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect))
<BR>[Address Reference Count : 1]<UL><LI> vectors.o(Vect)
</UL><P><STRONG><a name="[5d5f3cc]"></a>start</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect))
<BR><BR>[Calls]<UL><LI><a href="#[5094434]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_hardware_init
<LI><a href="#[79f6a64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_hal_invoke_constructors
<LI><a href="#[5d5f800]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_start
</UL><BR>[Called By]<UL><LI><a href="#[5d61ba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;reset_vector
</UL><P><STRONG><a name="[5d5f358]"></a>reset_platform</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect), UNUSED)
<P><STRONG><a name="[501eac8]"></a>hal_interrupt_stack_call_pending_DSRs</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect))
<BR><BR>[Calls]<UL><LI><a href="#[501eb54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_call_pending_DSRs
</UL><BR>[Called By]<UL><LI><a href="#[73eb34c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::call_pending_DSRs()
</UL><P><STRONG><a name="[5d5f2e8]"></a>__gccmain</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect), UNUSED)
<P><STRONG><a name="[5d5f27c]"></a>_psr</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect), UNUSED)
<P><STRONG><a name="[5d5f214]"></a>_sp</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect), UNUSED)
<P><STRONG><a name="[49d2890]"></a>Cyg_WallClock::Cyg_WallClock()</STRONG> (ARM, 68 bytes, Stack size 8 bytes, wallclock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[49d2798]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_WallClock::init_hw_seconds()
</UL><BR>[Called By]<UL><LI><a href="#[49d2a28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
</UL><P><STRONG><a name="[49d2710]"></a>Cyg_WallClock::get_current_time()</STRONG> (ARM, 52 bytes, Stack size 8 bytes, wallclock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[49d2610]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_WallClock::get_hw_seconds()
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Called By]<UL><LI><a href="#[7317b94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[5081044]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_timestamp
</UL><P><STRONG><a name="[49d2508]"></a>Cyg_WallClock::set_current_time(unsigned int)</STRONG> (ARM, 48 bytes, Stack size 16 bytes, wallclock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[49d2610]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_WallClock::get_hw_seconds()
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><P><STRONG><a name="[49d2798]"></a>Cyg_WallClock::init_hw_seconds()</STRONG> (ARM, 24 bytes, Stack size 0 bytes, emulate.o(.text))
<BR>[Called By]<UL><LI><a href="#[49d2890]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_WallClock::Cyg_WallClock()
</UL><P><STRONG><a name="[49d2610]"></a>Cyg_WallClock::get_hw_seconds()</STRONG> (ARM, 132 bytes, Stack size 48 bytes, emulate.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[49d2710]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_WallClock::get_current_time()
<LI><a href="#[49d2508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_WallClock::set_current_time(unsigned int)
</UL><P><STRONG><a name="[4ba2f10]"></a>diag_write_char</STRONG> (ARM, 56 bytes, Stack size 8 bytes, diag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bba1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;uart_is_sys_msg_suppressed
<LI><a href="#[4ba2ea0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcom_write
<LI><a href="#[4ba2e24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_if_diag_write_char
</UL><BR>[Called By]<UL><LI><a href="#[4ba4f4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_diag_write_char(char, void**)
<LI><a href="#[4ba2cc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_write_string
<LI><a href="#[4ba2c50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_write_long_num
<LI><a href="#[4ba4034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_vprintf(void (*)(char, void**), void**, const char*, int**)
<LI><a href="#[79e7c98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_assert_msg
<LI><a href="#[79e7bb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_test_output
</UL><P><STRONG><a name="[4ba2db4]"></a>diag_init</STRONG> (ARM, 4 bytes, Stack size 0 bytes, diag.o(.text), UNUSED)
<P><STRONG><a name="[4ba2d40]"></a>diag_init_putc</STRONG> (ARM, 12 bytes, Stack size 0 bytes, diag.o(.text), UNUSED)
<P><STRONG><a name="[4ba2cc8]"></a>diag_write_string</STRONG> (ARM, 44 bytes, Stack size 8 bytes, diag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ba2f10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_write_char
</UL><BR>[Called By]<UL><LI><a href="#[79e7c98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_assert_msg
<LI><a href="#[79e7bb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_test_output
</UL><P><STRONG><a name="[4ba2c50]"></a>diag_write_long_num</STRONG> (ARM, 332 bytes, Stack size 88 bytes, diag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
<LI><a href="#[4ba2f10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_write_char
</UL><BR>[Called By]<UL><LI><a href="#[4ba2bdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_write_num
<LI><a href="#[4ba2b68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_write_dec
<LI><a href="#[4ba2af4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_write_hex
<LI><a href="#[4ba4034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_vprintf(void (*)(char, void**), void**, const char*, int**)
</UL><P><STRONG><a name="[4ba2bdc]"></a>diag_write_num</STRONG> (ARM, 52 bytes, Stack size 32 bytes, diag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ba2c50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_write_long_num
</UL><P><STRONG><a name="[4ba2b68]"></a>diag_write_dec</STRONG> (ARM, 60 bytes, Stack size 16 bytes, diag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ba2c50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_write_long_num
</UL><BR>[Called By]<UL><LI><a href="#[79e7c98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_assert_msg
<LI><a href="#[79e7bb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_test_output
</UL><P><STRONG><a name="[4ba2af4]"></a>diag_write_hex</STRONG> (ARM, 44 bytes, Stack size 16 bytes, diag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ba2c50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_write_long_num
</UL><BR>[Called By]<UL><LI><a href="#[79e7c98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_assert_msg
</UL><P><STRONG><a name="[4ba2a10]"></a>diag_sprintf</STRONG> (ARM, 72 bytes, Stack size 40 bytes, diag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ba4034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_vprintf(void (*)(char, void**), void**, const char*, int**)
</UL><BR>[Called By]<UL><LI><a href="#[4cece7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;inet_ntoa
<LI><a href="#[51396c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_mask
</UL><P><STRONG><a name="[4ba299c]"></a>diag_snprintf</STRONG> (ARM, 68 bytes, Stack size 40 bytes, diag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ba4034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_vprintf(void (*)(char, void**), void**, const char*, int**)
</UL><P><STRONG><a name="[4ba2928]"></a>diag_vsprintf</STRONG> (ARM, 60 bytes, Stack size 16 bytes, diag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ba4034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_vprintf(void (*)(char, void**), void**, const char*, int**)
</UL><P><STRONG><a name="[4a56250]"></a>diag_printf</STRONG> (ARM, 48 bytes, Stack size 24 bytes, diag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ba4034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_vprintf(void (*)(char, void**), void**, const char*, int**)
</UL><BR>[Called By]<UL><LI><a href="#[4ba26bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_dump_buf_with_offset_32bit
<LI><a href="#[4ba25c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_dump_buf_with_offset_16bit
<LI><a href="#[4a55754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;show_bootp
<LI><a href="#[4a556e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_net
<LI><a href="#[4d0cfac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_loopback_interface
<LI><a href="#[4d0cebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_all_network_interfaces
<LI><a href="#[4d33f28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_deliver
<LI><a href="#[4d34100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_control
<LI><a href="#[4d34088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_can_send
<LI><a href="#[4a54da0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;force_net_dev_linked
<LI><a href="#[4d33580]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_thread
<LI><a href="#[4c8d1ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hal_clock_initialize
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[50fca4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dhcp_mgt_entry
<LI><a href="#[51391c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[5138b24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_kmem_print_stats
<LI><a href="#[5138694]">&lt&lt</a>&nbsp;&nbsp;&nbsp;microtime
<LI><a href="#[51385ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_mono_time
<LI><a href="#[5138540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;csignal
<LI><a href="#[516dbcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtfree
<LI><a href="#[516d360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtinit
<LI><a href="#[51851fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_send
<LI><a href="#[5185604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_recv
<LI><a href="#[5184b38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_ioctl
<LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[51dddd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendConfirmSleep
<LI><a href="#[4d31f4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_mac_address
<LI><a href="#[4d32200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_add_card
<LI><a href="#[51b56d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_region_cfp_table
<LI><a href="#[51b5658]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_regiontable
<LI><a href="#[51b55e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_interrupt
<LI><a href="#[51b6884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_service_main_thread
<LI><a href="#[51b626c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_remove_card
<LI><a href="#[4d31dec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ProcessRxedPacket
<LI><a href="#[51b50c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_send
<LI><a href="#[524b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_tx
<LI><a href="#[524b498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendNullPacket
<LI><a href="#[52aafb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[52aaf2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_cfp_by_band_and_channel
<LI><a href="#[5250e48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_encode_nonwpa
<LI><a href="#[525055c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_active_data_rates
<LI><a href="#[52528b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_freq
<LI><a href="#[5252340]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_rts
<LI><a href="#[52522cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_rts
<LI><a href="#[5252258]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_frag
<LI><a href="#[52521e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_frag
<LI><a href="#[5251fa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_encode
<LI><a href="#[52520fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_txpow
<LI><a href="#[5252088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_retry
<LI><a href="#[5252014]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_retry
<LI><a href="#[525266c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_range
<LI><a href="#[5251f2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_power
<LI><a href="#[52aab90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetDeepSleep
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[4d32a04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_wireless_stats
<LI><a href="#[5252924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_freq
<LI><a href="#[5252428]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_rate
<LI><a href="#[525283c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_mode
<LI><a href="#[5252170]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_txpow
<LI><a href="#[52aba74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_radio_ioctl
<LI><a href="#[5334140]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_wait_for_interrupt
<LI><a href="#[533124c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;stop_clock
<LI><a href="#[533115c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_interrupt
<LI><a href="#[5330ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_read_ioreg
<LI><a href="#[5330f80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_write_ioreg
<LI><a href="#[5330f08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_write_iomem
<LI><a href="#[5330e94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_read_iomem
<LI><a href="#[5330e18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fill_buffer_forwrite
<LI><a href="#[53217b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;trigger_dma_write
<LI><a href="#[5321748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;complete_io
<LI><a href="#[53216d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_request_irq
<LI><a href="#[5321488]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_get_vendor_id
<LI><a href="#[532139c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_register
<LI><a href="#[5321328]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_unregister
<LI><a href="#[5321244]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_resume
<LI><a href="#[4d31c90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;coremodule_init
<LI><a href="#[4d31d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_fmi_init
<LI><a href="#[5333150]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_initialize_ireg
<LI><a href="#[533349c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_iomem_args
<LI><a href="#[53323b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;register_sdiohost
<LI><a href="#[75f08ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_init
<LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[75eeb88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_send_cmd
<LI><a href="#[5d87d8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getaddrinfo
<LI><a href="#[5da8630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_show_all_interfaces
<LI><a href="#[7af4380]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_output
<LI><a href="#[7af42a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;looutput
<LI><a href="#[7b3f8e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipv4_input
<LI><a href="#[52aa608]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_enable_ioctl
<LI><a href="#[52aa408]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_para_ie_ioctl
<LI><a href="#[52aa484]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_ack_policy_ioctl
<LI><a href="#[51de378]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_wmm_get_status
<LI><a href="#[7b1f7d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmdresp_wmm_get_status
<LI><a href="#[7b1f750]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_process_association_req
<LI><a href="#[7baef0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmdresp_wmm_addts_req
<LI><a href="#[7baee8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmdresp_wmm_delts_req
<LI><a href="#[51de280]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_wmm_addts_req
<LI><a href="#[51de204]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_wmm_delts_req
<LI><a href="#[51de184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_wmm_queue_config
<LI><a href="#[52aa08c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_queue_config_ioctl
<LI><a href="#[51de104]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_wmm_queue_stats
<LI><a href="#[7baed84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmdresp_wmm_queue_stats
<LI><a href="#[52aa00c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_queue_stats_ioctl
<LI><a href="#[7bb1e64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_channel_known_11d
<LI><a href="#[7bb1de0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_generate_domain_info_11d
<LI><a href="#[7bb1d54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_generate_parsed_region_chan_11d
<LI><a href="#[7bb1c50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_parse_domain_info_11d
<LI><a href="#[7bb1bd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_scan_type_11d
<LI><a href="#[7bb1aec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_enable_11d
<LI><a href="#[7bb1a6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_domain_info_11d
<LI><a href="#[7bb19f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_universaltable
<LI><a href="#[51de4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11d_domain_info
<LI><a href="#[52aa684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_enable_11d
<LI><a href="#[7bb196c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11d_domain_info
<LI><a href="#[7bb18e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_parse_dnld_countryinfo_11d
<LI><a href="#[7bb1860]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_create_dnld_countryinfo_11d
<LI><a href="#[7bec660]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MacEventDisconnected
<LI><a href="#[7bec5dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_eeprom_access
<LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
<LI><a href="#[51b5138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_event
<LI><a href="#[7bec6f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HandleDisconnectEvent
<LI><a href="#[7c014ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_setup_station_hw
<LI><a href="#[51b4fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_free_adapter
<LI><a href="#[51b5844]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_fw
<LI><a href="#[51ddb7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MrvDrvCommandTimerFunction
<LI><a href="#[51dda8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MrvDrvTimerFunction
<LI><a href="#[7c3a4bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_common_rates
<LI><a href="#[52a9db4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;StartAdhocNetwork
<LI><a href="#[52a9e2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;JoinAdhocNetwork
<LI><a href="#[52ab028]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_essid
<LI><a href="#[52ab184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_wap
<LI><a href="#[52aa774]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlanidle_off
<LI><a href="#[52aa7e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlanidle_on
<LI><a href="#[7c38688]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_append_generic_ie
<LI><a href="#[7c38608]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_append_marvell_tlv
<LI><a href="#[7c38588]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_append_reassoc_tlv
<LI><a href="#[51de680]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_authenticate
<LI><a href="#[51de80c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_associate
<LI><a href="#[51de704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_ad_hoc_start
<LI><a href="#[51de600]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_ad_hoc_join
<LI><a href="#[7bec4e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_associate
<LI><a href="#[7bec3e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_ad_hoc
<LI><a href="#[51b5930]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_reassociation_thread
<LI><a href="#[7c624f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;IsNetworkCompatible
<LI><a href="#[7c6050c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_scan_networks
<LI><a href="#[7c38784]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FindBSSIDInList
<LI><a href="#[52a9ea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FindSSIDInList
<LI><a href="#[7c387f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FindBestSSIDInList
<LI><a href="#[52ab110]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_scan
<LI><a href="#[52a9f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendSpecificSSIDScan
<LI><a href="#[52ab09c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_scan
<LI><a href="#[52aa308]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_scan_table_ioctl
<LI><a href="#[51de88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_scan
<LI><a href="#[7c60408]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_scan_store_beacon
<LI><a href="#[7bec560]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_scan
<LI><a href="#[52aa504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_bg_scan_config_ioctl
<LI><a href="#[7c61d44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_scan_setup_scan_config
<LI><a href="#[7c60c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InterpretBSSDescriptionWithIE
<LI><a href="#[7c85094]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_prog_firmware_image
<LI><a href="#[7c84d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_download_wlan_fw_image
<LI><a href="#[51b5320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_get_int_status
<LI><a href="#[51b504c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_disable_host_int
<LI><a href="#[7c012c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_enable_host_int
<LI><a href="#[51b57cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_unregister_dev
<LI><a href="#[51b58b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_register_dev
<LI><a href="#[51ddd60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_host_to_card
<LI><a href="#[51b59b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_probe_card
<LI><a href="#[7c013b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_prog_firmware_w_helper
<LI><a href="#[7c83178]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_prog_firmware
<LI><a href="#[7c01438]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_prog_helper
<LI><a href="#[7c0133c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_verify_fw_download
<LI><a href="#[51b52a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_exit_deep_sleep
<LI><a href="#[7c84e08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mv_sdio_poll_card_status
<LI><a href="#[51ded60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wireless_send_event
<LI><a href="#[9ade53c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_get_config
<LI><a href="#[9ac3628]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[9ac639c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dodefaultroute
<LI><a href="#[9ac3274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_exit
<LI><a href="#[9a8a270]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppoutput
<LI><a href="#[9a8a088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppioctl
<LI><a href="#[9a8a72c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_ccp
<LI><a href="#[9a8a5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_inproc
<LI><a href="#[860c4dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_serial_init
<LI><a href="#[863e768]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sonewconn1
<LI><a href="#[863e3f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbcompress
<LI><a href="#[863e0cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbcreatecontrol
<LI><a href="#[7b3f874]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_cksum
<LI><a href="#[9ac2734]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppinput
<LI><a href="#[872e1f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppplogchar
<LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
<LI><a href="#[86f69f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[86f68a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_usrreq
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[8b826f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_drop
<LI><a href="#[8c29934]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_check_options
<LI><a href="#[5950900]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AddBufferFileList
<LI><a href="#[588acf0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AddDDNS
<LI><a href="#[4defc68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Asmalloc
<LI><a href="#[7686ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_LOCAL_Process
<LI><a href="#[7686d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Process
<LI><a href="#[56dec34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Buffer_Assign
<LI><a href="#[595132c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BuildFileInfo
<LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
<LI><a href="#[588a770]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CkIP_RequestOver
<LI><a href="#[588a7e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CkIP_Response_dnsomatic
<LI><a href="#[588a864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CkIP_Response_dyndns
<LI><a href="#[4e4c0b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_DelUser
<LI><a href="#[4e4c4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_DropData
<LI><a href="#[4e4c2fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetDDNS
<LI><a href="#[4e4c19c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetUser
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4e4b258]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_Reboot
<LI><a href="#[4e4c288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetDDNS
<LI><a href="#[4e4b340]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetIP
<LI><a href="#[4e4bee0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetLogo
<LI><a href="#[4e4b66c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMac
<LI><a href="#[4e4b7c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetWlan
<LI><a href="#[5950978]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateFileList
<LI><a href="#[4e4cc8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DDNS_CheckIP
<LI><a href="#[5887678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DDNS_Do_CheckIP
<LI><a href="#[58876ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DDNS_Update_IP
<LI><a href="#[57b6f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DO_TestSendMailFile
<LI><a href="#[755fd20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DecodeLAW
<LI><a href="#[5887760]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Do_DNS
<LI><a href="#[4a5583c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownInterface
<LI><a href="#[755e2c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;EncodeLAW
<LI><a href="#[71ecd2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FTPRequest
<LI><a href="#[5859bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetDevInterface
<LI><a href="#[4def22c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetPubIPInfo
<LI><a href="#[562bef8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWiFiStrength
<LI><a href="#[49f8848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GpioOtherInterruptPinManage
<LI><a href="#[58878b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Final
<LI><a href="#[5887924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Init
<LI><a href="#[5887994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Process
<LI><a href="#[73183b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Child_Pool_Add
<LI><a href="#[7318430]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Create
<LI><a href="#[785f7c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[7318338]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Implement
<LI><a href="#[785f888]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_New
<LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[4e4ae94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_RtspTunnel
<LI><a href="#[4e4db00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InitNetInterface
<LI><a href="#[4e4a000]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InitResetGPIO
<LI><a href="#[5859c38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MCTxTest
<LI><a href="#[4a5616c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MCUCmdHandler
<LI><a href="#[57e7c80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MPTestWriteFlash
<LI><a href="#[4e49f14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MctestThread
<LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
<LI><a href="#[5775c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPDataToTime
<LI><a href="#[4e4d57c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NetTestThread
<LI><a href="#[5716828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ObjInit
<LI><a href="#[4dee7dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;OnSetIP
<LI><a href="#[59cafcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PT
<LI><a href="#[582d194]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PopMsgNode
<LI><a href="#[57e7c0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ProcessUpdate
<LI><a href="#[4e4ddd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReadFlashMemory
<LI><a href="#[4a54e98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Read_FlashFile
<LI><a href="#[4e4db78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetCameraParam
<LI><a href="#[4e4a6c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetOtherThread
<LI><a href="#[49f85ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Reset_Int_ISR_IPCam_Board
<LI><a href="#[59246fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RtspThreadRelease
<LI><a href="#[582cfcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SELECT_MSG_Process
<LI><a href="#[4e4a410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SelectThread
<LI><a href="#[4eab4bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendCameraMsg
<LI><a href="#[4a5496c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ServerStart
<LI><a href="#[4dee770]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetIP
<LI><a href="#[4e4da90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetNullIP
<LI><a href="#[5504a00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetRGBRawData
<LI><a href="#[4dee848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetRandomIP
<LI><a href="#[4e4cab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanHostSleepCfg
<LI><a href="#[734d334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanHostWakeUpCfg
<LI><a href="#[4e4cb30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanPSMode
<LI><a href="#[5504ec4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetYUVRawData
<LI><a href="#[5887c20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;URLCGI_DelFD
<LI><a href="#[5889844]">&lt&lt</a>&nbsp;&nbsp;&nbsp;URLCGI_HTTPCRequestOver
<LI><a href="#[5889750]">&lt&lt</a>&nbsp;&nbsp;&nbsp;URLCGI_RequestOver
<LI><a href="#[4a54f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInit
<LI><a href="#[4a55508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInitClock
<LI><a href="#[56dbe20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_CloseCamera
<LI><a href="#[56dc200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_GetOneImage
<LI><a href="#[56dc00c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetFramerate
<LI><a href="#[56dbf8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetImageBrightness
<LI><a href="#[56dc084]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetImageQuality
<LI><a href="#[56dc100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetImageResolution
<LI><a href="#[56dbe98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetMicVolume
<LI><a href="#[56dbf10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetSpeakerVolume
<LI><a href="#[4defdb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99802Reboot
<LI><a href="#[7700190]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WirelessTest_Test_Entry
<LI><a href="#[7f8b86c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__W99702_SetImageQuality
<LI><a href="#[4eaa630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__WriteFlashMemory
<LI><a href="#[755ff5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauDecode
<LI><a href="#[7561350]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauRecord_ALAW_OR_ULAW
<LI><a href="#[4f2a058]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_mcuSendCommand_Error
<LI><a href="#[545a790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_vcptSensorInit
<LI><a href="#[9c0c48c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_wpa_hexdump
<LI><a href="#[9c0c004]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_wpa_hexdump_ascii
<LI><a href="#[4e4d48c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;accept_client
<LI><a href="#[59af87c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufEMBEDFUNDecRef
<LI><a href="#[550459c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufEncJpegDecRef
<LI><a href="#[755e588]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufEncMsgDecRef
<LI><a href="#[82a12b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufINNERPARTDecRef
<LI><a href="#[827e37c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufLISTDecRef
<LI><a href="#[827e304]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufLISTNODEDecRef
<LI><a href="#[54ad728]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufMP4BitstreamDecRef
<LI><a href="#[59c95a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufNAMESTRINGDecRef
<LI><a href="#[77ac554]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufPATHDecRef
<LI><a href="#[5456968]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufVideoDecRef
<LI><a href="#[59c920c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufXMLDecRef
<LI><a href="#[7843c6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_basic_response
<LI><a href="#[7700364]">&lt&lt</a>&nbsp;&nbsp;&nbsp;client_uninit
<LI><a href="#[817fac4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;conn_write
<LI><a href="#[59509ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;createMail
<LI><a href="#[5a67d20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;createMailData
<LI><a href="#[73197a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
<LI><a href="#[4e4d500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
<LI><a href="#[550490c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;decodeJPEGPrimaryImage
<LI><a href="#[77e7918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;del_rtp_endpoint
<LI><a href="#[8180324]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_accept
<LI><a href="#[770020c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_client
<LI><a href="#[770027c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_client_read
<LI><a href="#[77002f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_client_write
<LI><a href="#[81192f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_read
<LI><a href="#[731816c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dump_mime
<LI><a href="#[9be38d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_register_sock
<LI><a href="#[7967508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_run
<LI><a href="#[9be6e18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_sock_table_add_sock
<LI><a href="#[7967418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_terminate
<LI><a href="#[5a665e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;encodeSubject
<LI><a href="#[7ff9720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exchanger_read
<LI><a href="#[71ece7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;firmwareRequst
<LI><a href="#[73a8074]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdAndRsp
<LI><a href="#[76492e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read
<LI><a href="#[7efe5a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fontDrawPixelDefault
<LI><a href="#[80cf150]">&lt&lt</a>&nbsp;&nbsp;&nbsp;free_pmsg
<LI><a href="#[7a3b494]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gen_uuid
<LI><a href="#[7a37d28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_send_subscribe
<LI><a href="#[5a678b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getReplyAll
<LI><a href="#[5950818]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_mail_mem
<LI><a href="#[817fc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_rtsp_mem
<LI><a href="#[77ac634]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_sock_request
<LI><a href="#[80eb528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_SETUP
<LI><a href="#[73181dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpClearEmbedFun
<LI><a href="#[825cb98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteDescriptionLine
<LI><a href="#[5536ad4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteSplitBuffer
<LI><a href="#[4a54b44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpInitHashMemPool
<LI><a href="#[5923ec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSwapFD
<LI><a href="#[73180f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpdStartEx3
<LI><a href="#[4eab9d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlDelUser
<LI><a href="#[4dee54c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetMac
<LI><a href="#[4eaa824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlScanAP
<LI><a href="#[4eaab50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetIP
<LI><a href="#[4eaae1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetMediaFormat
<LI><a href="#[4eabc90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetUser
<LI><a href="#[4eaaae0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetWlan
<LI><a href="#[71ecbcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;imageRequest
<LI><a href="#[5a67034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initList
<LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
<LI><a href="#[7e916ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_ISP_Wnd
<LI><a href="#[7e91ba0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV7670
<LI><a href="#[7e91c10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV9650
<LI><a href="#[7e91b2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_PO6030K
<LI><a href="#[7ff806c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_frame_heap
<LI><a href="#[77abff4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_get
<LI><a href="#[7ddf928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;insert_to_region
<LI><a href="#[77e7378]">&lt&lt</a>&nbsp;&nbsp;&nbsp;interleave_send
<LI><a href="#[558f88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_Write
<LI><a href="#[89852fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;jpeg_process_frame
<LI><a href="#[7967ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_init
<LI><a href="#[844d66c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_receive
<LI><a href="#[7966b34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_send
<LI><a href="#[4a551c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledInit
<LI><a href="#[808d994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;live_play
<LI><a href="#[5a64cfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailError
<LI><a href="#[5a680ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailLogin
<LI><a href="#[71ecd9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailRequest
<LI><a href="#[5a64d6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailTalk
<LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5a66fc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mallocListnode
<LI><a href="#[5859b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mc_rx_socket
<LI><a href="#[780fcac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_exchanger
<LI><a href="#[79b07bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[7f5fdf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;oss_loop
<LI><a href="#[8984f94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_SOF
<LI><a href="#[4d84510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pllEvalPLLCON
<LI><a href="#[5a67f98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;postBin
<LI><a href="#[4e31d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_ResetFlag_FactoryDefault
<LI><a href="#[4efdf34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdUnlock
<LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
<LI><a href="#[77ac238]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_logline
<LI><a href="#[5950b40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pushMail
<LI><a href="#[49f8508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_mcu_irq
<LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
<LI><a href="#[734d7fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_stop_suspend_irq
<LI><a href="#[77ac400]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_header
<LI><a href="#[4a54acc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;registerCustomCmd
<LI><a href="#[7a3abf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_desc
<LI><a href="#[7a391f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_serv_xml
<LI><a href="#[59af6ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_write
<LI><a href="#[71ed12c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;restoreRequst
<LI><a href="#[77e7990]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspBufIsValid
<LI><a href="#[5926c1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspFreeAudioBuf
<LI><a href="#[5926c94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspFreeVideoBuf
<LI><a href="#[5927558]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspHttpReqOver
<LI><a href="#[5926ef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspSwapHttpTunnelFD
<LI><a href="#[59274e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelCreate
<LI><a href="#[59266a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelDelete
<LI><a href="#[5924610]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelReadData
<LI><a href="#[5926928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelSearch
<LI><a href="#[5927468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelSendData
<LI><a href="#[8119448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_handle_msg
<LI><a href="#[77adc4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;safe_close
<LI><a href="#[5950a5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendMailMsg
<LI><a href="#[81194bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_data
<LI><a href="#[88207dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sensor_SetZoom
<LI><a href="#[5a65ae0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;setFdAttribute
<LI><a href="#[7a3a4f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soap_invoke
<LI><a href="#[582d278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;socket_pipe
<LI><a href="#[5a6807c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;splitString
<LI><a href="#[7843b8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[803350c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strip_events
<LI><a href="#[71ecf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;systemRequest
<LI><a href="#[81193d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_send_pmsg
<LI><a href="#[75f0ad4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_getc
<LI><a href="#[77ac0d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;translate_uri
<LI><a href="#[755f9cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_msg_send
<LI><a href="#[755fb9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_msg_try_send
<LI><a href="#[4def318]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
<LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
<LI><a href="#[5007b20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usage
<LI><a href="#[71eccb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbIPRequest
<LI><a href="#[71ed1a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbWlanRequest
<LI><a href="#[4defcd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyFlash
<LI><a href="#[7338f78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyGetTotalSize
<LI><a href="#[4a552a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyInitDevice
<LI><a href="#[71ece0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyWrite
<LI><a href="#[7810048]">&lt&lt</a>&nbsp;&nbsp;&nbsp;v4l_loop
<LI><a href="#[7561e28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauDisplayAllThreads
<LI><a href="#[7566420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauPlayCallback
<LI><a href="#[75620ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnRecord
<LI><a href="#[5459320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnEncodeJPG
<LI><a href="#[545b2b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcpt_DownscaledForDetectMotion_InDsr
<LI><a href="#[537ffb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdAdjustWindow
<LI><a href="#[537e240]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdDelMotionBuffer
<LI><a href="#[544d220]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoClearContent
<LI><a href="#[544d298]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoSetContent
<LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[4db50b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_getspeed
<LI><a href="#[4a54cb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_init
<LI><a href="#[4db6c38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_linkupdate
<LI><a href="#[4db5138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_write
<LI><a href="#[558f630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableAudioEncoder
<LI><a href="#[558dccc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableDrawImageTime
<LI><a href="#[558e4f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableSuspend
<LI><a href="#[558ded0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetAudioPlayVolume
<LI><a href="#[558de50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetAudioRecordVolume
<LI><a href="#[558e840]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetAudioType
<LI><a href="#[558e5e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetDateTime
<LI><a href="#[558dc54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetDrawContent
<LI><a href="#[558e660]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetJPEG
<LI><a href="#[558e0b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetJPEGQuality
<LI><a href="#[558f058]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetLocalVideoSource
<LI><a href="#[558e9ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoBitRate
<LI><a href="#[558dd4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoContrastBright
<LI><a href="#[4db4d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoDynamicBitrate
<LI><a href="#[4db4c20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoDynamicFramerate
<LI><a href="#[558ed08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoFormat
<LI><a href="#[558e1a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoFramerate
<LI><a href="#[558f798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702WriteOSD
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[9c0a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_debug_print_timestamp
<LI><a href="#[8406d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_receive
<LI><a href="#[839b4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_scan_results
<LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
<LI><a href="#[8406c44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_send_oper_ifla
<LI><a href="#[797383c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_drv_get_mac_addr
<LI><a href="#[9afb0e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_kernel_driver_wext_send_link_event
<LI><a href="#[79b050c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4a55a8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_main
<LI><a href="#[796facc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reconfig_receiver
</UL><BR>[Address Reference Count : 2]<UL><LI> diag.o(.text)
<LI> ppp_io.o(.text)
</UL><P><STRONG><a name="[4ba28b4]"></a>diag_vprintf</STRONG> (ARM, 24 bytes, Stack size 0 bytes, diag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ba4034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_vprintf(void (*)(char, void**), void**, const char*, int**)
</UL><BR>[Called By]<UL><LI><a href="#[9ac3628]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[79b050c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><P><STRONG><a name="[4ba2834]"></a>diag_vdump_buf_with_offset</STRONG> (ARM, 264 bytes, Stack size 24 bytes, diag.o(.text))
<BR>[Called By]<UL><LI><a href="#[4ba27b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_dump_buf_with_offset
<LI><a href="#[4ba2740]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_dump_buf
<LI><a href="#[872e1f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppplogchar
</UL><P><STRONG><a name="[4ba27b4]"></a>diag_dump_buf_with_offset</STRONG> (ARM, 20 bytes, Stack size 0 bytes, diag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ba2834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_vdump_buf_with_offset
</UL><P><STRONG><a name="[4ba2740]"></a>diag_dump_buf</STRONG> (ARM, 20 bytes, Stack size 0 bytes, diag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ba2834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_vdump_buf_with_offset
</UL><BR>[Called By]<UL><LI><a href="#[51851fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_send
<LI><a href="#[5185604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_recv
</UL><P><STRONG><a name="[4ba26bc]"></a>diag_dump_buf_with_offset_32bit</STRONG> (ARM, 184 bytes, Stack size 24 bytes, diag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4ba2644]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_dump_buf_32bit
</UL><P><STRONG><a name="[4ba2644]"></a>diag_dump_buf_32bit</STRONG> (ARM, 8 bytes, Stack size 0 bytes, diag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ba26bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_dump_buf_with_offset_32bit
</UL><P><STRONG><a name="[4ba25c0]"></a>diag_dump_buf_with_offset_16bit</STRONG> (ARM, 176 bytes, Stack size 24 bytes, diag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4ba2548]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_dump_buf_16bit
</UL><P><STRONG><a name="[4ba2548]"></a>diag_dump_buf_16bit</STRONG> (ARM, 8 bytes, Stack size 0 bytes, diag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ba25c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_dump_buf_with_offset_16bit
</UL><P><STRONG><a name="[4a54818]"></a>__main</STRONG> (ARM, 4 bytes, Stack size 0 bytes, dummyxxmain.o(.text), UNUSED)
<P><STRONG><a name="[4bf4b5c]"></a>cyg_io_init</STRONG> (ARM, 176 bytes, Stack size 16 bytes, iosys.o(.text))
<BR>[Called By]<UL><LI><a href="#[5061104]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
</UL><P><STRONG><a name="[4bba6e8]"></a>cyg_io_lookup</STRONG> (ARM, 520 bytes, Stack size 32 bytes, iosys.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bba6e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_lookup
</UL><BR>[Called By]<UL><LI><a href="#[4bba6e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_io_lookup
<LI><a href="#[85aa3a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dev_open(cyg_mtab_entry*, unsigned int, const char*, int, CYG_FILE_TAG*)
<LI><a href="#[85a9f44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dev_stat(cyg_mtab_entry*, unsigned int, const char*, stat*)
<LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
<LI><a href="#[874a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat
<LI><a href="#[4f77e9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_nav_thread
<LI><a href="#[4f72f1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;open_ns_port
<LI><a href="#[4a54a54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsUartTestHandler
<LI><a href="#[4a55388]">&lt&lt</a>&nbsp;&nbsp;&nbsp;uart_init_setting_block_mode
</UL><P><STRONG><a name="[4bf4918]"></a>cyg_io_write</STRONG> (ARM, 48 bytes, Stack size 0 bytes, iosys.o(.text))
<BR>[Called By]<UL><LI><a href="#[85848f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tty_write
<LI><a href="#[8584884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tty_read
<LI><a href="#[85aa998]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dev_fo_write(CYG_FILE_TAG*, CYG_UIO_TAG*)
<LI><a href="#[8603c94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_write
<LI><a href="#[8603c20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_read
<LI><a href="#[872eba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppasyncstart
<LI><a href="#[8c976e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat_send
<LI><a href="#[5b5dbbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_uart_write
</UL><P><STRONG><a name="[4bf48a8]"></a>cyg_io_read</STRONG> (ARM, 48 bytes, Stack size 0 bytes, iosys.o(.text))
<BR>[Called By]<UL><LI><a href="#[9ac2824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_wait_input
<LI><a href="#[8584884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tty_read
<LI><a href="#[85aaa2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dev_fo_read(CYG_FILE_TAG*, CYG_UIO_TAG*)
<LI><a href="#[8603c20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_read
<LI><a href="#[874a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat
<LI><a href="#[5b5db48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_uart_read
</UL><P><STRONG><a name="[4bf4834]"></a>cyg_io_bwrite</STRONG> (ARM, 60 bytes, Stack size 8 bytes, iosys.o(.text))
<BR>[Called By]<UL><LI><a href="#[85aa998]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dev_fo_write(CYG_FILE_TAG*, CYG_UIO_TAG*)
</UL><P><STRONG><a name="[4bf47c0]"></a>cyg_io_bread</STRONG> (ARM, 60 bytes, Stack size 8 bytes, iosys.o(.text))
<BR>[Called By]<UL><LI><a href="#[85aaa2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dev_fo_read(CYG_FILE_TAG*, CYG_UIO_TAG*)
</UL><P><STRONG><a name="[4bf474c]"></a>cyg_io_select</STRONG> (ARM, 24 bytes, Stack size 0 bytes, iosys.o(.text))
<BR>[Called By]<UL><LI><a href="#[8584814]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tty_select
<LI><a href="#[85aa800]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dev_fo_select(CYG_FILE_TAG*, int, unsigned int)
<LI><a href="#[8603bac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_select
</UL><P><STRONG><a name="[4a034a8]"></a>cyg_io_get_config</STRONG> (ARM, 60 bytes, Stack size 8 bytes, iosys.o(.text))
<BR>[Called By]<UL><LI><a href="#[9ac2c48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_set_up_tty
<LI><a href="#[9ac2824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_wait_input
<LI><a href="#[85847a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tty_get_config
<LI><a href="#[85aa77c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dev_fo_fsync(CYG_FILE_TAG*, int)
<LI><a href="#[85aa5e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dev_fo_getinfo(CYG_FILE_TAG*, int, void*, int)
<LI><a href="#[8603960]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_lookup
<LI><a href="#[8603c20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_read
<LI><a href="#[8603b34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_get_config
<LI><a href="#[8603abc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_set_config
<LI><a href="#[8602808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_attr
<LI><a href="#[872eba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppasyncstart
<LI><a href="#[9ac1328]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppstart
<LI><a href="#[874a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat
<LI><a href="#[4f750a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;flush_ns_uart
<LI><a href="#[4a54a54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsUartTestHandler
</UL><P><STRONG><a name="[4bba670]"></a>cyg_io_set_config</STRONG> (ARM, 60 bytes, Stack size 8 bytes, iosys.o(.text))
<BR>[Called By]<UL><LI><a href="#[9ac2c48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_set_up_tty
<LI><a href="#[858472c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tty_set_config
<LI><a href="#[85aa3a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dev_open(cyg_mtab_entry*, unsigned int, const char*, int, CYG_FILE_TAG*)
<LI><a href="#[85aa554]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dev_fo_setinfo(CYG_FILE_TAG*, int, void*, int)
<LI><a href="#[8603abc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_set_config
<LI><a href="#[8602808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_attr
<LI><a href="#[4f75214]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_port_read_blocking
<LI><a href="#[4f7511c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_port_set_baud_rate_19200
<LI><a href="#[4f72f1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;open_ns_port
<LI><a href="#[4a54a54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsUartTestHandler
<LI><a href="#[4a55388]">&lt&lt</a>&nbsp;&nbsp;&nbsp;uart_init_setting_block_mode
</UL><P><STRONG><a name="[4bf46d4]"></a>cyg_devio_cwrite</STRONG> (ARM, 8 bytes, Stack size 0 bytes, iosys.o(.text), UNUSED)
<P><STRONG><a name="[4bf4660]"></a>cyg_devio_cread</STRONG> (ARM, 8 bytes, Stack size 0 bytes, iosys.o(.text), UNUSED)
<P><STRONG><a name="[4bf45e8]"></a>cyg_devio_bwrite</STRONG> (ARM, 8 bytes, Stack size 0 bytes, iosys.o(.text))
<BR>[Address Reference Count : 4]<UL><LI> serial.o(.data)
<LI> pipelib.o(.data)
<LI> tty.o(.data)
<LI> termiostty.o(.data)
</UL><P><STRONG><a name="[4bf4574]"></a>cyg_devio_bread</STRONG> (ARM, 8 bytes, Stack size 0 bytes, iosys.o(.text))
<BR>[Address Reference Count : 4]<UL><LI> serial.o(.data)
<LI> pipelib.o(.data)
<LI> tty.o(.data)
<LI> termiostty.o(.data)
</UL><P><STRONG><a name="[4bf4500]"></a>cyg_io_ioctl</STRONG> (ARM, 24 bytes, Stack size 0 bytes, iosys.o(.text))
<BR>[Called By]<UL><LI><a href="#[85aa888]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dev_fo_ioctl(CYG_FILE_TAG*, unsigned int, unsigned int)
</UL><P><STRONG><a name="[4bf4488]"></a>cyg_devio_select</STRONG> (ARM, 8 bytes, Stack size 0 bytes, iosys.o(.text), UNUSED)
<P><STRONG><a name="[4bf440c]"></a>cyg_devio_get_config</STRONG> (ARM, 8 bytes, Stack size 0 bytes, iosys.o(.text), UNUSED)
<P><STRONG><a name="[4bf4390]"></a>cyg_devio_set_config</STRONG> (ARM, 8 bytes, Stack size 0 bytes, iosys.o(.text), UNUSED)
<P><STRONG><a name="[4bba36c]"></a>read</STRONG> (ARM, 36 bytes, Stack size 16 bytes, io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bffcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;readwritev(int, const CYG_IOVEC_TAG*, int, int)
</UL><BR>[Called By]<UL><LI><a href="#[511a010]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_recv
<LI><a href="#[75eec00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_recv_cmd
<LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[5c5906c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::refill_read_buffer()
<LI><a href="#[7686ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_LOCAL_Process
<LI><a href="#[7686d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Process
<LI><a href="#[5887994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Process
<LI><a href="#[77ac6ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;My_Common_read
<LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
<LI><a href="#[582d194]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PopMsgNode
<LI><a href="#[81192f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_read
<LI><a href="#[7ff9720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exchanger_read
<LI><a href="#[7966dfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fix_size_read
<LI><a href="#[5a678b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getReplyAll
<LI><a href="#[7a37a24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_cmd
<LI><a href="#[4bba444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hi_uart_read
<LI><a href="#[77006ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;my_read
<LI><a href="#[592642c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspRtyRead
<LI><a href="#[77adc4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;safe_close
<LI><a href="#[8034124]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sq_run
<LI><a href="#[75f0ad4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_getc
<LI><a href="#[5a6636c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;timeoutRead
<LI><a href="#[77e8d74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_rtcp_read
<LI><a href="#[77e8de8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_rtp_read
<LI><a href="#[7a379b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_wait_start
</UL><P><STRONG><a name="[4bba524]"></a>write</STRONG> (ARM, 36 bytes, Stack size 16 bytes, io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bffcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;readwritev(int, const CYG_IOVEC_TAG*, int, int)
</UL><BR>[Called By]<UL><LI><a href="#[511a010]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_recv
<LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[75eeb88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_send_cmd
<LI><a href="#[746a0dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::flush_output_unlocked()
<LI><a href="#[74523d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::write(const unsigned char*, unsigned int, unsigned int*)
<LI><a href="#[9ac34c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_cifproxyarp
<LI><a href="#[9ac1e48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifproxyarp
<LI><a href="#[7686ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_LOCAL_Process
<LI><a href="#[7686d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Process
<LI><a href="#[5887994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Process
<LI><a href="#[77ac720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;My_Common_write
<LI><a href="#[4e4d57c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NetTestThread
<LI><a href="#[582d124]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PushMsgNode
<LI><a href="#[817fac4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;conn_write
<LI><a href="#[780feec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;deliver_frame
<LI><a href="#[796840c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fix_size_write
<LI><a href="#[5a678b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getReplyAll
<LI><a href="#[4bba5fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hi_uart_write
<LI><a href="#[770063c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;my_write
<LI><a href="#[5a67f98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;postBin
<LI><a href="#[59274e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelCreate
<LI><a href="#[5924610]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelReadData
<LI><a href="#[8031d38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soft_queue_add
<LI><a href="#[4e4cd00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_refresh
<LI><a href="#[811935c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;write_access_log
</UL><P><STRONG><a name="[4bfea3c]"></a>readv</STRONG> (ARM, 8 bytes, Stack size 0 bytes, io.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bffcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;readwritev(int, const CYG_IOVEC_TAG*, int, int)
</UL><P><STRONG><a name="[4bfe9d0]"></a>writev</STRONG> (ARM, 8 bytes, Stack size 0 bytes, io.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bffcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;readwritev(int, const CYG_IOVEC_TAG*, int, int)
</UL><P><STRONG><a name="[4bba4b8]"></a>close</STRONG> (ARM, 88 bytes, Stack size 16 bytes, io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
<LI><a href="#[4bfe960]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fd_free
</UL><BR>[Called By]<UL><LI><a href="#[8571ec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[5d40aac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[508467c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[4ced504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_bootp
<LI><a href="#[4a556e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_net
<LI><a href="#[4d0cfac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_loopback_interface
<LI><a href="#[4a557c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;build_bootp_record
<LI><a href="#[4c78f58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[50d98e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp_down_net
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[4cecd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_dns_res_init
<LI><a href="#[75ef838]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_close_fd
<LI><a href="#[5da8790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getifaddrs
<LI><a href="#[9add0ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_destroy
<LI><a href="#[9ac34c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_cifproxyarp
<LI><a href="#[9ac32ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_cleanup
<LI><a href="#[9ac3188]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_close
<LI><a href="#[9ac308c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_available
<LI><a href="#[9ac1e48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifproxyarp
<LI><a href="#[83dfd3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fopen_inner(int, Cyg_StdioStream::OpenMode, int, int)
<LI><a href="#[5c4982c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vsscanf
<LI><a href="#[7686ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_LOCAL_Process
<LI><a href="#[7686d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Process
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4a5583c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownInterface
<LI><a href="#[5859bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetDevInterface
<LI><a href="#[4defb84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetGeneralIP
<LI><a href="#[4def22c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetPubIPInfo
<LI><a href="#[562bef8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWiFiStrength
<LI><a href="#[4e4cd74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWlanChannel
<LI><a href="#[4eaa974]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWlanOperationMode
<LI><a href="#[5887994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Process
<LI><a href="#[4e4db00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InitNetInterface
<LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
<LI><a href="#[4e4d57c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NetTestThread
<LI><a href="#[4e4db78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetCameraParam
<LI><a href="#[4e4cab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanHostSleepCfg
<LI><a href="#[734d334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanHostWakeUpCfg
<LI><a href="#[4e4cb30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanPSMode
<LI><a href="#[7700190]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WirelessTest_Test_Entry
<LI><a href="#[4e4d48c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;accept_client
<LI><a href="#[7700364]">&lt&lt</a>&nbsp;&nbsp;&nbsp;client_uninit
<LI><a href="#[77e76b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_udp_endpoint
<LI><a href="#[73197a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
<LI><a href="#[4e4d500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
<LI><a href="#[77e7918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;del_rtp_endpoint
<LI><a href="#[8180324]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_accept
<LI><a href="#[81192f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_read
<LI><a href="#[817fb34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drop_conn
<LI><a href="#[7ff9720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exchanger_read
<LI><a href="#[7a3b334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;flush_upnp_struct
<LI><a href="#[7a37b78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_recv_notify
<LI><a href="#[7a37cb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_recv_response
<LI><a href="#[7a37d28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_send_subscribe
<LI><a href="#[836c178]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_private_info
<LI><a href="#[77ac634]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_sock_request
<LI><a href="#[4bba444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hi_uart_read
<LI><a href="#[4bba5fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hi_uart_write
<LI><a href="#[4dee54c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetMac
<LI><a href="#[4eaa824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlScanAP
<LI><a href="#[7967ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_init
<LI><a href="#[5a64cfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailError
<LI><a href="#[836b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell2param
<LI><a href="#[836bc58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell_ioctl
<LI><a href="#[5859b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mc_rx_socket
<LI><a href="#[7f76498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mc_tx_socket
<LI><a href="#[4df0110]">&lt&lt</a>&nbsp;&nbsp;&nbsp;onHttpReboot_Safe
<LI><a href="#[5950b40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pushMail
<LI><a href="#[7a3b1d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;recv_xml
<LI><a href="#[7a3abf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_desc
<LI><a href="#[7a391f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_serv_xml
<LI><a href="#[59274e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelCreate
<LI><a href="#[59266a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelDelete
<LI><a href="#[77adc4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;safe_close
<LI><a href="#[7a3a4f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soap_invoke
<LI><a href="#[7a3b160]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soap_recv_response
<LI><a href="#[8034124]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sq_run
<LI><a href="#[5a668cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcpConnectHost
<LI><a href="#[8180814]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_listen
<LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
<LI><a href="#[836e3ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_deinit
<LI><a href="#[839b2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_deinit
<LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
<LI><a href="#[797383c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_drv_get_mac_addr
<LI><a href="#[796866c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_deinit
<LI><a href="#[79684f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_init
<LI><a href="#[7967cc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_global_ctrl_iface_deinit
<LI><a href="#[7967704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_global_ctrl_iface_init
<LI><a href="#[4a55a8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_main
<LI><a href="#[7a37a90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpro_resp
</UL><P><STRONG><a name="[4bfe8f4]"></a>lseek</STRONG> (ARM, 148 bytes, Stack size 24 bytes, io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bfeb1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_lock
<LI><a href="#[4bfeaa8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_unlock
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
</UL><BR>[Called By]<UL><LI><a href="#[83df758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fdopen
<LI><a href="#[8a61d68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::set_position(unsigned int, int)
</UL><P><STRONG><a name="[4bfe888]"></a>ioctl</STRONG> (ARM, 140 bytes, Stack size 16 bytes, io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bfeb1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_lock
<LI><a href="#[4bfeaa8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_unlock
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
</UL><BR>[Called By]<UL><LI><a href="#[4ced504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_bootp
<LI><a href="#[4a556e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_net
<LI><a href="#[4d0cfac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_loopback_interface
<LI><a href="#[4a557c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;build_bootp_record
<LI><a href="#[50d98e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp_down_net
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[5da8790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getifaddrs
<LI><a href="#[9ac33d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_cifaddr
<LI><a href="#[9ac32ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_cleanup
<LI><a href="#[9ac308c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_available
<LI><a href="#[9ac2554]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_send_config
<LI><a href="#[9ac2110]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifup
<LI><a href="#[9ac2024]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifdown
<LI><a href="#[9ac1fb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifaddr
<LI><a href="#[9ac1e48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifproxyarp
<LI><a href="#[9ac1dd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_GetMask
<LI><a href="#[7686ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_LOCAL_Process
<LI><a href="#[7686d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Process
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4e4a484]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateMsgQueue
<LI><a href="#[4a5583c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownInterface
<LI><a href="#[5859bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetDevInterface
<LI><a href="#[4defb84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetGeneralIP
<LI><a href="#[4def22c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetPubIPInfo
<LI><a href="#[562bef8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWiFiStrength
<LI><a href="#[4e4cd74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWlanChannel
<LI><a href="#[4eaa974]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWlanOperationMode
<LI><a href="#[5887994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Process
<LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
<LI><a href="#[4e4db78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetCameraParam
<LI><a href="#[4e4cab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanHostSleepCfg
<LI><a href="#[734d334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanHostWakeUpCfg
<LI><a href="#[4e4cb30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanPSMode
<LI><a href="#[7a3b3ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;checkip
<LI><a href="#[4dd624c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;clr_flag
<LI><a href="#[5a94228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_debug_socket
<LI><a href="#[73197a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
<LI><a href="#[4e4d500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
<LI><a href="#[8180324]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_accept
<LI><a href="#[7a3a970]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gen_ssdp_pkt
<LI><a href="#[7a3b494]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gen_uuid
<LI><a href="#[7a37d28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_send_subscribe
<LI><a href="#[836c178]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_private_info
<LI><a href="#[77ac634]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_sock_request
<LI><a href="#[4dee54c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetMac
<LI><a href="#[4eaa824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlScanAP
<LI><a href="#[7966b34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_send
<LI><a href="#[836b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell2param
<LI><a href="#[836bc58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell_ioctl
<LI><a href="#[5a65ae0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;setFdAttribute
<LI><a href="#[4dd61dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_flag
<LI><a href="#[7a3a4f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soap_invoke
<LI><a href="#[5a668cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcpConnectHost
<LI><a href="#[839b54c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_bssid
<LI><a href="#[8401b88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_ifflags
<LI><a href="#[8406cc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_range
<LI><a href="#[839b4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_scan_results
<LI><a href="#[839b5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_ssid
<LI><a href="#[8406fd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_pmksa
<LI><a href="#[839b6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_scan
<LI><a href="#[8401c88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_bssid
<LI><a href="#[839b7cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_freq
<LI><a href="#[8401b08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_ifflags
<LI><a href="#[839b84c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_mode
<LI><a href="#[8401c08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_region
<LI><a href="#[839b74c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_ssid
<LI><a href="#[797383c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_drv_get_mac_addr
</UL><P><STRONG><a name="[4bfe81c]"></a>fsync</STRONG> (ARM, 128 bytes, Stack size 16 bytes, io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bfeb1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_lock
<LI><a href="#[4bfeaa8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_unlock
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
</UL><BR>[Called By]<UL><LI><a href="#[746a0dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::flush_output_unlocked()
<LI><a href="#[9add120]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipelib_purge
<LI><a href="#[75ee8cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_create
</UL><P><STRONG><a name="[4bfe7ac]"></a>fdatasync</STRONG> (ARM, 128 bytes, Stack size 16 bytes, io.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bfeb1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_lock
<LI><a href="#[4bfeaa8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_unlock
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
</UL><P><STRONG><a name="[4bfe740]"></a>fstat</STRONG> (ARM, 132 bytes, Stack size 16 bytes, io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bfeb1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_lock
<LI><a href="#[4bfeaa8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_unlock
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
</UL><BR>[Called By]<UL><LI><a href="#[4bfe510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;isatty
<LI><a href="#[83dfd3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fopen_inner(int, Cyg_StdioStream::OpenMode, int, int)
<LI><a href="#[8c29840]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_check_access
</UL><P><STRONG><a name="[4bfe6d0]"></a>fpathconf</STRONG> (ARM, 168 bytes, Stack size 24 bytes, io.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bfeb1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_lock
<LI><a href="#[4bfeaa8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_unlock
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
</UL><P><STRONG><a name="[4bfe664]"></a>fcntl</STRONG> (ARM, 168 bytes, Stack size 32 bytes, io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bfe5f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fd_alloc
<LI><a href="#[4bfe57c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fd_assign
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
</UL><BR>[Called By]<UL><LI><a href="#[7686ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_LOCAL_Process
<LI><a href="#[7686d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Process
<LI><a href="#[5887994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Process
<LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
<LI><a href="#[5a65ae0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;setFdAttribute
<LI><a href="#[5a668cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcpConnectHost
</UL><P><STRONG><a name="[4bfe510]"></a>isatty</STRONG> (ARM, 60 bytes, Stack size 40 bytes, io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfe740]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fstat
</UL><BR>[Called By]<UL><LI><a href="#[81998ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yy_init_buffer
</UL><P><STRONG><a name="[4c312ec]"></a>cyg_scheduler_start</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c3126c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::start()
</UL><P><STRONG><a name="[49d2698]"></a>cyg_scheduler_lock</STRONG> (ARM, 20 bytes, Stack size 0 bytes, kapi.o(.text))
<BR>[Called By]<UL><LI><a href="#[49d2710]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_WallClock::get_current_time()
<LI><a href="#[49d2508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_WallClock::set_current_time(unsigned int)
<LI><a href="#[4d0cebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_all_network_interfaces
<LI><a href="#[7533bdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_gdb_flush
<LI><a href="#[7531d6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hal_if_diag_read_char
<LI><a href="#[7533414]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_gdb_getc
<LI><a href="#[753351c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_gdb_read
<LI><a href="#[7532bdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_null_getc
<LI><a href="#[7532ce4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_null_read
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[5137e8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;show_network_tables
<LI><a href="#[79e7c98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_assert_msg
<LI><a href="#[5d513f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_write
<LI><a href="#[5d51380]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_read
<LI><a href="#[5d51294]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_get_config
<LI><a href="#[5d78c58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_plf_serial_getc_timeout
<LI><a href="#[7531c80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_plf_comms_init
<LI><a href="#[7a714e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_wakeup
<LI><a href="#[7a71478]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_tsleep
<LI><a href="#[863e460]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbunlock
<LI><a href="#[789fb80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;I2CRDWRBegin
<LI><a href="#[7533b64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__call_COMM_IF_PUTC
<LI><a href="#[5184f6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__call_vv_CYGNUM_CALL_IF_FLASH_CFG_OP
<LI><a href="#[7533624]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__call_vv_CYGNUM_CALL_IF_SET_CONSOLE_COMM
<LI><a href="#[5184ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__call_vv_CYGNUM_CALL_IF_SET_CONSOLE_COMM
<LI><a href="#[722342c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiLock
<LI><a href="#[72233bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiUnLock
<LI><a href="#[59274e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelCreate
<LI><a href="#[59266a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelDelete
<LI><a href="#[5926928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelSearch
<LI><a href="#[7365a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartPlay
<LI><a href="#[73658b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StopPlay
</UL><P><STRONG><a name="[4c31164]"></a>cyg_scheduler_safe_lock</STRONG> (ARM, 52 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[863e4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sblock
</UL><P><STRONG><a name="[49d2594]"></a>cyg_scheduler_unlock</STRONG> (ARM, 40 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[49d2710]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_WallClock::get_current_time()
<LI><a href="#[49d2508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_WallClock::set_current_time(unsigned int)
<LI><a href="#[4d0cebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_all_network_interfaces
<LI><a href="#[7533bdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_gdb_flush
<LI><a href="#[7531d6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hal_if_diag_read_char
<LI><a href="#[7533414]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_gdb_getc
<LI><a href="#[753351c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_gdb_read
<LI><a href="#[7532bdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_null_getc
<LI><a href="#[7532ce4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_null_read
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[5137e8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;show_network_tables
<LI><a href="#[79e7c98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_assert_msg
<LI><a href="#[5d513f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_write
<LI><a href="#[5d51380]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_read
<LI><a href="#[5d51294]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_get_config
<LI><a href="#[5d78c58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_plf_serial_getc_timeout
<LI><a href="#[7531c80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_plf_comms_init
<LI><a href="#[7a714e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_wakeup
<LI><a href="#[7a71478]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_tsleep
<LI><a href="#[863e4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sblock
<LI><a href="#[863e460]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbunlock
<LI><a href="#[789fb10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;I2CRDWREnd
<LI><a href="#[7533b64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__call_COMM_IF_PUTC
<LI><a href="#[5184f6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__call_vv_CYGNUM_CALL_IF_FLASH_CFG_OP
<LI><a href="#[7533624]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__call_vv_CYGNUM_CALL_IF_SET_CONSOLE_COMM
<LI><a href="#[5184ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__call_vv_CYGNUM_CALL_IF_SET_CONSOLE_COMM
<LI><a href="#[722342c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiLock
<LI><a href="#[72233bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiUnLock
<LI><a href="#[59274e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelCreate
<LI><a href="#[59266a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelDelete
<LI><a href="#[5926928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelSearch
<LI><a href="#[7365a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartPlay
<LI><a href="#[73658b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StopPlay
</UL><P><STRONG><a name="[4c31060]"></a>cyg_scheduler_read_lock</STRONG> (ARM, 12 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4a55998]"></a>cyg_thread_create</STRONG> (ARM, 76 bytes, Stack size 24 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30fd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::Cyg_Thread(unsigned int, void (*)(unsigned int), unsigned int, char*, unsigned int, unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4d33dc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_init
<LI><a href="#[4d0ccec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dhcp_start_dhcp_mgt_thread
<LI><a href="#[4d1ee1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
<LI><a href="#[4d32200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_add_card
<LI><a href="#[75eeb88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_send_cmd
<LI><a href="#[5138310]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_timeout_init
<LI><a href="#[75eea28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_up
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4e4a6c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetOtherThread
<LI><a href="#[5924774]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RtspThreadRun
<LI><a href="#[4a5496c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ServerStart
<LI><a href="#[7700938]">&lt&lt</a>&nbsp;&nbsp;&nbsp;TestNet_ThreadInit
<LI><a href="#[4e4a328]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VirtualComInit
<LI><a href="#[7810fa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;end_block
<LI><a href="#[7f60688]">&lt&lt</a>&nbsp;&nbsp;&nbsp;end_block
<LI><a href="#[8953fa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;end_block
<LI><a href="#[4a54e1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;er_init_ns_nav_priority
<LI><a href="#[59244b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_upnp
<LI><a href="#[4a5531c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdInit
<LI><a href="#[734d780]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_system_power_saving
<LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
<LI><a href="#[4d84040]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptInitThread
<LI><a href="#[4d842e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdInit
<LI><a href="#[4a54cb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_init
<LI><a href="#[4a55a10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_start
</UL><P><STRONG><a name="[4c30f64]"></a>cyg_thread_exit</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
</UL><BR>[Called By]<UL><LI><a href="#[9ac3274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_exit
<LI><a href="#[9ac3ea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_tx_thread
</UL><P><STRONG><a name="[4c30e70]"></a>cyg_thread_delete</STRONG> (ARM, 60 bytes, Stack size 8 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30df4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::kill()
<LI><a href="#[4c30d78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::~Cyg_Thread()
</UL><BR>[Called By]<UL><LI><a href="#[75ee93c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_wait_down
<LI><a href="#[4def7a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;thread_join
</UL><P><STRONG><a name="[4a0377c]"></a>cyg_thread_suspend</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30cfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::suspend()
</UL><BR>[Called By]<UL><LI><a href="#[4f73014]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ERSP_rovio_libns_thread_suspend
<LI><a href="#[4a037f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;er_pause_thread
<LI><a href="#[4a03704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;period_pause_thread
</UL><P><STRONG><a name="[4a55920]"></a>cyg_thread_resume</STRONG> (ARM, 36 bytes, Stack size 8 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30c78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::reinitialize()
<LI><a href="#[4c30bfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::resume()
</UL><BR>[Called By]<UL><LI><a href="#[4d33dc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_init
<LI><a href="#[4d0ccec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dhcp_start_dhcp_mgt_thread
<LI><a href="#[4d1ee1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
<LI><a href="#[4d32200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_add_card
<LI><a href="#[75eeb88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_send_cmd
<LI><a href="#[5138310]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_timeout_init
<LI><a href="#[75eea28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_up
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4f72f90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ERSP_rovio_libns_thread_resume
<LI><a href="#[4e4a6c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetOtherThread
<LI><a href="#[5924774]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RtspThreadRun
<LI><a href="#[4a5496c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ServerStart
<LI><a href="#[7700938]">&lt&lt</a>&nbsp;&nbsp;&nbsp;TestNet_ThreadInit
<LI><a href="#[4e4a328]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VirtualComInit
<LI><a href="#[7810fa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;end_block
<LI><a href="#[7f60688]">&lt&lt</a>&nbsp;&nbsp;&nbsp;end_block
<LI><a href="#[8953fa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;end_block
<LI><a href="#[4a54e1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;er_init_ns_nav_priority
<LI><a href="#[4a0368c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;er_resume_thread
<LI><a href="#[59244b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_upnp
<LI><a href="#[4a03610]">&lt&lt</a>&nbsp;&nbsp;&nbsp;period_resume_thread
<LI><a href="#[4a5531c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdInit
<LI><a href="#[734d780]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_system_power_saving
<LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
<LI><a href="#[4d84040]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptInitThread
<LI><a href="#[4d842e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdInit
<LI><a href="#[4a54cb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_init
<LI><a href="#[4a55a10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_start
</UL><P><STRONG><a name="[4c30b88]"></a>cyg_thread_kill</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30df4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::kill()
</UL><BR>[Called By]<UL><LI><a href="#[734d780]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_system_power_saving
</UL><P><STRONG><a name="[4c30b10]"></a>cyg_thread_release</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30a94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::release()
</UL><BR>[Called By]<UL><LI><a href="#[75ee9b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_down
<LI><a href="#[9ac6500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wait_input_alarm
<LI><a href="#[872e9d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppasyncctlp
<LI><a href="#[8c9775c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;chat_alarm
</UL><P><STRONG><a name="[4c30a1c]"></a>cyg_thread_yield</STRONG> (ARM, 16 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30900]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_SchedThread_Implementation::yield()
</UL><BR>[Called By]<UL><LI><a href="#[4e4a564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MailStart
<LI><a href="#[4e4a410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SelectThread
<LI><a href="#[73a8074]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdAndRsp
<LI><a href="#[73180f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpdStartEx3
<LI><a href="#[4def7a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;thread_join
</UL><P><STRONG><a name="[4a0359c]"></a>cyg_thread_self</STRONG> (ARM, 12 bytes, Stack size 0 bytes, kapi.o(.text))
<BR>[Called By]<UL><LI><a href="#[51b5a24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;thread_should_stop
<LI><a href="#[51b6884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_service_main_thread
<LI><a href="#[7a71478]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_tsleep
<LI><a href="#[872eba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppasyncstart
<LI><a href="#[872e9d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppasyncctlp
<LI><a href="#[874a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat
<LI><a href="#[4a5496c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ServerStart
<LI><a href="#[88f5948]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_out_fat_sector
<LI><a href="#[722342c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiLock
<LI><a href="#[72233bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiUnLock
<LI><a href="#[4efde50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdAfterCondWait
<LI><a href="#[4efdec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdLock
<LI><a href="#[7a7222c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;spl_any
<LI><a href="#[872eb3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;spltty
<LI><a href="#[80b0ff0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;spook_log_init
<LI><a href="#[4a54a54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsUartTestHandler
<LI><a href="#[75ee858]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_cond_wait
<LI><a href="#[4def640]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[7566420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauPlayCallback
</UL><P><STRONG><a name="[4c30884]"></a>cyg_thread_idle_thread</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c30798]"></a>cyg_thread_set_priority</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30714]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::set_priority(int)
</UL><BR>[Called By]<UL><LI><a href="#[4a5496c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ServerStart
<LI><a href="#[734d7fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_stop_suspend_irq
</UL><P><STRONG><a name="[4a03520]"></a>cyg_thread_get_priority</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text))
<BR>[Called By]<UL><LI><a href="#[4a54a54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsUartTestHandler
</UL><P><STRONG><a name="[4c30690]"></a>cyg_thread_get_current_priority</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c30610]"></a>cyg_thread_deadline_wait</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4a03430]"></a>cyg_thread_delay</STRONG> (ARM, 24 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::delay(unsigned long long)
</UL><BR>[Called By]<UL><LI><a href="#[4d0cebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_all_network_interfaces
<LI><a href="#[50d97fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp_release
<LI><a href="#[51b626c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_remove_card
<LI><a href="#[4d31d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_fmi_init
<LI><a href="#[7bec660]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MacEventDisconnected
<LI><a href="#[9ac3274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_exit
<LI><a href="#[75eea28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_up
<LI><a href="#[9ac1570]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_wait_up
<LI><a href="#[75ee93c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_wait_down
<LI><a href="#[9ac3ea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_tx_thread
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4e4a000]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InitResetGPIO
<LI><a href="#[88f5948]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_out_fat_sector
<LI><a href="#[7966dfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fix_size_read
<LI><a href="#[796840c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fix_size_write
<LI><a href="#[77e7378]">&lt&lt</a>&nbsp;&nbsp;&nbsp;interleave_send
<LI><a href="#[5859b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mc_rx_socket
<LI><a href="#[7967e4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;os_sleep
<LI><a href="#[7f5fdf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;oss_loop
<LI><a href="#[71ecef0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rebootRequst
<LI><a href="#[71ed12c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;restoreRequst
<LI><a href="#[81194bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_data
<LI><a href="#[77e73ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_rtp_packet
<LI><a href="#[71ecf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;systemRequest
<LI><a href="#[81193d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_send_pmsg
<LI><a href="#[4a54a54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsUartTestHandler
<LI><a href="#[4d84430]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[7810048]">&lt&lt</a>&nbsp;&nbsp;&nbsp;v4l_loop
<LI><a href="#[537ee48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vgfxWaitEngineReady
</UL><P><STRONG><a name="[4c30514]"></a>cyg_thread_get_stack_base</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c30494]"></a>cyg_thread_get_stack_size</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c3041c]"></a>cyg_thread_get_next</STRONG> (ARM, 164 bytes, Stack size 16 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[7561e28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauDisplayAllThreads
</UL><P><STRONG><a name="[4a03958]"></a>cyg_thread_find</STRONG> (ARM, 108 bytes, Stack size 8 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4a039cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;er_find_thread
<LI><a href="#[4a03868]">&lt&lt</a>&nbsp;&nbsp;&nbsp;period_find_thread
</UL><P><STRONG><a name="[4a038e0]"></a>cyg_thread_get_info</STRONG> (ARM, 148 bytes, Stack size 8 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4a039cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;er_find_thread
<LI><a href="#[4a03868]">&lt&lt</a>&nbsp;&nbsp;&nbsp;period_find_thread
<LI><a href="#[4def7a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;thread_join
<LI><a href="#[7561e28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauDisplayAllThreads
</UL><P><STRONG><a name="[4c3031c]"></a>cyg_thread_new_data_index</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30298]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::new_data_index()
</UL><BR>[Called By]<UL><LI><a href="#[4cecd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_dns_res_init
</UL><P><STRONG><a name="[4c30218]"></a>cyg_thread_free_data_index</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30190]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::free_data_index(int)
</UL><BR>[Called By]<UL><LI><a href="#[4cecd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_dns_res_init
</UL><P><STRONG><a name="[4c30118]"></a>cyg_thread_get_data</STRONG> (ARM, 20 bytes, Stack size 0 bytes, kapi.o(.text))
<BR>[Called By]<UL><LI><a href="#[51193f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyaddr
<LI><a href="#[511937c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[5119a04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;thread_destructor
</UL><P><STRONG><a name="[4c3009c]"></a>cyg_thread_get_data_ptr</STRONG> (ARM, 20 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c30024]"></a>cyg_thread_set_data</STRONG> (ARM, 20 bytes, Stack size 0 bytes, kapi.o(.text))
<BR>[Called By]<UL><LI><a href="#[51193f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyaddr
<LI><a href="#[511937c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyname
</UL><P><STRONG><a name="[4c2ffa4]"></a>cyg_thread_add_destructor</STRONG> (ARM, 68 bytes, Stack size 0 bytes, kapi.o(.text))
<BR>[Called By]<UL><LI><a href="#[51193f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyaddr
<LI><a href="#[511937c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyname
</UL><P><STRONG><a name="[4c2ff24]"></a>cyg_thread_rem_destructor</STRONG> (ARM, 76 bytes, Stack size 8 bytes, kapi.o(.text))
<BR>[Called By]<UL><LI><a href="#[51193f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyaddr
<LI><a href="#[511937c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyname
</UL><P><STRONG><a name="[4c2fea4]"></a>cyg_exception_set_handler</STRONG> (ARM, 60 bytes, Stack size 16 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2fd74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Exception_Control::register_exception(int, void (*)(unsigned int, int, unsigned int), unsigned int, void (**)(unsigned int, int, unsigned int), unsigned int*)
</UL><P><STRONG><a name="[4c2fcf4]"></a>cyg_exception_clear_handler</STRONG> (ARM, 20 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2fc60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Exception_Control::deregister_exception(int)
</UL><P><STRONG><a name="[4c2fbe0]"></a>cyg_exception_call_handler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2fb58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::deliver_exception(int, unsigned int)
</UL><P><STRONG><a name="[4c2fadc]"></a>cyg_interrupt_create</STRONG> (ARM, 72 bytes, Stack size 24 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2fa48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Interrupt::Cyg_Interrupt(unsigned int, int, unsigned int, unsigned int (*)(unsigned int, unsigned int), void (*)(unsigned int, unsigned int, unsigned int))
</UL><BR>[Called By]<UL><LI><a href="#[860c4dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_serial_init
<LI><a href="#[72ed18c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USB_Int_Init
<LI><a href="#[73656e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;adcStartRecord
<LI><a href="#[54576e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capInit
<LI><a href="#[73659a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dacStartPlay
<LI><a href="#[72238b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitDevice
<LI><a href="#[7223924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInstallGPIO
<LI><a href="#[54ad5f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4InstallISR
<LI><a href="#[4d84354]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegInit
<LI><a href="#[541bdd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeInit
<LI><a href="#[7365a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartPlay
<LI><a href="#[7365758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartRecord
</UL><P><STRONG><a name="[4c2f9cc]"></a>cyg_interrupt_delete</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f950]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Interrupt::~Cyg_Interrupt()
</UL><BR>[Called By]<UL><LI><a href="#[54576e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capInit
<LI><a href="#[541bdd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeInit
</UL><P><STRONG><a name="[4c2f8d4]"></a>cyg_interrupt_attach</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f854]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Interrupt::attach()
</UL><BR>[Called By]<UL><LI><a href="#[860c4dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_serial_init
<LI><a href="#[72ed18c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USB_Int_Init
<LI><a href="#[73656e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;adcStartRecord
<LI><a href="#[54576e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capInit
<LI><a href="#[73659a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dacStartPlay
<LI><a href="#[72238b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitDevice
<LI><a href="#[7223924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInstallGPIO
<LI><a href="#[54ad5f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4InstallISR
<LI><a href="#[4d84354]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegInit
<LI><a href="#[541bdd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeInit
<LI><a href="#[7365a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartPlay
<LI><a href="#[7365758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartRecord
</UL><P><STRONG><a name="[4c2f7d8]"></a>cyg_interrupt_detach</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f758]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Interrupt::detach()
</UL><BR>[Called By]<UL><LI><a href="#[7365584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;adcStopRecord
<LI><a href="#[54576e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capInit
<LI><a href="#[7365848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dacStopPlay
<LI><a href="#[541bdd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeInit
<LI><a href="#[73658b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StopPlay
<LI><a href="#[73655f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StopRecord
</UL><P><STRONG><a name="[4c2f6dc]"></a>cyg_interrupt_get_vsr</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2f654]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::get_vsr(unsigned int, void (**)())
</UL><P><STRONG><a name="[4c2f5d8]"></a>cyg_interrupt_set_vsr</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2f54c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::set_vsr(unsigned int, void (*)(), void (**)())
</UL><P><STRONG><a name="[4a555fc]"></a>cyg_interrupt_disable</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f4c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::disable_interrupts()
</UL><BR>[Called By]<UL><LI><a href="#[51ded60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wireless_send_event
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[82a3410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateInnerDescription
<LI><a href="#[785f7c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[785f888]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_New
<LI><a href="#[82a371c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InsertBufferSeg
<LI><a href="#[5504ec4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetYUVRawData
<LI><a href="#[72ed18c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USB_Int_Init
<LI><a href="#[56dc200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_GetOneImage
<LI><a href="#[4defdb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99802Reboot
<LI><a href="#[59c92f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__CreateXML
<LI><a href="#[54578ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__capSetIRQHandler
<LI><a href="#[755ff5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauDecode
<LI><a href="#[54ada4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vmp4encGetBuffer
<LI><a href="#[4f2b04c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_mcuRecv
<LI><a href="#[4f2afdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_mcuSend
<LI><a href="#[545a790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_vcptSensorInit
<LI><a href="#[73656e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;adcStartRecord
<LI><a href="#[755ef88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufAudioNew
<LI><a href="#[54579e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufCptPlanarNew
<LI><a href="#[59af87c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufEMBEDFUNDecRef
<LI><a href="#[755f164]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufEncAudioNew
<LI><a href="#[550459c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufEncJpegDecRef
<LI><a href="#[5504e50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufEncJpegNew
<LI><a href="#[755e588]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufEncMsgDecRef
<LI><a href="#[59671e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufHASHNew
<LI><a href="#[82a12b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufINNERPARTDecRef
<LI><a href="#[4d843c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufInit
<LI><a href="#[827e37c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufLISTDecRef
<LI><a href="#[827e304]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufLISTNODEDecRef
<LI><a href="#[827e3f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufLISTNODENew
<LI><a href="#[755e49c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufLocalPCMNew
<LI><a href="#[54ad728]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufMP4BitstreamDecRef
<LI><a href="#[54ad7f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufMP4BitstreamNew
<LI><a href="#[59c95a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufNAMESTRINGDecRef
<LI><a href="#[77ac554]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufPATHDecRef
<LI><a href="#[7ff7ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufRSFSLOTNew
<LI><a href="#[81629c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufRSSTREAMNew
<LI><a href="#[5456968]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufVideoDecRef
<LI><a href="#[54569b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufVideoNew
<LI><a href="#[59c920c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufXMLDecRef
<LI><a href="#[54576e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capInit
<LI><a href="#[73659a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dacStartPlay
<LI><a href="#[77e7918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;del_rtp_endpoint
<LI><a href="#[731816c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dump_mime
<LI><a href="#[7967418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_terminate
<LI><a href="#[7223924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInstallGPIO
<LI><a href="#[80cf150]">&lt&lt</a>&nbsp;&nbsp;&nbsp;free_pmsg
<LI><a href="#[73184ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpBufInit
<LI><a href="#[5536bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpCreateList
<LI><a href="#[825cb98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteDescriptionLine
<LI><a href="#[5536ad4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteSplitBuffer
<LI><a href="#[59af4c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetDocumentBasedPath
<LI><a href="#[57e7b94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseSinglePart
<LI><a href="#[5537260]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseString
<LI><a href="#[4e4d7c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpRegisterEmbedFunEx
<LI><a href="#[5537b50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSetString
<LI><a href="#[7ff806c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_frame_heap
<LI><a href="#[558f9cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_EventRead
<LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[54ad5f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4InstallISR
<LI><a href="#[8163f7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_dest
<LI><a href="#[80352cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_event
<LI><a href="#[780fcac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_exchanger
<LI><a href="#[80cf23c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_pmsg
<LI><a href="#[77ac8f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_request
<LI><a href="#[77e7a84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_rtp_endpoint
<LI><a href="#[813cb84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_rtp_media
<LI><a href="#[808c474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_rtsp_location
<LI><a href="#[79b07bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4d84510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pllEvalPLLCON
<LI><a href="#[4efdf34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdUnlock
<LI><a href="#[4a54acc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;registerCustomCmd
<LI><a href="#[780fd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;register_config_context
<LI><a href="#[81078c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspBufInit
<LI><a href="#[77e7990]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspBufIsValid
<LI><a href="#[5926c1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspFreeAudioBuf
<LI><a href="#[5926c94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspFreeVideoBuf
<LI><a href="#[803350c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strip_events
<LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
<LI><a href="#[7566420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauPlayCallback
<LI><a href="#[75654d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauRecordCallback
<LI><a href="#[75620ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnRecord
<LI><a href="#[4d84040]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptInitThread
<LI><a href="#[54573a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStart
<LI><a href="#[5459320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnEncodeJPG
<LI><a href="#[54592a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnRefresh
<LI><a href="#[5459a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_StartEncode
<LI><a href="#[545b2b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcpt_DownscaledForDetectMotion_InDsr
<LI><a href="#[537e240]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdDelMotionBuffer
<LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
<LI><a href="#[54565c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegAddEncBuffer
<LI><a href="#[5504524]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegClearBuffer
<LI><a href="#[55046dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegGetEncBuffer
<LI><a href="#[4d84354]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegInit
<LI><a href="#[4d84198]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmInit
<LI><a href="#[54acc2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4ClearBuffer
<LI><a href="#[542284c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4DecRef
<LI><a href="#[4d84128]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4Init
<LI><a href="#[54ad494]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decDecRef
<LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[54ad57c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encDecRef
<LI><a href="#[5422b3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encDoneCallback
<LI><a href="#[5422ac0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encErrorCallback
<LI><a href="#[4db6c38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_linkupdate
<LI><a href="#[541bdd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeInit
<LI><a href="#[558f630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableAudioEncoder
<LI><a href="#[558f798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702WriteOSD
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[7365a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartPlay
<LI><a href="#[7365758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartRecord
<LI><a href="#[71ee9ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrInt
<LI><a href="#[71ee770]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrString
<LI><a href="#[71ee8c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrUnsignedInt
</UL><P><STRONG><a name="[4a55580]"></a>cyg_interrupt_enable</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f434]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::enable_interrupts()
</UL><BR>[Called By]<UL><LI><a href="#[860c4dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_serial_init
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[82a3410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateInnerDescription
<LI><a href="#[785f7c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[785f888]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_New
<LI><a href="#[82a371c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InsertBufferSeg
<LI><a href="#[5504ec4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetYUVRawData
<LI><a href="#[72ed18c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USB_Int_Init
<LI><a href="#[56dc200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_GetOneImage
<LI><a href="#[59c92f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__CreateXML
<LI><a href="#[54578ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__capSetIRQHandler
<LI><a href="#[755ff5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauDecode
<LI><a href="#[54ada4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vmp4encGetBuffer
<LI><a href="#[4f2b04c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_mcuRecv
<LI><a href="#[4f2afdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_mcuSend
<LI><a href="#[545a790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_vcptSensorInit
<LI><a href="#[73656e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;adcStartRecord
<LI><a href="#[755ef88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufAudioNew
<LI><a href="#[54579e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufCptPlanarNew
<LI><a href="#[59af87c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufEMBEDFUNDecRef
<LI><a href="#[755f164]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufEncAudioNew
<LI><a href="#[550459c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufEncJpegDecRef
<LI><a href="#[5504e50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufEncJpegNew
<LI><a href="#[755e588]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufEncMsgDecRef
<LI><a href="#[59671e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufHASHNew
<LI><a href="#[82a12b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufINNERPARTDecRef
<LI><a href="#[4d843c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufInit
<LI><a href="#[827e37c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufLISTDecRef
<LI><a href="#[827e304]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufLISTNODEDecRef
<LI><a href="#[827e3f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufLISTNODENew
<LI><a href="#[755e49c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufLocalPCMNew
<LI><a href="#[54ad728]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufMP4BitstreamDecRef
<LI><a href="#[54ad7f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufMP4BitstreamNew
<LI><a href="#[59c95a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufNAMESTRINGDecRef
<LI><a href="#[77ac554]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufPATHDecRef
<LI><a href="#[7ff7ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufRSFSLOTNew
<LI><a href="#[81629c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufRSSTREAMNew
<LI><a href="#[5456968]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufVideoDecRef
<LI><a href="#[54569b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufVideoNew
<LI><a href="#[59c920c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufXMLDecRef
<LI><a href="#[54576e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capInit
<LI><a href="#[73659a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dacStartPlay
<LI><a href="#[77e7918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;del_rtp_endpoint
<LI><a href="#[731816c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dump_mime
<LI><a href="#[7223924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInstallGPIO
<LI><a href="#[80cf150]">&lt&lt</a>&nbsp;&nbsp;&nbsp;free_pmsg
<LI><a href="#[73184ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpBufInit
<LI><a href="#[5536bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpCreateList
<LI><a href="#[825cb98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteDescriptionLine
<LI><a href="#[5536ad4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteSplitBuffer
<LI><a href="#[59af4c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetDocumentBasedPath
<LI><a href="#[57e7b94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseSinglePart
<LI><a href="#[5537260]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseString
<LI><a href="#[4e4d7c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpRegisterEmbedFunEx
<LI><a href="#[5537b50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSetString
<LI><a href="#[7ff806c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_frame_heap
<LI><a href="#[558f9cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_EventRead
<LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[54ad5f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4InstallISR
<LI><a href="#[8163f7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_dest
<LI><a href="#[80352cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_event
<LI><a href="#[780fcac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_exchanger
<LI><a href="#[80cf23c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_pmsg
<LI><a href="#[77ac8f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_request
<LI><a href="#[77e7a84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_rtp_endpoint
<LI><a href="#[813cb84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_rtp_media
<LI><a href="#[808c474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_rtsp_location
<LI><a href="#[780fd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;register_config_context
<LI><a href="#[81078c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspBufInit
<LI><a href="#[5926c1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspFreeAudioBuf
<LI><a href="#[5926c94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspFreeVideoBuf
<LI><a href="#[803350c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strip_events
<LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
<LI><a href="#[7566420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauPlayCallback
<LI><a href="#[75654d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauRecordCallback
<LI><a href="#[75620ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnRecord
<LI><a href="#[54573a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStart
<LI><a href="#[5459320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnEncodeJPG
<LI><a href="#[54592a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnRefresh
<LI><a href="#[5459a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_StartEncode
<LI><a href="#[545b2b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcpt_DownscaledForDetectMotion_InDsr
<LI><a href="#[537e240]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdDelMotionBuffer
<LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
<LI><a href="#[54565c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegAddEncBuffer
<LI><a href="#[5504524]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegClearBuffer
<LI><a href="#[55046dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegGetEncBuffer
<LI><a href="#[4d84354]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegInit
<LI><a href="#[4d84198]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmInit
<LI><a href="#[54acc2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4ClearBuffer
<LI><a href="#[4d84128]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4Init
<LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[541bdd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeInit
<LI><a href="#[558f630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableAudioEncoder
<LI><a href="#[558f798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702WriteOSD
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[7365a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartPlay
<LI><a href="#[7365758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartRecord
</UL><P><STRONG><a name="[4c2f3bc]"></a>cyg_interrupt_mask</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f334]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::mask_interrupt(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[51deb60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;QueueCmd
<LI><a href="#[51dea70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CleanupAndInsertCmd
<LI><a href="#[51de984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetFreeCmdCtrlNode
<LI><a href="#[51dde50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ExecuteNextCommand
<LI><a href="#[51df798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownloadCommandToStation
<LI><a href="#[51b6884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_service_main_thread
<LI><a href="#[4d31e64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_tx_packet
<LI><a href="#[52aa608]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_enable_ioctl
<LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
<LI><a href="#[51ddb7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MrvDrvCommandTimerFunction
<LI><a href="#[860baf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_serial_ISR
<LI><a href="#[72ed274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBHandler
<LI><a href="#[71ed5a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBResetForVCom
<LI><a href="#[7365584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;adcStopRecord
<LI><a href="#[54576e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capInit
<LI><a href="#[7d80268]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capIntHandler
<LI><a href="#[7365848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dacStopPlay
<LI><a href="#[789fd50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iis_play_isr
<LI><a href="#[789fc68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iis_rec_isr
<LI><a href="#[550510c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;jpegIntHandler
<LI><a href="#[7da7848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4Handler
<LI><a href="#[72f1f1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbread
<LI><a href="#[541bdd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeInit
<LI><a href="#[7d7a808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeIntHandler
<LI><a href="#[73658b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StopPlay
<LI><a href="#[73655f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StopRecord
</UL><P><STRONG><a name="[4c2f2b0]"></a>cyg_interrupt_mask_intunsafe</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2f21c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::mask_interrupt_intunsafe(unsigned int)
</UL><P><STRONG><a name="[4c2f1a0]"></a>cyg_interrupt_unmask</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f114]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::unmask_interrupt(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[860c4dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_serial_init
<LI><a href="#[860bb6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_serial_DSR
<LI><a href="#[49f86dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBExceptionHandle
<LI><a href="#[71ed5a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBResetForVCom
<LI><a href="#[72ed18c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USB_Int_Init
<LI><a href="#[73656e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;adcStartRecord
<LI><a href="#[72ef418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;callRestDSR
<LI><a href="#[54576e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capInit
<LI><a href="#[7d801f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capIntHandlerDSR
<LI><a href="#[73659a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dacStartPlay
<LI><a href="#[72238b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitDevice
<LI><a href="#[7223924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInstallGPIO
<LI><a href="#[789fcd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iis_play_isr_dsr
<LI><a href="#[789fbf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iis_rec_isr_dsr
<LI><a href="#[5505180]">&lt&lt</a>&nbsp;&nbsp;&nbsp;jpegIntHandler_DSR
<LI><a href="#[7da78b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4HandlerDSR
<LI><a href="#[54ad5f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4InstallISR
<LI><a href="#[54ad1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetDecoder
<LI><a href="#[72ed200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbHandlerDSR
<LI><a href="#[72f1f1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbread
<LI><a href="#[4d84354]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegInit
<LI><a href="#[54ad2b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decStart
<LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[541bdd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeInit
<LI><a href="#[7d7a87c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeIntHandlerDSR
<LI><a href="#[7365a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartPlay
<LI><a href="#[7365758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartRecord
</UL><P><STRONG><a name="[4c2f090]"></a>cyg_interrupt_unmask_intunsafe</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2effc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::unmask_interrupt_intunsafe(unsigned int)
</UL><P><STRONG><a name="[4c2ef7c]"></a>cyg_interrupt_acknowledge</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2eeec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::acknowledge_interrupt(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[860baf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_serial_ISR
<LI><a href="#[722434c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FMI_INTHandler
<LI><a href="#[7223ea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GPIO_INTHandler
<LI><a href="#[72ed274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBHandler
<LI><a href="#[7d80268]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capIntHandler
<LI><a href="#[789fd50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iis_play_isr
<LI><a href="#[789fcd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iis_play_isr_dsr
<LI><a href="#[789fc68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iis_rec_isr
<LI><a href="#[789fbf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iis_rec_isr_dsr
<LI><a href="#[550510c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;jpegIntHandler
<LI><a href="#[5505180]">&lt&lt</a>&nbsp;&nbsp;&nbsp;jpegIntHandler_DSR
<LI><a href="#[7da7848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4Handler
<LI><a href="#[7da78b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4HandlerDSR
<LI><a href="#[7d7a808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeIntHandler
<LI><a href="#[7d7a87c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeIntHandlerDSR
</UL><P><STRONG><a name="[4c2ee70]"></a>cyg_interrupt_configure</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2ede0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::configure_interrupt(unsigned int, int, int)
</UL><BR>[Called By]<UL><LI><a href="#[7365a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartPlay
<LI><a href="#[7365758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartRecord
</UL><P><STRONG><a name="[4c2ed64]"></a>cyg_interrupt_set_cpu</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c2ece8]"></a>cyg_interrupt_get_cpu</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c2ec70]"></a>cyg_counter_create</STRONG> (ARM, 32 bytes, Stack size 16 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2ebf4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::Cyg_Counter(unsigned int)
</UL><P><STRONG><a name="[4c2eb7c]"></a>cyg_counter_delete</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2eb00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::~Cyg_Counter()
</UL><P><STRONG><a name="[4c2ea80]"></a>cyg_counter_current_value</STRONG> (ARM, 16 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c2ea04]"></a>cyg_counter_set_value</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c2e98c]"></a>cyg_counter_tick</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2e910]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::tick(unsigned int)
</UL><P><STRONG><a name="[4c2e894]"></a>cyg_counter_multi_tick</STRONG> (ARM, 28 bytes, Stack size 8 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2e910]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::tick(unsigned int)
</UL><P><STRONG><a name="[4c2e81c]"></a>cyg_clock_create</STRONG> (ARM, 36 bytes, Stack size 16 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2e788]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Clock::Cyg_Clock(Cyg_Clock::cyg_resolution)
</UL><P><STRONG><a name="[4c2e710]"></a>cyg_clock_delete</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2e698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Clock::~Cyg_Clock()
</UL><P><STRONG><a name="[4c2e61c]"></a>cyg_clock_to_counter</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text))
<BR>[Called By]<UL><LI><a href="#[4d1ee1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
<LI><a href="#[51ddbfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WirelessDrvCmdAlarm
<LI><a href="#[51ddb04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WirelessDrvAlarm
<LI><a href="#[5138310]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_timeout_init
<LI><a href="#[50da3b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_lease
</UL><P><STRONG><a name="[4c2e59c]"></a>cyg_clock_set_resolution</STRONG> (ARM, 12 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c2e51c]"></a>cyg_clock_get_resolution</STRONG> (ARM, 20 bytes, Stack size 0 bytes, kapi.o(.text))
<BR>[Called By]<UL><LI><a href="#[9ac35b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_init
<LI><a href="#[50da3b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_lease
</UL><P><STRONG><a name="[4c2e4a4]"></a>cyg_real_time_clock</STRONG> (ARM, 12 bytes, Stack size 0 bytes, kapi.o(.text))
<BR>[Called By]<UL><LI><a href="#[4d1ee1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
<LI><a href="#[51ddbfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WirelessDrvCmdAlarm
<LI><a href="#[51ddb04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WirelessDrvAlarm
<LI><a href="#[5138310]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_timeout_init
<LI><a href="#[9ac35b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_init
<LI><a href="#[874a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat
<LI><a href="#[50da3b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_lease
</UL><P><STRONG><a name="[4c2e42c]"></a>cyg_current_time</STRONG> (ARM, 16 bytes, Stack size 0 bytes, kapi.o(.text))
<BR>[Called By]<UL><LI><a href="#[4d1ee1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
<LI><a href="#[5139bd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ktime_func
<LI><a href="#[51df798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownloadCommandToStation
<LI><a href="#[4d31dec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ProcessRxedPacket
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[52aba00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_snr
<LI><a href="#[516d0c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;timeout
<LI><a href="#[5daa6ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;alarm_thread
<LI><a href="#[7a71478]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_tsleep
<LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
<LI><a href="#[7bec6f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HandleDisconnectEvent
<LI><a href="#[51dda8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MrvDrvTimerFunction
<LI><a href="#[51b5930]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_reassociation_thread
<LI><a href="#[7c85094]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_prog_firmware_image
<LI><a href="#[9ade690]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_write
<LI><a href="#[9ade620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_read
<LI><a href="#[9ac2824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_wait_input
<LI><a href="#[874a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat
<LI><a href="#[595132c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BuildFileInfo
<LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
<LI><a href="#[4e4a2b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;OnHttpInit
<LI><a href="#[5456c5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capImageTransform
<LI><a href="#[88f5948]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_out_fat_sector
<LI><a href="#[5774564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;current_time
<LI><a href="#[4fe1a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drive_rovio_manually
<LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
<LI><a href="#[7a37cb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_recv_response
<LI><a href="#[7a37d28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_send_subscribe
<LI><a href="#[78448dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[77e9688]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[80360a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[813d274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[789fd50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iis_play_isr
<LI><a href="#[808d994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;live_play
<LI><a href="#[553a690]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[56aaca8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[56debe4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[5775c8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[588b8c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[76883b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[50da3b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_lease
<LI><a href="#[77e7a84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_rtp_endpoint
<LI><a href="#[4f75528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_read_report_packet
<LI><a href="#[7a5ae98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;os_get_time
<LI><a href="#[4eff19c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdRun
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
<LI><a href="#[7a3b248]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_adv_srch
<LI><a href="#[7a3b2bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_recv_response
<LI><a href="#[75c3200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_get_ticks
<LI><a href="#[75c3274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_get_time
<LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
<LI><a href="#[75654d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauRecordCallback
<LI><a href="#[4d84040]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptInitThread
<LI><a href="#[545dc9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptIrqHandler
<LI><a href="#[5457a5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerInit
<LI><a href="#[5457bbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerIsEnable
<LI><a href="#[5456f70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerNotify
<LI><a href="#[545f034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThreadCapEntry
<LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[4db5ef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_linkrefresh
<LI><a href="#[4db6c38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_linkupdate
<LI><a href="#[7365a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartPlay
<LI><a href="#[7365758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartRecord
<LI><a href="#[811935c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;write_access_log
<LI><a href="#[71ecc40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_wait_network_ip
</UL><P><STRONG><a name="[4c2e3b4]"></a>cyg_alarm_create</STRONG> (ARM, 48 bytes, Stack size 16 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e31c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::Cyg_Alarm(Cyg_Counter*, void (*)(Cyg_Alarm*, unsigned int), unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4d1ee1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
<LI><a href="#[51ddbfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WirelessDrvCmdAlarm
<LI><a href="#[51ddb04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WirelessDrvAlarm
<LI><a href="#[5138310]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_timeout_init
<LI><a href="#[9ac35b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_init
<LI><a href="#[874a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat
<LI><a href="#[50da3b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_lease
</UL><P><STRONG><a name="[4c2e2a4]"></a>cyg_alarm_delete</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e22c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::~Cyg_Alarm()
</UL><BR>[Called By]<UL><LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[51b4fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_free_adapter
<LI><a href="#[50da3b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_lease
</UL><P><STRONG><a name="[4c2e1b0]"></a>cyg_alarm_initialize</STRONG> (ARM, 20 bytes, Stack size 8 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::initialize(unsigned long long, unsigned long long)
</UL><BR>[Called By]<UL><LI><a href="#[4d1ee1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
<LI><a href="#[51df798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownloadCommandToStation
<LI><a href="#[516d0c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;timeout
<LI><a href="#[5daa6ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;alarm_thread
<LI><a href="#[7bec6f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HandleDisconnectEvent
<LI><a href="#[51dda8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MrvDrvTimerFunction
<LI><a href="#[51b5930]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_reassociation_thread
<LI><a href="#[9ac2824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_wait_input
<LI><a href="#[874a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat
<LI><a href="#[50da3b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_lease
</UL><P><STRONG><a name="[4c2e0b8]"></a>cyg_alarm_get_times</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2e038]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::get_times(unsigned long long*, unsigned long long*)
</UL><P><STRONG><a name="[4c2dfc0]"></a>cyg_alarm_enable</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2df44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::enable()
</UL><BR>[Called By]<UL><LI><a href="#[4d1ee1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
<LI><a href="#[51df798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownloadCommandToStation
<LI><a href="#[9ac2824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_wait_input
<LI><a href="#[50da3b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_lease
</UL><P><STRONG><a name="[4c2decc]"></a>cyg_alarm_disable</STRONG> (ARM, 24 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2de40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::rem_alarm(Cyg_Alarm*)
</UL><BR>[Called By]<UL><LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[51df798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownloadCommandToStation
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
<LI><a href="#[51b4fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_free_adapter
<LI><a href="#[52ab028]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_essid
<LI><a href="#[52ab184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_wap
<LI><a href="#[52aa7e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlanidle_on
<LI><a href="#[9ac2824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_wait_input
<LI><a href="#[874a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat
<LI><a href="#[50da3b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_lease
</UL><P><STRONG><a name="[4c2ddcc]"></a>cyg_mbox_create</STRONG> (ARM, 28 bytes, Stack size 16 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2dd54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::Cyg_Mbox()
</UL><BR>[Called By]<UL><LI><a href="#[4e4a564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MailStart
<LI><a href="#[755eff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_msg_queue_init
</UL><P><STRONG><a name="[4c2dce0]"></a>cyg_mbox_delete</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2dc68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::~Cyg_Mbox()
</UL><P><STRONG><a name="[4c2dbf4]"></a>cyg_mbox_get</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2db7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::get()
</UL><BR>[Called By]<UL><LI><a href="#[4e4a564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MailStart
<LI><a href="#[755e5fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_msg_recv
</UL><P><STRONG><a name="[4c2db04]"></a>cyg_mbox_timed_get</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2da8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::get(unsigned long long)
</UL><BR>[Called By]<UL><LI><a href="#[5456d4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_msg_timed_recv
</UL><P><STRONG><a name="[4c2da18]"></a>cyg_mbox_tryget</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2d9a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::tryget()
</UL><P><STRONG><a name="[4c2d928]"></a>cyg_mbox_peek_item</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2d8ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::peek_item()
</UL><P><STRONG><a name="[4c2d838]"></a>cyg_mbox_put</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::put(void*)
</UL><BR>[Called By]<UL><LI><a href="#[755f9cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_msg_send
</UL><P><STRONG><a name="[4c2d748]"></a>cyg_mbox_timed_put</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2d6d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::put(void*, unsigned long long)
</UL><P><STRONG><a name="[4c2d65c]"></a>cyg_mbox_tryput</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d5e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::tryput(void*)
</UL><BR>[Called By]<UL><LI><a href="#[5950a5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendMailMsg
<LI><a href="#[755fb9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_msg_try_send
</UL><P><STRONG><a name="[4c2d56c]"></a>cyg_mbox_peek</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c2d4f0]"></a>cyg_mbox_waiting_to_get</STRONG> (ARM, 16 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c2d474]"></a>cyg_mbox_waiting_to_put</STRONG> (ARM, 16 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c2d3fc]"></a>cyg_semaphore_init</STRONG> (ARM, 12 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d374]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::Cyg_Counting_Semaphore(int)
</UL><BR>[Called By]<UL><LI><a href="#[50fcba4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dhcp_bind
<LI><a href="#[4d0ccec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dhcp_start_dhcp_mgt_thread
<LI><a href="#[513829c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_tsleep_init
<LI><a href="#[7a71478]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_tsleep
<LI><a href="#[75eea28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_up
<LI><a href="#[4e4a484]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateMsgQueue
<LI><a href="#[72ed2e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[755f070]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_pc_init
<LI><a href="#[755fa3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartPlay
<LI><a href="#[755edc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartRecord
<LI><a href="#[4d84040]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptInitThread
<LI><a href="#[5457924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptWaitPrevMsg
<LI><a href="#[4d84354]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegInit
</UL><P><STRONG><a name="[4c2d2f8]"></a>cyg_semaphore_destroy</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d270]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::~Cyg_Counting_Semaphore()
</UL><BR>[Called By]<UL><LI><a href="#[5457924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptWaitPrevMsg
</UL><P><STRONG><a name="[4c2d1f8]"></a>cyg_semaphore_wait</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d170]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::wait()
</UL><BR>[Called By]<UL><LI><a href="#[50fca4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dhcp_mgt_entry
<LI><a href="#[7a71478]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_tsleep
<LI><a href="#[9ac3ea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_tx_thread
<LI><a href="#[5716430]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetMsg
<LI><a href="#[56dc448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[54ad150]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_pc_consume
<LI><a href="#[755e66c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_pc_produce
<LI><a href="#[72f1f1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbread
<LI><a href="#[755fa3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartPlay
<LI><a href="#[755edc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartRecord
<LI><a href="#[5459b04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_WaitEncode
<LI><a href="#[5457924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptWaitPrevMsg
<LI><a href="#[4d84354]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegInit
<LI><a href="#[5504988]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegWaitDecoderCom
<LI><a href="#[5504dd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegWaitEncoderCom
<LI><a href="#[54acf70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decWaitOK
<LI><a href="#[5456810]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encWaitOK
<LI><a href="#[537ea9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeWaitProcessOK
</UL><P><STRONG><a name="[4c2d0f0]"></a>cyg_semaphore_timed_wait</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d068]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::wait(unsigned long long)
</UL><BR>[Called By]<UL><LI><a href="#[7a71478]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_tsleep
</UL><P><STRONG><a name="[4c2cfec]"></a>cyg_semaphore_trywait</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2cf64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::trywait()
</UL><BR>[Called By]<UL><LI><a href="#[56dc2f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;TryGetMsg
<LI><a href="#[755e510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_pc_try_consume
<LI><a href="#[535586c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_pc_try_produce
</UL><P><STRONG><a name="[4c2ceec]"></a>cyg_semaphore_post</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2ce64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::post()
</UL><BR>[Called By]<UL><LI><a href="#[7a714e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_wakeup
<LI><a href="#[9ac3274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_exit
<LI><a href="#[872eba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppasyncstart
<LI><a href="#[50d9bb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;alarm_function
<LI><a href="#[5716430]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetMsg
<LI><a href="#[56dc448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[56dc2f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;TryGetMsg
<LI><a href="#[49f86dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBExceptionHandle
<LI><a href="#[75663a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauThread_OnWaitFrame
<LI><a href="#[545ed38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vcptThread_OnWaitFrame
<LI><a href="#[54ad150]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_pc_consume
<LI><a href="#[755e66c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_pc_produce
<LI><a href="#[755e510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_pc_try_consume
<LI><a href="#[535586c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_pc_try_produce
<LI><a href="#[72ed200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbHandlerDSR
<LI><a href="#[5459320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnEncodeJPG
<LI><a href="#[545939c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnEncodeMP4
<LI><a href="#[54592a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnRefresh
<LI><a href="#[5505278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegDecoderCom_Callback
<LI><a href="#[55052f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegDecoderErr_Callback
<LI><a href="#[55051f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegEncoderCom_Callback
<LI><a href="#[54acf70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decWaitOK
<LI><a href="#[5456810]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encWaitOK
<LI><a href="#[537ea9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeWaitProcessOK
</UL><P><STRONG><a name="[4c2cdec]"></a>cyg_semaphore_peek</STRONG> (ARM, 20 bytes, Stack size 8 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2cd64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::peek() const
</UL><BR>[Called By]<UL><LI><a href="#[755ff5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauDecode
</UL><P><STRONG><a name="[4c2ccf0]"></a>cyg_flag_init</STRONG> (ARM, 16 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2cc78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::Cyg_Flag(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4d33dc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_init
<LI><a href="#[4d1ee1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
<LI><a href="#[51de018]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AllocateCmdBuffer
<LI><a href="#[51b6884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_service_main_thread
<LI><a href="#[5138310]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_timeout_init
<LI><a href="#[51b5930]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_reassociation_thread
<LI><a href="#[72238b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitDevice
</UL><P><STRONG><a name="[4c2cc00]"></a>cyg_flag_destroy</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2cb88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::~Cyg_Flag()
</UL><P><STRONG><a name="[4c2cb10]"></a>cyg_flag_setbits</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2ca94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::setbits(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[51deae8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CleanUpCmdCtrlNode
<LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[51b5b08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WakeUpWaitQ
<LI><a href="#[4d32200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_add_card
<LI><a href="#[51b55e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_interrupt
<LI><a href="#[51b626c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_remove_card
<LI><a href="#[51b50c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_send
<LI><a href="#[4d31e64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_tx_packet
<LI><a href="#[52aab90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetDeepSleep
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[5183c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ecos_synch_eth_drv_dsr
<LI><a href="#[5daa760]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_alarm
<LI><a href="#[5183d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_input
<LI><a href="#[7af42a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;looutput
<LI><a href="#[51ddb7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MrvDrvCommandTimerFunction
<LI><a href="#[51dda8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MrvDrvTimerFunction
<LI><a href="#[51b5930]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_reassociation_thread
<LI><a href="#[9a8a010]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_restart
<LI><a href="#[9a8a5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_inproc
<LI><a href="#[9a89da0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppppktin
</UL><P><STRONG><a name="[4c2ca1c]"></a>cyg_flag_maskbits</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c9a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::maskbits(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4d34088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_can_send
<LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[4c2c92c]"></a>cyg_flag_wait</STRONG> (ARM, 24 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c8b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::wait(unsigned int, unsigned char)
</UL><BR>[Called By]<UL><LI><a href="#[4d34088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_can_send
<LI><a href="#[5139b64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_netint
<LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[51b6884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_service_main_thread
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[5daa6ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;alarm_thread
<LI><a href="#[51b5930]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_reassociation_thread
</UL><P><STRONG><a name="[4c2c838]"></a>cyg_flag_timed_wait</STRONG> (ARM, 44 bytes, Stack size 8 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2c7bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::wait(unsigned int, unsigned char, unsigned long long)
</UL><P><STRONG><a name="[4c2c748]"></a>cyg_flag_poll</STRONG> (ARM, 24 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2c6cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::poll(unsigned int, unsigned char)
</UL><P><STRONG><a name="[4c2c658]"></a>cyg_flag_peek</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c2c5e0]"></a>cyg_flag_waiting</STRONG> (ARM, 16 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[49dbc7c]"></a>cyg_mutex_init</STRONG> (ARM, 12 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c568]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::Cyg_Mutex()
</UL><BR>[Called By]<UL><LI><a href="#[4cecd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_dns_res_init
<LI><a href="#[53323b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;register_sdiohost
<LI><a href="#[75f08ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_init
<LI><a href="#[5d51138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_init
<LI><a href="#[513829c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_tsleep_init
<LI><a href="#[51b5844]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_fw
<LI><a href="#[9add514]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipelib_init
<LI><a href="#[9add5f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipelib_init0
<LI><a href="#[4e4a484]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateMsgQueue
<LI><a href="#[4a5496c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ServerStart
<LI><a href="#[5887584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;URLCGI_HTTPC_Init
<LI><a href="#[72ed2e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[4e4a328]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VirtualComInit
<LI><a href="#[49dbcf0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__mgmtInit
<LI><a href="#[7843c6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_basic_response
<LI><a href="#[7843b10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_digest_response
<LI><a href="#[4eab8f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;del_auth_id
<LI><a href="#[780feec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;deliver_frame
<LI><a href="#[72238b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitDevice
<LI><a href="#[7ff806c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_frame_heap
<LI><a href="#[4f731a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_state_machine
<LI><a href="#[4d840b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_Init
<LI><a href="#[80352cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_event
<LI><a href="#[780fcac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_exchanger
<LI><a href="#[8031f80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_soft_queue
<LI><a href="#[4a5531c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdInit
<LI><a href="#[59274e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelCreate
<LI><a href="#[4eabb34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_auth_id
<LI><a href="#[872eb3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;spltty
<LI><a href="#[80b0ff0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;spook_log_init
<LI><a href="#[4e4a0ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_init
<LI><a href="#[7810048]">&lt&lt</a>&nbsp;&nbsp;&nbsp;v4l_loop
<LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
<LI><a href="#[5457a5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerInit
<LI><a href="#[4d83f64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoInit
<LI><a href="#[4d84354]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegInit
<LI><a href="#[4d84198]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmInit
<LI><a href="#[4d84128]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4Init
<LI><a href="#[4a54cb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_init
<LI><a href="#[500752c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_run
</UL><P><STRONG><a name="[4c2c4f0]"></a>cyg_mutex_destroy</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c478]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::~Cyg_Mutex()
</UL><BR>[Called By]<UL><LI><a href="#[5887c20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;URLCGI_DelFD
<LI><a href="#[59266a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelDelete
</UL><P><STRONG><a name="[49dbb9c]"></a>cyg_mutex_lock</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
</UL><BR>[Called By]<UL><LI><a href="#[51193f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyaddr
<LI><a href="#[511937c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[4cecd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_dns_res_init
<LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[4e4d088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppot_connect
<LI><a href="#[5d513f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_write
<LI><a href="#[5d51380]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_read
<LI><a href="#[5d51294]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_get_config
<LI><a href="#[7a71478]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_tsleep
<LI><a href="#[51841cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ifplock
<LI><a href="#[75ee8cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_create
<LI><a href="#[9add0ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_destroy
<LI><a href="#[9ade690]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_write
<LI><a href="#[9ade620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_read
<LI><a href="#[9ade5b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_select
<LI><a href="#[9ade53c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_get_config
<LI><a href="#[8603960]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_lookup
<LI><a href="#[8603c20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_read
<LI><a href="#[8603b34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_get_config
<LI><a href="#[8603abc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_set_config
<LI><a href="#[4e4c3e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetLog
<LI><a href="#[4e4c458]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetStatus
<LI><a href="#[4e4b49c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SendMail
<LI><a href="#[4e4c288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetDDNS
<LI><a href="#[4e4b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMail
<LI><a href="#[4e4cc8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DDNS_CheckIP
<LI><a href="#[58876ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DDNS_Update_IP
<LI><a href="#[56dcec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillCameraData
<LI><a href="#[58896dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillURLCGIData
<LI><a href="#[4e4a244]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetCheckedTime
<LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
<LI><a href="#[4e4c5bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendJpeg
<LI><a href="#[57e7c80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MPTestWriteFlash
<LI><a href="#[4e49ea0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;OnRequestBegin
<LI><a href="#[582d194]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PopMsgNode
<LI><a href="#[57e7c0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ProcessUpdate
<LI><a href="#[582d124]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PushMsgNode
<LI><a href="#[56dc360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SaveJpeg
<LI><a href="#[4e4a1d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetCheckedTime
<LI><a href="#[58897c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;URLCGI_HTTPCResponse
<LI><a href="#[71ed618]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBRead
<LI><a href="#[71ecfd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBWrite
<LI><a href="#[4def390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
<LI><a href="#[4eaa630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__WriteFlashMemory
<LI><a href="#[8031cc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_softqueue_event
<LI><a href="#[5ad0ae4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capture_and_email_picture
<LI><a href="#[7843c6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_basic_response
<LI><a href="#[7843b10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_digest_response
<LI><a href="#[7ff7ce8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_frame_heap
<LI><a href="#[4eab8f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;del_auth_id
<LI><a href="#[780feec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;deliver_frame
<LI><a href="#[780fbc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exchange_frame
<LI><a href="#[7ff9720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exchanger_read
<LI><a href="#[722342c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiLock
<LI><a href="#[71ed3d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;freshWlanRequest
<LI><a href="#[765d568]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsIORead
<LI><a href="#[765d64c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsIOWrite
<LI><a href="#[71ed450]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getIPInfo
<LI><a href="#[49dbc10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getMem
<LI><a href="#[4f75c1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_current_rovio_state
<LI><a href="#[780ff60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_next_frame
<LI><a href="#[4fc24d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_report
<LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
<LI><a href="#[558f88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_Write
<LI><a href="#[71ed4c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;netstatRequest
<LI><a href="#[80352cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_event
<LI><a href="#[780fc3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_frame
<LI><a href="#[4efdec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdLock
<LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
<LI><a href="#[7ff7dd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ref_frame
<LI><a href="#[49dbab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;retMem
<LI><a href="#[5926ef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspSwapHttpTunnelFD
<LI><a href="#[5927468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelSendData
<LI><a href="#[4eabb34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_auth_id
<LI><a href="#[4f75ba0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_current_rovio_state
<LI><a href="#[8031d38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soft_queue_add
<LI><a href="#[7a7222c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;spl_any
<LI><a href="#[872eb3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;spltty
<LI><a href="#[7843b8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[8034124]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sq_run
<LI><a href="#[71ed6f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;statusReply
<LI><a href="#[803350c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strip_events
<LI><a href="#[71ecf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;systemRequest
<LI><a href="#[4def640]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[7ff7e40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;unref_frame
<LI><a href="#[71ed534]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_getPPP
<LI><a href="#[4ba2ea0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_write
<LI><a href="#[5456e80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerAck
<LI><a href="#[5456f70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerNotify
<LI><a href="#[5456ef8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerWait
<LI><a href="#[544d220]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoClearContent
<LI><a href="#[5456a08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoDrawContent
<LI><a href="#[544d298]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoSetContent
<LI><a href="#[5456730]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegLock
<LI><a href="#[5356464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmLock
<LI><a href="#[5355958]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmLock1
<LI><a href="#[54568f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4Lock
<LI><a href="#[54acefc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decPrepare
<LI><a href="#[4db4d10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encGetQuality
<LI><a href="#[54ace84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encSetBitrate
<LI><a href="#[54acca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encSetFormat
<LI><a href="#[54acd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encSetFramerate
<LI><a href="#[54acd18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encSetQuality
<LI><a href="#[4db5030]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_change_enable
<LI><a href="#[4d87408]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_entry
<LI><a href="#[4db50b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_getspeed
<LI><a href="#[4db5138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_write
<LI><a href="#[558f5b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableJPEGEncoder
<LI><a href="#[558f6ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableMP4Encoder
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[796facc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reconfig_receiver
<LI><a href="#[4def2a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_set_network_ip
<LI><a href="#[79b089c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_set_wireless_config
<LI><a href="#[71ecc40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_wait_network_ip
</UL><P><STRONG><a name="[4c2c388]"></a>cyg_mutex_trylock</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c30c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::trylock()
</UL><BR>[Called By]<UL><LI><a href="#[52ab028]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_essid
<LI><a href="#[51b5930]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_reassociation_thread
<LI><a href="#[52ab110]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_scan
<LI><a href="#[75b4fbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_try_lock_in_dsr
<LI><a href="#[755fb24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauNotificationGet
<LI><a href="#[537de14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmTryLock
<LI><a href="#[53558e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmTryLock1
</UL><P><STRONG><a name="[49dbb24]"></a>cyg_mutex_unlock</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[51193f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyaddr
<LI><a href="#[511937c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[4cecd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_dns_res_init
<LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[4e4d088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppot_connect
<LI><a href="#[5d513f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_write
<LI><a href="#[5d51380]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_read
<LI><a href="#[5d51294]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_get_config
<LI><a href="#[5137b18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[7a71478]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_tsleep
<LI><a href="#[5184158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ifpunlock
<LI><a href="#[52ab028]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_essid
<LI><a href="#[51b5930]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_reassociation_thread
<LI><a href="#[52ab110]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_scan
<LI><a href="#[75ee8cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_create
<LI><a href="#[9add0ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_destroy
<LI><a href="#[9ade690]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_write
<LI><a href="#[9ade620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_read
<LI><a href="#[9ade5b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_select
<LI><a href="#[9ade53c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_get_config
<LI><a href="#[8603960]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_lookup
<LI><a href="#[8603c20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_read
<LI><a href="#[8603b34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_get_config
<LI><a href="#[8603abc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_set_config
<LI><a href="#[872df70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;splxtty
<LI><a href="#[4e4c3e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetLog
<LI><a href="#[4e4c458]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetStatus
<LI><a href="#[4e4b49c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SendMail
<LI><a href="#[4e4c288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetDDNS
<LI><a href="#[4e4b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMail
<LI><a href="#[4e4cc8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DDNS_CheckIP
<LI><a href="#[58876ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DDNS_Update_IP
<LI><a href="#[56dcec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillCameraData
<LI><a href="#[58896dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillURLCGIData
<LI><a href="#[4e4a244]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetCheckedTime
<LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
<LI><a href="#[4e4c5bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendJpeg
<LI><a href="#[57e7c80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MPTestWriteFlash
<LI><a href="#[4e49ea0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;OnRequestBegin
<LI><a href="#[582d194]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PopMsgNode
<LI><a href="#[57e7c0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ProcessUpdate
<LI><a href="#[582d124]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PushMsgNode
<LI><a href="#[56dc360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SaveJpeg
<LI><a href="#[4e4a1d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetCheckedTime
<LI><a href="#[58897c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;URLCGI_HTTPCResponse
<LI><a href="#[71ed618]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBRead
<LI><a href="#[71ecfd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBWrite
<LI><a href="#[4def390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
<LI><a href="#[4eaa630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__WriteFlashMemory
<LI><a href="#[8031cc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_softqueue_event
<LI><a href="#[5ad0ae4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capture_and_email_picture
<LI><a href="#[7843c6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_basic_response
<LI><a href="#[7843b10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_digest_response
<LI><a href="#[7ff7ce8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_frame_heap
<LI><a href="#[4eab8f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;del_auth_id
<LI><a href="#[780feec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;deliver_frame
<LI><a href="#[780fbc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exchange_frame
<LI><a href="#[7ff9720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exchanger_read
<LI><a href="#[72233bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiUnLock
<LI><a href="#[71ed3d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;freshWlanRequest
<LI><a href="#[765d568]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsIORead
<LI><a href="#[765d64c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsIOWrite
<LI><a href="#[71ed450]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getIPInfo
<LI><a href="#[49dbc10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getMem
<LI><a href="#[4f75c1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_current_rovio_state
<LI><a href="#[780ff60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_next_frame
<LI><a href="#[4fc24d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_report
<LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
<LI><a href="#[558f88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_Write
<LI><a href="#[71ed4c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;netstatRequest
<LI><a href="#[80352cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_event
<LI><a href="#[780fc3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_frame
<LI><a href="#[4efdf34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdUnlock
<LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
<LI><a href="#[7ff7dd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ref_frame
<LI><a href="#[49dbab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;retMem
<LI><a href="#[5926ef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspSwapHttpTunnelFD
<LI><a href="#[5927468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelSendData
<LI><a href="#[4eabb34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_auth_id
<LI><a href="#[4f75ba0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_current_rovio_state
<LI><a href="#[8031d38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soft_queue_add
<LI><a href="#[7843b8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[8034124]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sq_run
<LI><a href="#[71ed6f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;statusReply
<LI><a href="#[803350c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strip_events
<LI><a href="#[71ecf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;systemRequest
<LI><a href="#[4def318]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
<LI><a href="#[7ff7e40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;unref_frame
<LI><a href="#[755fb24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauNotificationGet
<LI><a href="#[71ed534]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_getPPP
<LI><a href="#[4ba2ea0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_write
<LI><a href="#[5456e80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerAck
<LI><a href="#[5456f70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerNotify
<LI><a href="#[5456ef8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerWait
<LI><a href="#[544d220]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoClearContent
<LI><a href="#[5456a08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoDrawContent
<LI><a href="#[544d298]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoSetContent
<LI><a href="#[54564dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegUnlock
<LI><a href="#[537db54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmUnlock
<LI><a href="#[53559c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmUnlock1
<LI><a href="#[54567a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4Unlock
<LI><a href="#[54acefc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decPrepare
<LI><a href="#[4db4d10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encGetQuality
<LI><a href="#[54ace84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encSetBitrate
<LI><a href="#[54acca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encSetFormat
<LI><a href="#[54acd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encSetFramerate
<LI><a href="#[54acd18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encSetQuality
<LI><a href="#[4db5030]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_change_enable
<LI><a href="#[4d87408]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_entry
<LI><a href="#[4db50b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_getspeed
<LI><a href="#[4db5138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_write
<LI><a href="#[558f5b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableJPEGEncoder
<LI><a href="#[558f6ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableMP4Encoder
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[796facc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reconfig_receiver
<LI><a href="#[4def2a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_set_network_ip
<LI><a href="#[79b089c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_set_wireless_config
<LI><a href="#[71ecc40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_wait_network_ip
</UL><P><STRONG><a name="[4c2c218]"></a>cyg_mutex_release</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2c19c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::release()
</UL><P><STRONG><a name="[4c2c128]"></a>cyg_cond_init</STRONG> (ARM, 12 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c098]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::Cyg_Condition_Variable(Cyg_Mutex&)
</UL><BR>[Called By]<UL><LI><a href="#[4d32200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_add_card
<LI><a href="#[5d51138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_init
<LI><a href="#[51b5844]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_fw
<LI><a href="#[9add514]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipelib_init
<LI><a href="#[9add5f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipelib_init0
<LI><a href="#[5887584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;URLCGI_HTTPC_Init
<LI><a href="#[780fcac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_exchanger
<LI><a href="#[8031f80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_soft_queue
<LI><a href="#[4a5531c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdInit
<LI><a href="#[59274e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelCreate
<LI><a href="#[75eec78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_cond_init
<LI><a href="#[5457a5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerInit
<LI><a href="#[500752c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_run
</UL><P><STRONG><a name="[4c2c020]"></a>cyg_cond_destroy</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2bf98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::~Cyg_Condition_Variable()
</UL><BR>[Called By]<UL><LI><a href="#[5887c20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;URLCGI_DelFD
<LI><a href="#[59266a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelDelete
</UL><P><STRONG><a name="[4c2bf24]"></a>cyg_cond_wait</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2be8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::wait_inner(Cyg_Mutex*)
</UL><BR>[Called By]<UL><LI><a href="#[5d513f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_write
<LI><a href="#[5d51380]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_read
<LI><a href="#[5d51294]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_get_config
<LI><a href="#[9ade690]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_write
<LI><a href="#[9ade620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_read
<LI><a href="#[58897c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;URLCGI_HTTPCResponse
<LI><a href="#[780ff60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_next_frame
<LI><a href="#[5926ef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspSwapHttpTunnelFD
<LI><a href="#[75ee858]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_cond_wait
<LI><a href="#[5456ef8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerWait
</UL><P><STRONG><a name="[4c2be18]"></a>cyg_cond_signal</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2bd90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::signal()
</UL><BR>[Called By]<UL><LI><a href="#[5d51294]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_get_config
<LI><a href="#[5d51050]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_rcv_char
<LI><a href="#[5d50f5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_data_rcv_done
<LI><a href="#[58896dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillURLCGIData
<LI><a href="#[780fbc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exchange_frame
<LI><a href="#[4efdf34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdUnlock
<LI><a href="#[5927468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelSendData
<LI><a href="#[8031d38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soft_queue_add
<LI><a href="#[75eeb14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_cond_signal
<LI><a href="#[796facc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reconfig_receiver
<LI><a href="#[7969b0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
</UL><P><STRONG><a name="[4c2bd18]"></a>cyg_cond_broadcast</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2bc8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::broadcast()
</UL><BR>[Called By]<UL><LI><a href="#[51b626c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_remove_card
<LI><a href="#[5d510c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_xmt_char
<LI><a href="#[5d50e68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_data_xmt_done
<LI><a href="#[51b5138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_event
<LI><a href="#[9ade690]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_write
<LI><a href="#[9ade620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_read
<LI><a href="#[9ade53c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_get_config
<LI><a href="#[75b4e58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_cond_broadcast
<LI><a href="#[5456e80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerAck
</UL><P><STRONG><a name="[4c2bc14]"></a>cyg_cond_timed_wait</STRONG> (ARM, 16 bytes, Stack size 0 bytes, kapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2bb7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::wait_inner(Cyg_Mutex*, unsigned long long)
</UL><BR>[Called By]<UL><LI><a href="#[9ade690]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_write
<LI><a href="#[9ade620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_read
<LI><a href="#[4eff19c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdRun
<LI><a href="#[71ecc40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_wait_network_ip
</UL><P><STRONG><a name="[4c2bb04]"></a>cyg_spinlock_init</STRONG> (ARM, 52 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c2ba88]"></a>cyg_spinlock_destroy</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c2ba10]"></a>cyg_spinlock_spin</STRONG> (ARM, 12 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c2b998]"></a>cyg_spinlock_clear</STRONG> (ARM, 12 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c2b920]"></a>cyg_spinlock_try</STRONG> (ARM, 28 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c2b8a8]"></a>cyg_spinlock_test</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c2b828]"></a>cyg_spinlock_spin_intsave</STRONG> (ARM, 40 bytes, Stack size 4 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4c2b7a8]"></a>cyg_spinlock_clear_intsave</STRONG> (ARM, 40 bytes, Stack size 4 bytes, kapi.o(.text), UNUSED)
<P><STRONG><a name="[4a55fa0]"></a>sprintf</STRONG> (ARM, 40 bytes, Stack size 24 bytes, sprintf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c78f58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL><BR>[Called By]<UL><LI><a href="#[51193f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyaddr
<LI><a href="#[52aac04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_version
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[5137d40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getnameinfo
<LI><a href="#[5db6480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;inet_ntop
<LI><a href="#[5137aa8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_inet_ntop
<LI><a href="#[52ab09c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_scan
<LI><a href="#[75ee8cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_create
<LI><a href="#[5137fe0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppattach
<LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
<LI><a href="#[9ac1f3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ip_ntoa
<LI><a href="#[8c3a778]">&lt&lt</a>&nbsp;&nbsp;&nbsp;method_name
<LI><a href="#[8c6ba5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapSendStatus
<LI><a href="#[4e4b3b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetHttp
<LI><a href="#[4e4b2cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetIP
<LI><a href="#[4e4c3e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetLog
<LI><a href="#[4e4c210]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetMyself
<LI><a href="#[4e4c19c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetUser
<LI><a href="#[4e4acc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetVNet
<LI><a href="#[4e4b754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetWlan
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4e4b428]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetHttp
<LI><a href="#[4e4b340]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetIP
<LI><a href="#[4e4baa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMotionDetect
<LI><a href="#[5887760]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Do_DNS
<LI><a href="#[56dcec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillCameraData
<LI><a href="#[5887994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Process
<LI><a href="#[7318604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_DumpCGI
<LI><a href="#[4e4af7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_GetFirmware
<LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[4e4ae94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_RtspTunnel
<LI><a href="#[55374e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendRedirectRequest
<LI><a href="#[772e194]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_WebFile
<LI><a href="#[4e49f14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MctestThread
<LI><a href="#[4e4cab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanHostSleepCfg
<LI><a href="#[734d334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanHostWakeUpCfg
<LI><a href="#[5927c58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_config
<LI><a href="#[5a66654]">&lt&lt</a>&nbsp;&nbsp;&nbsp;buildTime
<LI><a href="#[77e76b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_udp_endpoint
<LI><a href="#[5a67d20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;createMailData
<LI><a href="#[784465c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_nonce
<LI><a href="#[4fe1a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drive_rovio_manually
<LI><a href="#[5a665e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;encodeSubject
<LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
<LI><a href="#[7a3a970]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gen_ssdp_pkt
<LI><a href="#[7a3b494]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gen_uuid
<LI><a href="#[7a37d28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_send_subscribe
<LI><a href="#[4fe1984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_mcu_status
<LI><a href="#[4fe15c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_ns_build_info
<LI><a href="#[4fe1730]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_ns_version
<LI><a href="#[4fc24d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_report
<LI><a href="#[4fe1b5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_tuning_parameters
<LI><a href="#[80eb59c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_DESCRIBE
<LI><a href="#[80eb4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_PLAY
<LI><a href="#[80eb528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_SETUP
<LI><a href="#[59af4c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetDocumentBasedPath
<LI><a href="#[4e4d254]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpIP2String
<LI><a href="#[4deeff0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpLong2String
<LI><a href="#[4e4c6a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
<LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
<LI><a href="#[4eaa904]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetWlan
<LI><a href="#[77abff4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_get
<LI><a href="#[808da74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;live_get_sdp
<LI><a href="#[889f6b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lname_to_sname
<LI><a href="#[784492c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;md5_hash
<LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
<LI><a href="#[4fc22ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_stop_and_save
<LI><a href="#[5ad0bec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;print_labeled_dense_waypoints
<LI><a href="#[78437f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;random_id
<LI><a href="#[7a3abf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_desc
<LI><a href="#[7a391f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_serv_xml
<LI><a href="#[59274e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelCreate
<LI><a href="#[80ea84c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_interleave_setup
<LI><a href="#[80ea7d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_udp_setup
<LI><a href="#[4fe1bd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_tuning_parameters
<LI><a href="#[7a3a4f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soap_invoke
<LI><a href="#[7843b8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[7a3b248]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_adv_srch
<LI><a href="#[7a3b418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_send_advertisement
<LI><a href="#[81193d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_send_pmsg
<LI><a href="#[4fe19f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;test_rovio_hardware
<LI><a href="#[4a56080]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsOnboardTestHandler
<LI><a href="#[811935c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;write_access_log
<LI><a href="#[4dee8b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_set_network_adhoc
<LI><a href="#[4dee934]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_set_network_managed
</UL><P><STRONG><a name="[4a55eb4]"></a>strcmp</STRONG> (ARM, 208 bytes, Stack size 24 bytes, strcmp.o(.text))
<BR>[Called By]<UL><LI><a href="#[5081190]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Fileio_Init_Class::Cyg_Fileio_Init_Class()
<LI><a href="#[5081124]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mount
<LI><a href="#[50810b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;umount
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[51191b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getservbyname
<LI><a href="#[5d87ad8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getservbyport
<LI><a href="#[5da86ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_nametoindex
<LI><a href="#[7ad568c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifunit
<LI><a href="#[7ace520]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_withname
<LI><a href="#[7ad55b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifioctl
<LI><a href="#[9ac1e48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifproxyarp
<LI><a href="#[5d87ca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getprotobyname
<LI><a href="#[8794b38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_ip_addr
<LI><a href="#[874a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat
<LI><a href="#[8c976e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat_send
<LI><a href="#[5537d20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AppendXMLArray
<LI><a href="#[4e4c0b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_DelUser
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4e4c288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetDDNS
<LI><a href="#[4e4bee0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetLogo
<LI><a href="#[4e4b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMail
<LI><a href="#[4e4aa7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetPPP
<LI><a href="#[4e4c128]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUser
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
<LI><a href="#[57e7c0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ProcessUpdate
<LI><a href="#[55376b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReturnTypeEnd
<LI><a href="#[778712c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_mime_type
<LI><a href="#[59af808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;auth_required
<LI><a href="#[79b082c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bf_fopen
<LI><a href="#[7843c6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_basic_response
<LI><a href="#[7843b10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_digest_response
<LI><a href="#[808c6e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_to_stream
<LI><a href="#[4eab8f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;del_auth_id
<LI><a href="#[9c5c970]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_get_type
<LI><a href="#[4a039cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;er_find_thread
<LI><a href="#[732b1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ffSearch
<LI><a href="#[9b600e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_fileEx
<LI><a href="#[7a39184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_port_param
<LI><a href="#[7a37b78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_recv_notify
<LI><a href="#[71ed450]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getIPInfo
<LI><a href="#[7a37a24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_cmd
<LI><a href="#[772e120]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_mime_type
<LI><a href="#[80ea8c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_session
<LI><a href="#[4eabc1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpAuthGetUser
<LI><a href="#[56dbcbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDisconnect
<LI><a href="#[4def5c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[55371e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpIsRegisterEmbedFunEx
<LI><a href="#[4e4d7c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpRegisterEmbedFunEx
<LI><a href="#[4eaba44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlAuthUser
<LI><a href="#[4eaaae0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetWlan
<LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
<LI><a href="#[839b8cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell_init_ioctl_numbers
<LI><a href="#[5ad1254]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_find_path
<LI><a href="#[4a03868]">&lt&lt</a>&nbsp;&nbsp;&nbsp;period_find_thread
<LI><a href="#[5926928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelSearch
<LI><a href="#[4eabb34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_auth_id
<LI><a href="#[889f644]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sname_compare
<LI><a href="#[7a3b248]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_adv_srch
<LI><a href="#[4a55f20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsAudioLoopbackTestHandler
<LI><a href="#[4a55b74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsGpioTestHandler
<LI><a href="#[4a55c5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsSuspendTestHandler
<LI><a href="#[4a54a54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsUartTestHandler
<LI><a href="#[7a379b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_wait_start
<LI><a href="#[71ed684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_setPPP
<LI><a href="#[544ece8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoReplaceKeyWord
<LI><a href="#[7966ba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_get_blob
<LI><a href="#[9c67c68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_auth_alg
<LI><a href="#[9c62450]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_cipher
<LI><a href="#[9c67f60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_key_mgmt
<LI><a href="#[9c6805c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_proto
<LI><a href="#[79b05f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read
<LI><a href="#[79b2044]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_blob
<LI><a href="#[79b20c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_network
<LI><a href="#[9c5c598]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_remove_blob
<LI><a href="#[79b0078]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_set
<LI><a href="#[8312a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_interface_status
<LI><a href="#[7968c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_ssid
<LI><a href="#[79733ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface2
<LI><a href="#[7969a1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_initiate_eapol
<LI><a href="#[79686f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configuration
<LI><a href="#[796979c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_auth_timeout
<LI><a href="#[7976e14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan
<LI><a href="#[796f598]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_driver
</UL><P><STRONG><a name="[4c2de40]"></a>Cyg_Counter::rem_alarm(Cyg_Alarm*)</STRONG> (ARM, 156 bytes, Stack size 16 bytes, clock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c2decc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_disable
<LI><a href="#[4c2e22c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::~Cyg_Alarm()
<LI><a href="#[4c2e130]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::initialize(unsigned long long, unsigned long long)
<LI><a href="#[4c2d068]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::wait(unsigned long long)
<LI><a href="#[4c2c7bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::wait(unsigned int, unsigned char, unsigned long long)
<LI><a href="#[4c2da8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::get(unsigned long long)
<LI><a href="#[4c2d6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::put(void*, unsigned long long)
<LI><a href="#[4c2bb7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::wait_inner(Cyg_Mutex*, unsigned long long)
<LI><a href="#[4c30ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
<LI><a href="#[4c30c78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::reinitialize()
<LI><a href="#[50253e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::counted_sleep(unsigned long long)
<LI><a href="#[4c30df4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::kill()
<LI><a href="#[4c30594]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::delay(unsigned long long)
<LI><a href="#[5cef360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::alloc(unsigned long long)
<LI><a href="#[5cef898]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::alloc(int, unsigned long long)
</UL><P><STRONG><a name="[4c2ebf4]"></a>Cyg_Counter::Cyg_Counter(unsigned int)</STRONG> (ARM, 80 bytes, Stack size 8 bytes, clock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c2ec70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_counter_create
</UL><P><STRONG><a name="[4c2eb00]"></a>Cyg_Counter::~Cyg_Counter()</STRONG> (ARM, 100 bytes, Stack size 8 bytes, clock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c8d848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL><BR>[Called By]<UL><LI><a href="#[4c2eb7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_counter_delete
</UL><P><STRONG><a name="[4c8d7c8]"></a>Cyg_Alarm::synchronize()</STRONG> (ARM, 184 bytes, Stack size 24 bytes, clock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[4c8d73c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::add_alarm(Cyg_Alarm*)
<LI><a href="#[4c2df44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::enable()
</UL><P><STRONG><a name="[4c8d73c]"></a>Cyg_Counter::add_alarm(Cyg_Alarm*)</STRONG> (ARM, 248 bytes, Stack size 16 bytes, clock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c8d7c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::synchronize()
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c2e910]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::tick(unsigned int)
<LI><a href="#[4c2e130]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::initialize(unsigned long long, unsigned long long)
<LI><a href="#[4c2df44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::enable()
</UL><P><STRONG><a name="[4c2e910]"></a>Cyg_Counter::tick(unsigned int)</STRONG> (ARM, 384 bytes, Stack size 40 bytes, clock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c8d73c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::add_alarm(Cyg_Alarm*)
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c2e98c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_counter_tick
<LI><a href="#[4c2e894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_counter_multi_tick
<LI><a href="#[4c8d4f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_RealTimeClock::dsr(unsigned int, unsigned int, unsigned int)
</UL><P><STRONG><a name="[4c2e788]"></a>Cyg_Clock::Cyg_Clock(Cyg_Clock::cyg_resolution)</STRONG> (ARM, 80 bytes, Stack size 16 bytes, clock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c2e81c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_clock_create
</UL><P><STRONG><a name="[4c2e698]"></a>Cyg_Clock::~Cyg_Clock()</STRONG> (ARM, 100 bytes, Stack size 8 bytes, clock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c8d848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL><BR>[Called By]<UL><LI><a href="#[4c2e710]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_clock_delete
</UL><P><STRONG><a name="[4c8d694]"></a>Cyg_Clock::get_other_to_clock_converter(unsigned long long, Cyg_Clock::converter*)</STRONG> (ARM, 80 bytes, Stack size 48 bytes, clock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c8e9b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;construct_converter(Cyg_Clock::converter*, unsigned long long, unsigned long long, unsigned long long, unsigned long long)
</UL><BR>[Called By]<UL><LI><a href="#[4ce783c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_timeval_to_ticks
</UL><P><STRONG><a name="[4c8d5ec]"></a>Cyg_Clock::get_clock_to_other_converter(unsigned long long, Cyg_Clock::converter*)</STRONG> (ARM, 76 bytes, Stack size 48 bytes, clock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c8e9b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;construct_converter(Cyg_Clock::converter*, unsigned long long, unsigned long long, unsigned long long, unsigned long long)
</UL><P><STRONG><a name="[4c2e31c]"></a>Cyg_Alarm::Cyg_Alarm(Cyg_Counter*, void (*)(Cyg_Alarm*, unsigned int), unsigned int)</STRONG> (ARM, 104 bytes, Stack size 16 bytes, clock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c2e3b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_create
<LI><a href="#[4c30fd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::Cyg_Thread(unsigned int, void (*)(unsigned int), unsigned int, char*, unsigned int, unsigned int)
</UL><P><STRONG><a name="[4c8d574]"></a>Cyg_Alarm::Cyg_Alarm()</STRONG> (ARM, 40 bytes, Stack size 8 bytes, clock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL><P><STRONG><a name="[4c2e22c]"></a>Cyg_Alarm::~Cyg_Alarm()</STRONG> (ARM, 88 bytes, Stack size 16 bytes, clock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2de40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::rem_alarm(Cyg_Alarm*)
<LI><a href="#[4c8d848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL><BR>[Called By]<UL><LI><a href="#[4c2e2a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_delete
<LI><a href="#[4c30d78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::~Cyg_Thread()
</UL><P><STRONG><a name="[4c2e130]"></a>Cyg_Alarm::initialize(unsigned long long, unsigned long long)</STRONG> (ARM, 76 bytes, Stack size 24 bytes, clock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2de40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::rem_alarm(Cyg_Alarm*)
<LI><a href="#[4c8d73c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::add_alarm(Cyg_Alarm*)
</UL><BR>[Called By]<UL><LI><a href="#[4c2e1b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_initialize
<LI><a href="#[4c2d068]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::wait(unsigned long long)
<LI><a href="#[4c2c7bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::wait(unsigned int, unsigned char, unsigned long long)
<LI><a href="#[4c2da8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::get(unsigned long long)
<LI><a href="#[4c2d6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::put(void*, unsigned long long)
<LI><a href="#[4c2bb7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::wait_inner(Cyg_Mutex*, unsigned long long)
<LI><a href="#[50253e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::counted_sleep(unsigned long long)
<LI><a href="#[4c30594]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::delay(unsigned long long)
<LI><a href="#[5cef360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::alloc(unsigned long long)
<LI><a href="#[5cef898]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::alloc(int, unsigned long long)
</UL><P><STRONG><a name="[4c2df44]"></a>Cyg_Alarm::enable()</STRONG> (ARM, 52 bytes, Stack size 8 bytes, clock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c8d7c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::synchronize()
<LI><a href="#[4c8d73c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::add_alarm(Cyg_Alarm*)
</UL><BR>[Called By]<UL><LI><a href="#[4c2dfc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_enable
</UL><P><STRONG><a name="[4c2e038]"></a>Cyg_Alarm::get_times(unsigned long long*, unsigned long long*)</STRONG> (ARM, 92 bytes, Stack size 8 bytes, clock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c2e0b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_get_times
</UL><P><STRONG><a name="[4c8d4f0]"></a>static Cyg_RealTimeClock::dsr(unsigned int, unsigned int, unsigned int)</STRONG> (ARM, 24 bytes, Stack size 8 bytes, clock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e910]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::tick(unsigned int)
<LI><a href="#[4c8d3e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::timeslice()
</UL><BR>[Address Reference Count : 1]<UL><LI> clock.o(.text)
</UL><P><STRONG><a name="[4c8d35c]"></a>static Cyg_RealTimeClock::isr(unsigned int, unsigned int)</STRONG> (ARM, 32 bytes, Stack size 8 bytes, clock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c8d2e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_clock_reset
<LI><a href="#[4c2eeec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::acknowledge_interrupt(unsigned int)
</UL><BR>[Address Reference Count : 1]<UL><LI> clock.o(.text)
</UL><P><STRONG><a name="[4c8d268]"></a>Cyg_RealTimeClock::Cyg_RealTimeClock()</STRONG> (ARM, 168 bytes, Stack size 24 bytes, clock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[4c2fa48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Interrupt::Cyg_Interrupt(unsigned int, int, unsigned int, unsigned int (*)(unsigned int, unsigned int), void (*)(unsigned int, unsigned int, unsigned int))
<LI><a href="#[4c8d1ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_clock_initialize
<LI><a href="#[4c2f854]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Interrupt::attach()
<LI><a href="#[4c2f114]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::unmask_interrupt(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c8db84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
</UL><P><STRONG><a name="[4bba590]"></a>open</STRONG> (ARM, 396 bytes, Stack size 32 bytes, file.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bfe5f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fd_alloc
<LI><a href="#[4caa024]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_alloc
<LI><a href="#[4bfe960]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fd_free
<LI><a href="#[4ca9fb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtab_lookup
<LI><a href="#[4ca9f3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_free
<LI><a href="#[4ca9ecc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_lock
<LI><a href="#[4ca9e58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_unlock
<LI><a href="#[4bfe57c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fd_assign
</UL><BR>[Called By]<UL><LI><a href="#[4ca9dec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;creat
<LI><a href="#[5084518]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_libc_stdio_find_filename
<LI><a href="#[75ee8cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_create
<LI><a href="#[83df7c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fopen
<LI><a href="#[4bba444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hi_uart_read
<LI><a href="#[4bba5fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hi_uart_write
<LI><a href="#[891eee4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_file
<LI><a href="#[4a55a8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_main
</UL><P><STRONG><a name="[4ca9dec]"></a>creat</STRONG> (ARM, 12 bytes, Stack size 0 bytes, file.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bba590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;open
</UL><P><STRONG><a name="[4ca9d80]"></a>unlink</STRONG> (ARM, 180 bytes, Stack size 24 bytes, file.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ca9fb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtab_lookup
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4ca9ecc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_lock
<LI><a href="#[4ca9e58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_unlock
</UL><P><STRONG><a name="[4ca9d14]"></a>mkdir</STRONG> (ARM, 180 bytes, Stack size 24 bytes, file.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ca9fb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtab_lookup
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4ca9ecc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_lock
<LI><a href="#[4ca9e58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_unlock
</UL><P><STRONG><a name="[4ca9ca8]"></a>rmdir</STRONG> (ARM, 180 bytes, Stack size 24 bytes, file.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ca9fb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtab_lookup
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4ca9ecc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_lock
<LI><a href="#[4ca9e58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_unlock
</UL><P><STRONG><a name="[4ca9c3c]"></a>rename</STRONG> (ARM, 296 bytes, Stack size 40 bytes, file.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ca9fb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtab_lookup
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4ca9ecc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_lock
<LI><a href="#[4ca9e58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_unlock
</UL><P><STRONG><a name="[4ca9bd0]"></a>link</STRONG> (ARM, 300 bytes, Stack size 48 bytes, file.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ca9fb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtab_lookup
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4ca9ecc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_lock
<LI><a href="#[4ca9e58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_unlock
</UL><P><STRONG><a name="[4ca9b64]"></a>chdir</STRONG> (ARM, 692 bytes, Stack size 40 bytes, file.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ca9fb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtab_lookup
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4ca9ecc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_lock
<LI><a href="#[4ca9e58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_unlock
</UL><BR>[Called By]<UL><LI><a href="#[5081190]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Fileio_Init_Class::Cyg_Fileio_Init_Class()
</UL><P><STRONG><a name="[4ca9af8]"></a>stat</STRONG> (ARM, 188 bytes, Stack size 24 bytes, file.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ca9fb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtab_lookup
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4ca9ecc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_lock
<LI><a href="#[4ca9e58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4ca9a1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;access
</UL><P><STRONG><a name="[4ca9a88]"></a>pathconf</STRONG> (ARM, 220 bytes, Stack size 40 bytes, file.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ca9fb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtab_lookup
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4ca9ecc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_lock
<LI><a href="#[4ca9e58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_unlock
</UL><P><STRONG><a name="[4ca9a1c]"></a>access</STRONG> (ARM, 116 bytes, Stack size 48 bytes, file.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ca9af8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;stat
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><P><STRONG><a name="[4ca99b0]"></a>getcwd</STRONG> (ARM, 256 bytes, Stack size 40 bytes, file.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4ca9ecc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_lock
<LI><a href="#[4ca9e58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_unlock
</UL><P><STRONG><a name="[4ce783c]"></a>cyg_timeval_to_ticks</STRONG> (ARM, 200 bytes, Stack size 24 bytes, select.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c8d694]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Clock::get_other_to_clock_converter(unsigned long long, Cyg_Clock::converter*)
<LI><a href="#[4ce77a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Clock::convert(unsigned long long, Cyg_Clock::converter*)
</UL><BR>[Called By]<UL><LI><a href="#[4cb83cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pselect(int, fd_set*, fd_set*, fd_set*, timeval*, const int*)
</UL><P><STRONG><a name="[4bba3d8]"></a>select</STRONG> (ARM, 48 bytes, Stack size 16 bytes, select.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4cb83cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_pselect(int, fd_set*, fd_set*, fd_set*, timeval*, const int*)
</UL><BR>[Called By]<UL><LI><a href="#[511a010]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_recv
<LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[4e4a410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SelectThread
<LI><a href="#[7700190]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WirelessTest_Test_Entry
<LI><a href="#[7967508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_run
<LI><a href="#[9be35f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_wait_for_read_sock
<LI><a href="#[8031b60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;event_loop
<LI><a href="#[4bba444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hi_uart_read
<LI><a href="#[73180f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpdStartEx3
<LI><a href="#[5859b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mc_rx_socket
<LI><a href="#[5a67f98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;postBin
<LI><a href="#[592642c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspRtyRead
<LI><a href="#[77adc4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;safe_close
<LI><a href="#[5a668cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcpConnectHost
<LI><a href="#[75f0ad4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_getc
<LI><a href="#[5a6636c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;timeoutRead
<LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
<LI><a href="#[8406d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_receive
</UL><P><STRONG><a name="[4ce7738]"></a>cyg_selinit</STRONG> (ARM, 16 bytes, Stack size 0 bytes, select.o(.text))
<BR>[Called By]<UL><LI><a href="#[5d51138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_init
<LI><a href="#[9add514]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipelib_init
<LI><a href="#[9add5f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipelib_init0
<LI><a href="#[8b1c34c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_socket
<LI><a href="#[8b1cba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_accept
</UL><P><STRONG><a name="[4ce76c4]"></a>cyg_selrecord</STRONG> (ARM, 20 bytes, Stack size 0 bytes, select.o(.text))
<BR>[Called By]<UL><LI><a href="#[5d5130c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_select
<LI><a href="#[9ade5b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_select
<LI><a href="#[8b1c65c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_select
</UL><P><STRONG><a name="[4ce7650]"></a>cyg_selwakeup</STRONG> (ARM, 92 bytes, Stack size 8 bytes, select.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2bc8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::broadcast()
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[5d510c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_xmt_char
<LI><a href="#[5d51050]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_rcv_char
<LI><a href="#[5d50f5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_data_rcv_done
<LI><a href="#[5d50e68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;serial_data_xmt_done
<LI><a href="#[9ade690]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_write
<LI><a href="#[9ade620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_read
<LI><a href="#[9ade53c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_get_config
<LI><a href="#[863ebd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;selwakeup
</UL><P><STRONG><a name="[4ced504]"></a>do_bootp</STRONG> (ARM, 1576 bytes, Stack size 808 bytes, bootp_support.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced48c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_route_reinit
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[4ced344]">&gt&gt</a>&nbsp;&nbsp;&nbsp;setsockopt
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4ced1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memset
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4ced118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bind
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[4cecfd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sendto
<LI><a href="#[4cecf64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;recvfrom
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><P><STRONG><a name="[4ceceec]"></a>get_bootp_option</STRONG> (ARM, 420 bytes, Stack size 24 bytes, bootp_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ceceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_bootp_option
</UL><BR>[Called By]<UL><LI><a href="#[4ceceec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_bootp_option
<LI><a href="#[4a55754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;show_bootp
<LI><a href="#[4a556e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_net
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[4def22c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetPubIPInfo
<LI><a href="#[50da3b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_lease
</UL><P><STRONG><a name="[4a55754]"></a>show_bootp</STRONG> (ARM, 1936 bytes, Stack size 304 bytes, bootp_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4cece7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_ntoa
<LI><a href="#[4ceceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_bootp_option
</UL><BR>[Called By]<UL><LI><a href="#[4d0cebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_all_network_interfaces
<LI><a href="#[4dee770]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetIP
<LI><a href="#[4e4da90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetNullIP
<LI><a href="#[4dee848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetRandomIP
</UL><P><STRONG><a name="[4a556e4]"></a>init_net</STRONG> (ARM, 1568 bytes, Stack size 416 bytes, bootp_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[4ced344]">&gt&gt</a>&nbsp;&nbsp;&nbsp;setsockopt
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4ceceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_bootp_option
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4cece7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_ntoa
<LI><a href="#[4cece08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;setdomainname
<LI><a href="#[4cecd90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_dns_res_init
</UL><BR>[Called By]<UL><LI><a href="#[4d0cebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_all_network_interfaces
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[50fcba4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dhcp_bind
<LI><a href="#[4dee770]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetIP
<LI><a href="#[4e4da90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetNullIP
<LI><a href="#[4dee848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetRandomIP
</UL><P><STRONG><a name="[4d0cfac]"></a>init_loopback_interface</STRONG> (ARM, 772 bytes, Stack size 144 bytes, network_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[4ced344]">&gt&gt</a>&nbsp;&nbsp;&nbsp;setsockopt
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4cece7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_ntoa
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[4d0cebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_all_network_interfaces
<LI><a href="#[50fca4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dhcp_mgt_entry
<LI><a href="#[4dee770]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetIP
<LI><a href="#[4e4da90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetNullIP
<LI><a href="#[4dee848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetRandomIP
</UL><P><STRONG><a name="[4a557c4]"></a>build_bootp_record</STRONG> (ARM, 544 bytes, Stack size 96 bytes, network_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4d0cf3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_addr
</UL><BR>[Called By]<UL><LI><a href="#[4dee770]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetIP
<LI><a href="#[4e4da90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetNullIP
<LI><a href="#[4dee848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetRandomIP
</UL><P><STRONG><a name="[4d0cebc]"></a>init_all_network_interfaces</STRONG> (ARM, 484 bytes, Stack size 24 bytes, network_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[4d0cd6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55754]">&gt&gt</a>&nbsp;&nbsp;&nbsp;show_bootp
<LI><a href="#[4a556e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_net
<LI><a href="#[4d0cfac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_loopback_interface
<LI><a href="#[4d0ccec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dhcp_start_dhcp_mgt_thread
</UL><BR>[Called By]<UL><LI><a href="#[50fca4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dhcp_mgt_entry
<LI><a href="#[4dee770]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetIP
</UL><P><STRONG><a name="[4a54d2c]"></a>cyg_do_net_init</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tcpip_init.o(.text))
<BR>[Called By]<UL><LI><a href="#[4d1ee1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
<LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[4d3234c]"></a>initSDIO</STRONG> (ARM, 188 bytes, Stack size 24 bytes, w99702_ether.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4d32274]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printf
<LI><a href="#[4d32200]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_add_card
</UL><P><STRONG><a name="[4a54da0]"></a>force_net_dev_linked</STRONG> (ARM, 32 bytes, Stack size 0 bytes, w99702_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[5139b64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_netint
<LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[4a54ff0]"></a>IsWirelessConfigDone</STRONG> (ARM, 12 bytes, Stack size 0 bytes, w99702_ether.o(.text))
<BR>[Called By]<UL><LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[7531ee4]"></a>cyg_hal_diag_mangler_gdb_init</STRONG> (ARM, 84 bytes, Stack size 8 bytes, hal_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7533624]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__call_vv_CYGNUM_CALL_IF_SET_CONSOLE_COMM
</UL><P><STRONG><a name="[7531e60]"></a>cyg_hal_diag_mangler_null_init</STRONG> (ARM, 84 bytes, Stack size 8 bytes, hal_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7533624]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__call_vv_CYGNUM_CALL_IF_SET_CONSOLE_COMM
</UL><P><STRONG><a name="[4ba24d0]"></a>hal_if_diag_init</STRONG> (ARM, 32 bytes, Stack size 0 bytes, hal_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7533624]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__call_vv_CYGNUM_CALL_IF_SET_CONSOLE_COMM
</UL><BR>[Called By]<UL><LI><a href="#[4ba3010]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
</UL><P><STRONG><a name="[4ba2e24]"></a>hal_if_diag_write_char</STRONG> (ARM, 72 bytes, Stack size 8 bytes, hal_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7533b64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__call_COMM_IF_PUTC
<LI><a href="#[7531de8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_hal_user_break
</UL><BR>[Called By]<UL><LI><a href="#[4ba2f10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_write_char
<LI><a href="#[8595954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;haldiag_putc
</UL><P><STRONG><a name="[7531d6c]"></a>hal_if_diag_read_char</STRONG> (ARM, 172 bytes, Stack size 24 bytes, hal_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Called By]<UL><LI><a href="#[85958e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;haldiag_getc
</UL><P><STRONG><a name="[7531cfc]"></a>hal_if_init</STRONG> (ARM, 200 bytes, Stack size 16 bytes, hal_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7534184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_debug_comm
<LI><a href="#[7533f30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_console_comm
<LI><a href="#[7531c80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_hal_plf_comms_init
</UL><BR>[Called By]<UL><LI><a href="#[5094434]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hal_hardware_init
</UL><P><STRONG><a name="[4bfec70]"></a>cyg_error_get_errno_p</STRONG> (ARM, 28 bytes, Stack size 0 bytes, errno.o(.text))
<BR>[Called By]<UL><LI><a href="#[8571ec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[5d40aac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[508467c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[4bffcac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;readwritev(int, const CYG_IOVEC_TAG*, int, int)
<LI><a href="#[4bba4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4bfe8f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lseek
<LI><a href="#[4bfe888]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bfe81c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsync
<LI><a href="#[4bfe7ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fdatasync
<LI><a href="#[4bfe740]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fstat
<LI><a href="#[4bfe6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fpathconf
<LI><a href="#[4bfe664]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fcntl
<LI><a href="#[4bba590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;open
<LI><a href="#[4ca9d80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;unlink
<LI><a href="#[4ca9d14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mkdir
<LI><a href="#[4ca9ca8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rmdir
<LI><a href="#[4ca9c3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rename
<LI><a href="#[4ca9bd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;link
<LI><a href="#[4ca9b64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;chdir
<LI><a href="#[4ca9af8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;stat
<LI><a href="#[4ca9a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pathconf
<LI><a href="#[4ca9a1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;access
<LI><a href="#[4ca99b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getcwd
<LI><a href="#[4cb83cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pselect(int, fd_set*, fd_set*, fd_set*, timeval*, const int*)
<LI><a href="#[4ced504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_bootp
<LI><a href="#[4a556e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_net
<LI><a href="#[4d0cfac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_loopback_interface
<LI><a href="#[4c78f58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[4d0cb38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fputs
<LI><a href="#[4dee704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[5058248]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dup
<LI><a href="#[50581dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dup2
<LI><a href="#[5081124]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mount
<LI><a href="#[50810b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;umount
<LI><a href="#[4ced420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[50a2590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;accept
<LI><a href="#[4ced118]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bind
<LI><a href="#[50a2524]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[50a24b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getpeername
<LI><a href="#[7317a3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getsockname
<LI><a href="#[50a2444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getsockopt
<LI><a href="#[73179d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;listen
<LI><a href="#[50a23d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;recvmsg
<LI><a href="#[4cecf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;recvfrom
<LI><a href="#[50a2300]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendmsg
<LI><a href="#[4cecfd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendto
<LI><a href="#[4ced344]">&lt&lt</a>&nbsp;&nbsp;&nbsp;setsockopt
<LI><a href="#[50a2224]">&lt&lt</a>&nbsp;&nbsp;&nbsp;shutdown
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[7476728]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fflush
<LI><a href="#[5084518]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_libc_stdio_find_filename
<LI><a href="#[746a0dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::flush_output_unlocked()
<LI><a href="#[5c5906c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::refill_read_buffer()
<LI><a href="#[74523d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::write(const unsigned char*, unsigned int, unsigned int*)
<LI><a href="#[59c9928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strtoul
<LI><a href="#[7415ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_standard
<LI><a href="#[51191b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getservbyname
<LI><a href="#[5d87ad8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getservbyport
<LI><a href="#[5137a34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_indextoname
<LI><a href="#[5da86ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_nametoindex
<LI><a href="#[5da8630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_show_all_interfaces
<LI><a href="#[5db6480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;inet_ntop
<LI><a href="#[5137aa8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_inet_ntop
<LI><a href="#[9ac35b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_init
<LI><a href="#[9ac639c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dodefaultroute
<LI><a href="#[9ac33d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_cifaddr
<LI><a href="#[9ac2554]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_send_config
<LI><a href="#[9ac2370]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ccp_test
<LI><a href="#[9ac1fb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifaddr
<LI><a href="#[83dfd3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fopen_inner(int, Cyg_StdioStream::OpenMode, int, int)
<LI><a href="#[83df7c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fopen
<LI><a href="#[83df758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fdopen
<LI><a href="#[5c4982c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vsscanf
<LI><a href="#[8199614]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fwrite
<LI><a href="#[8603c20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_read
<LI><a href="#[5d87ca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getprotobyname
<LI><a href="#[5d87d14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getprotobynumber
<LI><a href="#[5d87c30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;inet_pton
<LI><a href="#[874a6d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_vfmtmsg
<LI><a href="#[8a87d34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[8a61cfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ungetc
<LI><a href="#[8a61c88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_strtod
<LI><a href="#[7686ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_LOCAL_Process
<LI><a href="#[7686d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Process
<LI><a href="#[4a5583c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownInterface
<LI><a href="#[577464c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FlushSocket
<LI><a href="#[5887994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Process
<LI><a href="#[4e4db00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InitNetInterface
<LI><a href="#[77ac6ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;My_Common_read
<LI><a href="#[77ac720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;My_Common_write
<LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
<LI><a href="#[4e4a410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SelectThread
<LI><a href="#[4dd624c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;clr_flag
<LI><a href="#[817fac4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;conn_write
<LI><a href="#[77e76b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_udp_endpoint
<LI><a href="#[8180324]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_accept
<LI><a href="#[770027c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_client_read
<LI><a href="#[77002f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_client_write
<LI><a href="#[81192f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_read
<LI><a href="#[7967508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_run
<LI><a href="#[7ff9720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exchanger_read
<LI><a href="#[7a37d28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_send_subscribe
<LI><a href="#[5a678b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getReplyAll
<LI><a href="#[77ac634]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_sock_request
<LI><a href="#[4eaa824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlScanAP
<LI><a href="#[7967ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_init
<LI><a href="#[5a64d6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailTalk
<LI><a href="#[836bc58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell_ioctl
<LI><a href="#[8401d08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[77ac320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_get
<LI><a href="#[5950b40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pushMail
<LI><a href="#[77ac390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_body
<LI><a href="#[77ac400]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_header
<LI><a href="#[7a3abf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_desc
<LI><a href="#[77ac470]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_flush
<LI><a href="#[7a391f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_serv_xml
<LI><a href="#[77e8878]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtcp_send
<LI><a href="#[592642c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspRtyRead
<LI><a href="#[77e73ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_rtp_packet
<LI><a href="#[891eee4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_file
<LI><a href="#[4dd61dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_flag
<LI><a href="#[8a61d68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::set_position(unsigned int, int)
<LI><a href="#[9be36ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;signal
<LI><a href="#[7a3a4f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soap_invoke
<LI><a href="#[8034124]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sq_run
<LI><a href="#[8180814]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_listen
<LI><a href="#[75f0ad4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_getc
<LI><a href="#[77e8d74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_rtcp_read
<LI><a href="#[77e8de8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_rtp_read
<LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
<LI><a href="#[8406d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_receive
<LI><a href="#[839b4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_scan_results
<LI><a href="#[8406fd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_pmksa
<LI><a href="#[8406c44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_send_oper_ifla
<LI><a href="#[9afb0e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_kernel_driver_wext_send_link_event
<LI><a href="#[79725a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_register_reconfig
</UL><P><STRONG><a name="[4c8d848]"></a>operator delete(void*)</STRONG> (ARM, 4 bytes, Stack size 0 bytes, delete.o(.text))
<BR>[Called By]<UL><LI><a href="#[4c2eb00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::~Cyg_Counter()
<LI><a href="#[4c2e698]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Clock::~Cyg_Clock()
<LI><a href="#[4c2e22c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::~Cyg_Alarm()
<LI><a href="#[4c2d270]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::~Cyg_Counting_Semaphore()
<LI><a href="#[4c2cb88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::~Cyg_Flag()
<LI><a href="#[4c2dc68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::~Cyg_Mbox()
<LI><a href="#[4c2c478]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::~Cyg_Mutex()
<LI><a href="#[4c2bf98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::~Cyg_Condition_Variable()
<LI><a href="#[4c2f950]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Interrupt::~Cyg_Interrupt()
<LI><a href="#[4c30d78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::~Cyg_Thread()
<LI><a href="#[5cef4e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::~Cyg_Mempool_Fixed()
<LI><a href="#[5cefa24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::~Cyg_Mempool_Variable()
<LI><a href="#[5025058]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_IdleThread::~Cyg_IdleThread()
<LI><a href="#[73eb0b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_CList_T<Cyg_Thread>::~Cyg_CList_T<Cyg_Thread>()
</UL><P><STRONG><a name="[7511280]"></a>operator delete[](void*)</STRONG> (ARM, 4 bytes, Stack size 0 bytes, delete.o(.text), UNUSED)
<P><STRONG><a name="[750a640]"></a>Cyg_ThreadQueue_Implementation::remove(Cyg_Thread*)</STRONG> (ARM, 116 bytes, Stack size 0 bytes, mlqueue.o(.text))
<BR>[Called By]<UL><LI><a href="#[750a1d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::add_thread(Cyg_Thread*)
<LI><a href="#[74eb464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
<LI><a href="#[4c30714]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::set_priority(int)
</UL><P><STRONG><a name="[750a5b4]"></a>Cyg_Scheduler_Implementation::Cyg_Scheduler_Implementation()</STRONG> (ARM, 112 bytes, Stack size 16 bytes, mlqueue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[750a4a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vecmap1c(void*, void*, int, void (*)(void*))
</UL><BR>[Called By]<UL><LI><a href="#[73eb960]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
</UL><P><STRONG><a name="[750a38c]"></a>Cyg_Scheduler_Implementation::schedule()</STRONG> (ARM, 36 bytes, Stack size 8 bytes, mlqueue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[750a318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_lsbindex
</UL><BR>[Called By]<UL><LI><a href="#[4c310dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
<LI><a href="#[73eb248]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::start_cpu()
<LI><a href="#[4c3126c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::start()
</UL><P><STRONG><a name="[750a270]"></a>static Cyg_Scheduler_Implementation::set_need_reschedule(Cyg_Thread*)</STRONG> (ARM, 52 bytes, Stack size 0 bytes, mlqueue.o(.text))
<BR>[Called By]<UL><LI><a href="#[4c30714]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::set_priority(int)
</UL><P><STRONG><a name="[750a1d0]"></a>Cyg_Scheduler_Implementation::add_thread(Cyg_Thread*)</STRONG> (ARM, 164 bytes, Stack size 20 bytes, mlqueue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[750a640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::remove(Cyg_Thread*)
</UL><BR>[Called By]<UL><LI><a href="#[74eb464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
<LI><a href="#[4c30bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::resume()
<LI><a href="#[5025250]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::force_resume()
<LI><a href="#[4c30df4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::kill()
<LI><a href="#[4c30714]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::set_priority(int)
</UL><P><STRONG><a name="[750a130]"></a>Cyg_Scheduler_Implementation::rem_thread(Cyg_Thread*)</STRONG> (ARM, 160 bytes, Stack size 8 bytes, mlqueue.o(.text))
<BR>[Called By]<UL><LI><a href="#[4c30ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
<LI><a href="#[74eb4e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[4c30cfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::suspend()
<LI><a href="#[4c30df4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::kill()
<LI><a href="#[4c30714]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::set_priority(int)
</UL><P><STRONG><a name="[750a08c]"></a>Cyg_Scheduler_Implementation::set_idle_thread(Cyg_Thread*, unsigned int)</STRONG> (ARM, 16 bytes, Stack size 0 bytes, mlqueue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30bfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::resume()
</UL><BR>[Called By]<UL><LI><a href="#[50250d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_IdleThread::Cyg_IdleThread()
</UL><P><STRONG><a name="[7509fe8]"></a>Cyg_Scheduler_Implementation::register_thread(Cyg_Thread*)</STRONG> (ARM, 4 bytes, Stack size 0 bytes, mlqueue.o(.text))
<BR>[Called By]<UL><LI><a href="#[4c30fd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::Cyg_Thread(unsigned int, void (*)(unsigned int), unsigned int, char*, unsigned int, unsigned int)
<LI><a href="#[4c30714]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::set_priority(int)
</UL><P><STRONG><a name="[7509f44]"></a>Cyg_Scheduler_Implementation::deregister_thread(Cyg_Thread*)</STRONG> (ARM, 4 bytes, Stack size 0 bytes, mlqueue.o(.text))
<BR>[Called By]<UL><LI><a href="#[4c30c78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::reinitialize()
<LI><a href="#[4c30d78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::~Cyg_Thread()
<LI><a href="#[4c30714]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::set_priority(int)
</UL><P><STRONG><a name="[7509eb4]"></a>Cyg_Scheduler_Implementation::unique(int)</STRONG> (ARM, 8 bytes, Stack size 0 bytes, mlqueue.o(.text), UNUSED)
<P><STRONG><a name="[7509e20]"></a>Cyg_Scheduler_Implementation::timeslice_cpu()</STRONG> (ARM, 100 bytes, Stack size 0 bytes, mlqueue.o(.text))
<BR>[Called By]<UL><LI><a href="#[4c8d3e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::timeslice()
<LI><a href="#[7509da0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_timeslice_cpu
</UL><P><STRONG><a name="[4c8d3e0]"></a>Cyg_Scheduler_Implementation::timeslice()</STRONG> (ARM, 24 bytes, Stack size 0 bytes, mlqueue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7509e20]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::timeslice_cpu()
</UL><BR>[Called By]<UL><LI><a href="#[4c8d4f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_RealTimeClock::dsr(unsigned int, unsigned int, unsigned int)
</UL><P><STRONG><a name="[7509da0]"></a>cyg_scheduler_timeslice_cpu</STRONG> (ARM, 8 bytes, Stack size 0 bytes, mlqueue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7509e20]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::timeslice_cpu()
</UL><P><STRONG><a name="[7509d10]"></a>Cyg_SchedThread_Implementation::Cyg_SchedThread_Implementation(unsigned int)</STRONG> (ARM, 48 bytes, Stack size 8 bytes, mlqueue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[73eb140]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_SchedThread::Cyg_SchedThread(Cyg_Thread*, unsigned int)
</UL><P><STRONG><a name="[4c30900]"></a>Cyg_SchedThread_Implementation::yield()</STRONG> (ARM, 116 bytes, Stack size 0 bytes, mlqueue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c30a1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_thread_yield
</UL><P><STRONG><a name="[7509c78]"></a>static Cyg_SchedThread_Implementation::rotate_queue(int)</STRONG> (ARM, 80 bytes, Stack size 0 bytes, mlqueue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><P><STRONG><a name="[7509be0]"></a>Cyg_SchedThread_Implementation::to_queue_head()</STRONG> (ARM, 164 bytes, Stack size 0 bytes, mlqueue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><P><STRONG><a name="[7509b44]"></a>Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)</STRONG> (ARM, 56 bytes, Stack size 0 bytes, mlqueue.o(.text))
<BR>[Called By]<UL><LI><a href="#[4c2d170]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::wait()
<LI><a href="#[4c2d068]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::wait(unsigned long long)
<LI><a href="#[4c2ca94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::setbits(unsigned int)
<LI><a href="#[4c2c8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::wait(unsigned int, unsigned char)
<LI><a href="#[4c2c7bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::wait(unsigned int, unsigned char, unsigned long long)
<LI><a href="#[4c2db7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::get()
<LI><a href="#[4c2da8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::get(unsigned long long)
<LI><a href="#[4c2d7c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::put(void*)
<LI><a href="#[4c2d6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::put(void*, unsigned long long)
<LI><a href="#[4c2c400]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2be8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::wait_inner(Cyg_Mutex*)
<LI><a href="#[4c2bb7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::wait_inner(Cyg_Mutex*, unsigned long long)
<LI><a href="#[4db51b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[4c30714]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::set_priority(int)
<LI><a href="#[5cef464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::alloc()
<LI><a href="#[5cef360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::alloc(unsigned long long)
<LI><a href="#[5cef9a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::alloc(int)
<LI><a href="#[5cef898]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::alloc(int, unsigned long long)
<LI><a href="#[5cef788]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::free(unsigned char*, int)
</UL><P><STRONG><a name="[7509ab4]"></a>Cyg_ThreadQueue_Implementation::dequeue()</STRONG> (ARM, 88 bytes, Stack size 4 bytes, mlqueue.o(.text))
<BR>[Called By]<UL><LI><a href="#[5d21a5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[4c2ce64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::post()
<LI><a href="#[4c2cb88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::~Cyg_Flag()
<LI><a href="#[4c2ca94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::setbits(unsigned int)
<LI><a href="#[4c2dc68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::~Cyg_Mbox()
<LI><a href="#[4c2d7c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::put(void*)
<LI><a href="#[4c2d6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::put(void*, unsigned long long)
<LI><a href="#[4c2d5e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::tryput(void*)
<LI><a href="#[4c2c290]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4c2c19c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::release()
<LI><a href="#[4c2bd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::signal()
<LI><a href="#[4c2bc8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::broadcast()
<LI><a href="#[4db51b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[5cef4e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::~Cyg_Mempool_Fixed()
<LI><a href="#[5cef254]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::free(unsigned char*)
<LI><a href="#[5cefa24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::~Cyg_Mempool_Variable()
<LI><a href="#[5cef788]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::free(unsigned char*, int)
<LI><a href="#[74baa30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mboxt2<void*, 10>::wakeup_putter()
</UL><P><STRONG><a name="[7509a24]"></a>Cyg_ThreadQueue_Implementation::highpri()</STRONG> (ARM, 16 bytes, Stack size 0 bytes, mlqueue.o(.text), UNUSED)
<P><STRONG><a name="[4c2d374]"></a>Cyg_Counting_Semaphore::Cyg_Counting_Semaphore(int)</STRONG> (ARM, 48 bytes, Stack size 8 bytes, cnt_sem.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c2d3fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_init
</UL><P><STRONG><a name="[4c2d270]"></a>Cyg_Counting_Semaphore::~Cyg_Counting_Semaphore()</STRONG> (ARM, 108 bytes, Stack size 8 bytes, cnt_sem.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c8d848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL><BR>[Called By]<UL><LI><a href="#[4c2d2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_destroy
</UL><P><STRONG><a name="[4c2d170]"></a>Cyg_Counting_Semaphore::wait()</STRONG> (ARM, 192 bytes, Stack size 40 bytes, cnt_sem.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74eb4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[7509b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
<LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
</UL><BR>[Called By]<UL><LI><a href="#[4c2d1f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_wait
</UL><P><STRONG><a name="[4c2d068]"></a>Cyg_Counting_Semaphore::wait(unsigned long long)</STRONG> (ARM, 296 bytes, Stack size 40 bytes, cnt_sem.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::initialize(unsigned long long, unsigned long long)
<LI><a href="#[74eb4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[7509b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
<LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
<LI><a href="#[4c2de40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::rem_alarm(Cyg_Alarm*)
</UL><BR>[Called By]<UL><LI><a href="#[4c2d0f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_timed_wait
</UL><P><STRONG><a name="[4c2cf64]"></a>Cyg_Counting_Semaphore::trywait()</STRONG> (ARM, 76 bytes, Stack size 8 bytes, cnt_sem.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c2cfec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_trywait
</UL><P><STRONG><a name="[4c2ce64]"></a>Cyg_Counting_Semaphore::post()</STRONG> (ARM, 100 bytes, Stack size 8 bytes, cnt_sem.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7509ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::dequeue()
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c2ceec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><P><STRONG><a name="[4c2cd64]"></a>Cyg_Counting_Semaphore::peek() const</STRONG> (ARM, 8 bytes, Stack size 0 bytes, cnt_sem.o(.text))
<BR>[Called By]<UL><LI><a href="#[4c2cdec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_peek
</UL><P><STRONG><a name="[4c2cc78]"></a>Cyg_Flag::Cyg_Flag(unsigned int)</STRONG> (ARM, 48 bytes, Stack size 8 bytes, flag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c2ccf0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_flag_init
</UL><P><STRONG><a name="[4c2cb88]"></a>Cyg_Flag::~Cyg_Flag()</STRONG> (ARM, 184 bytes, Stack size 24 bytes, flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7509ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::dequeue()
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[4c8d848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL><BR>[Called By]<UL><LI><a href="#[4c2cc00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_flag_destroy
</UL><P><STRONG><a name="[4c2c9a0]"></a>Cyg_Flag::maskbits(unsigned int)</STRONG> (ARM, 32 bytes, Stack size 0 bytes, flag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4c2ca1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_flag_maskbits
</UL><P><STRONG><a name="[4c2ca94]"></a>Cyg_Flag::setbits(unsigned int)</STRONG> (ARM, 240 bytes, Stack size 32 bytes, flag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7509ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::dequeue()
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
<LI><a href="#[7509b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4c2cb10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
</UL><P><STRONG><a name="[4c2c6cc]"></a>Cyg_Flag::poll(unsigned int, unsigned char)</STRONG> (ARM, 108 bytes, Stack size 8 bytes, flag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4c2c748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_flag_poll
<LI><a href="#[4c2c8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::wait(unsigned int, unsigned char)
<LI><a href="#[4c2c7bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::wait(unsigned int, unsigned char, unsigned long long)
</UL><P><STRONG><a name="[4c2c8b0]"></a>Cyg_Flag::wait(unsigned int, unsigned char)</STRONG> (ARM, 248 bytes, Stack size 48 bytes, flag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c6cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::poll(unsigned int, unsigned char)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[74eb4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[7509b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
<LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
</UL><BR>[Called By]<UL><LI><a href="#[4c2c92c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_flag_wait
</UL><P><STRONG><a name="[4c2c7bc]"></a>Cyg_Flag::wait(unsigned int, unsigned char, unsigned long long)</STRONG> (ARM, 372 bytes, Stack size 56 bytes, flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2c6cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::poll(unsigned int, unsigned char)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[4c2e130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::initialize(unsigned long long, unsigned long long)
<LI><a href="#[74eb4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[7509b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
<LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
<LI><a href="#[4c2de40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::rem_alarm(Cyg_Alarm*)
</UL><BR>[Called By]<UL><LI><a href="#[4c2c838]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_flag_timed_wait
</UL><P><STRONG><a name="[4c2dd54]"></a>Cyg_Mbox::Cyg_Mbox()</STRONG> (ARM, 52 bytes, Stack size 8 bytes, mbox.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c2ddcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mbox_create
</UL><P><STRONG><a name="[4c2dc68]"></a>Cyg_Mbox::~Cyg_Mbox()</STRONG> (ARM, 308 bytes, Stack size 32 bytes, mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7509ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::dequeue()
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[4c8d848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL><BR>[Called By]<UL><LI><a href="#[4c2dce0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mbox_delete
</UL><P><STRONG><a name="[4c2db7c]"></a>Cyg_Mbox::get()</STRONG> (ARM, 224 bytes, Stack size 24 bytes, mbox.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74baa30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mboxt2<void*, 10>::wakeup_putter()
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[74eb4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[7509b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
<LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
</UL><BR>[Called By]<UL><LI><a href="#[4c2dbf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mbox_get
</UL><P><STRONG><a name="[4c2da8c]"></a>Cyg_Mbox::get(unsigned long long)</STRONG> (ARM, 316 bytes, Stack size 32 bytes, mbox.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74baa30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mboxt2<void*, 10>::wakeup_putter()
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[4c2e130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::initialize(unsigned long long, unsigned long long)
<LI><a href="#[74eb4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[7509b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
<LI><a href="#[4c2de40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::rem_alarm(Cyg_Alarm*)
<LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
</UL><BR>[Called By]<UL><LI><a href="#[4c2db04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mbox_timed_get
</UL><P><STRONG><a name="[4c2d9a0]"></a>Cyg_Mbox::tryget()</STRONG> (ARM, 104 bytes, Stack size 16 bytes, mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74baa30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mboxt2<void*, 10>::wakeup_putter()
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4c2da18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mbox_tryget
</UL><P><STRONG><a name="[4c2d7c0]"></a>Cyg_Mbox::put(void*)</STRONG> (ARM, 268 bytes, Stack size 32 bytes, mbox.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74eb4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[7509b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
<LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
<LI><a href="#[7509ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::dequeue()
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4c2d838]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mbox_put
</UL><P><STRONG><a name="[4c2d6d0]"></a>Cyg_Mbox::put(void*, unsigned long long)</STRONG> (ARM, 360 bytes, Stack size 40 bytes, mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2e130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::initialize(unsigned long long, unsigned long long)
<LI><a href="#[74eb4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[7509b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
<LI><a href="#[4c2de40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::rem_alarm(Cyg_Alarm*)
<LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
<LI><a href="#[7509ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::dequeue()
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4c2d748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mbox_timed_put
</UL><P><STRONG><a name="[4c2d5e0]"></a>Cyg_Mbox::tryput(void*)</STRONG> (ARM, 160 bytes, Stack size 8 bytes, mbox.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[7509ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::dequeue()
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
</UL><BR>[Called By]<UL><LI><a href="#[4c2d65c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mbox_tryput
</UL><P><STRONG><a name="[4c2d8ac]"></a>Cyg_Mbox::peek_item()</STRONG> (ARM, 68 bytes, Stack size 16 bytes, mbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4c2d928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mbox_peek_item
</UL><P><STRONG><a name="[4c2c568]"></a>Cyg_Mutex::Cyg_Mutex()</STRONG> (ARM, 48 bytes, Stack size 8 bytes, mutex.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[50584e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
<LI><a href="#[4ce7a5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
<LI><a href="#[853c3c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
<LI><a href="#[5d3107c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
<LI><a href="#[49dbc7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[5084474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::Cyg_StdioStream(int, Cyg_StdioStream::OpenMode, int, int, int, unsigned int, unsigned char*)
<LI><a href="#[746a1dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::Cyg_StdioStream(Cyg_StdioStream::OpenMode, unsigned int, unsigned char*)
</UL><BR>[Address Reference Count : 3]<UL><LI> fd.o(C$$ctor)
<LI> misc.o(C$$ctor)
<LI> socket.o(C$$ctor)
</UL><P><STRONG><a name="[4c2c478]"></a>Cyg_Mutex::~Cyg_Mutex()</STRONG> (ARM, 108 bytes, Stack size 8 bytes, mutex.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c8d848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL><BR>[Called By]<UL><LI><a href="#[50583f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[4ce7944]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[853c2d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[8571ec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[5d30ec4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[5d40aac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[508467c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[4c2c4f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_destroy
<LI><a href="#[4c78f58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[5c4982c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vsscanf
</UL><BR>[Address Reference Count : 3]<UL><LI> fd.o(C$$dtor)
<LI> misc.o(C$$dtor)
<LI> socket.o(C$$dtor)
</UL><P><STRONG><a name="[4c2c400]"></a>Cyg_Mutex::lock()</STRONG> (ARM, 188 bytes, Stack size 40 bytes, mutex.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74eb4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[7509b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
<LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
</UL><BR>[Called By]<UL><LI><a href="#[8571ec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[5d40aac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[508467c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[49dbb9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4cb83cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pselect(int, fd_set*, fd_set*, fd_set*, timeval*, const int*)
<LI><a href="#[4c2be8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::wait_inner(Cyg_Mutex*)
<LI><a href="#[4c2bb7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::wait_inner(Cyg_Mutex*, unsigned long long)
<LI><a href="#[4c78f58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[4d0cb38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fputs
<LI><a href="#[4caa024]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_file_alloc
<LI><a href="#[4ca9f3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_file_free
<LI><a href="#[4bfeb1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_file_lock
<LI><a href="#[5058da0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fp_ucount_dec(CYG_FILE_TAG*)
<LI><a href="#[4bfe5f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_fd_alloc
<LI><a href="#[4bfe57c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_fd_assign
<LI><a href="#[4bfe960]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_fd_free
<LI><a href="#[4bfec00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[5058248]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dup
<LI><a href="#[50581dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dup2
<LI><a href="#[4ca9ecc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_fs_lock
<LI><a href="#[4ced420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[50a39ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_sock_lock(CYG_FILE_TAG*)
<LI><a href="#[5c57bbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_libc_stdio_flush_all_but
<LI><a href="#[7476728]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fflush
<LI><a href="#[5c5906c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::refill_read_buffer()
<LI><a href="#[5c58fe4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::read(unsigned char*, unsigned int, unsigned int*)
<LI><a href="#[5c58f5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::read_byte(unsigned char*)
<LI><a href="#[5c58ed4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::peek_byte(unsigned char*)
<LI><a href="#[74523d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::write(const unsigned char*, unsigned int, unsigned int*)
<LI><a href="#[746a16c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vfnprintf
<LI><a href="#[83dfd3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fopen_inner(int, Cyg_StdioStream::OpenMode, int, int)
<LI><a href="#[83df758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fdopen
<LI><a href="#[5c4982c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vsscanf
<LI><a href="#[8199614]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fwrite
<LI><a href="#[9be34f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_libc_signals_lock_do_lock
<LI><a href="#[8a87d34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[8a61cfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ungetc
<LI><a href="#[8a61d68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::set_position(unsigned int, int)
</UL><P><STRONG><a name="[4c2c30c]"></a>Cyg_Mutex::trylock()</STRONG> (ARM, 92 bytes, Stack size 8 bytes, mutex.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c2c388]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_trylock
<LI><a href="#[5c57bbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_libc_stdio_flush_all_but
</UL><P><STRONG><a name="[4c2c290]"></a>Cyg_Mutex::unlock()</STRONG> (ARM, 112 bytes, Stack size 16 bytes, mutex.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7509ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::dequeue()
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[8571ec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[5d40aac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[508467c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[49dbb24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[4cb83cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pselect(int, fd_set*, fd_set*, fd_set*, timeval*, const int*)
<LI><a href="#[4c2be8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::wait_inner(Cyg_Mutex*)
<LI><a href="#[4c2bb7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::wait_inner(Cyg_Mutex*, unsigned long long)
<LI><a href="#[4c78f58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[4d0cb38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fputs
<LI><a href="#[4caa024]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_file_alloc
<LI><a href="#[4ca9f3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_file_free
<LI><a href="#[4bfeaa8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_file_unlock
<LI><a href="#[5058da0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fp_ucount_dec(CYG_FILE_TAG*)
<LI><a href="#[4bfe5f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_fd_alloc
<LI><a href="#[4bfe57c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_fd_assign
<LI><a href="#[4bfe960]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_fd_free
<LI><a href="#[4bfec00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[5058248]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dup
<LI><a href="#[50581dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dup2
<LI><a href="#[4ca9e58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_fs_unlock
<LI><a href="#[4ced420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[50a3a30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_sock_unlock(CYG_FILE_TAG*)
<LI><a href="#[5c57bbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_libc_stdio_flush_all_but
<LI><a href="#[7476728]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fflush
<LI><a href="#[5c5906c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::refill_read_buffer()
<LI><a href="#[5c58fe4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::read(unsigned char*, unsigned int, unsigned int*)
<LI><a href="#[5c58f5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::read_byte(unsigned char*)
<LI><a href="#[5c58ed4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::peek_byte(unsigned char*)
<LI><a href="#[74523d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::write(const unsigned char*, unsigned int, unsigned int*)
<LI><a href="#[746a16c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vfnprintf
<LI><a href="#[83dfd3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fopen_inner(int, Cyg_StdioStream::OpenMode, int, int)
<LI><a href="#[83df758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fdopen
<LI><a href="#[5c4982c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vsscanf
<LI><a href="#[8199614]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fwrite
<LI><a href="#[9be33f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_libc_signals_lock_do_unlock
<LI><a href="#[8a87d34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[8a61cfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ungetc
<LI><a href="#[8a61d68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::set_position(unsigned int, int)
</UL><P><STRONG><a name="[4c2c19c]"></a>Cyg_Mutex::release()</STRONG> (ARM, 92 bytes, Stack size 16 bytes, mutex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7509ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::dequeue()
<LI><a href="#[4c30a94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::release()
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c2c218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_release
</UL><P><STRONG><a name="[4c2c098]"></a>Cyg_Condition_Variable::Cyg_Condition_Variable(Cyg_Mutex&)</STRONG> (ARM, 48 bytes, Stack size 8 bytes, mutex.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4ce7a5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
<LI><a href="#[4c2c128]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_cond_init
</UL><P><STRONG><a name="[7497fb8]"></a>Cyg_Condition_Variable::Cyg_Condition_Variable()</STRONG> (ARM, 44 bytes, Stack size 8 bytes, mutex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL><P><STRONG><a name="[4c2bf98]"></a>Cyg_Condition_Variable::~Cyg_Condition_Variable()</STRONG> (ARM, 108 bytes, Stack size 8 bytes, mutex.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c8d848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL><BR>[Called By]<UL><LI><a href="#[4ce7944]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[4c2c020]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_cond_destroy
</UL><P><STRONG><a name="[4c2be8c]"></a>Cyg_Condition_Variable::wait_inner(Cyg_Mutex*)</STRONG> (ARM, 152 bytes, Stack size 32 bytes, mutex.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[74eb4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[7509b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
<LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
<LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
</UL><BR>[Called By]<UL><LI><a href="#[4c2bf24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_cond_wait
<LI><a href="#[4cb83cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pselect(int, fd_set*, fd_set*, fd_set*, timeval*, const int*)
</UL><P><STRONG><a name="[4c2bd90]"></a>Cyg_Condition_Variable::signal()</STRONG> (ARM, 100 bytes, Stack size 8 bytes, mutex.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7509ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::dequeue()
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c2be18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_cond_signal
</UL><P><STRONG><a name="[4c2bc8c]"></a>Cyg_Condition_Variable::broadcast()</STRONG> (ARM, 120 bytes, Stack size 32 bytes, mutex.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7509ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::dequeue()
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c2bd18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_cond_broadcast
<LI><a href="#[4ce7650]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_selwakeup
</UL><P><STRONG><a name="[4c2bb7c]"></a>Cyg_Condition_Variable::wait_inner(Cyg_Mutex*, unsigned long long)</STRONG> (ARM, 256 bytes, Stack size 40 bytes, mutex.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[74eb4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[4c2e130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::initialize(unsigned long long, unsigned long long)
<LI><a href="#[7509b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
<LI><a href="#[4c2de40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::rem_alarm(Cyg_Alarm*)
<LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
<LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
</UL><BR>[Called By]<UL><LI><a href="#[4c2bc14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_cond_timed_wait
<LI><a href="#[4cb83cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pselect(int, fd_set*, fd_set*, fd_set*, timeval*, const int*)
</UL><P><STRONG><a name="[71ed36c]"></a>abort</STRONG> (ARM, 4 bytes, Stack size 0 bytes, abort.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71ed36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;abort
</UL><BR>[Called By]<UL><LI><a href="#[71ed36c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[8bf24bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_up
<LI><a href="#[8bf02cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LcpEchoCheck
<LI><a href="#[544d30c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fontGetSize
<LI><a href="#[7efcfc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fontGetSizeEx
<LI><a href="#[544d37c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fontPrint
<LI><a href="#[7efd038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fontPrintEx
<LI><a href="#[544d3ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fontSetFont
<LI><a href="#[71ed3d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;freshWlanRequest
<LI><a href="#[5924610]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelReadData
</UL><P><STRONG><a name="[4e4a4f8]"></a>exit</STRONG> (ARM, 32 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7476794]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_libc_invoke_atexit_handlers
<LI><a href="#[7476728]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fflush
<LI><a href="#[74766bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_exit
</UL><BR>[Called By]<UL><LI><a href="#[853c0d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_libc_signals_default_handler
<LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
<LI><a href="#[8c29934]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_check_options
<LI><a href="#[8a905bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_libc_invoke_main
<LI><a href="#[4e4a6c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetOtherThread
<LI><a href="#[77e7304]">&lt&lt</a>&nbsp;&nbsp;&nbsp;config_rtprange
<LI><a href="#[9be3d7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_handle_alarm
<LI><a href="#[8199a10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;scanner_error
</UL><P><STRONG><a name="[4defbf8]"></a>snprintf</STRONG> (ARM, 36 bytes, Stack size 24 bytes, snprintf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c78f58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL><BR>[Called By]<UL><LI><a href="#[51dee50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_iwevcustom_event
<LI><a href="#[52aac04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_version
<LI><a href="#[4e4aaf0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetPPP
<LI><a href="#[4e4bee0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetLogo
<LI><a href="#[4e4aa7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetPPP
<LI><a href="#[4a5583c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownInterface
<LI><a href="#[4defb84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetGeneralIP
<LI><a href="#[4eab5a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWebCamStateString
<LI><a href="#[4e4db00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InitNetInterface
<LI><a href="#[71ee3ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WRGetProductVersion
<LI><a href="#[9c0b354]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_wpa_snprintf_hex
<LI><a href="#[4dd624c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;clr_flag
<LI><a href="#[8aaed90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_request
<LI><a href="#[895957c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;h263_get_sdp
<LI><a href="#[80eb4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_PLAY
<LI><a href="#[8985210]">&lt&lt</a>&nbsp;&nbsp;&nbsp;jpeg_get_sdp
<LI><a href="#[808da74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;live_get_sdp
<LI><a href="#[898cb48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mpeg4_get_sdp
<LI><a href="#[89b7c74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rawaudio_get_sdp
<LI><a href="#[59274e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelCreate
<LI><a href="#[4dd61dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_flag
<LI><a href="#[5430f94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoBuildDate
<LI><a href="#[5431008]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoBuildTime
<LI><a href="#[5430f20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoBuildVer
<LI><a href="#[9c612dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_wep_key
<LI><a href="#[9c67be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_auth_alg
<LI><a href="#[9c681d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_bssid
<LI><a href="#[9c621c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_cipher
<LI><a href="#[9c67af0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_eap
<LI><a href="#[9c682c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_int
<LI><a href="#[9c67ee0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_key_mgmt
<LI><a href="#[9c67fe0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_proto
</UL><P><STRONG><a name="[4c78f58]"></a>vsnprintf</STRONG> (ARM, 240 bytes, Stack size 80 bytes, vsnprintf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[746a1dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::Cyg_StdioStream(Cyg_StdioStream::OpenMode, unsigned int, unsigned char*)
<LI><a href="#[746a16c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vfnprintf
<LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[746a0dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::flush_output_unlocked()
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4c2c478]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::~Cyg_Mutex()
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[4a55fa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4defbf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;snprintf
<LI><a href="#[78439ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_header_printf
<LI><a href="#[7843b8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[7969aa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_msg
</UL><P><STRONG><a name="[4d0cba4]"></a>fprintf</STRONG> (ARM, 40 bytes, Stack size 24 bytes, fprintf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[746a16c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vfnprintf
</UL><BR>[Called By]<UL><LI><a href="#[9ac639c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dodefaultroute
<LI><a href="#[8bf24bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_up
<LI><a href="#[8bf02cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LcpEchoCheck
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[82a3410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateInnerDescription
<LI><a href="#[4e4a484]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateMsgQueue
<LI><a href="#[55372d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateSubCmdRunStruct
<LI><a href="#[59b5a40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DecorateAccessName
<LI><a href="#[4a5583c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownInterface
<LI><a href="#[57b6fa8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;EncodeBase64
<LI><a href="#[577464c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FlushSocket
<LI><a href="#[4defb84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetGeneralIP
<LI><a href="#[57e7b1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetInnerPartName
<LI><a href="#[4e4cd74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWlanChannel
<LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
<LI><a href="#[5536d9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_ConnInit
<LI><a href="#[5536f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_PostDataGet
<LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[4e4db00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InitNetInterface
<LI><a href="#[82a371c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InsertBufferSeg
<LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
<LI><a href="#[582d124]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PushMsgNode
<LI><a href="#[4a55154]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReadCameraParam
<LI><a href="#[4e4ddd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReadFlashMemory
<LI><a href="#[4e4a6c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetOtherThread
<LI><a href="#[577472c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResolveHost
<LI><a href="#[4e4a410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SelectThread
<LI><a href="#[4a5496c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ServerStart
<LI><a href="#[4e4cab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanHostSleepCfg
<LI><a href="#[734d334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanHostWakeUpCfg
<LI><a href="#[4e4cb30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanPSMode
<LI><a href="#[59c92f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__CreateXML
<LI><a href="#[7ddf9a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_region_deviation
<LI><a href="#[4dd624c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;clr_flag
<LI><a href="#[5456468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;compare_image
<LI><a href="#[7318254]">&lt&lt</a>&nbsp;&nbsp;&nbsp;die
<LI><a href="#[9be3d7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_handle_alarm
<LI><a href="#[7967508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_run
<LI><a href="#[5a64c88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;encodeBase64
<LI><a href="#[544d30c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fontGetSize
<LI><a href="#[7efcfc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fontGetSizeEx
<LI><a href="#[544d37c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fontPrint
<LI><a href="#[7efd038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fontPrintEx
<LI><a href="#[544d3ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fontSetFont
<LI><a href="#[71ed3d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;freshWlanRequest
<LI><a href="#[4e49d40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpAddBody
<LI><a href="#[5536bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpCreateList
<LI><a href="#[5537894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetCStyleString
<LI><a href="#[59af4c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetDocumentBasedPath
<LI><a href="#[59c9bcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetTrimString
<LI><a href="#[59c9b50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetWebStyleString
<LI><a href="#[59c9028]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpInsertNodeAfter
<LI><a href="#[59c9118]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpInsertNodeBefore
<LI><a href="#[57e7b94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseSinglePart
<LI><a href="#[5537260]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseString
<LI><a href="#[4e4d7c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpRegisterEmbedFunEx
<LI><a href="#[5537b50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSetString
<LI><a href="#[59c9c44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSplitString
<LI><a href="#[73180f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpdStartEx3
<LI><a href="#[59244b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_upnp
<LI><a href="#[7ddf928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;insert_to_region
<LI><a href="#[7967ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_init
<LI><a href="#[5a64cfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailError
<LI><a href="#[5a6815c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;netConnect
<LI><a href="#[77ac8f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_request
<LI><a href="#[8401d08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[4a5531c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdInit
<LI><a href="#[5950b40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pushMail
<LI><a href="#[77ac390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_body
<LI><a href="#[5924610]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelReadData
<LI><a href="#[5950a5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendMailMsg
<LI><a href="#[5a65ae0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;setFdAttribute
<LI><a href="#[4dd61dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_flag
<LI><a href="#[5a668cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcpConnectHost
<LI><a href="#[836e000]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_associate
<LI><a href="#[836e3ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_deinit
<LI><a href="#[836b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_mlme
<LI><a href="#[836df7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_auth_alg
<LI><a href="#[836e320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_countermeasures
<LI><a href="#[79725a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_register_reconfig
</UL><P><STRONG><a name="[4d0cb38]"></a>fputs</STRONG> (ARM, 152 bytes, Stack size 24 bytes, fputs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[74523d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::write(const unsigned char*, unsigned int, unsigned int*)
<LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[7967508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_run
<LI><a href="#[7967ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_init
<LI><a href="#[8401d08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[77ac400]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_header
<LI><a href="#[79725a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_register_reconfig
</UL><P><STRONG><a name="[4d32274]"></a>printf</STRONG> (ARM, 48 bytes, Stack size 24 bytes, printf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[746a16c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vfnprintf
</UL><BR>[Called By]<UL><LI><a href="#[4d3234c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initSDIO
<LI><a href="#[7365c5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audioEnable
<LI><a href="#[797383c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_drv_get_mac_addr
</UL><P><STRONG><a name="[732a904]"></a>bsearch</STRONG> (ARM, 116 bytes, Stack size 40 bytes, bsearch.o(.text))
<BR>[Called By]<UL><LI><a href="#[732a970]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ffGetFile
</UL><P><STRONG><a name="[4dee704]"></a>strtol</STRONG> (ARM, 372 bytes, Stack size 56 bytes, strtol.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[743f8bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[743f850]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isdigit
<LI><a href="#[743f7e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isalpha
<LI><a href="#[743f778]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isupper
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><BR>[Called By]<UL><LI><a href="#[5d87d8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getaddrinfo
<LI><a href="#[8794b38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_ip_addr
<LI><a href="#[874a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat
<LI><a href="#[4e4b66c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMac
<LI><a href="#[5672c0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WRGetProductVersionNum
<LI><a href="#[4fc2130]">&lt&lt</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[80eab3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_rtsp_location
<LI><a href="#[5a678b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getReplyAll
<LI><a href="#[5536e88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetContentLength
<LI><a href="#[588741c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpString2IP
<LI><a href="#[4eaa9f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpString2Long
<LI><a href="#[80cf474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_pmsg
<LI><a href="#[77ac400]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_header
<LI><a href="#[8119448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_handle_msg
<LI><a href="#[80ea84c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_interleave_setup
<LI><a href="#[80ea7d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_udp_setup
<LI><a href="#[9c68344]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_int
<LI><a href="#[81996ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yylex
</UL><BR>[Address Reference Count : 1]<UL><LI> vfscanf.o(.text)
</UL><P><STRONG><a name="[4def4e4]"></a>strcasecmp</STRONG> (ARM, 88 bytes, Stack size 16 bytes, bsdstring.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[743b1f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tolower
</UL><BR>[Called By]<UL><LI><a href="#[4e4b2cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetIP
<LI><a href="#[4e4b340]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetIP
<LI><a href="#[4e4baa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMotionDetect
<LI><a href="#[7843b10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_digest_response
<LI><a href="#[80cf31c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;copy_headers
<LI><a href="#[7843aa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_header
<LI><a href="#[59c98b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpString2Bool
<LI><a href="#[4eaabc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetIP
<LI><a href="#[4eaab50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetIP
<LI><a href="#[4eaaae0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetWlan
<LI><a href="#[7f3e8d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_statement
<LI><a href="#[7f3e4d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_config_file
<LI><a href="#[8119448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_handle_msg
<LI><a href="#[7813718]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_framerate_str
<LI><a href="#[7813808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_inputtype
<LI><a href="#[7813964]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_output
<LI><a href="#[7f61cf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_output
<LI><a href="#[895549c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_output
</UL><P><STRONG><a name="[743b184]"></a>strncasecmp</STRONG> (ARM, 120 bytes, Stack size 24 bytes, bsdstring.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[743b1f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tolower
</UL><BR>[Called By]<UL><LI><a href="#[59b4f90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ParseAuthorization
<LI><a href="#[7843b10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_digest_response
<LI><a href="#[80eab3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_rtsp_location
<LI><a href="#[80eb528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_SETUP
<LI><a href="#[784499c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_auth_header
<LI><a href="#[77abf7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_option_line
</UL><P><STRONG><a name="[743b118]"></a>bcmp</STRONG> (ARM, 4 bytes, Stack size 0 bytes, bsdstring.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
</UL><BR>[Called By]<UL><LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[516d51c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtredirect
<LI><a href="#[7ace920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_output
<LI><a href="#[516d74c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifaof_ifpforaddr
<LI><a href="#[516d838]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithaddr
<LI><a href="#[516d8ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithdstaddr
<LI><a href="#[5183d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_input
<LI><a href="#[7af3f80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_addmulti
<LI><a href="#[7af3f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_delmulti
<LI><a href="#[7ace4b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_addmask
<LI><a href="#[7b2c604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_delete
<LI><a href="#[7b3070c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_arpinput
<LI><a href="#[7b2f8c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_revarpinput
<LI><a href="#[7b4f5ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_forward
<LI><a href="#[7ace994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;raw_input
<LI><a href="#[9a89f1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sl_compress_tcp
</UL><P><STRONG><a name="[4ced040]"></a>bcopy</STRONG> (ARM, 16 bytes, Stack size 0 bytes, bsdstring.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL><BR>[Called By]<UL><LI><a href="#[4ced504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_bootp
<LI><a href="#[4a557c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;build_bootp_record
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[516d998]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_setgate
<LI><a href="#[516da78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[5185678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_init
<LI><a href="#[5184b38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_ioctl
<LI><a href="#[7a915fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copym
<LI><a href="#[7a9158c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copym2
<LI><a href="#[7a9151c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copydata
<LI><a href="#[7a914b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_cat
<LI><a href="#[7a913d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_pullup
<LI><a href="#[7a91364]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_pullup2
<LI><a href="#[7a91288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_split
<LI><a href="#[7a91218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_devget
<LI><a href="#[7ace604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copyback
<LI><a href="#[7acf000]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_msg2
<LI><a href="#[7ace920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_output
<LI><a href="#[7ad5bd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_attachsetup
<LI><a href="#[7ace520]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_withname
<LI><a href="#[7ad5620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifconf
<LI><a href="#[7af4380]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_output
<LI><a href="#[5184074]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_ifattach
<LI><a href="#[7af3f80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_addmulti
<LI><a href="#[7af3f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_delmulti
<LI><a href="#[7ace4b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_addmask
<LI><a href="#[7b30bcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arprequest
<LI><a href="#[7b2f9a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arp_rtrequest
<LI><a href="#[7af4310]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arpresolve
<LI><a href="#[7b3070c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_arpinput
<LI><a href="#[7b2f8c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_revarpinput
<LI><a href="#[7b2f850]">&lt&lt</a>&nbsp;&nbsp;&nbsp;revarprequest
<LI><a href="#[7b2f7dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;revarpwhoarewe
<LI><a href="#[5183ab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_packet_send
<LI><a href="#[7b3f9c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_dooptions
<LI><a href="#[7b3f724]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_srcroute
<LI><a href="#[7b3f6b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_stripoptions
<LI><a href="#[9a8a5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_inproc
<LI><a href="#[863e3f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbcompress
<LI><a href="#[863e228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbappendaddr
<LI><a href="#[863e0cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbcreatecontrol
<LI><a href="#[7ace6e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;raw_usrreq
<LI><a href="#[869e90c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_lifaddr_ioctl
<LI><a href="#[86fd02c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_reflect
<LI><a href="#[7b4f508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_error
<LI><a href="#[872a2b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_optcopy
<LI><a href="#[7b4f498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[872a15c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_pcbopts
<LI><a href="#[86f6910]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_ctloutput
<LI><a href="#[9ac289c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppwrite
<LI><a href="#[9ac2e34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppptioctl
<LI><a href="#[9a89f1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sl_compress_tcp
<LI><a href="#[9a89e18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sl_uncompress_tcp_core
<LI><a href="#[9a89e9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sl_uncompress_tcp
<LI><a href="#[872de8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;uiomove
<LI><a href="#[86f69f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[8b82a80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_pulloutofband
<LI><a href="#[8b828bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_dooptions
<LI><a href="#[8b82684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_respond
<LI><a href="#[8b827d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL><P><STRONG><a name="[4ced0ac]"></a>bzero</STRONG> (ARM, 4 bytes, Stack size 0 bytes, bsdstring.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Called By]<UL><LI><a href="#[4ced504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_bootp
<LI><a href="#[4a557c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;build_bootp_record
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[516db58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_maskedcopy
<LI><a href="#[516dae8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtalloc1
<LI><a href="#[516da78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[516d6dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtalloc2
<LI><a href="#[516d51c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtredirect
<LI><a href="#[7a916d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_getclr
<LI><a href="#[7a911ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_zero
<LI><a href="#[7ace838]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_usrreq
<LI><a href="#[7ace920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_output
<LI><a href="#[7aceea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_msg1
<LI><a href="#[7ace440]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_ifmsg
<LI><a href="#[516d214]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_newaddrmsg
<LI><a href="#[7ad5bd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_attachsetup
<LI><a href="#[7ad5620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifconf
<LI><a href="#[7ace4b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_addmask
<LI><a href="#[7b2c524]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_inithead
<LI><a href="#[516dd1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_init
<LI><a href="#[7b2cdbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_new_radix_mask
<LI><a href="#[7b30bcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arprequest
<LI><a href="#[7b2f9a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arp_rtrequest
<LI><a href="#[7b2f850]">&lt&lt</a>&nbsp;&nbsp;&nbsp;revarprequest
<LI><a href="#[7b4f88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_init
<LI><a href="#[9a8a1f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppalloc
<LI><a href="#[9a8ac48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppsioctl
<LI><a href="#[863e768]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sonewconn1
<LI><a href="#[869e31c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_control
<LI><a href="#[869e90c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_lifaddr_ioctl
<LI><a href="#[869e6bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_len2mask
<LI><a href="#[86d7a78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcballoc
<LI><a href="#[86d7834]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_selectsrc
<LI><a href="#[86d75ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_setsockaddr
<LI><a href="#[86d7578]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_setpeeraddr
<LI><a href="#[86d7420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_losing
<LI><a href="#[7b4f498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[872a15c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_pcbopts
<LI><a href="#[9ac2f24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppopen
<LI><a href="#[9a8a178]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sl_compress_init
<LI><a href="#[8aa4e60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sorflush
<LI><a href="#[8aa4df0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;socreate
<LI><a href="#[8b1c50c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_fstat
<LI><a href="#[86f69f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[8b19e24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_output
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[8b82764]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_template
<LI><a href="#[8b82684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_respond
<LI><a href="#[8ba1938]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_newtcpcb
<LI><a href="#[4def390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
<LI><a href="#[4e4d254]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpIP2String
<LI><a href="#[59274e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelCreate
</UL><P><STRONG><a name="[743b0ac]"></a>index</STRONG> (ARM, 4 bytes, Stack size 0 bytes, bsdstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
</UL><P><STRONG><a name="[743b040]"></a>rindex</STRONG> (ARM, 4 bytes, Stack size 0 bytes, bsdstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[743afd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strrchr
</UL><P><STRONG><a name="[743af68]"></a>swab</STRONG> (ARM, 76 bytes, Stack size 8 bytes, bsdstring.o(.text), UNUSED)
<P><STRONG><a name="[4dee62c]"></a>memcmp</STRONG> (ARM, 252 bytes, Stack size 8 bytes, memcmp.o(.text))
<BR>[Called By]<UL><LI><a href="#[743b118]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bcmp
<LI><a href="#[4d31dec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ProcessRxedPacket
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[7bb1c50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_parse_domain_info_11d
<LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
<LI><a href="#[52ab184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_wap
<LI><a href="#[52aa774]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlanidle_off
<LI><a href="#[7c3895c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SSIDcmp
<LI><a href="#[7c6050c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_scan_networks
<LI><a href="#[7c38784]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FindBSSIDInList
<LI><a href="#[52a9ea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FindSSIDInList
<LI><a href="#[7bec560]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_scan
<LI><a href="#[7c61d44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_scan_setup_scan_config
<LI><a href="#[7c60c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InterpretBSSDescriptionWithIE
<LI><a href="#[85e81a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_direntry
<LI><a href="#[8c6cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapInput
<LI><a href="#[4e4b66c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMac
<LI><a href="#[588ad5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DDNSResponse
<LI><a href="#[57e8e64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MPTestBoundary
<LI><a href="#[4e49ea0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;OnRequestBegin
<LI><a href="#[4a54e98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Read_FlashFile
<LI><a href="#[83ed500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_processKey
<LI><a href="#[732a970]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ffGetFile
<LI><a href="#[9b5e1e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsUnicodeWildCardCompare
<LI><a href="#[4eaaae0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetWlan
<LI><a href="#[727eb44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState
<LI><a href="#[5859b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mc_rx_socket
<LI><a href="#[9cf6560]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_add
<LI><a href="#[9cf66c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_get
<LI><a href="#[9c8aa08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_candidate_add
<LI><a href="#[77abf7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_option_line
<LI><a href="#[77ac960]">&lt&lt</a>&nbsp;&nbsp;&nbsp;request_type
<LI><a href="#[9cf696c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_candidate_process
<LI><a href="#[9c8bcf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_receive
<LI><a href="#[9c8a904]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_scan_results
<LI><a href="#[9cfc958]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_selector_to_bitfield
<LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
<LI><a href="#[7975508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_blacklist_del
<LI><a href="#[7968968]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_blacklist_get
<LI><a href="#[9c68154]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_psk
<LI><a href="#[84029a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless
<LI><a href="#[839b4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_scan_results
<LI><a href="#[9d00e70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
<LI><a href="#[796c6cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_get_beacon_ie
<LI><a href="#[9d011e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie_rsn
<LI><a href="#[9d01260]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie_wpa
<LI><a href="#[9cfbe48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_pmk_to_ptk
<LI><a href="#[9cfcbe4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_selector_to_bitfield
<LI><a href="#[9cf6be4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_notify_assoc
<LI><a href="#[9cffdbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_pmksa_free_cb
<LI><a href="#[796802c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
<LI><a href="#[7968a64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_disassociate
<LI><a href="#[796e4b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_eapol_send
<LI><a href="#[8312d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[8312afc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_associnfo
<LI><a href="#[8312c98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_disassoc
<LI><a href="#[8312b80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_scan_results
<LI><a href="#[9cfbebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_pmk
<LI><a href="#[7968c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_ssid
<LI><a href="#[9cf9290]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_parse_generic
<LI><a href="#[9d0043c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
<LI><a href="#[8312530]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_bss
<LI><a href="#[7977978]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_timeout
<LI><a href="#[9cfb928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_validate_ie
<LI><a href="#[9d00544]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_verify_eapol_key_mic
</UL><P><STRONG><a name="[4fc219c]"></a>strcat</STRONG> (ARM, 132 bytes, Stack size 24 bytes, strcat.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Called By]<UL><LI><a href="#[511937c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[9b5e354]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_sdir_name
<LI><a href="#[4fe1730]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_ns_version
<LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
<LI><a href="#[889f6b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lname_to_sname
</UL><P><STRONG><a name="[4dee698]"></a>strchr</STRONG> (ARM, 200 bytes, Stack size 24 bytes, strchr.o(.text))
<BR>[Called By]<UL><LI><a href="#[743b0ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;index
<LI><a href="#[5119cd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;build_query
<LI><a href="#[511937c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[7c3a4bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_common_rates
<LI><a href="#[5d87c30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;inet_pton
<LI><a href="#[8794b38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_ip_addr
<LI><a href="#[4e4b66c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMac
<LI><a href="#[59b4f90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ParseAuthorization
<LI><a href="#[7843c6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_basic_response
<LI><a href="#[5537894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetCStyleString
<LI><a href="#[59c9b50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetWebStyleString
<LI><a href="#[5537260]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseString
<LI><a href="#[588741c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpString2IP
<LI><a href="#[71ed2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parseCommand
<LI><a href="#[8180a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_client_data
<LI><a href="#[77abf7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_option_line
<LI><a href="#[7a3abf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_desc
<LI><a href="#[77ac0d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;translate_uri
<LI><a href="#[544ece8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoReplaceKeyWord
<LI><a href="#[79b1fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_get_line
<LI><a href="#[79b05f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read
<LI><a href="#[79b20c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_network
</UL><P><STRONG><a name="[4ced268]"></a>strcpy</STRONG> (ARM, 148 bytes, Stack size 32 bytes, strcpy.o(.text))
<BR>[Called By]<UL><LI><a href="#[4ced504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_bootp
<LI><a href="#[4a556e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_net
<LI><a href="#[4a557c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;build_bootp_record
<LI><a href="#[4fc219c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[50d98e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp_down_net
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[511937c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[5252998]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_name
<LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[5d87d8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getaddrinfo
<LI><a href="#[5db6480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;inet_ntop
<LI><a href="#[5137aa8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_inet_ntop
<LI><a href="#[9ac2914]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_log_packet
<LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
<LI><a href="#[874c9b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pr_log
<LI><a href="#[8c29934]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_check_options
<LI><a href="#[8c49ea0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_up
<LI><a href="#[595132c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BuildFileInfo
<LI><a href="#[59b5a40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DecorateAccessName
<LI><a href="#[553779c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetCleanVariableName
<LI><a href="#[5859bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetDevInterface
<LI><a href="#[4def22c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetPubIPInfo
<LI><a href="#[4e4cd74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWlanChannel
<LI><a href="#[4eaa974]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWlanOperationMode
<LI><a href="#[4e4af7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_GetFirmware
<LI><a href="#[577432c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Init
<LI><a href="#[56dbc48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetExtraHeader
<LI><a href="#[4e4da90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetNullIP
<LI><a href="#[4dee848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetRandomIP
<LI><a href="#[4e4cab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanHostSleepCfg
<LI><a href="#[734d334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanHostWakeUpCfg
<LI><a href="#[4e4cb30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanPSMode
<LI><a href="#[7843a24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_digest_challenge
<LI><a href="#[80cf4e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_pmsg_string
<LI><a href="#[59af808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;auth_required
<LI><a href="#[7843b10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_digest_response
<LI><a href="#[59509ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;createMail
<LI><a href="#[5a665e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;encodeSubject
<LI><a href="#[9b5f45c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_file
<LI><a href="#[5320e8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSDDevice
<LI><a href="#[52f8480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSMDevice
<LI><a href="#[59c9b50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetWebStyleString
<LI><a href="#[4eaba44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlAuthUser
<LI><a href="#[4eabd00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetMyself
<LI><a href="#[4eab880]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetUser
<LI><a href="#[4eaa904]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetWlan
<LI><a href="#[8162a3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_convert_stream
<LI><a href="#[808c474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_rtsp_location
<LI><a href="#[780fe7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_stream
<LI><a href="#[79b03a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;os_strdup
<LI><a href="#[71ed2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parseCommand
<LI><a href="#[780fd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;register_config_context
<LI><a href="#[7a3abf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_desc
<LI><a href="#[88fe6a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_directroy
<LI><a href="#[88fe620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_fat16_root
<LI><a href="#[4eabb34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_auth_id
<LI><a href="#[78139d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_device
<LI><a href="#[7f61ca4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_device
<LI><a href="#[889f644]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sname_compare
<LI><a href="#[88a1a78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;split_sname
<LI><a href="#[588b658]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[7687b4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[59cd30c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[825e50c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[77ac0d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;translate_uri
<LI><a href="#[4dee3f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_get_extip
<LI><a href="#[71ed214]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbCustomRequest
<LI><a href="#[5456a08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoDrawContent
<LI><a href="#[811935c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;write_access_log
<LI><a href="#[71ee770]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrString
<LI><a href="#[819b314]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yy_get_next_buffer
</UL><P><STRONG><a name="[4deeb08]"></a>strlen</STRONG> (ARM, 36 bytes, Stack size 0 bytes, strlen.o(.text))
<BR>[Called By]<UL><LI><a href="#[4d0cb38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fputs
<LI><a href="#[511937c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[511929c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getdomainname
<LI><a href="#[51dee50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_iwevcustom_event
<LI><a href="#[5252998]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_name
<LI><a href="#[525249c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_nick
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[746a16c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vfnprintf
<LI><a href="#[5d87d8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getaddrinfo
<LI><a href="#[7ad5bd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_attachsetup
<LI><a href="#[51de80c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_associate
<LI><a href="#[52ab09c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_scan
<LI><a href="#[7c61d44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_scan_setup_scan_config
<LI><a href="#[5c4982c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vsscanf
<LI><a href="#[874a6d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_vfmtmsg
<LI><a href="#[9ac2914]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_log_packet
<LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
<LI><a href="#[8c21bec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_upap_authwithpeer
<LI><a href="#[8c298bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_get_secret
<LI><a href="#[8c6c520]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapSendChallenge
<LI><a href="#[8c6ba5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapSendStatus
<LI><a href="#[8c6b804]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapSendResponse
<LI><a href="#[874a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat
<LI><a href="#[8794e0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_close
<LI><a href="#[595132c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BuildFileInfo
<LI><a href="#[59b4b0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CompareEmbedPatten
<LI><a href="#[4e4bc10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChBrightness
<LI><a href="#[4e4bd00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChCompressRatio
<LI><a href="#[4e4bc88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChFramerate
<LI><a href="#[4e4bb1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChMicVolume
<LI><a href="#[4e4bd7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChResolution
<LI><a href="#[4e4bb94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChSpeakerVolume
<LI><a href="#[4e4a894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ControlMCU
<LI><a href="#[4e4c19c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetUser
<LI><a href="#[4e4b754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetWlan
<LI><a href="#[4e4c128]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUser
<LI><a href="#[59b5a40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DecorateAccessName
<LI><a href="#[5887760]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Do_DNS
<LI><a href="#[56dcec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillCameraData
<LI><a href="#[57e7940]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetBoundary
<LI><a href="#[553779c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetCleanVariableName
<LI><a href="#[5859bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetDevInterface
<LI><a href="#[57e7b1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetInnerPartName
<LI><a href="#[5536d9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_ConnInit
<LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[577432c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Init
<LI><a href="#[59b4f90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ParseAuthorization
<LI><a href="#[56dbc48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetExtraHeader
<LI><a href="#[4e4cab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanHostSleepCfg
<LI><a href="#[734d334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanHostWakeUpCfg
<LI><a href="#[7a3d390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;XML_Analysis
<LI><a href="#[80cf4e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_pmsg_string
<LI><a href="#[59af808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;auth_required
<LI><a href="#[59af2e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;base64decode
<LI><a href="#[79b082c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bf_fopen
<LI><a href="#[7843c6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_basic_response
<LI><a href="#[7843b10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_digest_response
<LI><a href="#[59509ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;createMail
<LI><a href="#[5a67d20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;createMailData
<LI><a href="#[4f75930]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dprint_to_socket
<LI><a href="#[8aaed90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_request
<LI><a href="#[5a665e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;encodeSubject
<LI><a href="#[81f90cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;escape_string
<LI><a href="#[7a38c8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_control_url
<LI><a href="#[7a38c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_event_url
<LI><a href="#[7a39184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_port_param
<LI><a href="#[80eab3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_rtsp_location
<LI><a href="#[7a38d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_scpdurl
<LI><a href="#[544d30c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fontGetSize
<LI><a href="#[544d37c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fontPrint
<LI><a href="#[9b5e354]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_sdir_name
<LI><a href="#[7a37d28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_send_subscribe
<LI><a href="#[772e120]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_mime_type
<LI><a href="#[4dee308]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpAddBodyString
<LI><a href="#[56dbcbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDisconnect
<LI><a href="#[59c9b50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetWebStyleString
<LI><a href="#[4def554]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpMyStrncpy
<LI><a href="#[4eaba44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlAuthUser
<LI><a href="#[4a560fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlMCU
<LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
<LI><a href="#[4eab9d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlDelUser
<LI><a href="#[4eab880]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetUser
<LI><a href="#[4eabc90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetUser
<LI><a href="#[4eaaae0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetWlan
<LI><a href="#[77abff4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_get
<LI><a href="#[889f6b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lname_to_sname
<LI><a href="#[71eca78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;logonRequest
<LI><a href="#[5a680ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailLogin
<LI><a href="#[5a688b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailPost
<LI><a href="#[784492c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;md5_hash
<LI><a href="#[79b03a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;os_strdup
<LI><a href="#[71ed2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parseCommand
<LI><a href="#[8a10de4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1_f
<LI><a href="#[7a3abf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_desc
<LI><a href="#[7a391f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_serv_xml
<LI><a href="#[59af6ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_write
<LI><a href="#[77ac960]">&lt&lt</a>&nbsp;&nbsp;&nbsp;request_type
<LI><a href="#[59274e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelCreate
<LI><a href="#[9cf681c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sha1_prf
<LI><a href="#[7a3a4f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soap_invoke
<LI><a href="#[5a6807c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;splitString
<LI><a href="#[7a3b248]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_adv_srch
<LI><a href="#[7a3b418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_send_advertisement
<LI><a href="#[588b658]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[7687b4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[59cd30c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[825e50c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[77ac0d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;translate_uri
<LI><a href="#[544ece8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoReplaceKeyWord
<LI><a href="#[544d298]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoSetContent
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[79b1fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_get_line
<LI><a href="#[9c68154]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_psk
<LI><a href="#[9c63ef8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_string
<LI><a href="#[79b2044]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_blob
<LI><a href="#[9c680d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_psk
<LI><a href="#[82c8588]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_str
<LI><a href="#[797346c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface
<LI><a href="#[811935c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;write_access_log
<LI><a href="#[4dee8b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_set_network_adhoc
<LI><a href="#[4dee934]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_set_network_managed
<LI><a href="#[71ee770]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrString
<LI><a href="#[71eea18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrStringLenth
<LI><a href="#[819b314]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yy_get_next_buffer
</UL><P><STRONG><a name="[71ec834]"></a>strncmp</STRONG> (ARM, 260 bytes, Stack size 24 bytes, strncmp.o(.text))
<BR>[Called By]<UL><LI><a href="#[874a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat
<LI><a href="#[7a38c8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_control_url
<LI><a href="#[7a38c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_event_url
<LI><a href="#[80eab3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_rtsp_location
<LI><a href="#[7a38d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_scpdurl
<LI><a href="#[8180a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_client_data
<LI><a href="#[4a54acc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;registerCustomCmd
<LI><a href="#[7a3b248]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_adv_srch
<LI><a href="#[7a3b2bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_recv_response
<LI><a href="#[79b05f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read
<LI><a href="#[8402700]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless_custom
<LI><a href="#[839b4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_scan_results
<LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
</UL><P><STRONG><a name="[4d31fc8]"></a>strncpy</STRONG> (ARM, 164 bytes, Stack size 40 bytes, strncpy.o(.text))
<BR>[Called By]<UL><LI><a href="#[4d34100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_control
<LI><a href="#[511929c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getdomainname
<LI><a href="#[525249c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_nick
<LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[4e4d088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppot_connect
<LI><a href="#[5da8790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getifaddrs
<LI><a href="#[5137a34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_indextoname
<LI><a href="#[51b58b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_register_dev
<LI><a href="#[9ac33d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_cifaddr
<LI><a href="#[9ac32ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_cleanup
<LI><a href="#[9ac308c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_available
<LI><a href="#[9ac2554]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_send_config
<LI><a href="#[9ac2110]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifup
<LI><a href="#[9ac2024]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifdown
<LI><a href="#[9ac1fb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifaddr
<LI><a href="#[9ac1e48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifproxyarp
<LI><a href="#[9ac1dd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_GetMask
<LI><a href="#[75eea98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_options_init
<LI><a href="#[75eea28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_up
<LI><a href="#[9ac1b80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_options_install
<LI><a href="#[8c298bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_get_secret
<LI><a href="#[8c6cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapInput
<LI><a href="#[874a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat
<LI><a href="#[7686d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Process
<LI><a href="#[7843b10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_digest_response
<LI><a href="#[7a39184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_port_param
<LI><a href="#[80eab3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_rtsp_location
<LI><a href="#[7a37b78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_recv_notify
<LI><a href="#[7a37cb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_recv_response
<LI><a href="#[836c178]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_private_info
<LI><a href="#[7967ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_init
<LI><a href="#[889f6b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lname_to_sname
<LI><a href="#[836b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell2param
<LI><a href="#[836bc58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell_ioctl
<LI><a href="#[784499c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_auth_header
<LI><a href="#[4a54acc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;registerCustomCmd
<LI><a href="#[5a6807c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;splitString
<LI><a href="#[7a3b248]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_adv_srch
<LI><a href="#[7a3b2bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_recv_response
<LI><a href="#[544ece8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoReplaceKeyWord
<LI><a href="#[544d298]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoSetContent
<LI><a href="#[836e42c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_init
<LI><a href="#[839b54c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_bssid
<LI><a href="#[8401b88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_ifflags
<LI><a href="#[8406cc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_range
<LI><a href="#[839b4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_scan_results
<LI><a href="#[839b5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_ssid
<LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
<LI><a href="#[8406fd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_pmksa
<LI><a href="#[839b6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_scan
<LI><a href="#[8401c88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_bssid
<LI><a href="#[839b7cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_freq
<LI><a href="#[8401b08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_ifflags
<LI><a href="#[839b84c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_mode
<LI><a href="#[8401c08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_region
<LI><a href="#[839b74c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_ssid
<LI><a href="#[797346c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface
<LI><a href="#[79733ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface2
<LI><a href="#[81996ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yylex
</UL><P><STRONG><a name="[71ed28c]"></a>strstr</STRONG> (ARM, 80 bytes, Stack size 0 bytes, strstr.o(.text))
<BR>[Called By]<UL><LI><a href="#[5252998]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_name
<LI><a href="#[5672c0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WRGetProductVersionNum
<LI><a href="#[7a3d390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;XML_Analysis
<LI><a href="#[7a3acd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_descurl
<LI><a href="#[7a3ac64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_max_age
<LI><a href="#[7a39184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_port_param
<LI><a href="#[7a37b78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_recv_notify
<LI><a href="#[7a37cb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_recv_response
<LI><a href="#[71ed2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parseCommand
<LI><a href="#[8180a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_client_data
<LI><a href="#[7a3a280]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_xml
<LI><a href="#[7a391f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_serv_xml
<LI><a href="#[80ea84c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_interleave_setup
<LI><a href="#[80ea7d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_udp_setup
<LI><a href="#[7a3b160]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soap_recv_response
<LI><a href="#[5a6807c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;splitString
<LI><a href="#[7a3b248]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_adv_srch
<LI><a href="#[7a3b2bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_recv_response
<LI><a href="#[71ed214]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbCustomRequest
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[8402700]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless_custom
</UL><P><STRONG><a name="[7317b94]"></a>time</STRONG> (ARM, 32 bytes, Stack size 8 bytes, time.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2710]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_WallClock::get_current_time()
</UL><BR>[Called By]<UL><LI><a href="#[524b678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[524b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_tx
<LI><a href="#[874a6d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_vfmtmsg
<LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
<LI><a href="#[874a314]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_link_terminated
<LI><a href="#[4e4a1d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetCheckedTime
<LI><a href="#[7700190]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WirelessTest_Test_Entry
<LI><a href="#[77e75d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_fd_event
<LI><a href="#[8031cc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_softqueue_event
<LI><a href="#[77e755c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_timer_event
<LI><a href="#[77003d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;client_init
<LI><a href="#[7700448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;client_io_time_is_expired
<LI><a href="#[817fac4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;conn_write
<LI><a href="#[8180324]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_accept
<LI><a href="#[81192f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_read
<LI><a href="#[8031b60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;event_loop
<LI><a href="#[7319734]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fdset_update
<LI><a href="#[7317b20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;free_request
<LI><a href="#[9b5e5b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_set_dire_mtime
<LI><a href="#[77ac634]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_sock_request
<LI><a href="#[77e7a84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_rtp_endpoint
<LI><a href="#[7317ce4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_requests
<LI><a href="#[81f92ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_write_rfc822_time
<LI><a href="#[5927468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelSendData
<LI><a href="#[77e8d74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_rtcp_read
<LI><a href="#[77e8de8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_rtp_read
</UL><P><STRONG><a name="[4f74240]"></a>__softfp_sqrt</STRONG> (ARM, 148 bytes, Stack size 24 bytes, w_sqrt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7416038]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__ieee754_sqrt
<LI><a href="#[7415f50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isnan
<LI><a href="#[4f73d50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[7415ed8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__kernel_standard
</UL><BR>[Called By]<UL><LI><a href="#[8335700]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_distance_between_waypoints
<LI><a href="#[83355e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mark_waypoints_as_good_and_bad_using_dist
<LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f73f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_waypoint
<LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
<LI><a href="#[4f740d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_replay_path_between_rooms
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[4f74900]"></a>__softfp_atan2</STRONG> (ARM, 216 bytes, Stack size 40 bytes, w_atan2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7412658]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__ieee754_atan2
<LI><a href="#[7415f50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isnan
<LI><a href="#[74125ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[7415ed8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__kernel_standard
</UL><BR>[Called By]<UL><LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f73f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_waypoint
<LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
<LI><a href="#[4f749e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_rovio_pose
</UL><P><STRONG><a name="[4f747b4]"></a>__softfp_cos</STRONG> (ARM, 208 bytes, Stack size 24 bytes, s_cos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[740f658]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[4f73c68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[740f5e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[740f56c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL><BR>[Called By]<UL><LI><a href="#[4f749e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_rovio_pose
</UL><P><STRONG><a name="[4f746d4]"></a>__softfp_sin</STRONG> (ARM, 216 bytes, Stack size 24 bytes, s_sin.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[740f56c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[4f73c68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[740f5e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[740f658]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL><BR>[Called By]<UL><LI><a href="#[4f749e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_rovio_pose
</UL><P><STRONG><a name="[4d322e0]"></a>malloc</STRONG> (ARM, 76 bytes, Stack size 16 bytes, malloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7404f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_dlmalloc_Implementation::try_alloc(int)
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4d3234c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initSDIO
<LI><a href="#[7404e7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[7404e10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[5119464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;real_name
<LI><a href="#[5119b6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_answer
<LI><a href="#[511937c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[4cece08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;setdomainname
<LI><a href="#[5d87d8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getaddrinfo
<LI><a href="#[5da8790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getifaddrs
<LI><a href="#[83dfd3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fopen_inner(int, Cyg_StdioStream::OpenMode, int, int)
<LI><a href="#[5c590f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStreamBuffer::set_buffer(unsigned int, unsigned char*)
<LI><a href="#[85e8764]">&lt&lt</a>&nbsp;&nbsp;&nbsp;findbuffer_node
<LI><a href="#[85e7ba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;alloc_node
<LI><a href="#[8603960]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_lookup
<LI><a href="#[871a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
<LI><a href="#[8f65204]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__new(unsigned int)
<LI><a href="#[5950900]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AddBufferFileList
<LI><a href="#[8cd70c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Bgn_scd_init
<LI><a href="#[56dec34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Buffer_Assign
<LI><a href="#[8cd71b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cb_gain_average_init
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[5950978]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateFileList
<LI><a href="#[4e4a484]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateMsgQueue
<LI><a href="#[55372d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateSubCmdRunStruct
<LI><a href="#[8cd7390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;D_plsf_init
<LI><a href="#[886eddc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_init
<LI><a href="#[553779c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetCleanVariableName
<LI><a href="#[7318430]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Create
<LI><a href="#[7318338]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Implement
<LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
<LI><a href="#[5536d9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_ConnInit
<LI><a href="#[5536f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_PostDataGet
<LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
<LI><a href="#[57165f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InsertCustomProcess
<LI><a href="#[8e067a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Levinson_init
<LI><a href="#[577432c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Init
<LI><a href="#[5716828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ObjInit
<LI><a href="#[8d73838]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pitch_fr_init
<LI><a href="#[886ed64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Filter_init
<LI><a href="#[886ecec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Process_init
<LI><a href="#[8886934]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pre_Process_init
<LI><a href="#[582d124]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PushMsgNode
<LI><a href="#[8dff6b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Q_plsf_init
<LI><a href="#[4a54e98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Read_FlashFile
<LI><a href="#[4e4a6c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetOtherThread
<LI><a href="#[9b267cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SM_AddFreeBlock
<LI><a href="#[7ed02ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame_init
<LI><a href="#[7e89ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Encode_Frame_init
<LI><a href="#[7700938]">&lt&lt</a>&nbsp;&nbsp;&nbsp;TestNet_ThreadInit
<LI><a href="#[9b64168]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fopen
<LI><a href="#[8cf35ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;agc_init
<LI><a href="#[8cc5b54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cl_ltp_init
<LI><a href="#[88868c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_init
<LI><a href="#[5456468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;compare_image
<LI><a href="#[8cd6fe0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec_init
<LI><a href="#[8cc58a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_enc_init
<LI><a href="#[8cd72a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ec_gain_code_init
<LI><a href="#[8cd7318]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ec_gain_pitch_init
<LI><a href="#[81f90cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;escape_string
<LI><a href="#[71ece7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;firmwareRequst
<LI><a href="#[5320e8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSDDevice
<LI><a href="#[52f8480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSMDevice
<LI><a href="#[9b80034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsAllocateDisk
<LI><a href="#[7648cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsPhysicalDiskConnected
<LI><a href="#[8cc5a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant_init
<LI><a href="#[8de3628]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gain_adapt_init
<LI><a href="#[8cd722c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gc_pred_init
<LI><a href="#[4eaa824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlScanAP
<LI><a href="#[5a67034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initList
<LI><a href="#[7ddf928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;insert_to_region
<LI><a href="#[8cc5834]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lpc_init
<LI><a href="#[8cd713c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp_avg_init
<LI><a href="#[8cc5ae4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp_init
<LI><a href="#[5a66fc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mallocListnode
<LI><a href="#[79b07bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[8cc59fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;p_ol_wgh_init
<LI><a href="#[9b80d8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_partition_records
<LI><a href="#[8cd7054]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ph_disp_init
<LI><a href="#[8cf361c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;preemphasis_init
<LI><a href="#[5950a5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendMailMsg
<LI><a href="#[4eabb34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_auth_id
<LI><a href="#[7e89f84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sid_sync_init
<LI><a href="#[5a6807c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;splitString
<LI><a href="#[588b658]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[7687b4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[8cc5988]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ton_stab_init
<LI><a href="#[755f9cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_msg_send
<LI><a href="#[755fb9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_msg_try_send
<LI><a href="#[8cc5918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vad1_init
<LI><a href="#[4a54cb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_init
<LI><a href="#[4db6c38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_linkupdate
<LI><a href="#[81997c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yy_create_buffer
</UL><P><STRONG><a name="[4db51b8]"></a>free</STRONG> (ARM, 248 bytes, Stack size 40 bytes, malloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7404ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_dlmalloc_Implementation::free(unsigned char*, int)
<LI><a href="#[7509ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::dequeue()
<LI><a href="#[7404f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_dlmalloc_Implementation::try_alloc(int)
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
<LI><a href="#[7509b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[8571ec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[5d40aac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[508467c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[4c78f58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[7404e10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[511a5d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;free_hent
<LI><a href="#[4cece08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;setdomainname
<LI><a href="#[5d87dfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;freeaddrinfo
<LI><a href="#[5da8790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getifaddrs
<LI><a href="#[5da8720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;freeifaddrs
<LI><a href="#[5137a34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_indextoname
<LI><a href="#[5da86ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_nametoindex
<LI><a href="#[5da8630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_show_all_interfaces
<LI><a href="#[83dfd3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fopen_inner(int, Cyg_StdioStream::OpenMode, int, int)
<LI><a href="#[5c590f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStreamBuffer::set_buffer(unsigned int, unsigned char*)
<LI><a href="#[5c4982c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vsscanf
<LI><a href="#[85e80bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dec_refcnt
<LI><a href="#[85e8d80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_mount
<LI><a href="#[85e8d0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_umount
<LI><a href="#[85e8c9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_open
<LI><a href="#[85e8bb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_mkdir
<LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
<LI><a href="#[876a044]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_untimeout
<LI><a href="#[7686ca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Final
<LI><a href="#[7686d14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Init
<LI><a href="#[8cd75d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Bgn_scd_exit
<LI><a href="#[56dec34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Buffer_Assign
<LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
<LI><a href="#[8cd74e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cb_gain_average_exit
<LI><a href="#[5950978]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateFileList
<LI><a href="#[4e4a484]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateMsgQueue
<LI><a href="#[8cd77b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;D_plsf_exit
<LI><a href="#[886ef44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_exit
<LI><a href="#[595088c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DeleteFileList
<LI><a href="#[57746bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DeleteHost
<LI><a href="#[5537164]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DeleteSubCmdRunStruct
<LI><a href="#[553772c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DumpJsObj
<LI><a href="#[553779c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetCleanVariableName
<LI><a href="#[58878b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Final
<LI><a href="#[5887924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Init
<LI><a href="#[73182bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Destroy
<LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
<LI><a href="#[5536f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_PostDataGet
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
<LI><a href="#[57165f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InsertCustomProcess
<LI><a href="#[8e0681c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Levinson_exit
<LI><a href="#[4e4a564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MailStart
<LI><a href="#[57742bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Final
<LI><a href="#[577432c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Init
<LI><a href="#[57167b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ObjFinal
<LI><a href="#[5716828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ObjInit
<LI><a href="#[8d738ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pitch_fr_exit
<LI><a href="#[582d194]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PopMsgNode
<LI><a href="#[886eecc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Filter_exit
<LI><a href="#[886ed64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Filter_init
<LI><a href="#[886ee54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Process_exit
<LI><a href="#[8886a20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pre_Process_exit
<LI><a href="#[582d124]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PushMsgNode
<LI><a href="#[8dff640]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Q_plsf_exit
<LI><a href="#[577472c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResolveHost
<LI><a href="#[4e4a410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SelectThread
<LI><a href="#[7ed02ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame_init
<LI><a href="#[7e89ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Encode_Frame_init
<LI><a href="#[7700938]">&lt&lt</a>&nbsp;&nbsp;&nbsp;TestNet_ThreadInit
<LI><a href="#[5887c20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;URLCGI_DelFD
<LI><a href="#[9b6401c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fclose
<LI><a href="#[9b64168]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fopen
<LI><a href="#[9cf688c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;aes_unwrap
<LI><a href="#[8cf370c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;agc_exit
<LI><a href="#[79b074c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bf_fclose
<LI><a href="#[8cc5d90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cl_ltp_exit
<LI><a href="#[8cc5b54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cl_ltp_init
<LI><a href="#[88869ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_exit
<LI><a href="#[5456468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;compare_image
<LI><a href="#[4eab8f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;del_auth_id
<LI><a href="#[5a68004]">&lt&lt</a>&nbsp;&nbsp;&nbsp;deleteSplitString
<LI><a href="#[7ddf7cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_merge
<LI><a href="#[8cd7400]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec_exit
<LI><a href="#[8cc5bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_enc_exit
<LI><a href="#[7967c40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_peer_unregister_methods
<LI><a href="#[8479f10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_abort
<LI><a href="#[8479f84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_deinit
<LI><a href="#[8479ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_init
<LI><a href="#[8ac6f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_processNotify
<LI><a href="#[8aaed90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_request
<LI><a href="#[7966f60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_deinit
<LI><a href="#[7966d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_init
<LI><a href="#[79680a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_rx_eapol
<LI><a href="#[83eda04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_txSuppRsp
<LI><a href="#[8cd76c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ec_gain_code_exit
<LI><a href="#[8cd7738]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ec_gain_pitch_exit
<LI><a href="#[7969720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[7967bcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_destroy
<LI><a href="#[7967508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_run
<LI><a href="#[9be5484]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_sock_table_destroy
<LI><a href="#[71ece7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;firmwareRequst
<LI><a href="#[5320e8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSDDevice
<LI><a href="#[52f8480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSMDevice
<LI><a href="#[7648eb4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_L2PTable_Init
<LI><a href="#[7317b20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;free_request
<LI><a href="#[9b80034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsAllocateDisk
<LI><a href="#[9b7fdc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_parse_partition
<LI><a href="#[8cc5e00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant_exit
<LI><a href="#[8cc5a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant_init
<LI><a href="#[8de369c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gain_adapt_exit
<LI><a href="#[8cd764c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gc_pred_exit
<LI><a href="#[9b26580]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_free_block
<LI><a href="#[4eaa824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlScanAP
<LI><a href="#[7966fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_deinit
<LI><a href="#[8cc5ee4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lpc_exit
<LI><a href="#[8cc5834]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lpc_init
<LI><a href="#[8cd7474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp_avg_exit
<LI><a href="#[8cc5e74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp_exit
<LI><a href="#[8cc5d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;p_ol_wgh_exit
<LI><a href="#[8cd7564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ph_disp_exit
<LI><a href="#[9cf6560]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_add
<LI><a href="#[9cf6c5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_deinit
<LI><a href="#[8356420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_free_entry
<LI><a href="#[7966ee4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_candidate_free
<LI><a href="#[8cf3694]">&lt&lt</a>&nbsp;&nbsp;&nbsp;preemphasis_exit
<LI><a href="#[5950b40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pushMail
<LI><a href="#[7ddf6e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rls_region
<LI><a href="#[9cf696c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_candidate_process
<LI><a href="#[9c8bbfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_eapol_send
<LI><a href="#[9c8aaf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_init
<LI><a href="#[5950a5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendMailMsg
<LI><a href="#[8ac8d0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_GET_METHOD_Enter
<LI><a href="#[8ac8d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_IDENTITY_Enter
<LI><a href="#[8ac9160]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_INITIALIZE_Enter
<LI><a href="#[8ac8c94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_METHOD_Enter
<LI><a href="#[8ac8e04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_NOTIFICATION_Enter
<LI><a href="#[8ac8b20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_SEND_RESPONSE_Enter
<LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
<LI><a href="#[83f20a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_Step
<LI><a href="#[5a6807c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;splitString
<LI><a href="#[8cc5ca8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ton_stab_exit
<LI><a href="#[755e5fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_msg_recv
<LI><a href="#[5456d4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_msg_timed_recv
<LI><a href="#[755fb9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_msg_try_send
<LI><a href="#[8cc5c38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vad1_exit
<LI><a href="#[4db5ef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_linkrefresh
<LI><a href="#[79687fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_blacklist_clear
<LI><a href="#[7975508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_blacklist_del
<LI><a href="#[79b025c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_free
<LI><a href="#[79aff0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_free_blob
<LI><a href="#[79afffc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_free_ssid
<LI><a href="#[9c67c68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_auth_alg
<LI><a href="#[9c62450]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_cipher
<LI><a href="#[9c67b6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_eap
<LI><a href="#[9c67f60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_key_mgmt
<LI><a href="#[9c6805c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_proto
<LI><a href="#[9c68154]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_psk
<LI><a href="#[82c8604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_str
<LI><a href="#[9c63ef8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_string
<LI><a href="#[9c612dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_wep_key
<LI><a href="#[79b05f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read
<LI><a href="#[79b2044]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_blob
<LI><a href="#[836e3ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_deinit
<LI><a href="#[836e42c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_init
<LI><a href="#[836e4a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_key
<LI><a href="#[839b2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_deinit
<LI><a href="#[84029a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless
<LI><a href="#[8402700]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless_custom
<LI><a href="#[8406cc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_range
<LI><a href="#[839b4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_scan_results
<LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
<LI><a href="#[9d00e70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
<LI><a href="#[7969aa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[7966e70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_deinit
<LI><a href="#[7966d18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_init
<LI><a href="#[796802c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
<LI><a href="#[79694b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_rsn_ie
<LI><a href="#[796952c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_wpa_ie
<LI><a href="#[7969434]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie
<LI><a href="#[50075a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_add_iface
<LI><a href="#[796ef34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
<LI><a href="#[796866c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_deinit
<LI><a href="#[79684f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_init
<LI><a href="#[9d004c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_decrypt_key_data
<LI><a href="#[50074b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deinit
<LI><a href="#[796e4b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_eapol_send
<LI><a href="#[9cfbebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_pmk
<LI><a href="#[7968204]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_scan_results
<LI><a href="#[7967cc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_global_ctrl_iface_deinit
<LI><a href="#[7967704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_global_ctrl_iface_init
<LI><a href="#[796f2b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_eapol
<LI><a href="#[797346c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface
<LI><a href="#[4a55a8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_main
<LI><a href="#[7967dcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_remove_iface
</UL><P><STRONG><a name="[7404e7c]"></a>calloc</STRONG> (ARM, 40 bytes, Stack size 16 bytes, malloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Called By]<UL><LI><a href="#[5d87d8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getaddrinfo
</UL><P><STRONG><a name="[7404e10]"></a>realloc</STRONG> (ARM, 188 bytes, Stack size 24 bytes, malloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[7404d70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_dlmalloc_Implementation::resize_alloc(unsigned char*, int, int*)
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[85e8764]">&lt&lt</a>&nbsp;&nbsp;&nbsp;findbuffer_node
<LI><a href="#[9be3758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_register_signal
<LI><a href="#[9be6e18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_sock_table_add_sock
<LI><a href="#[4e49d40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpAddBody
<LI><a href="#[79b048c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_add_prio_network
<LI><a href="#[9c67b6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_eap
<LI><a href="#[79b2044]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_blob
<LI><a href="#[7968204]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_scan_results
<LI><a href="#[819b314]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yy_get_next_buffer
</UL><P><STRONG><a name="[4e4ca48]"></a>mallinfo</STRONG> (ARM, 272 bytes, Stack size 104 bytes, malloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7404cc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_dlmalloc_Implementation::get_status(unsigned short, Cyg_Mempool_Status&)
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
</UL><P><STRONG><a name="[4c310dc]"></a>static Cyg_Scheduler::unlock_inner(unsigned int)</STRONG> (ARM, 180 bytes, Stack size 40 bytes, sched.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[73eb34c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::call_pending_DSRs()
<LI><a href="#[750a38c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::schedule()
<LI><a href="#[73eb2cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_thread_switch_context
</UL><BR>[Called By]<UL><LI><a href="#[5d21a5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[4c31164]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_safe_lock
<LI><a href="#[49d2594]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
<LI><a href="#[4c3041c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_thread_get_next
<LI><a href="#[4a03958]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_thread_find
<LI><a href="#[4a038e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_thread_get_info
<LI><a href="#[4c2de40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::rem_alarm(Cyg_Alarm*)
<LI><a href="#[4c8d73c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::add_alarm(Cyg_Alarm*)
<LI><a href="#[4c2e910]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::tick(unsigned int)
<LI><a href="#[4c2e038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::get_times(unsigned long long*, unsigned long long*)
<LI><a href="#[4ce7650]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_selwakeup
<LI><a href="#[4cb83cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pselect(int, fd_set*, fd_set*, fd_set*, timeval*, const int*)
<LI><a href="#[4c30900]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_SchedThread_Implementation::yield()
<LI><a href="#[7509c78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_SchedThread_Implementation::rotate_queue(int)
<LI><a href="#[7509be0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_SchedThread_Implementation::to_queue_head()
<LI><a href="#[4c2d170]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::wait()
<LI><a href="#[4c2d068]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::wait(unsigned long long)
<LI><a href="#[4c2cf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::trywait()
<LI><a href="#[4c2ce64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::post()
<LI><a href="#[4c2c8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::wait(unsigned int, unsigned char)
<LI><a href="#[4c2c7bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::wait(unsigned int, unsigned char, unsigned long long)
<LI><a href="#[4c2db7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::get()
<LI><a href="#[4c2da8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::get(unsigned long long)
<LI><a href="#[4c2d7c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::put(void*)
<LI><a href="#[4c2d6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::put(void*, unsigned long long)
<LI><a href="#[4c2c400]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c30c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::trylock()
<LI><a href="#[4c2c290]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4c2c19c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::release()
<LI><a href="#[4c2be8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::wait_inner(Cyg_Mutex*)
<LI><a href="#[4c2bd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::signal()
<LI><a href="#[4c2bc8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::broadcast()
<LI><a href="#[4c2bb7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::wait_inner(Cyg_Mutex*, unsigned long long)
<LI><a href="#[4d322e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4db51b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[7404e10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[4e4ca48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mallinfo
<LI><a href="#[501e958]">&lt&lt</a>&nbsp;&nbsp;&nbsp;interrupt_end
<LI><a href="#[4c30ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
<LI><a href="#[50253e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::counted_sleep(unsigned long long)
<LI><a href="#[852fb0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><P><STRONG><a name="[73eb248]"></a>static Cyg_Scheduler::start_cpu()</STRONG> (ARM, 44 bytes, Stack size 8 bytes, sched.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[750a38c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::schedule()
<LI><a href="#[73eb1cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_thread_load_context
</UL><P><STRONG><a name="[4c3126c]"></a>static Cyg_Scheduler::start()</STRONG> (ARM, 44 bytes, Stack size 8 bytes, sched.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[750a38c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::schedule()
<LI><a href="#[73eb1cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_thread_load_context
</UL><BR>[Called By]<UL><LI><a href="#[4c312ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_start
<LI><a href="#[5d5f800]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_start
</UL><P><STRONG><a name="[73eb140]"></a>Cyg_SchedThread::Cyg_SchedThread(Cyg_Thread*, unsigned int)</STRONG> (ARM, 64 bytes, Stack size 16 bytes, sched.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[7509d10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_SchedThread_Implementation::Cyg_SchedThread_Implementation(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c30fd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::Cyg_Thread(unsigned int, void (*)(unsigned int), unsigned int, char*, unsigned int, unsigned int)
</UL><P><STRONG><a name="[73db398]"></a>cyg_null_exception_handler(unsigned int, int, unsigned int)</STRONG> (ARM, 4 bytes, Stack size 0 bytes, except.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> except.o(C$$ctor)
<LI> except.o(.text)
</UL><P><STRONG><a name="[73db314]"></a>Cyg_Exception_Control::Cyg_Exception_Control()</STRONG> (ARM, 48 bytes, Stack size 8 bytes, except.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL><P><STRONG><a name="[4c2fd74]"></a>Cyg_Exception_Control::register_exception(int, void (*)(unsigned int, int, unsigned int), unsigned int, void (**)(unsigned int, int, unsigned int), unsigned int*)</STRONG> (ARM, 40 bytes, Stack size 4 bytes, except.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[4c2fea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_exception_set_handler
</UL><P><STRONG><a name="[4c2fc60]"></a>Cyg_Exception_Control::deregister_exception(int)</STRONG> (ARM, 20 bytes, Stack size 0 bytes, except.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[4c2fcf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_exception_clear_handler
</UL><P><STRONG><a name="[73db280]"></a>Cyg_Exception_Control::deliver_exception(int, unsigned int)</STRONG> (ARM, 12 bytes, Stack size 0 bytes, except.o(.text))
<BR>[Called By]<UL><LI><a href="#[4c2fb58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::deliver_exception(int, unsigned int)
</UL><P><STRONG><a name="[73db200]"></a>cyg_hal_deliver_exception</STRONG> (ARM, 24 bytes, Stack size 0 bytes, except.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2fb58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::deliver_exception(int, unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[79f6b5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exception_handler
</UL><P><STRONG><a name="[4c2fa48]"></a>Cyg_Interrupt::Cyg_Interrupt(unsigned int, int, unsigned int, unsigned int (*)(unsigned int, unsigned int), void (*)(unsigned int, unsigned int, unsigned int))</STRONG> (ARM, 76 bytes, Stack size 24 bytes, intr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c2fadc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_create
<LI><a href="#[4c8d268]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_RealTimeClock::Cyg_RealTimeClock()
</UL><P><STRONG><a name="[4c2f758]"></a>Cyg_Interrupt::detach()</STRONG> (ARM, 64 bytes, Stack size 0 bytes, intr.o(.text))
<BR>[Called By]<UL><LI><a href="#[4c2f7d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_detach
</UL><P><STRONG><a name="[4c2f950]"></a>Cyg_Interrupt::~Cyg_Interrupt()</STRONG> (ARM, 80 bytes, Stack size 8 bytes, intr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c8d848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL><BR>[Called By]<UL><LI><a href="#[4c8da38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[4c2f9cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_delete
</UL><P><STRONG><a name="[501ebd8]"></a>static Cyg_Interrupt::call_pending_DSRs_inner()</STRONG> (ARM, 116 bytes, Stack size 24 bytes, intr.o(.text), UNUSED)
<P><STRONG><a name="[501eb54]"></a>cyg_interrupt_call_pending_DSRs</STRONG> (ARM, 116 bytes, Stack size 24 bytes, intr.o(.text))
<BR>[Called By]<UL><LI><a href="#[501eac8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hal_interrupt_stack_call_pending_DSRs
</UL><P><STRONG><a name="[73eb34c]"></a>static Cyg_Interrupt::call_pending_DSRs()</STRONG> (ARM, 4 bytes, Stack size 0 bytes, intr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[501eac8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_interrupt_stack_call_pending_DSRs
</UL><BR>[Called By]<UL><LI><a href="#[4c310dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><P><STRONG><a name="[501ea48]"></a>Cyg_Interrupt::post_dsr()</STRONG> (ARM, 100 bytes, Stack size 4 bytes, intr.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[501e9cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_post_dsr
<LI><a href="#[501e958]">&lt&lt</a>&nbsp;&nbsp;&nbsp;interrupt_end
</UL><P><STRONG><a name="[501e9cc]"></a>cyg_interrupt_post_dsr</STRONG> (ARM, 4 bytes, Stack size 0 bytes, intr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[501ea48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Interrupt::post_dsr()
</UL><P><STRONG><a name="[501e958]"></a>interrupt_end</STRONG> (ARM, 80 bytes, Stack size 16 bytes, intr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[501ea48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Interrupt::post_dsr()
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[5d615cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;spurious_IRQ
</UL><P><STRONG><a name="[4c2f854]"></a>Cyg_Interrupt::attach()</STRONG> (ARM, 80 bytes, Stack size 8 bytes, intr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[501e8dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_interrupt_set_level
</UL><BR>[Called By]<UL><LI><a href="#[4c2f8d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_attach
<LI><a href="#[4c8d268]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_RealTimeClock::Cyg_RealTimeClock()
</UL><P><STRONG><a name="[4c2f654]"></a>static Cyg_Interrupt::get_vsr(unsigned int, void (**)())</STRONG> (ARM, 16 bytes, Stack size 0 bytes, intr.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[4c2f6dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_get_vsr
</UL><P><STRONG><a name="[4c2f54c]"></a>static Cyg_Interrupt::set_vsr(unsigned int, void (*)(), void (**)())</STRONG> (ARM, 64 bytes, Stack size 8 bytes, intr.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[4c2f5d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_set_vsr
</UL><P><STRONG><a name="[4c2f4c0]"></a>static Cyg_Interrupt::disable_interrupts()</STRONG> (ARM, 76 bytes, Stack size 4 bytes, intr.o(.text))
<BR>[Called By]<UL><LI><a href="#[4a555fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
</UL><P><STRONG><a name="[4c2f434]"></a>static Cyg_Interrupt::enable_interrupts()</STRONG> (ARM, 76 bytes, Stack size 4 bytes, intr.o(.text))
<BR>[Called By]<UL><LI><a href="#[4a55580]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><P><STRONG><a name="[4c2f334]"></a>static Cyg_Interrupt::mask_interrupt(unsigned int)</STRONG> (ARM, 48 bytes, Stack size 16 bytes, intr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[501e7f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_interrupt_mask
</UL><BR>[Called By]<UL><LI><a href="#[4c2f3bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
</UL><P><STRONG><a name="[4c2f21c]"></a>static Cyg_Interrupt::mask_interrupt_intunsafe(unsigned int)</STRONG> (ARM, 4 bytes, Stack size 0 bytes, intr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[501e7f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_interrupt_mask
</UL><BR>[Called By]<UL><LI><a href="#[4c2f2b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask_intunsafe
</UL><P><STRONG><a name="[4c2f114]"></a>static Cyg_Interrupt::unmask_interrupt(unsigned int)</STRONG> (ARM, 48 bytes, Stack size 16 bytes, intr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[501e774]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_interrupt_unmask
</UL><BR>[Called By]<UL><LI><a href="#[4c2f1a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
<LI><a href="#[4c8d268]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_RealTimeClock::Cyg_RealTimeClock()
</UL><P><STRONG><a name="[4c2effc]"></a>static Cyg_Interrupt::unmask_interrupt_intunsafe(unsigned int)</STRONG> (ARM, 4 bytes, Stack size 0 bytes, intr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[501e774]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_interrupt_unmask
</UL><BR>[Called By]<UL><LI><a href="#[4c2f090]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask_intunsafe
</UL><P><STRONG><a name="[4c2eeec]"></a>static Cyg_Interrupt::acknowledge_interrupt(unsigned int)</STRONG> (ARM, 4 bytes, Stack size 0 bytes, intr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[501e6f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_interrupt_acknowledge
</UL><BR>[Called By]<UL><LI><a href="#[4c2ef7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_acknowledge
<LI><a href="#[4c8d35c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_RealTimeClock::isr(unsigned int, unsigned int)
</UL><P><STRONG><a name="[4c2ede0]"></a>static Cyg_Interrupt::configure_interrupt(unsigned int, int, int)</STRONG> (ARM, 4 bytes, Stack size 0 bytes, intr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[501e678]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_interrupt_configure
</UL><BR>[Called By]<UL><LI><a href="#[4c2ee70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_configure
</UL><P><STRONG><a name="[4c30ee8]"></a>static Cyg_Thread::exit()</STRONG> (ARM, 132 bytes, Stack size 16 bytes, thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2de40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::rem_alarm(Cyg_Alarm*)
<LI><a href="#[750a130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::rem_thread(Cyg_Thread*)
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c30f64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_thread_exit
<LI><a href="#[4c2d170]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::wait()
<LI><a href="#[4c2d068]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::wait(unsigned long long)
<LI><a href="#[4c2c8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::wait(unsigned int, unsigned char)
<LI><a href="#[4c2c7bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::wait(unsigned int, unsigned char, unsigned long long)
<LI><a href="#[4c2db7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::get()
<LI><a href="#[4c2da8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::get(unsigned long long)
<LI><a href="#[4c2d7c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::put(void*)
<LI><a href="#[4c2d6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::put(void*, unsigned long long)
<LI><a href="#[4c2c400]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2be8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::wait_inner(Cyg_Mutex*)
<LI><a href="#[4c2bb7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::wait_inner(Cyg_Mutex*, unsigned long long)
<LI><a href="#[50255c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_HardwareThread::thread_entry(Cyg_Thread*)
<LI><a href="#[5025464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::counted_sleep()
<LI><a href="#[50253e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::counted_sleep(unsigned long long)
<LI><a href="#[4c30df4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::kill()
<LI><a href="#[4c30594]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::delay(unsigned long long)
<LI><a href="#[74766bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_exit
<LI><a href="#[5cef464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::alloc()
<LI><a href="#[5cef360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::alloc(unsigned long long)
<LI><a href="#[5cef9a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::alloc(int)
<LI><a href="#[5cef898]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::alloc(int, unsigned long long)
</UL><P><STRONG><a name="[50255c4]"></a>static Cyg_HardwareThread::thread_entry(Cyg_Thread*)</STRONG> (ARM, 68 bytes, Stack size 8 bytes, thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
</UL><BR>[Address Reference Count : 1]<UL><LI> thread.o(.text)
</UL><P><STRONG><a name="[74eb464]"></a>Cyg_Thread::wake()</STRONG> (ARM, 112 bytes, Stack size 16 bytes, thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[750a640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::remove(Cyg_Thread*)
<LI><a href="#[750a1d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::add_thread(Cyg_Thread*)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[5d21a5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[4c2ce64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::post()
<LI><a href="#[4c2cb88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::~Cyg_Flag()
<LI><a href="#[4c2ca94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::setbits(unsigned int)
<LI><a href="#[4c2dc68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::~Cyg_Mbox()
<LI><a href="#[4c2d7c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::put(void*)
<LI><a href="#[4c2d6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::put(void*, unsigned long long)
<LI><a href="#[4c2d5e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::tryput(void*)
<LI><a href="#[4c2c290]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4c2bd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::signal()
<LI><a href="#[4c2bc8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::broadcast()
<LI><a href="#[4db51b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[50254e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_ThreadTimer::alarm(Cyg_Alarm*, unsigned int)
<LI><a href="#[502535c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::counted_wake()
<LI><a href="#[4c30a94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::release()
<LI><a href="#[4c30df4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::kill()
<LI><a href="#[5cef4e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::~Cyg_Mempool_Fixed()
<LI><a href="#[5cef254]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::free(unsigned char*)
<LI><a href="#[5cefa24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::~Cyg_Mempool_Variable()
<LI><a href="#[5cef788]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::free(unsigned char*, int)
<LI><a href="#[74baa30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mboxt2<void*, 10>::wakeup_putter()
</UL><P><STRONG><a name="[50254e8]"></a>static Cyg_ThreadTimer::alarm(Cyg_Alarm*, unsigned int)</STRONG> (ARM, 128 bytes, Stack size 8 bytes, thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
</UL><BR>[Address Reference Count : 1]<UL><LI> thread.o(.text)
</UL><P><STRONG><a name="[4c30fd8]"></a>Cyg_Thread::Cyg_Thread(unsigned int, void (*)(unsigned int), unsigned int, char*, unsigned int, unsigned int)</STRONG> (ARM, 412 bytes, Stack size 32 bytes, thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[73eb140]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_SchedThread::Cyg_SchedThread(Cyg_Thread*, unsigned int)
<LI><a href="#[4c2e31c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::Cyg_Alarm(Cyg_Counter*, void (*)(Cyg_Alarm*, unsigned int), unsigned int)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[7509fe8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::register_thread(Cyg_Thread*)
</UL><BR>[Called By]<UL><LI><a href="#[8a908a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
<LI><a href="#[4a55998]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4c30c78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::reinitialize()
<LI><a href="#[50250d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_IdleThread::Cyg_IdleThread()
</UL><P><STRONG><a name="[4c30c78]"></a>Cyg_Thread::reinitialize()</STRONG> (ARM, 96 bytes, Stack size 24 bytes, thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2de40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::rem_alarm(Cyg_Alarm*)
<LI><a href="#[7509f44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::deregister_thread(Cyg_Thread*)
<LI><a href="#[4c30fd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::Cyg_Thread(unsigned int, void (*)(unsigned int), unsigned int, char*, unsigned int, unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4a55920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
</UL><P><STRONG><a name="[4c30d78]"></a>Cyg_Thread::~Cyg_Thread()</STRONG> (ARM, 184 bytes, Stack size 16 bytes, thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7509f44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::deregister_thread(Cyg_Thread*)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[4c2e22c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::~Cyg_Alarm()
<LI><a href="#[4c8d848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL><BR>[Called By]<UL><LI><a href="#[8a90718]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[4c30e70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delete
<LI><a href="#[5025058]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_IdleThread::~Cyg_IdleThread()
</UL><P><STRONG><a name="[74eb4e0]"></a>static Cyg_Thread::sleep()</STRONG> (ARM, 104 bytes, Stack size 16 bytes, thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[750a130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::rem_thread(Cyg_Thread*)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4c2d170]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::wait()
<LI><a href="#[4c2d068]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::wait(unsigned long long)
<LI><a href="#[4c2c8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::wait(unsigned int, unsigned char)
<LI><a href="#[4c2c7bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::wait(unsigned int, unsigned char, unsigned long long)
<LI><a href="#[4c2db7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::get()
<LI><a href="#[4c2da8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::get(unsigned long long)
<LI><a href="#[4c2d7c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::put(void*)
<LI><a href="#[4c2d6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::put(void*, unsigned long long)
<LI><a href="#[4c2c400]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2be8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::wait_inner(Cyg_Mutex*)
<LI><a href="#[4c2bb7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::wait_inner(Cyg_Mutex*, unsigned long long)
<LI><a href="#[5025464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::counted_sleep()
<LI><a href="#[50253e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::counted_sleep(unsigned long long)
<LI><a href="#[4c30594]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::delay(unsigned long long)
<LI><a href="#[5cef464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::alloc()
<LI><a href="#[5cef360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::alloc(unsigned long long)
<LI><a href="#[5cef9a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::alloc(int)
<LI><a href="#[5cef898]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::alloc(int, unsigned long long)
</UL><P><STRONG><a name="[5025464]"></a>static Cyg_Thread::counted_sleep()</STRONG> (ARM, 116 bytes, Stack size 8 bytes, thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74eb4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
</UL><P><STRONG><a name="[50253e0]"></a>static Cyg_Thread::counted_sleep(unsigned long long)</STRONG> (ARM, 300 bytes, Stack size 32 bytes, thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2e130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::initialize(unsigned long long, unsigned long long)
<LI><a href="#[74eb4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
<LI><a href="#[4c2de40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::rem_alarm(Cyg_Alarm*)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
</UL><P><STRONG><a name="[502535c]"></a>Cyg_Thread::counted_wake()</STRONG> (ARM, 72 bytes, Stack size 8 bytes, thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><P><STRONG><a name="[50252d4]"></a>Cyg_Thread::cancel_counted_wake()</STRONG> (ARM, 44 bytes, Stack size 8 bytes, thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><P><STRONG><a name="[4c30cfc]"></a>Cyg_Thread::suspend()</STRONG> (ARM, 76 bytes, Stack size 8 bytes, thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[750a130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::rem_thread(Cyg_Thread*)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4a0377c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_thread_suspend
</UL><P><STRONG><a name="[4c30bfc]"></a>Cyg_Thread::resume()</STRONG> (ARM, 88 bytes, Stack size 8 bytes, thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[750a1d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::add_thread(Cyg_Thread*)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4a55920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
<LI><a href="#[750a08c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::set_idle_thread(Cyg_Thread*, unsigned int)
<LI><a href="#[5d5fb14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_iso_c_start
</UL><P><STRONG><a name="[5025250]"></a>Cyg_Thread::force_resume()</STRONG> (ARM, 72 bytes, Stack size 8 bytes, thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[750a1d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::add_thread(Cyg_Thread*)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><P><STRONG><a name="[4c30a94]"></a>Cyg_Thread::release()</STRONG> (ARM, 104 bytes, Stack size 8 bytes, thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
</UL><BR>[Called By]<UL><LI><a href="#[4c30b10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_thread_release
<LI><a href="#[4c2c19c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::release()
</UL><P><STRONG><a name="[4c30df4]"></a>Cyg_Thread::kill()</STRONG> (ARM, 252 bytes, Stack size 16 bytes, thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
<LI><a href="#[750a1d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::add_thread(Cyg_Thread*)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[4c2de40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::rem_alarm(Cyg_Alarm*)
<LI><a href="#[750a130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::rem_thread(Cyg_Thread*)
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
</UL><BR>[Called By]<UL><LI><a href="#[4c30e70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delete
<LI><a href="#[4c30b88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_thread_kill
</UL><P><STRONG><a name="[4c30714]"></a>Cyg_Thread::set_priority(int)</STRONG> (ARM, 240 bytes, Stack size 24 bytes, thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[750a130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::rem_thread(Cyg_Thread*)
<LI><a href="#[750a640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::remove(Cyg_Thread*)
<LI><a href="#[7509f44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::deregister_thread(Cyg_Thread*)
<LI><a href="#[7509fe8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::register_thread(Cyg_Thread*)
<LI><a href="#[750a1d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::add_thread(Cyg_Thread*)
<LI><a href="#[7509b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)
<LI><a href="#[750a270]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler_Implementation::set_need_reschedule(Cyg_Thread*)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4c30798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_thread_set_priority
</UL><P><STRONG><a name="[4c30594]"></a>Cyg_Thread::delay(unsigned long long)</STRONG> (ARM, 188 bytes, Stack size 24 bytes, thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74eb4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[4c2e130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::initialize(unsigned long long, unsigned long long)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[4c2de40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::rem_alarm(Cyg_Alarm*)
<LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
</UL><BR>[Called By]<UL><LI><a href="#[4a03430]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
</UL><P><STRONG><a name="[4c2fb58]"></a>Cyg_Thread::deliver_exception(int, unsigned int)</STRONG> (ARM, 24 bytes, Stack size 0 bytes, thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[73db280]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Exception_Control::deliver_exception(int, unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4c2fbe0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_exception_call_handler
<LI><a href="#[73db200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_deliver_exception
</UL><P><STRONG><a name="[4c30298]"></a>static Cyg_Thread::new_data_index()</STRONG> (ARM, 80 bytes, Stack size 16 bytes, thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[750a318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_lsbindex
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4c3031c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_thread_new_data_index
</UL><P><STRONG><a name="[4c30190]"></a>static Cyg_Thread::free_data_index(int)</STRONG> (ARM, 44 bytes, Stack size 0 bytes, thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4c30218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_thread_free_data_index
</UL><P><STRONG><a name="[50251d4]"></a>idle_thread_main(unsigned int)</STRONG> (ARM, 28 bytes, Stack size 8 bytes, thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5025158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_idle_thread_action
</UL><BR>[Address Reference Count : 1]<UL><LI> thread.o(.text)
</UL><P><STRONG><a name="[50250d8]"></a>Cyg_IdleThread::Cyg_IdleThread()</STRONG> (ARM, 176 bytes, Stack size 32 bytes, thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[4c30fd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::Cyg_Thread(unsigned int, void (*)(unsigned int), unsigned int, char*, unsigned int, unsigned int)
<LI><a href="#[750a08c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::set_idle_thread(Cyg_Thread*, unsigned int)
</UL><BR>[Address Reference Count : 1]<UL><LI> thread.o(C$$ctor)
</UL><P><STRONG><a name="[50582b0]"></a>cyg_fd_init</STRONG> (ARM, 56 bytes, Stack size 0 bytes, fd.o(.text))
<BR>[Called By]<UL><LI><a href="#[5081190]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Fileio_Init_Class::Cyg_Fileio_Init_Class()
</UL><P><STRONG><a name="[4caa024]"></a>cyg_file_alloc</STRONG> (ARM, 92 bytes, Stack size 16 bytes, fd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4bba590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;open
<LI><a href="#[4ced420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[50a2590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;accept
</UL><P><STRONG><a name="[4ca9f3c]"></a>cyg_file_free</STRONG> (ARM, 40 bytes, Stack size 16 bytes, fd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4bba590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;open
<LI><a href="#[4ced420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[50a2590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;accept
</UL><P><STRONG><a name="[4bfeaa8]"></a>cyg_file_unlock</STRONG> (ARM, 76 bytes, Stack size 16 bytes, fd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ca9e58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_unlock
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4bffcac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;readwritev(int, const CYG_IOVEC_TAG*, int, int)
<LI><a href="#[4bfe8f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lseek
<LI><a href="#[4bfe888]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bfe81c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsync
<LI><a href="#[4bfe7ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fdatasync
<LI><a href="#[4bfe740]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fstat
<LI><a href="#[4bfe6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fpathconf
<LI><a href="#[50a3a30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_sock_unlock(CYG_FILE_TAG*)
</UL><P><STRONG><a name="[4bfeb1c]"></a>cyg_file_lock</STRONG> (ARM, 76 bytes, Stack size 16 bytes, fd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ca9ecc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_lock
<LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
</UL><BR>[Called By]<UL><LI><a href="#[4bffcac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;readwritev(int, const CYG_IOVEC_TAG*, int, int)
<LI><a href="#[4bfe8f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lseek
<LI><a href="#[4bfe888]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bfe81c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsync
<LI><a href="#[4bfe7ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fdatasync
<LI><a href="#[4bfe740]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fstat
<LI><a href="#[4bfe6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fpathconf
<LI><a href="#[50a39ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_sock_lock(CYG_FILE_TAG*)
</UL><P><STRONG><a name="[4bfe5f0]"></a>cyg_fd_alloc</STRONG> (ARM, 96 bytes, Stack size 16 bytes, fd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4bfe664]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fcntl
<LI><a href="#[4bba590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;open
<LI><a href="#[4ced420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[50a2590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;accept
</UL><P><STRONG><a name="[4bfe57c]"></a>cyg_fd_assign</STRONG> (ARM, 108 bytes, Stack size 24 bytes, fd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[5058da0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fp_ucount_dec(CYG_FILE_TAG*)
</UL><BR>[Called By]<UL><LI><a href="#[4bfe664]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fcntl
<LI><a href="#[4bba590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;open
<LI><a href="#[5058248]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dup
<LI><a href="#[50581dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dup2
<LI><a href="#[4ced420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[50a2590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;accept
</UL><P><STRONG><a name="[4bfe960]"></a>cyg_fd_free</STRONG> (ARM, 96 bytes, Stack size 16 bytes, fd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[5058da0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fp_ucount_dec(CYG_FILE_TAG*)
</UL><BR>[Called By]<UL><LI><a href="#[4bba4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4bba590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;open
<LI><a href="#[4ced420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[50a2590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;accept
</UL><P><STRONG><a name="[4bfec00]"></a>cyg_fp_get</STRONG> (ARM, 72 bytes, Stack size 16 bytes, fd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4bffcac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;readwritev(int, const CYG_IOVEC_TAG*, int, int)
<LI><a href="#[4bba4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4bfe8f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lseek
<LI><a href="#[4bfe888]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bfe81c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsync
<LI><a href="#[4bfe7ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fdatasync
<LI><a href="#[4bfe740]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fstat
<LI><a href="#[4bfe6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fpathconf
<LI><a href="#[4bfe664]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fcntl
<LI><a href="#[4cb83cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pselect(int, fd_set*, fd_set*, fd_set*, timeval*, const int*)
<LI><a href="#[50a2590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;accept
<LI><a href="#[4ced118]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bind
<LI><a href="#[50a2524]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[50a24b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getpeername
<LI><a href="#[7317a3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getsockname
<LI><a href="#[50a2444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getsockopt
<LI><a href="#[73179d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;listen
<LI><a href="#[50a23d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;recvmsg
<LI><a href="#[4cecf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;recvfrom
<LI><a href="#[50a2300]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendmsg
<LI><a href="#[4cecfd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendto
<LI><a href="#[4ced344]">&lt&lt</a>&nbsp;&nbsp;&nbsp;setsockopt
<LI><a href="#[50a2224]">&lt&lt</a>&nbsp;&nbsp;&nbsp;shutdown
</UL><P><STRONG><a name="[4bfeb90]"></a>cyg_fp_free</STRONG> (ARM, 4 bytes, Stack size 0 bytes, fd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5058da0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fp_ucount_dec(CYG_FILE_TAG*)
</UL><BR>[Called By]<UL><LI><a href="#[4bffcac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;readwritev(int, const CYG_IOVEC_TAG*, int, int)
<LI><a href="#[4bba4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4bfe8f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lseek
<LI><a href="#[4bfe888]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bfe81c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsync
<LI><a href="#[4bfe7ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fdatasync
<LI><a href="#[4bfe740]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fstat
<LI><a href="#[4bfe6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fpathconf
<LI><a href="#[4bfe664]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fcntl
<LI><a href="#[4cb83cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pselect(int, fd_set*, fd_set*, fd_set*, timeval*, const int*)
<LI><a href="#[50a2590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;accept
<LI><a href="#[4ced118]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bind
<LI><a href="#[50a2524]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[50a24b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getpeername
<LI><a href="#[7317a3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getsockname
<LI><a href="#[50a2444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getsockopt
<LI><a href="#[73179d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;listen
<LI><a href="#[50a23d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;recvmsg
<LI><a href="#[4cecf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;recvfrom
<LI><a href="#[50a2300]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendmsg
<LI><a href="#[4cecfd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendto
<LI><a href="#[4ced344]">&lt&lt</a>&nbsp;&nbsp;&nbsp;setsockopt
<LI><a href="#[50a2224]">&lt&lt</a>&nbsp;&nbsp;&nbsp;shutdown
</UL><P><STRONG><a name="[5058248]"></a>dup</STRONG> (ARM, 216 bytes, Stack size 24 bytes, fd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bfe57c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fd_assign
<LI><a href="#[5058da0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fp_ucount_dec(CYG_FILE_TAG*)
</UL><P><STRONG><a name="[50581dc]"></a>dup2</STRONG> (ARM, 168 bytes, Stack size 24 bytes, fd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4bfe57c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fd_assign
<LI><a href="#[5058da0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fp_ucount_dec(CYG_FILE_TAG*)
</UL><P><STRONG><a name="[5081190]"></a>Cyg_Fileio_Init_Class::Cyg_Fileio_Init_Class()</STRONG> (ARM, 240 bytes, Stack size 40 bytes, misc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[50582b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fd_init
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4ca9b64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;chdir
</UL><BR>[Called By]<UL><LI><a href="#[5061a68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
</UL><P><STRONG><a name="[4ca9fb0]"></a>cyg_mtab_lookup</STRONG> (ARM, 276 bytes, Stack size 36 bytes, misc.o(.text))
<BR>[Called By]<UL><LI><a href="#[4bba590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;open
<LI><a href="#[4ca9d80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;unlink
<LI><a href="#[4ca9d14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mkdir
<LI><a href="#[4ca9ca8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rmdir
<LI><a href="#[4ca9c3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rename
<LI><a href="#[4ca9bd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;link
<LI><a href="#[4ca9b64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;chdir
<LI><a href="#[4ca9af8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;stat
<LI><a href="#[4ca9a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pathconf
</UL><P><STRONG><a name="[5081124]"></a>mount</STRONG> (ARM, 316 bytes, Stack size 32 bytes, misc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
</UL><P><STRONG><a name="[50810b8]"></a>umount</STRONG> (ARM, 200 bytes, Stack size 16 bytes, misc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><P><STRONG><a name="[4ca9ecc]"></a>cyg_fs_lock</STRONG> (ARM, 112 bytes, Stack size 16 bytes, misc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
</UL><BR>[Called By]<UL><LI><a href="#[4bba590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;open
<LI><a href="#[4ca9d80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;unlink
<LI><a href="#[4ca9d14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mkdir
<LI><a href="#[4ca9ca8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rmdir
<LI><a href="#[4ca9c3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rename
<LI><a href="#[4ca9bd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;link
<LI><a href="#[4ca9b64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;chdir
<LI><a href="#[4ca9af8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;stat
<LI><a href="#[4ca9a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pathconf
<LI><a href="#[4ca99b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getcwd
<LI><a href="#[4bfeb1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_file_lock
<LI><a href="#[5058da0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fp_ucount_dec(CYG_FILE_TAG*)
</UL><P><STRONG><a name="[4ca9e58]"></a>cyg_fs_unlock</STRONG> (ARM, 112 bytes, Stack size 16 bytes, misc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4bba590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;open
<LI><a href="#[4ca9d80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;unlink
<LI><a href="#[4ca9d14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mkdir
<LI><a href="#[4ca9ca8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rmdir
<LI><a href="#[4ca9c3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rename
<LI><a href="#[4ca9bd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;link
<LI><a href="#[4ca9b64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;chdir
<LI><a href="#[4ca9af8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;stat
<LI><a href="#[4ca9a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pathconf
<LI><a href="#[4ca99b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getcwd
<LI><a href="#[4bfeaa8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_file_unlock
<LI><a href="#[5058da0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fp_ucount_dec(CYG_FILE_TAG*)
</UL><P><STRONG><a name="[5081044]"></a>cyg_timestamp</STRONG> (ARM, 12 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2710]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_WallClock::get_current_time()
</UL><BR>[Called By]<UL><LI><a href="#[85e8048]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_direntry
<LI><a href="#[85e8c9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_open
<LI><a href="#[85e8ad4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_rename
<LI><a href="#[85e8a64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_link
<LI><a href="#[85e92fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_fo_read
<LI><a href="#[85e9288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_fo_write
<LI><a href="#[85e7ba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;alloc_node
</UL><P><STRONG><a name="[5080fcc]"></a>cyg_fileio_enosys</STRONG> (ARM, 8 bytes, Stack size 0 bytes, misc.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> romfs.o(.data)
<LI> ramfs.o(.data)
</UL><P><STRONG><a name="[5080f54]"></a>cyg_fileio_erofs</STRONG> (ARM, 8 bytes, Stack size 0 bytes, misc.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> romfs.o(.data)
<LI> romfs.o(fstab)
</UL><P><STRONG><a name="[5080edc]"></a>cyg_fileio_enoerr</STRONG> (ARM, 8 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)
<P><STRONG><a name="[5080e64]"></a>cyg_fileio_enotdir</STRONG> (ARM, 8 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)
<P><STRONG><a name="[5080dec]"></a>cyg_fileio_seltrue</STRONG> (ARM, 8 bytes, Stack size 0 bytes, misc.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> romfs.o(.data)
<LI> ramfs.o(.data)
</UL><P><STRONG><a name="[508d0f4]"></a>rand_r</STRONG> (ARM, 80 bytes, Stack size 0 bytes, rand.o(.text), UNUSED)
<P><STRONG><a name="[4e4d338]"></a>rand</STRONG> (ARM, 84 bytes, Stack size 0 bytes, rand.o(.text))
<BR>[Called By]<UL><LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[4e4d088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppot_connect
<LI><a href="#[9ac1488]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_drand48
<LI><a href="#[9ac1414]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_mrand48
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4def1bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetRandomIP
<LI><a href="#[77005c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;client_init_for_write
<LI><a href="#[77e76b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_udp_endpoint
<LI><a href="#[5c07c4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;execute_random_maneuver
<LI><a href="#[5c07bc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;execute_small_sideways_random_maneuver
<LI><a href="#[7a5ad64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;os_get_random
<LI><a href="#[784377c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;random_bytes
<LI><a href="#[78437f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;random_id
<LI><a href="#[4f73b70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_mcu_cmd_with_obstacle_avoidance
</UL><P><STRONG><a name="[508d088]"></a>srand</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rand.o(.text))
<BR>[Called By]<UL><LI><a href="#[9ac13a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_srand48
<LI><a href="#[7700190]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WirelessTest_Test_Entry
<LI><a href="#[5459a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_StartEncode
</UL><P><STRONG><a name="[501e774]"></a>hal_interrupt_unmask</STRONG> (ARM, 20 bytes, Stack size 0 bytes, w99702_misc.o(.text))
<BR>[Called By]<UL><LI><a href="#[4c2f114]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::unmask_interrupt(unsigned int)
<LI><a href="#[4c2effc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::unmask_interrupt_intunsafe(unsigned int)
<LI><a href="#[5d78f54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_plf_serial_control
</UL><P><STRONG><a name="[4c8d1ec]"></a>hal_clock_initialize</STRONG> (ARM, 152 bytes, Stack size 16 bytes, w99702_misc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4c8d268]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_RealTimeClock::Cyg_RealTimeClock()
</UL><P><STRONG><a name="[4c8d2e8]"></a>hal_clock_reset</STRONG> (ARM, 12 bytes, Stack size 0 bytes, w99702_misc.o(.text))
<BR>[Called By]<UL><LI><a href="#[4c8d35c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_RealTimeClock::isr(unsigned int, unsigned int)
</UL><P><STRONG><a name="[7531c0c]"></a>hal_clock_read</STRONG> (ARM, 28 bytes, Stack size 0 bytes, w99702_misc.o(.text))
<BR>[Called By]<UL><LI><a href="#[75325d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[50d9870]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_arc4random
<LI><a href="#[5138704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_random_bytes
</UL><P><STRONG><a name="[5094690]"></a>hal_enable_cache</STRONG> (ARM, 220 bytes, Stack size 0 bytes, w99702_misc.o(.text))
<BR>[Called By]<UL><LI><a href="#[5094434]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hal_hardware_init
</UL><P><STRONG><a name="[5094618]"></a>hal_disable_cache</STRONG> (ARM, 44 bytes, Stack size 8 bytes, w99702_misc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5094598]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sys_flush_and_clean_dcache
</UL><P><STRONG><a name="[5094524]"></a>hal_flush_cache</STRONG> (ARM, 80 bytes, Stack size 8 bytes, w99702_misc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5094598]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sys_flush_and_clean_dcache
</UL><P><STRONG><a name="[50944ac]"></a>hal_invalid_cache</STRONG> (ARM, 16 bytes, Stack size 0 bytes, w99702_misc.o(.text), UNUSED)
<P><STRONG><a name="[5094434]"></a>hal_hardware_init</STRONG> (ARM, 144 bytes, Stack size 8 bytes, w99702_misc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7531cfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_if_init
<LI><a href="#[5094598]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sys_flush_and_clean_dcache
<LI><a href="#[5094690]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_enable_cache
</UL><BR>[Called By]<UL><LI><a href="#[5d5f3cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;start
</UL><P><STRONG><a name="[50943c0]"></a>hal_IRQ_handler</STRONG> (ARM, 24 bytes, Stack size 0 bytes, w99702_misc.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[5d61640]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_IRQ_or_FIQ
</UL><P><STRONG><a name="[501e7f0]"></a>hal_interrupt_mask</STRONG> (ARM, 20 bytes, Stack size 0 bytes, w99702_misc.o(.text))
<BR>[Called By]<UL><LI><a href="#[4c2f334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::mask_interrupt(unsigned int)
<LI><a href="#[4c2f21c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::mask_interrupt_intunsafe(unsigned int)
<LI><a href="#[5d79bc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_plf_serial_init_channel
<LI><a href="#[5d78f54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_plf_serial_control
</UL><P><STRONG><a name="[501e6f4]"></a>hal_interrupt_acknowledge</STRONG> (ARM, 32 bytes, Stack size 0 bytes, w99702_misc.o(.text))
<BR>[Called By]<UL><LI><a href="#[4c2eeec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::acknowledge_interrupt(unsigned int)
<LI><a href="#[5d78cdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_plf_serial_getc
<LI><a href="#[5d78c58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_plf_serial_getc_timeout
<LI><a href="#[5d78f54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_plf_serial_control
<LI><a href="#[5d78ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_plf_serial_isr
</UL><P><STRONG><a name="[501e678]"></a>hal_interrupt_configure</STRONG> (ARM, 100 bytes, Stack size 0 bytes, w99702_misc.o(.text))
<BR>[Called By]<UL><LI><a href="#[4c2ede0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Interrupt::configure_interrupt(unsigned int, int, int)
</UL><P><STRONG><a name="[501e8dc]"></a>hal_interrupt_set_level</STRONG> (ARM, 44 bytes, Stack size 0 bytes, w99702_misc.o(.text))
<BR>[Called By]<UL><LI><a href="#[4c2f854]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Interrupt::attach()
</UL><P><STRONG><a name="[509434c]"></a>hal_show_IRQ</STRONG> (ARM, 4 bytes, Stack size 0 bytes, w99702_misc.o(.text), UNUSED)
<P><STRONG><a name="[50942d8]"></a>hal_delay_us</STRONG> (ARM, 72 bytes, Stack size 0 bytes, w99702_misc.o(.text), UNUSED)
<P><STRONG><a name="[5094268]"></a>hal_reset</STRONG> (ARM, 40 bytes, Stack size 4 bytes, w99702_misc.o(.text), UNUSED)
<P><STRONG><a name="[50a25fc]"></a>cyg_nstab_init</STRONG> (ARM, 84 bytes, Stack size 16 bytes, socket.o(.text), UNUSED)
<P><STRONG><a name="[4ced420]"></a>socket</STRONG> (ARM, 360 bytes, Stack size 40 bytes, socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfe5f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fd_alloc
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4caa024]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_alloc
<LI><a href="#[4bfe960]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fd_free
<LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4ca9f3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_free
<LI><a href="#[4bfe57c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fd_assign
</UL><BR>[Called By]<UL><LI><a href="#[4ced504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_bootp
<LI><a href="#[4a556e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_net
<LI><a href="#[4d0cfac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_loopback_interface
<LI><a href="#[4a557c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;build_bootp_record
<LI><a href="#[50d98e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp_down_net
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[4cecd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_dns_res_init
<LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[5da8790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getifaddrs
<LI><a href="#[9ac35b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_init
<LI><a href="#[9ac34c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_cifproxyarp
<LI><a href="#[9ac639c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dodefaultroute
<LI><a href="#[9ac308c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_available
<LI><a href="#[9ac1e48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifproxyarp
<LI><a href="#[7686ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_LOCAL_Process
<LI><a href="#[7686d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Process
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4a5583c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownInterface
<LI><a href="#[5859bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetDevInterface
<LI><a href="#[4defb84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetGeneralIP
<LI><a href="#[4def22c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetPubIPInfo
<LI><a href="#[562bef8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWiFiStrength
<LI><a href="#[4e4cd74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWlanChannel
<LI><a href="#[4eaa974]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWlanOperationMode
<LI><a href="#[5887994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Process
<LI><a href="#[4e4db00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InitNetInterface
<LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
<LI><a href="#[4e4db78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetCameraParam
<LI><a href="#[4e4cab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanHostSleepCfg
<LI><a href="#[734d334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanHostWakeUpCfg
<LI><a href="#[4e4cb30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanPSMode
<LI><a href="#[77e76b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_udp_endpoint
<LI><a href="#[5a94228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_debug_socket
<LI><a href="#[73197a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
<LI><a href="#[4e4d500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
<LI><a href="#[7a37d28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_send_subscribe
<LI><a href="#[836c178]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_private_info
<LI><a href="#[4dee54c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetMac
<LI><a href="#[4eaa824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlScanAP
<LI><a href="#[7967ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_init
<LI><a href="#[836b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell2param
<LI><a href="#[836bc58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell_ioctl
<LI><a href="#[5859b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mc_rx_socket
<LI><a href="#[7f76498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mc_tx_socket
<LI><a href="#[7a3abf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_desc
<LI><a href="#[7a391f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_serv_xml
<LI><a href="#[59274e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelCreate
<LI><a href="#[7a3a4f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soap_invoke
<LI><a href="#[5a668cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcpConnectHost
<LI><a href="#[8180814]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_listen
<LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
<LI><a href="#[836e42c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_init
<LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
<LI><a href="#[797383c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_drv_get_mac_addr
<LI><a href="#[79684f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_init
<LI><a href="#[7967704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_global_ctrl_iface_init
</UL><P><STRONG><a name="[50a2590]"></a>accept</STRONG> (ARM, 324 bytes, Stack size 32 bytes, socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bfe5f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fd_alloc
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
<LI><a href="#[4caa024]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_alloc
<LI><a href="#[4bfe960]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fd_free
<LI><a href="#[50a39ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_lock(CYG_FILE_TAG*)
<LI><a href="#[50a3a30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_unlock(CYG_FILE_TAG*)
<LI><a href="#[4ca9f3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_free
<LI><a href="#[4bfe57c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fd_assign
</UL><BR>[Called By]<UL><LI><a href="#[4e4d48c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;accept_client
<LI><a href="#[4f73218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_incoming_calls
<LI><a href="#[8180324]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_accept
<LI><a href="#[7a37b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_connect_notify
<LI><a href="#[77ac634]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_sock_request
</UL><P><STRONG><a name="[4ced118]"></a>bind</STRONG> (ARM, 148 bytes, Stack size 24 bytes, socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[50a39ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_lock(CYG_FILE_TAG*)
<LI><a href="#[50a3a30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_unlock(CYG_FILE_TAG*)
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
</UL><BR>[Called By]<UL><LI><a href="#[4ced504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_bootp
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[77e76b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_udp_endpoint
<LI><a href="#[5a94228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_debug_socket
<LI><a href="#[73197a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
<LI><a href="#[4e4d500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
<LI><a href="#[5859b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mc_rx_socket
<LI><a href="#[8180814]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_listen
<LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
<LI><a href="#[7967704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_global_ctrl_iface_init
</UL><P><STRONG><a name="[50a2524]"></a>connect</STRONG> (ARM, 148 bytes, Stack size 24 bytes, socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[50a39ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_lock(CYG_FILE_TAG*)
<LI><a href="#[50a3a30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_unlock(CYG_FILE_TAG*)
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
</UL><BR>[Called By]<UL><LI><a href="#[4cecd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_dns_res_init
<LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[7686ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_LOCAL_Process
<LI><a href="#[7686d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Process
<LI><a href="#[5887994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Process
<LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
<LI><a href="#[77e76b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_udp_endpoint
<LI><a href="#[7a37d28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_send_subscribe
<LI><a href="#[7a3abf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_desc
<LI><a href="#[7a391f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_serv_xml
<LI><a href="#[59274e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelCreate
<LI><a href="#[7a3a4f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soap_invoke
<LI><a href="#[5a668cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcpConnectHost
</UL><P><STRONG><a name="[50a24b4]"></a>getpeername</STRONG> (ARM, 152 bytes, Stack size 24 bytes, socket.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[50a39ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_lock(CYG_FILE_TAG*)
<LI><a href="#[50a3a30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_unlock(CYG_FILE_TAG*)
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
</UL><P><STRONG><a name="[7317a3c]"></a>getsockname</STRONG> (ARM, 152 bytes, Stack size 24 bytes, socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[50a39ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_lock(CYG_FILE_TAG*)
<LI><a href="#[50a3a30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_unlock(CYG_FILE_TAG*)
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
</UL><BR>[Called By]<UL><LI><a href="#[77e76b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_udp_endpoint
<LI><a href="#[73197a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
</UL><P><STRONG><a name="[50a2444]"></a>getsockopt</STRONG> (ARM, 164 bytes, Stack size 32 bytes, socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[50a39ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_lock(CYG_FILE_TAG*)
<LI><a href="#[50a3a30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_unlock(CYG_FILE_TAG*)
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
</UL><BR>[Called By]<UL><LI><a href="#[7686ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_LOCAL_Process
<LI><a href="#[7686d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Process
<LI><a href="#[5887994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Process
<LI><a href="#[5a668cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcpConnectHost
</UL><P><STRONG><a name="[73179d0]"></a>listen</STRONG> (ARM, 140 bytes, Stack size 16 bytes, socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[50a39ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_lock(CYG_FILE_TAG*)
<LI><a href="#[50a3a30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_unlock(CYG_FILE_TAG*)
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
</UL><BR>[Called By]<UL><LI><a href="#[5a94228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_debug_socket
<LI><a href="#[73197a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
<LI><a href="#[4e4d500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
<LI><a href="#[8180814]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_listen
<LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[50a23d8]"></a>recvmsg</STRONG> (ARM, 176 bytes, Stack size 24 bytes, socket.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[50a39ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_lock(CYG_FILE_TAG*)
<LI><a href="#[50a3a30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_unlock(CYG_FILE_TAG*)
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
</UL><P><STRONG><a name="[4cecf64]"></a>recvfrom</STRONG> (ARM, 236 bytes, Stack size 72 bytes, socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[50a39ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_lock(CYG_FILE_TAG*)
<LI><a href="#[50a3a30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_unlock(CYG_FILE_TAG*)
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
</UL><BR>[Called By]<UL><LI><a href="#[4ced504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_bootp
<LI><a href="#[50a236c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;recv
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[5859b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mc_rx_socket
<LI><a href="#[7a3b248]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_adv_srch
<LI><a href="#[7a3b2bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_recv_response
</UL><P><STRONG><a name="[50a236c]"></a>recv</STRONG> (ARM, 40 bytes, Stack size 16 bytes, socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4cecf64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;recvfrom
</UL><BR>[Called By]<UL><LI><a href="#[577464c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FlushSocket
<LI><a href="#[7a37b78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_recv_notify
<LI><a href="#[7a37cb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_recv_response
<LI><a href="#[7a3b1d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;recv_xml
<LI><a href="#[7a3b160]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soap_recv_response
<LI><a href="#[7a37a90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpro_resp
</UL><P><STRONG><a name="[50a2300]"></a>sendmsg</STRONG> (ARM, 160 bytes, Stack size 24 bytes, socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[50a39ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_lock(CYG_FILE_TAG*)
<LI><a href="#[50a3a30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_unlock(CYG_FILE_TAG*)
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
</UL><BR>[Called By]<UL><LI><a href="#[77e73ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_rtp_packet
</UL><P><STRONG><a name="[4cecfd4]"></a>sendto</STRONG> (ARM, 224 bytes, Stack size 72 bytes, socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[50a39ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_lock(CYG_FILE_TAG*)
<LI><a href="#[50a3a30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_unlock(CYG_FILE_TAG*)
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
</UL><BR>[Called By]<UL><LI><a href="#[4ced504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_bootp
<LI><a href="#[50a2294]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[7f76498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mc_tx_socket
<LI><a href="#[7a3b248]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_adv_srch
<LI><a href="#[7a3b418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_send_advertisement
<LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[50a2294]"></a>send</STRONG> (ARM, 40 bytes, Stack size 16 bytes, socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4cecfd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sendto
</UL><BR>[Called By]<UL><LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
<LI><a href="#[4f75930]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dprint_to_socket
<LI><a href="#[7a37b78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_recv_notify
<LI><a href="#[7a37d28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_send_subscribe
<LI><a href="#[7a3abf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_desc
<LI><a href="#[7a391f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_serv_xml
<LI><a href="#[77e8878]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtcp_send
<LI><a href="#[7a3a4f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soap_invoke
</UL><P><STRONG><a name="[4ced344]"></a>setsockopt</STRONG> (ARM, 164 bytes, Stack size 32 bytes, socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[50a39ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_lock(CYG_FILE_TAG*)
<LI><a href="#[50a3a30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_unlock(CYG_FILE_TAG*)
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
</UL><BR>[Called By]<UL><LI><a href="#[4ced504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_bootp
<LI><a href="#[4a556e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_net
<LI><a href="#[4d0cfac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_loopback_interface
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[4e4d48c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;accept_client
<LI><a href="#[73197a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
<LI><a href="#[4e4d500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
<LI><a href="#[8180324]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_accept
<LI><a href="#[77ac634]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_sock_request
<LI><a href="#[5859b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mc_rx_socket
<LI><a href="#[7f76498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mc_tx_socket
<LI><a href="#[5a65ae0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;setFdAttribute
<LI><a href="#[8180814]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_listen
<LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[50a2224]"></a>shutdown</STRONG> (ARM, 140 bytes, Stack size 16 bytes, socket.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[50a39ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_lock(CYG_FILE_TAG*)
<LI><a href="#[50a3a30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_sock_unlock(CYG_FILE_TAG*)
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
</UL><P><STRONG><a name="[50d98e4]"></a>do_dhcp_down_net</STRONG> (ARM, 400 bytes, Stack size 56 bytes, dhcp_prot.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced48c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_route_reinit
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
</UL><P><STRONG><a name="[4d0cd6c]"></a>do_dhcp</STRONG> (ARM, 4748 bytes, Stack size 1432 bytes, dhcp_prot.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced48c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_route_reinit
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[4ced344]">&gt&gt</a>&nbsp;&nbsp;&nbsp;setsockopt
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4ced1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memset
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4ced118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bind
<LI><a href="#[50da49c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;reset_timeout
<LI><a href="#[50d9870]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_arc4random
<LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[50dac8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_fixed_tag
<LI><a href="#[50da510]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_default_dhcp_tags
<LI><a href="#[50dad00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dhcp_size_for_send
<LI><a href="#[4cecfd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sendto
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4cecf64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;recvfrom
<LI><a href="#[50daf08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dhcp_size
<LI><a href="#[50da428]">&gt&gt</a>&nbsp;&nbsp;&nbsp;next_timeout
<LI><a href="#[743b118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcmp
<LI><a href="#[4ceceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_bootp_option
<LI><a href="#[50da3b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_lease
<LI><a href="#[50d98e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;do_dhcp_down_net
<LI><a href="#[4a556e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_net
<LI><a href="#[50dab2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;unset_tag
<LI><a href="#[4c2decc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_disable
<LI><a href="#[4c2e2a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_delete
</UL><BR>[Called By]<UL><LI><a href="#[4d0cebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_all_network_interfaces
<LI><a href="#[50d97fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp_release
<LI><a href="#[50fcba4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dhcp_bind
</UL><P><STRONG><a name="[50d97fc]"></a>do_dhcp_release</STRONG> (ARM, 72 bytes, Stack size 8 bytes, dhcp_prot.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d0cd6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
</UL><P><STRONG><a name="[50fcba4]"></a>dhcp_bind</STRONG> (ARM, 164 bytes, Stack size 24 bytes, dhcp_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d3fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_init
<LI><a href="#[4d0cd6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[4a556e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_net
</UL><BR>[Called By]<UL><LI><a href="#[50fca4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dhcp_mgt_entry
</UL><P><STRONG><a name="[50fcb34]"></a>dhcp_halt</STRONG> (ARM, 8 bytes, Stack size 0 bytes, dhcp_support.o(.text), UNUSED)
<P><STRONG><a name="[50fcac0]"></a>dhcp_release</STRONG> (ARM, 8 bytes, Stack size 0 bytes, dhcp_support.o(.text), UNUSED)
<P><STRONG><a name="[50fca4c]"></a>dhcp_mgt_entry</STRONG> (ARM, 124 bytes, Stack size 16 bytes, dhcp_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_wait
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[50fcba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dhcp_bind
<LI><a href="#[4d0cebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_all_network_interfaces
<LI><a href="#[4d0cfac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_loopback_interface
<LI><a href="#[4dee7dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;OnSetIP
</UL><BR>[Address Reference Count : 1]<UL><LI> dhcp_support.o(.text)
</UL><P><STRONG><a name="[4d0ccec]"></a>dhcp_start_dhcp_mgt_thread</STRONG> (ARM, 132 bytes, Stack size 24 bytes, dhcp_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d3fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_init
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
</UL><BR>[Called By]<UL><LI><a href="#[4d0cebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_all_network_interfaces
</UL><P><STRONG><a name="[510ff98]"></a>inet_aton</STRONG> (ARM, 596 bytes, Stack size 56 bytes, inet_addr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[743f850]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isdigit
<LI><a href="#[510ff28]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isxdigit
<LI><a href="#[510febc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;islower
<LI><a href="#[743f8bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isspace
</UL><BR>[Called By]<UL><LI><a href="#[4d0cf3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;inet_addr
<LI><a href="#[511937c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyname
</UL><P><STRONG><a name="[4d0cf3c]"></a>inet_addr</STRONG> (ARM, 28 bytes, Stack size 8 bytes, inet_addr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[510ff98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_aton
</UL><BR>[Called By]<UL><LI><a href="#[4a557c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;build_bootp_record
<LI><a href="#[7686ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_LOCAL_Process
<LI><a href="#[4e4dd60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InitDefaultParam
<LI><a href="#[7a3abf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_desc
<LI><a href="#[59274e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelCreate
<LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[4cece7c]"></a>inet_ntoa</STRONG> (ARM, 72 bytes, Stack size 24 bytes, inet_ntoa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ba2a10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_sprintf
</UL><BR>[Called By]<UL><LI><a href="#[4a55754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;show_bootp
<LI><a href="#[4a556e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_net
<LI><a href="#[4d0cfac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_loopback_interface
<LI><a href="#[5859bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetDevInterface
<LI><a href="#[4def22c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetPubIPInfo
<LI><a href="#[77e76b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_udp_endpoint
<LI><a href="#[73197a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
<LI><a href="#[4e4d500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
<LI><a href="#[8180324]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_accept
<LI><a href="#[7a3a970]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gen_ssdp_pkt
<LI><a href="#[7a37d28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_send_subscribe
<LI><a href="#[80eb4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_PLAY
<LI><a href="#[80eb528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_SETUP
<LI><a href="#[7a3a4f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soap_invoke
<LI><a href="#[811935c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;write_access_log
</UL><P><STRONG><a name="[5119464]"></a>real_name</STRONG> (ARM, 232 bytes, Stack size 32 bytes, dns.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[5119b6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_answer
</UL><P><STRONG><a name="[51193f0]"></a>gethostbyaddr</STRONG> (ARM, 432 bytes, Stack size 592 bytes, dns.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c30118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_get_data
<LI><a href="#[511a5d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free_hent
<LI><a href="#[4c30024]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_set_data
<LI><a href="#[4c2ff24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_rem_destructor
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[5119cd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;build_query
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[511a010]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_recv
<LI><a href="#[5119b6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;parse_answer
<LI><a href="#[4c2ffa4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_add_destructor
</UL><P><STRONG><a name="[511937c]"></a>gethostbyname</STRONG> (ARM, 996 bytes, Stack size 800 bytes, dns.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_get_data
<LI><a href="#[511a5d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free_hent
<LI><a href="#[4c30024]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_set_data
<LI><a href="#[4c2ff24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_rem_destructor
<LI><a href="#[743f7e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isalpha
<LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[5119310]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isalnum
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[5119cd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;build_query
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[510ff98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_aton
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4c2ffa4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_add_destructor
<LI><a href="#[511a010]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_recv
<LI><a href="#[5119b6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;parse_answer
<LI><a href="#[4fc219c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcat
</UL><BR>[Called By]<UL><LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[87967f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_check_options
<LI><a href="#[58876ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DDNS_Update_IP
<LI><a href="#[577472c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResolveHost
<LI><a href="#[5a6815c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;netConnect
</UL><P><STRONG><a name="[4cece08]"></a>setdomainname</STRONG> (ARM, 120 bytes, Stack size 24 bytes, dns.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[4a556e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_net
</UL><P><STRONG><a name="[511929c]"></a>getdomainname</STRONG> (ARM, 100 bytes, Stack size 16 bytes, dns.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
</UL><P><STRONG><a name="[511922c]"></a>hstrerror</STRONG> (ARM, 192 bytes, Stack size 0 bytes, dns.o(.text), UNUSED)
<P><STRONG><a name="[4cecd90]"></a>cyg_dns_res_init</STRONG> (ARM, 332 bytes, Stack size 40 bytes, dns.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4c30218]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_free_data_index
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[51191b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getservbyname
<LI><a href="#[50a2524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[4c3031c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_new_data_index
</UL><BR>[Called By]<UL><LI><a href="#[4a556e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_net
<LI><a href="#[4dee770]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetIP
</UL><P><STRONG><a name="[51391c4]"></a>cyg_panic</STRONG> (ARM, 48 bytes, Stack size 8 bytes, tcpip_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5139150]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_test_exit
</UL><BR>[Called By]<UL><LI><a href="#[516dcb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifafree
<LI><a href="#[516dbcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtfree
<LI><a href="#[516da78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[516d360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtinit
<LI><a href="#[51851fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_send
<LI><a href="#[5183d74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_clalloc
<LI><a href="#[51380c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mbinit
<LI><a href="#[7a915fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copym
<LI><a href="#[7a9158c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copym2
<LI><a href="#[7a9151c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copydata
<LI><a href="#[7a91140]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_apply
<LI><a href="#[7ace920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_output
<LI><a href="#[7af42a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;looutput
<LI><a href="#[516dd1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_init
<LI><a href="#[5137c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arpintr
<LI><a href="#[7b309cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arptimer
<LI><a href="#[7b4f88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_init
<LI><a href="#[863e994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbdrop
<LI><a href="#[863e928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbflush
<LI><a href="#[863e8b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbrelease
<LI><a href="#[863e7d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soreserve
<LI><a href="#[863e228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbappendaddr
<LI><a href="#[863e1b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbappendcontrol
<LI><a href="#[7ace6e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;raw_usrreq
<LI><a href="#[869e31c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_control
<LI><a href="#[869e90c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_lifaddr_ioctl
<LI><a href="#[7b4f508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_error
<LI><a href="#[8aa4bc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soclose
<LI><a href="#[8aa4b58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soaccept
<LI><a href="#[86d7b5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hashinit
<LI><a href="#[8b1cba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_accept
<LI><a href="#[86f68a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_usrreq
<LI><a href="#[86f634c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_usrreq
<LI><a href="#[8b82a80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_pulloutofband
<LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
<LI><a href="#[8bc558c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_setpersist
<LI><a href="#[8b827d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL><P><STRONG><a name="[51390dc]"></a>cyg_net_malloc</STRONG> (ARM, 28 bytes, Stack size 0 bytes, tcpip_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5139060]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_var_alloc
<LI><a href="#[5138fe0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_var_try_alloc
</UL><BR>[Called By]<UL><LI><a href="#[516d998]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_setgate
<LI><a href="#[516da78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[516cfd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_timer_queue_create
<LI><a href="#[516ce64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_timer_add
<LI><a href="#[51de018]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AllocateCmdBuffer
<LI><a href="#[4d32200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_add_card
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[53323b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;register_sdiohost
<LI><a href="#[7ace838]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_usrreq
<LI><a href="#[7acf000]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_msg2
<LI><a href="#[7ace920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_output
<LI><a href="#[7ad5bd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_attachsetup
<LI><a href="#[7af3f80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_addmulti
<LI><a href="#[7ace4b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_addmask
<LI><a href="#[7b2c524]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_inithead
<LI><a href="#[516dd1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_init
<LI><a href="#[7b2cdbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_new_radix_mask
<LI><a href="#[7b2f9a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arp_rtrequest
<LI><a href="#[7b3f8e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipv4_input
<LI><a href="#[51b5844]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_fw
<LI><a href="#[52aa504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_bg_scan_config_ioctl
<LI><a href="#[51ded60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wireless_send_event
<LI><a href="#[51839cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wireless_process_ioctl
<LI><a href="#[9a8a1f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppalloc
<LI><a href="#[863e768]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sonewconn1
<LI><a href="#[8696e2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_input
<LI><a href="#[8696cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_joingroup
<LI><a href="#[869e3fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_addmulti
<LI><a href="#[869e31c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_control
<LI><a href="#[86d7a78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcballoc
<LI><a href="#[872a1cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_setmoptions
<LI><a href="#[8aa4df0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;socreate
<LI><a href="#[86d7b5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hashinit
<LI><a href="#[8b82be0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_reass
<LI><a href="#[8ba1938]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_newtcpcb
</UL><P><STRONG><a name="[5138f6c]"></a>cyg_net_free</STRONG> (ARM, 16 bytes, Stack size 0 bytes, tcpip_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5138ef0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_var_free
</UL><BR>[Called By]<UL><LI><a href="#[516dcb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifafree
<LI><a href="#[516dc38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_timer_remove_all
<LI><a href="#[516dbcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtfree
<LI><a href="#[516d998]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_setgate
<LI><a href="#[516da78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[516d360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtinit
<LI><a href="#[516d1a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_timer_timer
<LI><a href="#[516ced8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_timer_queue_destroy
<LI><a href="#[516ce64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_timer_add
<LI><a href="#[51ddfa4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FreeCmdBuffer
<LI><a href="#[4d32200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_add_card
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[53323b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;register_sdiohost
<LI><a href="#[7ace838]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_usrreq
<LI><a href="#[7acf000]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_msg2
<LI><a href="#[7ace920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_output
<LI><a href="#[7ad5bd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_attachsetup
<LI><a href="#[7ad5a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_detach
<LI><a href="#[7af3ff4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_ifdetach
<LI><a href="#[7af3f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_delmulti
<LI><a href="#[7ace4b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_addmask
<LI><a href="#[7b2f9a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arp_rtrequest
<LI><a href="#[7b4f73c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_freef
<LI><a href="#[7b4f6cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[7c01528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fw_buffer_free
<LI><a href="#[7c014ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_setup_station_hw
<LI><a href="#[51b4fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_free_adapter
<LI><a href="#[52aa504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_bg_scan_config_ioctl
<LI><a href="#[51ded60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wireless_send_event
<LI><a href="#[51839cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wireless_process_ioctl
<LI><a href="#[9a8a100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppdealloc
<LI><a href="#[863e768]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sonewconn1
<LI><a href="#[8672a10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;raw_detach
<LI><a href="#[8672930]">&lt&lt</a>&nbsp;&nbsp;&nbsp;raw_disconnect
<LI><a href="#[7ad5a04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rti_delete
<LI><a href="#[869e3fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_addmulti
<LI><a href="#[869e238]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_delmulti
<LI><a href="#[86d774c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbdetach
<LI><a href="#[872a1cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_setmoptions
<LI><a href="#[86d76d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_freemoptions
<LI><a href="#[86729a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sofree
<LI><a href="#[8b82be0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_reass
<LI><a href="#[8b82af8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_close
</UL><P><STRONG><a name="[5138e78]"></a>cyg_net_mbuf_alloc</STRONG> (ARM, 36 bytes, Stack size 0 bytes, tcpip_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5138d90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_fix_alloc
<LI><a href="#[5138d10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_fix_try_alloc
</UL><BR>[Called By]<UL><LI><a href="#[5185604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_recv
<LI><a href="#[5183de4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_retry
<LI><a href="#[5183ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_retryhdr
<LI><a href="#[516d2f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_get
<LI><a href="#[7a91748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_gethdr
<LI><a href="#[7a916d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_getclr
<LI><a href="#[7a91668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_prepend
<LI><a href="#[7a915fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copym
<LI><a href="#[7a9158c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copym2
<LI><a href="#[7a913d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_pullup
<LI><a href="#[7a91364]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_pullup2
<LI><a href="#[7a912f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_inject
<LI><a href="#[7a91288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_split
<LI><a href="#[7a91218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_devget
<LI><a href="#[7af42a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;looutput
<LI><a href="#[9a8a5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_inproc
<LI><a href="#[863e228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbappendaddr
<LI><a href="#[8696d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_sendpkt
<LI><a href="#[7b4f498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[872efdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppgetm
<LI><a href="#[9ac289c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppwrite
<LI><a href="#[8aa4a0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sosend
<LI><a href="#[8b827d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL><P><STRONG><a name="[5138c98]"></a>cyg_net_mbuf_free</STRONG> (ARM, 32 bytes, Stack size 0 bytes, tcpip_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5138c1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_fix_free
</UL><BR>[Called By]<UL><LI><a href="#[516d288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[5184008]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[9a8a5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_inproc
<LI><a href="#[863e994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbdrop
<LI><a href="#[863e140]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbdroprecord
<LI><a href="#[872eba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppasyncstart
<LI><a href="#[8aa499c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soreceive
</UL><P><STRONG><a name="[5138ba0]"></a>cyg_net_cluster_alloc</STRONG> (ARM, 12 bytes, Stack size 0 bytes, tcpip_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5138d10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_fix_try_alloc
</UL><BR>[Called By]<UL><LI><a href="#[5183d74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_clalloc
</UL><P><STRONG><a name="[5138b24]"></a>cyg_kmem_print_stats</STRONG> (ARM, 384 bytes, Stack size 40 bytes, tcpip_support.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5138aa4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_var_get_info
<LI><a href="#[5138a24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_fix_get_info
</UL><P><STRONG><a name="[51389a8]"></a>cyg_net_get_mem_stats</STRONG> (ARM, 96 bytes, Stack size 8 bytes, tcpip_support.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5138a24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_fix_get_info
<LI><a href="#[5138aa4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_var_get_info
</UL><P><STRONG><a name="[5138938]"></a>cyg_mtocl</STRONG> (ARM, 20 bytes, Stack size 0 bytes, tcpip_support.o(.text))
<BR>[Called By]<UL><LI><a href="#[5185604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_recv
<LI><a href="#[516d288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[5184008]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[7a915fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copym
<LI><a href="#[7a9158c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copym2
<LI><a href="#[7a91364]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_pullup2
<LI><a href="#[7a91288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_split
<LI><a href="#[7a91218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_devget
<LI><a href="#[7a911ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_zero
<LI><a href="#[7af42a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;looutput
<LI><a href="#[9a8a5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_inproc
<LI><a href="#[863e994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbdrop
<LI><a href="#[863e140]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbdroprecord
<LI><a href="#[863e0cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbcreatecontrol
<LI><a href="#[872efdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppgetm
<LI><a href="#[872eba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppasyncstart
<LI><a href="#[9ac289c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppwrite
<LI><a href="#[8aa4a0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sosend
<LI><a href="#[8aa499c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soreceive
<LI><a href="#[8b1c96c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_setsockopt
<LI><a href="#[8b82764]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_template
<LI><a href="#[8b827d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL><P><STRONG><a name="[513885c]"></a>cyg_cltom</STRONG> (ARM, 16 bytes, Stack size 0 bytes, tcpip_support.o(.text), UNUSED)
<P><STRONG><a name="[51387ec]"></a>net_memcpy</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tcpip_support.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><P><STRONG><a name="[513877c]"></a>net_memset</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tcpip_support.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ced1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memset
</UL><P><STRONG><a name="[50d9870]"></a>cyg_arc4random</STRONG> (ARM, 64 bytes, Stack size 8 bytes, tcpip_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7531c0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_clock_read
</UL><BR>[Called By]<UL><LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[8696e2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_input
<LI><a href="#[8696cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_joingroup
<LI><a href="#[86d7920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbbind
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[86f65f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_init
<LI><a href="#[86f6510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_slowtimo
<LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
</UL><P><STRONG><a name="[5138704]"></a>get_random_bytes</STRONG> (ARM, 104 bytes, Stack size 32 bytes, tcpip_support.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7531c0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_clock_read
</UL><P><STRONG><a name="[5138694]"></a>microtime</STRONG> (ARM, 60 bytes, Stack size 8 bytes, tcpip_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5139150]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_test_exit
</UL><BR>[Called By]<UL><LI><a href="#[7b3f954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iptime
<LI><a href="#[86f62dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL><P><STRONG><a name="[5138620]"></a>getmicrotime</STRONG> (ARM, 40 bytes, Stack size 0 bytes, tcpip_support.o(.text))
<BR>[Called By]<UL><LI><a href="#[9a8a270]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppoutput
<LI><a href="#[9a8a100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppdealloc
<LI><a href="#[9a8a5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_inproc
<LI><a href="#[872eba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppasyncstart
<LI><a href="#[9ac2f24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppopen
</UL><P><STRONG><a name="[51385ac]"></a>get_mono_time</STRONG> (ARM, 56 bytes, Stack size 8 bytes, tcpip_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5139150]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_test_exit
</UL><BR>[Called By]<UL><LI><a href="#[516d1a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_timer_timer
<LI><a href="#[516ce64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_timer_add
</UL><P><STRONG><a name="[5138540]"></a>csignal</STRONG> (ARM, 44 bytes, Stack size 8 bytes, tcpip_support.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5139150]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_test_exit
</UL><P><STRONG><a name="[51384d4]"></a>copyout</STRONG> (ARM, 28 bytes, Stack size 8 bytes, tcpip_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[7ad5620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifconf
<LI><a href="#[7ad55b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifioctl
<LI><a href="#[872de8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;uiomove
<LI><a href="#[8b1cba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_accept
<LI><a href="#[8b1cac8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_getname
<LI><a href="#[8b1c9e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_getsockopt
<LI><a href="#[8b1c88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_recvmsg
<LI><a href="#[8bcd528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_ident
</UL><P><STRONG><a name="[5138468]"></a>copyin</STRONG> (ARM, 28 bytes, Stack size 8 bytes, tcpip_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[9a8a088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppioctl
<LI><a href="#[872de8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;uiomove
<LI><a href="#[8b1a640]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sockargs
<LI><a href="#[8b1c96c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_setsockopt
<LI><a href="#[8bcd528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_ident
</UL><P><STRONG><a name="[51383fc]"></a>ovbcopy</STRONG> (ARM, 16 bytes, Stack size 0 bytes, tcpip_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[7b4f498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[872a15c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_pcbopts
<LI><a href="#[9a89e9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sl_uncompress_tcp
</UL><P><STRONG><a name="[513838c]"></a>setsoftnet</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tcpip_support.o(.text))
<BR>[Called By]<UL><LI><a href="#[5183de4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_retry
<LI><a href="#[5183ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_retryhdr
</UL><P><STRONG><a name="[4d1ee1c]"></a>cyg_net_init</STRONG> (ARM, 536 bytes, Stack size 40 bytes, tcpip_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a54d2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_do_net_init
<LI><a href="#[4c2ccf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_init
<LI><a href="#[5138310]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_timeout_init
<LI><a href="#[513829c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_tsleep_init
<LI><a href="#[5138220]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_var_create
<LI><a href="#[51381a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_fix_create
<LI><a href="#[51380c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mbinit
<LI><a href="#[4c2e4a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_real_time_clock
<LI><a href="#[4c2e61c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_clock_to_counter
<LI><a href="#[4c2e3b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_create
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4c2e1b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_initialize
<LI><a href="#[4c2dfc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_enable
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
<LI><a href="#[5138058]">&gt&gt</a>&nbsp;&nbsp;&nbsp;loopattach
<LI><a href="#[5137fe0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppattach
<LI><a href="#[5137f74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifinit
<LI><a href="#[5137f04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;domaininit
</UL><BR>[Called By]<UL><LI><a href="#[4d1ef88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
</UL><P><STRONG><a name="[5137e8c]"></a>show_network_tables</STRONG> (ARM, 748 bytes, Stack size 232 bytes, tcpip_support.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[5137d40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getnameinfo
<LI><a href="#[51396c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_mask
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><P><STRONG><a name="[516de64]"></a>rtable_init</STRONG> (ARM, 68 bytes, Stack size 16 bytes, route.o(.text), UNUSED)
<P><STRONG><a name="[516dd88]"></a>route_init</STRONG> (ARM, 72 bytes, Stack size 16 bytes, route.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516dd1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rn_init
</UL><BR>[Address Reference Count : 1]<UL><LI> rtsock.o(.data)
</UL><P><STRONG><a name="[516dcb0]"></a>ifafree</STRONG> (ARM, 68 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><BR>[Called By]<UL><LI><a href="#[7acf06c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_setif
<LI><a href="#[7ad5c44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;link_rtrequest
<LI><a href="#[869e31c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_control
</UL><P><STRONG><a name="[516dc38]"></a>rt_timer_remove_all</STRONG> (ARM, 108 bytes, Stack size 8 bytes, route.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><P><STRONG><a name="[516dbcc]"></a>rtfree</STRONG> (ARM, 332 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><BR>[Called By]<UL><LI><a href="#[516d998]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_setgate
<LI><a href="#[516da78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[516d51c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtredirect
<LI><a href="#[516d360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtinit
<LI><a href="#[7ace920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_output
<LI><a href="#[7af4380]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_output
<LI><a href="#[7b4f5ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_forward
<LI><a href="#[7b3fa34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_rtaddr
<LI><a href="#[86d7834]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_selectsrc
<LI><a href="#[86d774c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbdetach
<LI><a href="#[86d7420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_losing
<LI><a href="#[86d73b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_rtchange
<LI><a href="#[7b4f498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[872a1cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_setmoptions
</UL><P><STRONG><a name="[516db58]"></a>rt_maskedcopy</STRONG> (ARM, 104 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
</UL><BR>[Called By]<UL><LI><a href="#[516da78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[516d360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtinit
</UL><P><STRONG><a name="[516dae8]"></a>rtalloc1</STRONG> (ARM, 324 bytes, Stack size 80 bytes, route.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[516da78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[516da08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_missmsg
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[516d998]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_setgate
<LI><a href="#[516d924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithroute
<LI><a href="#[516d58c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtalloc
<LI><a href="#[516d51c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtredirect
<LI><a href="#[516d360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtinit
<LI><a href="#[7af4380]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_output
<LI><a href="#[7b3077c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arplookup
<LI><a href="#[7b4f5ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_forward
</UL><P><STRONG><a name="[516d998]"></a>rt_setgate</STRONG> (ARM, 296 bytes, Stack size 40 bytes, route.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[516dbcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtfree
<LI><a href="#[516dae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtalloc1
</UL><BR>[Called By]<UL><LI><a href="#[516da78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[516d51c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtredirect
<LI><a href="#[7ace920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_output
<LI><a href="#[7b2f9a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arp_rtrequest
</UL><P><STRONG><a name="[516d924]"></a>ifa_ifwithroute</STRONG> (ARM, 228 bytes, Stack size 16 bytes, route.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d8ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithdstaddr
<LI><a href="#[516d838]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithaddr
<LI><a href="#[516d7c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithnet
<LI><a href="#[516dae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtalloc1
<LI><a href="#[516d74c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifaof_ifpforaddr
</UL><BR>[Called By]<UL><LI><a href="#[516da78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[7acf06c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_setif
</UL><P><STRONG><a name="[516da78]"></a>rtrequest</STRONG> (ARM, 852 bytes, Stack size 56 bytes, route.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[516dbcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtfree
<LI><a href="#[516d924]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithroute
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[516d998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_setgate
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[516db58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_maskedcopy
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[516dae8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtalloc1
<LI><a href="#[516d6dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtalloc2
<LI><a href="#[516d51c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtredirect
<LI><a href="#[516d4b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtioctl
<LI><a href="#[516d360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtinit
<LI><a href="#[516d1a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_timer_timer
<LI><a href="#[516ced8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_timer_queue_destroy
<LI><a href="#[516edb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_reinit_rtdelete
<LI><a href="#[7ace920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_output
<LI><a href="#[7ad5ae4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_detach_rtdelete
<LI><a href="#[7b309cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arptimer
<LI><a href="#[86d7420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_losing
</UL><P><STRONG><a name="[4ced48c]"></a>cyg_route_reinit</STRONG> (ARM, 60 bytes, Stack size 16 bytes, route.o(.text))
<BR>[Called By]<UL><LI><a href="#[4ced504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_bootp
<LI><a href="#[50d98e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp_down_net
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
</UL><P><STRONG><a name="[516d6dc]"></a>rtalloc2</STRONG> (ARM, 332 bytes, Stack size 80 bytes, route.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[516d66c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splnet
<LI><a href="#[516da78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[516da08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_missmsg
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[516d5f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtalloc_noclone
</UL><P><STRONG><a name="[516d5f8]"></a>rtalloc_noclone</STRONG> (ARM, 60 bytes, Stack size 8 bytes, route.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[516d6dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtalloc2
</UL><P><STRONG><a name="[516d58c]"></a>rtalloc</STRONG> (ARM, 56 bytes, Stack size 8 bytes, route.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516dae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtalloc1
</UL><BR>[Called By]<UL><LI><a href="#[7b4f5ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_forward
<LI><a href="#[7b3fa34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_rtaddr
<LI><a href="#[86d7834]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_selectsrc
<LI><a href="#[7b4f498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[872a1cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_setmoptions
<LI><a href="#[8b829a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_mss
</UL><P><STRONG><a name="[516d51c]"></a>rtredirect</STRONG> (ARM, 440 bytes, Stack size 104 bytes, route.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d7c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithnet
<LI><a href="#[516dae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtalloc1
<LI><a href="#[743b118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcmp
<LI><a href="#[516d838]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithaddr
<LI><a href="#[516da78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[516dbcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtfree
<LI><a href="#[516d998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_setgate
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[516da08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_missmsg
</UL><BR>[Called By]<UL><LI><a href="#[86f62dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL><P><STRONG><a name="[516d4b0]"></a>rtioctl</STRONG> (ARM, 140 bytes, Stack size 16 bytes, route.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516da78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtrequest
</UL><BR>[Called By]<UL><LI><a href="#[8b1c6cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_ioctl
</UL><P><STRONG><a name="[516d444]"></a>_rt_cmd</STRONG> (ARM, 88 bytes, Stack size 0 bytes, route.o(.text), UNUSED)
<P><STRONG><a name="[516d3cc]"></a>ipv4_tunnelsetup</STRONG> (ARM, 4 bytes, Stack size 0 bytes, route.o(.text), UNUSED)
<P><STRONG><a name="[516d360]"></a>rtinit</STRONG> (ARM, 628 bytes, Stack size 40 bytes, route.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d2f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_get
<LI><a href="#[516db58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_maskedcopy
<LI><a href="#[516dae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtalloc1
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[516da78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[516d214]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_newaddrmsg
<LI><a href="#[516dbcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtfree
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><BR>[Called By]<UL><LI><a href="#[869e46c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_ifscrub
<LI><a href="#[869e38c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_ifinit
<LI><a href="#[869e31c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_control
</UL><P><STRONG><a name="[516d1a0]"></a>rt_timer_timer</STRONG> (ARM, 276 bytes, Stack size 32 bytes, route.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d12c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splclock
<LI><a href="#[51385ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_mono_time
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[516da78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[516d0c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;timeout
</UL><BR>[Address Reference Count : 1]<UL><LI> route.o(.text)
</UL><P><STRONG><a name="[516d04c]"></a>rt_timer_init</STRONG> (ARM, 52 bytes, Stack size 8 bytes, route.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[516d0c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;timeout
</UL><P><STRONG><a name="[516cfd0]"></a>rt_timer_queue_create</STRONG> (ARM, 136 bytes, Stack size 24 bytes, route.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[516d0c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;timeout
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
</UL><P><STRONG><a name="[516cf54]"></a>rt_timer_queue_change</STRONG> (ARM, 8 bytes, Stack size 0 bytes, route.o(.text), UNUSED)
<P><STRONG><a name="[516ced8]"></a>rt_timer_queue_destroy</STRONG> (ARM, 216 bytes, Stack size 24 bytes, route.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[516da78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><P><STRONG><a name="[516ce64]"></a>rt_timer_add</STRONG> (ARM, 268 bytes, Stack size 24 bytes, route.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[516d12c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splclock
<LI><a href="#[51385ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_mono_time
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
</UL><P><STRONG><a name="[5183c94]"></a>eth_drv_dsr</STRONG> (ARM, 16 bytes, Stack size 0 bytes, eth_drv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5183c18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ecos_synch_eth_drv_dsr
</UL><BR>[Called By]<UL><LI><a href="#[4d320a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_close
<LI><a href="#[51b6884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_service_main_thread
<LI><a href="#[51b626c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_remove_card
</UL><P><STRONG><a name="[5183b9c]"></a>eth_drv_run_deliveries</STRONG> (ARM, 84 bytes, Stack size 16 bytes, eth_drv.o(.text))
<BR>[Called By]<UL><LI><a href="#[5daa6ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;alarm_thread
</UL><P><STRONG><a name="[51dee50]"></a>send_iwevcustom_event</STRONG> (ARM, 312 bytes, Stack size 88 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[51dedd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_debug_printf
<LI><a href="#[51ded60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wireless_send_event
</UL><BR>[Called By]<UL><LI><a href="#[51decdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_host_sleep_activated_event
<LI><a href="#[51dec54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_host_sleep_deactivated_event
<LI><a href="#[51debd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_host_sleep_gpio_int_event
<LI><a href="#[51dddd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendConfirmSleep
<LI><a href="#[51df798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownloadCommandToStation
<LI><a href="#[7b1f7d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmdresp_wmm_get_status
<LI><a href="#[51b5138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_event
</UL><P><STRONG><a name="[51decdc]"></a>wlan_host_sleep_activated_event</STRONG> (ARM, 48 bytes, Stack size 8 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51dee50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_iwevcustom_event
</UL><BR>[Called By]<UL><LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
</UL><P><STRONG><a name="[51dec54]"></a>wlan_host_sleep_deactivated_event</STRONG> (ARM, 48 bytes, Stack size 8 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51dee50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_iwevcustom_event
</UL><BR>[Called By]<UL><LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
</UL><P><STRONG><a name="[51debd0]"></a>wlan_host_sleep_gpio_int_event</STRONG> (ARM, 52 bytes, Stack size 8 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51dee50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_iwevcustom_event
</UL><BR>[Called By]<UL><LI><a href="#[51b55e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_interrupt
</UL><P><STRONG><a name="[51deb60]"></a>QueueCmd</STRONG> (ARM, 260 bytes, Stack size 24 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[51dedd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_debug_printf
</UL><BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[51ddb7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MrvDrvCommandTimerFunction
</UL><P><STRONG><a name="[51deae8]"></a>CleanUpCmdCtrlNode</STRONG> (ARM, 76 bytes, Stack size 8 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Called By]<UL><LI><a href="#[51dea70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CleanupAndInsertCmd
<LI><a href="#[51de984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetFreeCmdCtrlNode
</UL><P><STRONG><a name="[51dea70]"></a>CleanupAndInsertCmd</STRONG> (ARM, 72 bytes, Stack size 24 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[51deae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CleanUpCmdCtrlNode
</UL><BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[51de018]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AllocateCmdBuffer
<LI><a href="#[51dde50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ExecuteNextCommand
<LI><a href="#[51df798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownloadCommandToStation
<LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
</UL><P><STRONG><a name="[51de9fc]"></a>SetCmdCtrlNode</STRONG> (ARM, 24 bytes, Stack size 0 bytes, wlan_cmd.o(.text))
<BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[51de984]"></a>GetFreeCmdCtrlNode</STRONG> (ARM, 108 bytes, Stack size 16 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[51deae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CleanUpCmdCtrlNode
</UL><BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[51de908]"></a>PrepareAndSendCommand</STRONG> (ARM, 6168 bytes, Stack size 64 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51de984]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetFreeCmdCtrlNode
<LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
<LI><a href="#[51dedd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_debug_printf
<LI><a href="#[51dea70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CleanupAndInsertCmd
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[51de88c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_scan
<LI><a href="#[51de80c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_associate
<LI><a href="#[51de788]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_deauthenticate
<LI><a href="#[51dfea8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_set_wep
<LI><a href="#[51de704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_ad_hoc_start
<LI><a href="#[51de680]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_authenticate
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[51de600]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_ad_hoc_join
<LI><a href="#[51de580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_ad_hoc_stop
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51de4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11d_domain_info
<LI><a href="#[51de478]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_bg_scan_config
<LI><a href="#[51de3f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_bg_scan_query
<LI><a href="#[51de378]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_wmm_get_status
<LI><a href="#[51de2fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_wmm_ack_policy
<LI><a href="#[51de280]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_wmm_addts_req
<LI><a href="#[51de204]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_wmm_delts_req
<LI><a href="#[51de184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_wmm_queue_config
<LI><a href="#[51de104]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_wmm_queue_stats
<LI><a href="#[4c2ca1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_maskbits
<LI><a href="#[51deb60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;QueueCmd
<LI><a href="#[4c2c92c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_wait
</UL><BR>[Called By]<UL><LI><a href="#[51de090]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetRadioControl
<LI><a href="#[4d32118]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetMacPacketFilter
<LI><a href="#[51ddf38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PSSleep
<LI><a href="#[51ddec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PSWakeup
<LI><a href="#[51dde50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ExecuteNextCommand
<LI><a href="#[4d31f4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_mac_address
<LI><a href="#[51b626c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_remove_card
<LI><a href="#[5250e48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_encode_nonwpa
<LI><a href="#[5252340]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_rts
<LI><a href="#[52522cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_rts
<LI><a href="#[5252258]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_frag
<LI><a href="#[52521e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_frag
<LI><a href="#[52520fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_txpow
<LI><a href="#[5252088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_retry
<LI><a href="#[5252014]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_retry
<LI><a href="#[52aab90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetDeepSleep
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[4d32a04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_wireless_stats
<LI><a href="#[5252924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_freq
<LI><a href="#[5252428]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_rate
<LI><a href="#[52523b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_rate
<LI><a href="#[525283c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_mode
<LI><a href="#[5252170]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_txpow
<LI><a href="#[52aba74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_radio_ioctl
<LI><a href="#[52aba00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_snr
<LI><a href="#[52aa484]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_ack_policy_ioctl
<LI><a href="#[7b1f858]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendWMMStatusChangeCmd
<LI><a href="#[52aa18c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_addts_req_ioctl
<LI><a href="#[52aa10c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_delts_req_ioctl
<LI><a href="#[52aa08c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_queue_config_ioctl
<LI><a href="#[52aa00c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_queue_stats_ioctl
<LI><a href="#[7bb1aec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_enable_11d
<LI><a href="#[7bb1a6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_domain_info_11d
<LI><a href="#[52aa684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_enable_11d
<LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
<LI><a href="#[51b5138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_event
<LI><a href="#[7c014ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_setup_station_hw
<LI><a href="#[52aadc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendDeauthentication
<LI><a href="#[52aa8d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_send_deauth
<LI><a href="#[52a9f94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;StopAdhocNetwork
<LI><a href="#[52aa858]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_adhocstop_ioctl
<LI><a href="#[52a9db4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;StartAdhocNetwork
<LI><a href="#[52a9e2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;JoinAdhocNetwork
<LI><a href="#[7c388e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_associate
<LI><a href="#[52ab028]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_essid
<LI><a href="#[52ab184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_wap
<LI><a href="#[52aa774]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlanidle_off
<LI><a href="#[52aa7e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlanidle_on
<LI><a href="#[51de600]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_ad_hoc_join
<LI><a href="#[51b5930]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_reassociation_thread
<LI><a href="#[7bec16c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendADHOCBSSIDQuery
<LI><a href="#[52aa6fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_bg_scan_enable
<LI><a href="#[7c6050c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_scan_networks
<LI><a href="#[7c38870]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FindBestNetworkSsid
<LI><a href="#[52ab09c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_scan
<LI><a href="#[7bec1e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendBgScanQueryCmd
</UL><P><STRONG><a name="[51de090]"></a>SetRadioControl</STRONG> (ARM, 128 bytes, Stack size 24 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[51dedd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_debug_printf
</UL><BR>[Called By]<UL><LI><a href="#[52a9db4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;StartAdhocNetwork
<LI><a href="#[52a9e2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;JoinAdhocNetwork
<LI><a href="#[51de80c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_associate
</UL><P><STRONG><a name="[4d32118]"></a>SetMacPacketFilter</STRONG> (ARM, 100 bytes, Stack size 16 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51dedd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_debug_printf
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[4d341ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_start
<LI><a href="#[5250e48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_encode_nonwpa
<LI><a href="#[5252924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_freq
<LI><a href="#[525283c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_mode
<LI><a href="#[52aa608]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_enable_ioctl
<LI><a href="#[7b1f750]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_process_association_req
<LI><a href="#[7c014ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_setup_station_hw
</UL><P><STRONG><a name="[51de018]"></a>AllocateCmdBuffer</STRONG> (ARM, 188 bytes, Stack size 24 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4c2ccf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_init
<LI><a href="#[51dea70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CleanupAndInsertCmd
</UL><BR>[Called By]<UL><LI><a href="#[51b5844]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_fw
</UL><P><STRONG><a name="[51ddfa4]"></a>FreeCmdBuffer</STRONG> (ARM, 104 bytes, Stack size 24 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><BR>[Called By]<UL><LI><a href="#[51b4fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_free_adapter
</UL><P><STRONG><a name="[51ddf38]"></a>PSSleep</STRONG> (ARM, 48 bytes, Stack size 16 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[5251f2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_power
</UL><P><STRONG><a name="[51ddec8]"></a>PSWakeup</STRONG> (ARM, 108 bytes, Stack size 24 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51dedd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_debug_printf
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[51b626c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_remove_card
<LI><a href="#[5251f2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_power
<LI><a href="#[525283c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_mode
<LI><a href="#[7bec660]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MacEventDisconnected
<LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
<LI><a href="#[51b5138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_event
</UL><P><STRONG><a name="[51dde50]"></a>ExecuteNextCommand</STRONG> (ARM, 924 bytes, Stack size 40 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[51dedd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_debug_printf
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[51dea70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CleanupAndInsertCmd
<LI><a href="#[51df798]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DownloadCommandToStation
</UL><BR>[Called By]<UL><LI><a href="#[51b6884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_service_main_thread
</UL><P><STRONG><a name="[734d704]"></a>wifiSetHostSleepFlag</STRONG> (ARM, 12 bytes, Stack size 0 bytes, wlan_cmd.o(.text))
<BR>[Called By]<UL><LI><a href="#[51b5138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_event
<LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[734d690]"></a>wifiIsHostSleep</STRONG> (ARM, 12 bytes, Stack size 0 bytes, wlan_cmd.o(.text))
<BR>[Called By]<UL><LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[51dddd8]"></a>SendConfirmSleep</STRONG> (ARM, 460 bytes, Stack size 32 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51dedd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_debug_printf
<LI><a href="#[51ddd60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_host_to_card
<LI><a href="#[51ddce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_clear_imask
<LI><a href="#[51dee50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_iwevcustom_event
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[51ddc74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PSConfirmSleep
</UL><P><STRONG><a name="[51ddc74]"></a>PSConfirmSleep</STRONG> (ARM, 68 bytes, Stack size 0 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51dedd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_debug_printf
<LI><a href="#[51dddd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendConfirmSleep
</UL><BR>[Called By]<UL><LI><a href="#[51b6884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_service_main_thread
<LI><a href="#[51b5138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_event
</UL><P><STRONG><a name="[51ddbfc]"></a>WirelessDrvCmdAlarm</STRONG> (ARM, 60 bytes, Stack size 16 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e4a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_real_time_clock
<LI><a href="#[4c2e61c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_clock_to_counter
<LI><a href="#[4c2e3b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_create
</UL><BR>[Called By]<UL><LI><a href="#[51b5844]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_fw
</UL><P><STRONG><a name="[51ddb04]"></a>WirelessDrvAlarm</STRONG> (ARM, 60 bytes, Stack size 16 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e4a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_real_time_clock
<LI><a href="#[4c2e61c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_clock_to_counter
<LI><a href="#[4c2e3b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_create
</UL><BR>[Called By]<UL><LI><a href="#[51b5844]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_fw
</UL><P><STRONG><a name="[51b5b78]"></a>thread_stop</STRONG> (ARM, 28 bytes, Stack size 0 bytes, wlan_main.o(.text), UNUSED)
<P><STRONG><a name="[4d32190]"></a>wlan_open</STRONG> (ARM, 20 bytes, Stack size 0 bytes, wlan_main.o(.text))
<BR>[Called By]<UL><LI><a href="#[4d341ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_start
</UL><P><STRONG><a name="[4d320a8]"></a>wlan_close</STRONG> (ARM, 72 bytes, Stack size 8 bytes, wlan_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5183c94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eth_drv_dsr
</UL><BR>[Called By]<UL><LI><a href="#[4d34178]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_stop
</UL><P><STRONG><a name="[4d31f4c]"></a>wlan_set_mac_address</STRONG> (ARM, 156 bytes, Stack size 16 bytes, wlan_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4d34100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_control
</UL><P><STRONG><a name="[51b5b08]"></a>WakeUpWaitQ</STRONG> (ARM, 24 bytes, Stack size 8 bytes, wlan_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
</UL><P><STRONG><a name="[51b5a9c]"></a>udelay</STRONG> (ARM, 24 bytes, Stack size 0 bytes, wlan_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51b5a9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;udelay
</UL><BR>[Called By]<UL><LI><a href="#[51b5a9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udelay
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[7c85094]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_prog_firmware_image
<LI><a href="#[7c84d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_download_wlan_fw_image
<LI><a href="#[7c0133c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_verify_fw_download
<LI><a href="#[7c84e08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mv_sdio_poll_card_status
</UL><P><STRONG><a name="[51b5a24]"></a>thread_should_stop</STRONG> (ARM, 76 bytes, Stack size 8 bytes, wlan_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a0359c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_self
</UL><BR>[Called By]<UL><LI><a href="#[51b5930]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_reassociation_thread
</UL><P><STRONG><a name="[4d32200]"></a>wlan_add_card</STRONG> (ARM, 720 bytes, Stack size 32 bytes, wlan_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51b59b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_probe_card
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4c2c128]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_init
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
<LI><a href="#[51b58b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_register_dev
<LI><a href="#[51b5844]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_init_fw
<LI><a href="#[51b57cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_unregister_dev
<LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><BR>[Called By]<UL><LI><a href="#[4d3234c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initSDIO
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_main.o(.text)
</UL><P><STRONG><a name="[51b5754]"></a>cleanup_txqueues</STRONG> (ARM, 68 bytes, Stack size 0 bytes, wlan_main.o(.text))
<BR>[Called By]<UL><LI><a href="#[7bec660]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MacEventDisconnected
</UL><P><STRONG><a name="[51b56d4]"></a>wlan_get_region_cfp_table</STRONG> (ARM, 128 bytes, Stack size 24 bytes, wlan_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[7bb1cd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_region_chan_supported_11d
<LI><a href="#[7bb1c50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_parse_domain_info_11d
</UL><P><STRONG><a name="[51b5658]"></a>wlan_set_regiontable</STRONG> (ARM, 216 bytes, Stack size 40 bytes, wlan_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
</UL><P><STRONG><a name="[51b55e4]"></a>wlan_interrupt</STRONG> (ARM, 260 bytes, Stack size 8 bytes, wlan_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51debd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_host_sleep_gpio_int_event
<LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
</UL><BR>[Called By]<UL><LI><a href="#[7c8477c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_interrupt
</UL><P><STRONG><a name="[4d31c18]"></a>wlan_init_module</STRONG> (ARM, 40 bytes, Stack size 8 bytes, wlan_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51b5570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_register
</UL><BR>[Called By]<UL><LI><a href="#[4d33580]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_thread
</UL><P><STRONG><a name="[51b54f8]"></a>wlan_cleanup_module</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wlan_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51b5484]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_unregister
</UL><P><STRONG><a name="[51b540c]"></a>sdio_init_module</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wlan_main.o(.text), UNUSED)
<P><STRONG><a name="[4d31dec]"></a>ProcessRxedPacket</STRONG> (ARM, 640 bytes, Stack size 40 bytes, wlan_rx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[4d33fa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_recv
</UL><P><STRONG><a name="[524b678]"></a>gettimeofday</STRONG> (ARM, 32 bytes, Stack size 8 bytes, wlan_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
</UL><BR>[Called By]<UL><LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
<LI><a href="#[871a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
<LI><a href="#[874a570]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_magic_init
</UL><P><STRONG><a name="[524b5f8]"></a>CheckLastPacketIndication</STRONG> (ARM, 84 bytes, Stack size 16 bytes, wlan_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51b5398]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wmm_lists_empty
</UL><BR>[Called By]<UL><LI><a href="#[51b5138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_event
</UL><P><STRONG><a name="[51b50c8]"></a>handle_send</STRONG> (ARM, 292 bytes, Stack size 24 bytes, wlan_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51ddd60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_host_to_card
<LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
</UL><BR>[Called By]<UL><LI><a href="#[51b6884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_service_main_thread
</UL><P><STRONG><a name="[524b584]"></a>wlan_process_tx</STRONG> (ARM, 596 bytes, Stack size 56 bytes, wlan_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[51b5398]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wmm_lists_empty
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[4d31e64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_tx_packet
<LI><a href="#[524b50c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wmm_map_and_add_skb
</UL><P><STRONG><a name="[4d31e64]"></a>wlan_tx_packet</STRONG> (ARM, 144 bytes, Stack size 40 bytes, wlan_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[524b50c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wmm_map_and_add_skb
<LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
<LI><a href="#[524b584]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_process_tx
</UL><BR>[Called By]<UL><LI><a href="#[4d34014]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_send
</UL><P><STRONG><a name="[524b498]"></a>SendNullPacket</STRONG> (ARM, 212 bytes, Stack size 40 bytes, wlan_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[51ddd60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_host_to_card
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[51b5138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_event
</UL><P><STRONG><a name="[52aafb0]"></a>Is_Command_Allowed</STRONG> (ARM, 160 bytes, Stack size 8 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[5250e48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_encode_nonwpa
<LI><a href="#[52528b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_freq
<LI><a href="#[5252340]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_rts
<LI><a href="#[52522cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_rts
<LI><a href="#[5252258]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_frag
<LI><a href="#[52521e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_frag
<LI><a href="#[52520fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_txpow
<LI><a href="#[5252088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_retry
<LI><a href="#[5252014]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_retry
<LI><a href="#[5251f2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_power
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[4d32a04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_wireless_stats
<LI><a href="#[5252924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_freq
<LI><a href="#[5252428]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_rate
<LI><a href="#[525283c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_mode
<LI><a href="#[5252170]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_txpow
<LI><a href="#[52ab028]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_essid
<LI><a href="#[52ab184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_wap
<LI><a href="#[52ab110]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_scan
<LI><a href="#[52ab09c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_scan
</UL><P><STRONG><a name="[52aaf2c]"></a>find_cfp_by_band_and_channel</STRONG> (ARM, 176 bytes, Stack size 24 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[52528b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_freq
<LI><a href="#[5252924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_freq
<LI><a href="#[52ab09c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_scan
</UL><P><STRONG><a name="[52aaeb8]"></a>Is_Rate_Auto</STRONG> (ARM, 72 bytes, Stack size 4 bytes, wlan_wext.o(.text), UNUSED)
<P><STRONG><a name="[52aae44]"></a>GetRateIndex</STRONG> (ARM, 52 bytes, Stack size 0 bytes, wlan_wext.o(.text), UNUSED)
<P><STRONG><a name="[52aac04]"></a>get_version</STRONG> (ARM, 164 bytes, Stack size 64 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[52aab90]"></a>SetDeepSleep</STRONG> (ARM, 288 bytes, Stack size 24 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[51b52a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_exit_deep_sleep
<LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[52aab18]"></a>index_to_data_rate</STRONG> (ARM, 20 bytes, Stack size 0 bytes, wlan_wext.o(.text), UNUSED)
<P><STRONG><a name="[4d31ed8]"></a>wlan_do_ioctl</STRONG> (ARM, 15568 bytes, Stack size 1096 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[52aaaac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sscanf
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[52aaa34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_extscan_ioctl
<LI><a href="#[51de984]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetFreeCmdCtrlNode
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[51de9fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetCmdCtrlNode
<LI><a href="#[4c2ca1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_maskbits
<LI><a href="#[51deb60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;QueueCmd
<LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
<LI><a href="#[4c2c92c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_wait
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[52aace4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_get_state_11d
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[51b5a9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;udelay
<LI><a href="#[52aa9c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_read_ioreg
<LI><a href="#[52aa94c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_write_ioreg
<LI><a href="#[5250e48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_set_encode_nonwpa
<LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[52aa8d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_send_deauth
<LI><a href="#[52aa858]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_do_adhocstop_ioctl
<LI><a href="#[52aba74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_radio_ioctl
<LI><a href="#[4c2decc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_disable
<LI><a href="#[52aa7e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlanidle_on
<LI><a href="#[52aa774]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlanidle_off
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[52aac04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_version
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[52aa6fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_bg_scan_enable
<LI><a href="#[52aa684]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_enable_11d
<LI><a href="#[51dd994]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_set_bus_clock
<LI><a href="#[52aa608]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_enable_ioctl
<LI><a href="#[51b5658]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_set_regiontable
<LI><a href="#[52aab90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetDeepSleep
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[52ab184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_set_wap
<LI><a href="#[52ab028]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_set_essid
<LI><a href="#[52aa588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_queue_status_ioctl
<LI><a href="#[52aa504]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_do_bg_scan_config_ioctl
<LI><a href="#[52aa484]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_ack_policy_ioctl
<LI><a href="#[52aa408]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_para_ie_ioctl
<LI><a href="#[52aba00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_get_snr
<LI><a href="#[525055c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_active_data_rates
<LI><a href="#[52aa388]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_set_user_scan_ioctl
<LI><a href="#[52aa308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_get_scan_table_ioctl
<LI><a href="#[52aa28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_set_mrvl_tlv_ioctl
<LI><a href="#[52aa20c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_get_assoc_rsp_ioctl
<LI><a href="#[52aa18c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_addts_req_ioctl
<LI><a href="#[52aa10c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_delts_req_ioctl
<LI><a href="#[52aa08c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_queue_config_ioctl
<LI><a href="#[52aa00c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_queue_stats_ioctl
</UL><BR>[Called By]<UL><LI><a href="#[4d34100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_control
</UL><P><STRONG><a name="[4d32a04]"></a>wlan_get_wireless_stats</STRONG> (ARM, 340 bytes, Stack size 24 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Address Reference Count : 1]<UL><LI> w99702_ether.o(.data)
</UL><P><STRONG><a name="[52a9d3c]"></a>data_rate_to_index</STRONG> (ARM, 80 bytes, Stack size 0 bytes, wlan_wext.o(.text))
<BR>[Called By]<UL><LI><a href="#[5252428]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_rate
</UL><P><STRONG><a name="[53312bc]"></a>sdio_enable_SDIO_INT</STRONG> (ARM, 20 bytes, Stack size 0 bytes, sdio.o(.text))
<BR>[Called By]<UL><LI><a href="#[51dda0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_reenable_host_interrupt
<LI><a href="#[51b5320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_get_int_status
</UL><P><STRONG><a name="[533124c]"></a>stop_clock</STRONG> (ARM, 248 bytes, Stack size 16 bytes, sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[53215e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;stop_bus_clock_2
</UL><P><STRONG><a name="[53311d0]"></a>sdio_disable_SDIO_INT</STRONG> (ARM, 20 bytes, Stack size 0 bytes, sdio.o(.text), UNUSED)
<P><STRONG><a name="[533115c]"></a>sdio_interrupt</STRONG> (ARM, 64 bytes, Stack size 8 bytes, sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[51ddb7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MrvDrvCommandTimerFunction
</UL><BR>[Address Reference Count : 1]<UL><LI> sdio.o(.text)
</UL><P><STRONG><a name="[53310e4]"></a>sdio_set_buswidth</STRONG> (ARM, 8 bytes, Stack size 0 bytes, sdio.o(.text), UNUSED)
<P><STRONG><a name="[533106c]"></a>sdio_set_clkrate</STRONG> (ARM, 8 bytes, Stack size 0 bytes, sdio.o(.text), UNUSED)
<P><STRONG><a name="[5330ff8]"></a>sdio_read_ioreg</STRONG> (ARM, 152 bytes, Stack size 24 bytes, sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[73a7b00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_Read
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[5321488]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_get_vendor_id
<LI><a href="#[5321410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_read_cisinfo
<LI><a href="#[53211cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;disable_sdio_int
<LI><a href="#[53323b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;register_sdiohost
<LI><a href="#[7c84d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_download_wlan_fw_image
<LI><a href="#[52aa9c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_read_ioreg
<LI><a href="#[51b5320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_get_int_status
<LI><a href="#[51b504c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_disable_host_int
<LI><a href="#[51b58b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_register_dev
<LI><a href="#[7c831f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_get_cis_info
<LI><a href="#[51b59b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_probe_card
<LI><a href="#[7c0133c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_verify_fw_download
<LI><a href="#[7c84e88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mv_sdio_read_scratch
<LI><a href="#[7c84e08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mv_sdio_poll_card_status
</UL><P><STRONG><a name="[5330f80]"></a>sdio_write_ioreg</STRONG> (ARM, 136 bytes, Stack size 24 bytes, sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[73a7a8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_Write
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[53216d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_request_irq
<LI><a href="#[532165c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_free_irq
<LI><a href="#[53211cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;disable_sdio_int
<LI><a href="#[5321158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;enable_sdio_int
<LI><a href="#[52aa94c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_write_ioreg
<LI><a href="#[51b5320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_get_int_status
<LI><a href="#[51b504c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_disable_host_int
<LI><a href="#[7c012c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_enable_host_int
<LI><a href="#[51b58b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_register_dev
<LI><a href="#[51b59b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_probe_card
<LI><a href="#[51b52a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_exit_deep_sleep
<LI><a href="#[7bec25c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_reset_deepsleep_wakeup
</UL><P><STRONG><a name="[5330f08]"></a>sdio_write_iomem</STRONG> (ARM, 360 bytes, Stack size 72 bytes, sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[533349c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;check_iomem_args
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[73a77b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_BlockWrite
</UL><BR>[Called By]<UL><LI><a href="#[7c85094]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_prog_firmware_image
<LI><a href="#[7c84d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_download_wlan_fw_image
<LI><a href="#[51ddd60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_host_to_card
</UL><P><STRONG><a name="[5330e94]"></a>sdio_read_iomem</STRONG> (ARM, 308 bytes, Stack size 72 bytes, sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[533349c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;check_iomem_args
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[73a7830]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_BlockRead
</UL><BR>[Called By]<UL><LI><a href="#[51b5320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_get_int_status
</UL><P><STRONG><a name="[5330e18]"></a>fill_buffer_forwrite</STRONG> (ARM, 240 bytes, Stack size 16 bytes, sdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[8f655a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__32memcpy
</UL><P><STRONG><a name="[53217b8]"></a>trigger_dma_write</STRONG> (ARM, 364 bytes, Stack size 16 bytes, sdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5333150]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_initialize_ireg
<LI><a href="#[5334140]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_wait_for_interrupt
</UL><P><STRONG><a name="[5321748]"></a>complete_io</STRONG> (ARM, 520 bytes, Stack size 16 bytes, sdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5333150]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_initialize_ireg
<LI><a href="#[5334140]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_wait_for_interrupt
</UL><P><STRONG><a name="[53216d0]"></a>sdio_request_irq</STRONG> (ARM, 332 bytes, Stack size 24 bytes, sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5330f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_write_ioreg
</UL><BR>[Called By]<UL><LI><a href="#[51b58b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_register_dev
</UL><P><STRONG><a name="[532165c]"></a>sdio_free_irq</STRONG> (ARM, 76 bytes, Stack size 16 bytes, sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5330f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_write_ioreg
</UL><BR>[Called By]<UL><LI><a href="#[51b57cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_unregister_dev
</UL><P><STRONG><a name="[53215e4]"></a>stop_bus_clock_2</STRONG> (ARM, 16 bytes, Stack size 8 bytes, sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[533124c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;stop_clock
</UL><BR>[Called By]<UL><LI><a href="#[51dd994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_set_bus_clock
</UL><P><STRONG><a name="[5321574]"></a>start_clock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, sdio.o(.text), UNUSED)
<P><STRONG><a name="[5321500]"></a>start_bus_clock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, sdio.o(.text))
<BR>[Called By]<UL><LI><a href="#[51dd994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_set_bus_clock
<LI><a href="#[51b52a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_exit_deep_sleep
</UL><P><STRONG><a name="[5321488]"></a>sdio_get_vendor_id</STRONG> (ARM, 400 bytes, Stack size 48 bytes, sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5330ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_read_ioreg
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[51b59b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_probe_card
</UL><P><STRONG><a name="[5321410]"></a>sdio_read_cisinfo</STRONG> (ARM, 72 bytes, Stack size 24 bytes, sdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5330ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_read_ioreg
</UL><P><STRONG><a name="[532139c]"></a>sdio_register</STRONG> (ARM, 496 bytes, Stack size 16 bytes, sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[53323b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;register_sdiohost
</UL><BR>[Called By]<UL><LI><a href="#[4d31c90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;coremodule_init
<LI><a href="#[51b5570]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_register
</UL><P><STRONG><a name="[5321328]"></a>sdio_unregister</STRONG> (ARM, 152 bytes, Stack size 8 bytes, sdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[51b5484]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_unregister
</UL><P><STRONG><a name="[53212b4]"></a>sdio_suspend</STRONG> (ARM, 8 bytes, Stack size 0 bytes, sdio.o(.text), UNUSED)
<P><STRONG><a name="[5321244]"></a>sdio_resume</STRONG> (ARM, 128 bytes, Stack size 8 bytes, sdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><P><STRONG><a name="[51ddce8]"></a>sdio_clear_imask</STRONG> (ARM, 8 bytes, Stack size 0 bytes, sdio.o(.text))
<BR>[Called By]<UL><LI><a href="#[51dddd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendConfirmSleep
</UL><P><STRONG><a name="[53211cc]"></a>disable_sdio_int</STRONG> (ARM, 48 bytes, Stack size 8 bytes, sdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5330ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_read_ioreg
<LI><a href="#[5330f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_write_ioreg
</UL><P><STRONG><a name="[5321158]"></a>enable_sdio_int</STRONG> (ARM, 20 bytes, Stack size 0 bytes, sdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5330f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_write_ioreg
</UL><P><STRONG><a name="[53210dc]"></a>sdio_check_idle_state</STRONG> (ARM, 8 bytes, Stack size 0 bytes, sdio.o(.text), UNUSED)
<P><STRONG><a name="[5321064]"></a>sdio_print_imask</STRONG> (ARM, 4 bytes, Stack size 0 bytes, sdio.o(.text), UNUSED)
<P><STRONG><a name="[4d31c90]"></a>coremodule_init</STRONG> (ARM, 188 bytes, Stack size 8 bytes, sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[532139c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_register
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4d33580]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_thread
</UL><P><STRONG><a name="[4d31d04]"></a>wlan_fmi_init</STRONG> (ARM, 408 bytes, Stack size 40 bytes, sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d845f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sysDisableCache
<LI><a href="#[5320ff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sysInvalidCache
<LI><a href="#[4d84584]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sysEnableCache
<LI><a href="#[5331648]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_set_clk
<LI><a href="#[72237bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSetCardDetection
<LI><a href="#[4a5540c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSetSDOutputClockbykHz
<LI><a href="#[4a5548c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSetFMIReferenceClock
<LI><a href="#[7224008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSetGPIODebounceTick
<LI><a href="#[5320f78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsFixDriveNumber
<LI><a href="#[5320f00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsInitFileSystem
<LI><a href="#[72238b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiInitDevice
<LI><a href="#[5320e8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiInitSDDevice
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[52f8480]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiInitSMDevice
</UL><BR>[Called By]<UL><LI><a href="#[4d33580]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_thread
</UL><P><STRONG><a name="[75eec00]"></a>tcp_serial_recv_cmd</STRONG> (ARM, 36 bytes, Stack size 8 bytes, tcp_serial.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
</UL><P><STRONG><a name="[75eeb88]"></a>tcp_serial_send_cmd</STRONG> (ARM, 340 bytes, Stack size 40 bytes, tcp_serial.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[75ee8cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pipe_create
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
</UL><BR>[Called By]<UL><LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[75ef7c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread1
<LI><a href="#[4e4d16c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppot_disconnect
<LI><a href="#[4e4d088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppot_connect
</UL><P><STRONG><a name="[4e4d16c]"></a>ppot_disconnect</STRONG> (ARM, 8 bytes, Stack size 0 bytes, tcp_serial.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[75eeb88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_serial_send_cmd
</UL><BR>[Called By]<UL><LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4e4aa7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetPPP
<LI><a href="#[71ed684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_setPPP
</UL><P><STRONG><a name="[75ee7e0]"></a>ppot_is_connecting</STRONG> (ARM, 24 bytes, Stack size 0 bytes, tcp_serial.o(.text), UNUSED)
<P><STRONG><a name="[4dee380]"></a>ppot_is_online</STRONG> (ARM, 24 bytes, Stack size 0 bytes, tcp_serial.o(.text))
<BR>[Called By]<UL><LI><a href="#[4e4aaf0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetPPP
</UL><P><STRONG><a name="[4e4d088]"></a>ppot_connect</STRONG> (ARM, 372 bytes, Stack size 40 bytes, tcp_serial.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[75eeb88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_serial_send_cmd
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4e4d338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rand
</UL><BR>[Called By]<UL><LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4e4aa7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetPPP
<LI><a href="#[4dee7dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;OnSetIP
<LI><a href="#[71ed684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_setPPP
</UL><P><STRONG><a name="[79f6b5c]"></a>exception_handler</STRONG> (ARM, 44 bytes, Stack size 0 bytes, hal_misc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[73db200]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_hal_deliver_exception
</UL><BR>[Called By]<UL><LI><a href="#[5d61804]">&lt&lt</a>&nbsp;&nbsp;&nbsp;call_exception_handler
</UL><P><STRONG><a name="[79f6ae4]"></a>hal_spurious_IRQ</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hal_misc.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[5d61640]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_IRQ_or_FIQ
</UL><P><STRONG><a name="[79f6a64]"></a>cyg_hal_invoke_constructors</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hal_misc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2490]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__cpp_initialise
</UL><BR>[Called By]<UL><LI><a href="#[5d5f3cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;start
</UL><P><STRONG><a name="[79f69e8]"></a>hal_arch_default_isr</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hal_misc.o(.text))
<BR>[Called By]<UL><LI><a href="#[501ed5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hal_default_isr
</UL><P><STRONG><a name="[5025158]"></a>hal_idle_thread_action</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hal_misc.o(.text))
<BR>[Called By]<UL><LI><a href="#[50251d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;idle_thread_main(unsigned int)
</UL><P><STRONG><a name="[750a318]"></a>hal_lsbindex</STRONG> (ARM, 40 bytes, Stack size 0 bytes, hal_misc.o(.text))
<BR>[Called By]<UL><LI><a href="#[750a38c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::schedule()
<LI><a href="#[4c30298]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::new_data_index()
<LI><a href="#[8511c3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed_Implementation::try_alloc(int)
</UL><P><STRONG><a name="[79f6974]"></a>hal_msbindex</STRONG> (ARM, 36 bytes, Stack size 0 bytes, hal_misc.o(.text), UNUSED)
<P><STRONG><a name="[7531f68]"></a>cyg_hal_is_break</STRONG> (ARM, 44 bytes, Stack size 0 bytes, hal_cmisc.o(.text))
<BR>[Called By]<UL><LI><a href="#[7533bdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_gdb_flush
<LI><a href="#[5d78ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_plf_serial_isr
</UL><P><STRONG><a name="[7531de8]"></a>cyg_hal_user_break</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hal_cmisc.o(.text))
<BR>[Called By]<UL><LI><a href="#[4ba2e24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hal_if_diag_write_char
</UL><P><STRONG><a name="[501ed5c]"></a>hal_default_isr</STRONG> (ARM, 16 bytes, Stack size 8 bytes, hal_cmisc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[79f69e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_arch_default_isr
</UL><BR>[Address Reference Count : 2]<UL><LI> vectors.o(Vect)
<LI> intr.o(.text)
</UL><P><STRONG><a name="[79e7c98]"></a>cyg_assert_msg</STRONG> (ARM, 760 bytes, Stack size 56 bytes, tcdiag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
<LI><a href="#[4ba2cc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_write_string
<LI><a href="#[4ba2f10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_write_char
<LI><a href="#[4ba2af4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_write_hex
<LI><a href="#[4ba2b68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_write_dec
</UL><P><STRONG><a name="[79e7c24]"></a>cyg_test_init</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tcdiag.o(.text), UNUSED)
<P><STRONG><a name="[79e7bb0]"></a>cyg_test_output</STRONG> (ARM, 280 bytes, Stack size 24 bytes, tcdiag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ba2cc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_write_string
<LI><a href="#[4ba2f10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_write_char
<LI><a href="#[4ba2b68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_write_dec
</UL><P><STRONG><a name="[5139150]"></a>cyg_test_exit</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tcdiag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5139150]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_test_exit
</UL><BR>[Called By]<UL><LI><a href="#[51391c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[5138694]">&lt&lt</a>&nbsp;&nbsp;&nbsp;microtime
<LI><a href="#[51385ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_mono_time
<LI><a href="#[5138540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;csignal
<LI><a href="#[5139150]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_test_exit
</UL><P><STRONG><a name="[743f778]"></a>isupper</STRONG> (ARM, 20 bytes, Stack size 0 bytes, ctype.o(.text))
<BR>[Called By]<UL><LI><a href="#[4dee704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[59c9928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strtoul
<LI><a href="#[84c0170]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vfscanf
</UL><P><STRONG><a name="[510febc]"></a>islower</STRONG> (ARM, 20 bytes, Stack size 0 bytes, ctype.o(.text))
<BR>[Called By]<UL><LI><a href="#[510ff98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;inet_aton
</UL><P><STRONG><a name="[743f7e4]"></a>isalpha</STRONG> (ARM, 28 bytes, Stack size 0 bytes, ctype.o(.text))
<BR>[Called By]<UL><LI><a href="#[4dee704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[511937c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[59c9928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strtoul
</UL><P><STRONG><a name="[743f850]"></a>isdigit</STRONG> (ARM, 20 bytes, Stack size 0 bytes, ctype.o(.text))
<BR>[Called By]<UL><LI><a href="#[4dee704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[510ff98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;inet_aton
<LI><a href="#[59c9928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strtoul
<LI><a href="#[874a6d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_vfmtmsg
<LI><a href="#[8a61c88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_strtod
<LI><a href="#[80cf474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_pmsg
</UL><P><STRONG><a name="[5119310]"></a>isalnum</STRONG> (ARM, 40 bytes, Stack size 0 bytes, ctype.o(.text))
<BR>[Called By]<UL><LI><a href="#[511937c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyname
</UL><P><STRONG><a name="[79d8698]"></a>iscntrl</STRONG> (ARM, 28 bytes, Stack size 0 bytes, ctype.o(.text), UNUSED)
<P><STRONG><a name="[79d862c]"></a>isgraph</STRONG> (ARM, 20 bytes, Stack size 0 bytes, ctype.o(.text), UNUSED)
<P><STRONG><a name="[79d85c0]"></a>isprint</STRONG> (ARM, 20 bytes, Stack size 0 bytes, ctype.o(.text))
<BR>[Called By]<UL><LI><a href="#[52ab09c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_scan
<LI><a href="#[9c0c004]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_wpa_hexdump_ascii
<LI><a href="#[8ac6f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_processNotify
</UL><P><STRONG><a name="[79d8554]"></a>ispunct</STRONG> (ARM, 48 bytes, Stack size 0 bytes, ctype.o(.text), UNUSED)
<P><STRONG><a name="[743f8bc]"></a>isspace</STRONG> (ARM, 40 bytes, Stack size 0 bytes, ctype.o(.text))
<BR>[Called By]<UL><LI><a href="#[4dee704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[510ff98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;inet_aton
<LI><a href="#[59c9928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strtoul
<LI><a href="#[84c0170]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vfscanf
<LI><a href="#[8a61c88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_strtod
</UL><P><STRONG><a name="[510ff28]"></a>isxdigit</STRONG> (ARM, 40 bytes, Stack size 0 bytes, ctype.o(.text))
<BR>[Called By]<UL><LI><a href="#[510ff98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;inet_aton
</UL><P><STRONG><a name="[743b1f4]"></a>tolower</STRONG> (ARM, 16 bytes, Stack size 0 bytes, ctype.o(.text))
<BR>[Called By]<UL><LI><a href="#[4def4e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[743b184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strncasecmp
</UL><P><STRONG><a name="[52aad5c]"></a>toupper</STRONG> (ARM, 16 bytes, Stack size 0 bytes, ctype.o(.text))
<BR>[Called By]<UL><LI><a href="#[5252998]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_name
<LI><a href="#[7bb1c50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_parse_domain_info_11d
<LI><a href="#[77abf0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;to_upper
</UL><P><STRONG><a name="[74766bc]"></a>_exit</STRONG> (ARM, 12 bytes, Stack size 8 bytes, _exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
</UL><BR>[Called By]<UL><LI><a href="#[4e4a4f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[85605b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL><P><STRONG><a name="[7476794]"></a>cyg_libc_invoke_atexit_handlers</STRONG> (ARM, 48 bytes, Stack size 16 bytes, atexit.o(.text))
<BR>[Called By]<UL><LI><a href="#[4e4a4f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exit
</UL><P><STRONG><a name="[79c7dbc]"></a>atexit</STRONG> (ARM, 48 bytes, Stack size 0 bytes, atexit.o(.text), UNUSED)
<P><STRONG><a name="[5c57bbc]"></a>cyg_libc_stdio_flush_all_but</STRONG> (ARM, 244 bytes, Stack size 72 bytes, fflush.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c30c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::trylock()
<LI><a href="#[746a0dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::flush_output_unlocked()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[7476728]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fflush
<LI><a href="#[5c5906c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::refill_read_buffer()
</UL><P><STRONG><a name="[7476728]"></a>fflush</STRONG> (ARM, 104 bytes, Stack size 16 bytes, fflush.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c57bbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_libc_stdio_flush_all_but
<LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[746a0dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::flush_output_unlocked()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><BR>[Called By]<UL><LI><a href="#[4e4a4f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[88191e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ImaMashS
</UL><P><STRONG><a name="[52aaaac]"></a>sscanf</STRONG> (ARM, 36 bytes, Stack size 24 bytes, sscanf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c4982c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vsscanf
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[85c42cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;romfs_mount
<LI><a href="#[4e4ac4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetVNet
<LI><a href="#[80eb4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_PLAY
<LI><a href="#[77ac238]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_logline
</UL><P><STRONG><a name="[5084518]"></a>Cyg_libc_stdio_find_filename</STRONG> (ARM, 88 bytes, Stack size 8 bytes, stdiosupp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bba590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;open
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><BR>[Called By]<UL><LI><a href="#[8572058]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
<LI><a href="#[5d40c3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
<LI><a href="#[508480c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
</UL><P><STRONG><a name="[5c59188]"></a>Cyg_StdioStream::initialize(int, Cyg_StdioStream::OpenMode, int, int, int, unsigned int, unsigned char*)</STRONG> (ARM, 304 bytes, Stack size 12 bytes, stream.o(.text))
<BR>[Called By]<UL><LI><a href="#[5084474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::Cyg_StdioStream(int, Cyg_StdioStream::OpenMode, int, int, int, unsigned int, unsigned char*)
<LI><a href="#[746a1dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::Cyg_StdioStream(Cyg_StdioStream::OpenMode, unsigned int, unsigned char*)
</UL><P><STRONG><a name="[5084474]"></a>Cyg_StdioStream::Cyg_StdioStream(int, Cyg_StdioStream::OpenMode, int, int, int, unsigned int, unsigned char*)</STRONG> (ARM, 160 bytes, Stack size 56 bytes, stream.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[5c590f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStreamBuffer::set_buffer(unsigned int, unsigned char*)
<LI><a href="#[4c2c568]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::Cyg_Mutex()
<LI><a href="#[5c59188]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::initialize(int, Cyg_StdioStream::OpenMode, int, int, int, unsigned int, unsigned char*)
</UL><BR>[Called By]<UL><LI><a href="#[8572058]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
<LI><a href="#[5d40c3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
<LI><a href="#[508480c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
<LI><a href="#[83dfd3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fopen_inner(int, Cyg_StdioStream::OpenMode, int, int)
</UL><P><STRONG><a name="[746a1dc]"></a>Cyg_StdioStream::Cyg_StdioStream(Cyg_StdioStream::OpenMode, unsigned int, unsigned char*)</STRONG> (ARM, 208 bytes, Stack size 40 bytes, stream.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[5c590f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStreamBuffer::set_buffer(unsigned int, unsigned char*)
<LI><a href="#[4c2c568]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::Cyg_Mutex()
<LI><a href="#[5c59188]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::initialize(int, Cyg_StdioStream::OpenMode, int, int, int, unsigned int, unsigned char*)
</UL><BR>[Called By]<UL><LI><a href="#[4c78f58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[5c4982c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vsscanf
</UL><P><STRONG><a name="[746a0dc]"></a>Cyg_StdioStream::flush_output_unlocked()</STRONG> (ARM, 148 bytes, Stack size 16 bytes, stream.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bfe81c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsync
</UL><BR>[Called By]<UL><LI><a href="#[8571ec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[5d40aac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[508467c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[4c78f58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[5c57bbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_libc_stdio_flush_all_but
<LI><a href="#[7476728]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fflush
<LI><a href="#[5c5906c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::refill_read_buffer()
<LI><a href="#[5c58fe4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::read(unsigned char*, unsigned int, unsigned int*)
<LI><a href="#[5c58f5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::read_byte(unsigned char*)
<LI><a href="#[5c58ed4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::peek_byte(unsigned char*)
<LI><a href="#[74523d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::write(const unsigned char*, unsigned int, unsigned int*)
<LI><a href="#[83df758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fdopen
<LI><a href="#[5c4982c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vsscanf
<LI><a href="#[8a61d68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::set_position(unsigned int, int)
</UL><P><STRONG><a name="[5c5906c]"></a>Cyg_StdioStream::refill_read_buffer()</STRONG> (ARM, 372 bytes, Stack size 24 bytes, stream.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[746a0dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::flush_output_unlocked()
<LI><a href="#[5c57bbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_libc_stdio_flush_all_but
<LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><BR>[Called By]<UL><LI><a href="#[84c0170]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vfscanf
</UL><P><STRONG><a name="[5c58fe4]"></a>Cyg_StdioStream::read(unsigned char*, unsigned int, unsigned int*)</STRONG> (ARM, 360 bytes, Stack size 32 bytes, stream.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[746a0dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::flush_output_unlocked()
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><P><STRONG><a name="[5c58f5c]"></a>Cyg_StdioStream::read_byte(unsigned char*)</STRONG> (ARM, 324 bytes, Stack size 24 bytes, stream.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[746a0dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::flush_output_unlocked()
</UL><BR>[Called By]<UL><LI><a href="#[84c0170]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vfscanf
</UL><P><STRONG><a name="[5c58ed4]"></a>Cyg_StdioStream::peek_byte(unsigned char*)</STRONG> (ARM, 212 bytes, Stack size 24 bytes, stream.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[746a0dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::flush_output_unlocked()
</UL><BR>[Called By]<UL><LI><a href="#[84c0170]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vfscanf
</UL><P><STRONG><a name="[74523d4]"></a>Cyg_StdioStream::write(const unsigned char*, unsigned int, unsigned int*)</STRONG> (ARM, 456 bytes, Stack size 40 bytes, stream.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[746a0dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::flush_output_unlocked()
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[4d0cb38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fputs
<LI><a href="#[746a16c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vfnprintf
<LI><a href="#[8199614]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fwrite
<LI><a href="#[8a87d34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fputc
</UL><P><STRONG><a name="[746a16c]"></a>vfnprintf</STRONG> (ARM, 3928 bytes, Stack size 472 bytes, vfnprintf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74523d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::write(const unsigned char*, unsigned int, unsigned int*)
<LI><a href="#[5c89038]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cvt(double, int, int, char*, int, char*, char*)
<LI><a href="#[5c88ed8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memchr
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7a37bf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
<LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[4c78f58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[4d0cba4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4d32274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;printf
</UL><P><STRONG><a name="[59c9928]"></a>strtoul</STRONG> (ARM, 356 bytes, Stack size 48 bytes, strtoul.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[743f8bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[743f850]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isdigit
<LI><a href="#[743f7e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isalpha
<LI><a href="#[743f778]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isupper
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><BR>[Called By]<UL><LI><a href="#[59c9994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpString2ULong
</UL><BR>[Address Reference Count : 1]<UL><LI> vfscanf.o(.text)
</UL><P><STRONG><a name="[558f3f0]"></a>strpbrk</STRONG> (ARM, 100 bytes, Stack size 4 bytes, strpbrk.o(.text))
<BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[743afd4]"></a>strrchr</STRONG> (ARM, 60 bytes, Stack size 0 bytes, strrchr.o(.text))
<BR>[Called By]<UL><LI><a href="#[743b040]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rindex
<LI><a href="#[80eab3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_rtsp_location
<LI><a href="#[772e120]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_mime_type
<LI><a href="#[8180a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_client_data
<LI><a href="#[79b1fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_get_line
<LI><a href="#[9c68154]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_psk
<LI><a href="#[9c63ef8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_string
</UL><P><STRONG><a name="[558f384]"></a>strspn</STRONG> (ARM, 96 bytes, Stack size 8 bytes, strspn.o(.text))
<BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[8402700]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless_custom
</UL><P><STRONG><a name="[544d118]"></a>cyg_libc_time_normalize_structtm</STRONG> (ARM, 868 bytes, Stack size 32 bytes, timeutil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5caaa8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;div
</UL><BR>[Called By]<UL><LI><a href="#[5775c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPDataToTime
<LI><a href="#[874a664]">&lt&lt</a>&nbsp;&nbsp;&nbsp;localtime
<LI><a href="#[80b0f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;localtime_r
<LI><a href="#[544d628]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mktime
<LI><a href="#[811935c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;write_access_log
</UL><P><STRONG><a name="[5773e88]"></a>cyg_libc_time_itoa</STRONG> (ARM, 220 bytes, Stack size 40 bytes, timeutil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[874a6d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_vfmtmsg
<LI><a href="#[5773ffc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;asctime_r
</UL><P><STRONG><a name="[7416038]"></a>__ieee754_sqrt</STRONG> (ARM, 588 bytes, Stack size 32 bytes, e_sqrt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[4f73c68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[5cc9f44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_drdiv
<LI><a href="#[4f741d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL><BR>[Called By]<UL><LI><a href="#[4f74240]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_sqrt
</UL><P><STRONG><a name="[7412658]"></a>__ieee754_atan2</STRONG> (ARM, 736 bytes, Stack size 40 bytes, e_atan2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[5cc6628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__softfp_atan
<LI><a href="#[4f73bfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[4f73c68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[4f74668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_drsb
</UL><BR>[Called By]<UL><LI><a href="#[4f74900]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_atan2
</UL><P><STRONG><a name="[740f5e0]"></a>__ieee754_rem_pio2</STRONG> (ARM, 1576 bytes, Stack size 88 bytes, e_rem_pio2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f73c68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4e4cde8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[4f74974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dflt
<LI><a href="#[4f74668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[74125ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[5cc2994]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__kernel_rem_pio2
</UL><BR>[Called By]<UL><LI><a href="#[4f747b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_cos
<LI><a href="#[4f746d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_sin
</UL><P><STRONG><a name="[740f56c]"></a>__kernel_sin</STRONG> (ARM, 488 bytes, Stack size 64 bytes, k_sin.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e4cde8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[4f74668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[4f73c68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub
</UL><BR>[Called By]<UL><LI><a href="#[4f747b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_cos
<LI><a href="#[4f746d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_sin
</UL><P><STRONG><a name="[740f658]"></a>__kernel_cos</STRONG> (ARM, 552 bytes, Stack size 40 bytes, k_cos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e4cde8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[4f74668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[4f73c68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub
</UL><BR>[Called By]<UL><LI><a href="#[4f747b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_cos
<LI><a href="#[4f746d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_sin
</UL><P><STRONG><a name="[7415f50]"></a>isnan</STRONG> (ARM, 32 bytes, Stack size 0 bytes, s_isnan.o(.text))
<BR>[Called By]<UL><LI><a href="#[4f74240]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_sqrt
<LI><a href="#[4f74900]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_atan2
<LI><a href="#[5c89038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cvt(double, int, int, char*, int, char*, char*)
</UL><P><STRONG><a name="[7415ed8]"></a>__kernel_standard</STRONG> (ARM, 6060 bytes, Stack size 64 bytes, standard.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[5ce5978]">&gt&gt</a>&nbsp;&nbsp;&nbsp;matherr
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4f73d50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[5ce5894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rint
<LI><a href="#[74125ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[4f741d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[4f74828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[5ce5824]">&gt&gt</a>&nbsp;&nbsp;&nbsp;copysign
</UL><BR>[Called By]<UL><LI><a href="#[4f74240]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_sqrt
<LI><a href="#[4f74900]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_atan2
</UL><P><STRONG><a name="[5138220]"></a>cyg_mempool_var_create</STRONG> (ARM, 44 bytes, Stack size 16 bytes, kapi_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5cefb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::Cyg_Mempool_Variable(unsigned char*, int, int)
</UL><BR>[Called By]<UL><LI><a href="#[4d1ee1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
</UL><P><STRONG><a name="[5cefaa8]"></a>cyg_mempool_var_delete</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi_s.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5cefa24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::~Cyg_Mempool_Variable()
</UL><P><STRONG><a name="[5139060]"></a>cyg_mempool_var_alloc</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5cef9a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::alloc(int)
</UL><BR>[Called By]<UL><LI><a href="#[51390dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
</UL><P><STRONG><a name="[5cef920]"></a>cyg_mempool_var_timed_alloc</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi_s.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5cef898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::alloc(int, unsigned long long)
</UL><P><STRONG><a name="[5138fe0]"></a>cyg_mempool_var_try_alloc</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5cef810]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::try_alloc(int)
</UL><BR>[Called By]<UL><LI><a href="#[51390dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
</UL><P><STRONG><a name="[5138ef0]"></a>cyg_mempool_var_free</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5cef788]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::free(unsigned char*, int)
</UL><BR>[Called By]<UL><LI><a href="#[5138f6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><P><STRONG><a name="[5cef70c]"></a>cyg_mempool_var_waiting</STRONG> (ARM, 88 bytes, Stack size 48 bytes, kapi_s.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5cef66c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::get_status(unsigned short, Cyg_Mempool_Status&)
</UL><P><STRONG><a name="[5138aa4]"></a>cyg_mempool_var_get_info</STRONG> (ARM, 124 bytes, Stack size 56 bytes, kapi_s.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5cef66c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::get_status(unsigned short, Cyg_Mempool_Status&)
</UL><BR>[Called By]<UL><LI><a href="#[5138b24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_kmem_print_stats
<LI><a href="#[51389a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_get_mem_stats
</UL><P><STRONG><a name="[51381a4]"></a>cyg_mempool_fix_create</STRONG> (ARM, 48 bytes, Stack size 16 bytes, kapi_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5cef5e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::Cyg_Mempool_Fixed(unsigned char*, int, unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[4d1ee1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
</UL><P><STRONG><a name="[5cef568]"></a>cyg_mempool_fix_delete</STRONG> (ARM, 8 bytes, Stack size 0 bytes, kapi_s.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5cef4e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::~Cyg_Mempool_Fixed()
</UL><P><STRONG><a name="[5138d90]"></a>cyg_mempool_fix_alloc</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5cef464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::alloc()
</UL><BR>[Called By]<UL><LI><a href="#[5138e78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
</UL><P><STRONG><a name="[5cef3e4]"></a>cyg_mempool_fix_timed_alloc</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi_s.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5cef360]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::alloc(unsigned long long)
</UL><P><STRONG><a name="[5138d10]"></a>cyg_mempool_fix_try_alloc</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5cef2d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::try_alloc()
</UL><BR>[Called By]<UL><LI><a href="#[5138e78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5138ba0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_cluster_alloc
</UL><P><STRONG><a name="[5138c1c]"></a>cyg_mempool_fix_free</STRONG> (ARM, 4 bytes, Stack size 0 bytes, kapi_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5cef254]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::free(unsigned char*)
</UL><BR>[Called By]<UL><LI><a href="#[5138c98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_free
</UL><P><STRONG><a name="[5cef1d8]"></a>cyg_mempool_fix_waiting</STRONG> (ARM, 88 bytes, Stack size 48 bytes, kapi_s.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5cef13c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::get_status(unsigned short, Cyg_Mempool_Status&)
</UL><P><STRONG><a name="[5138a24]"></a>cyg_mempool_fix_get_info</STRONG> (ARM, 128 bytes, Stack size 56 bytes, kapi_s.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5cef13c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::get_status(unsigned short, Cyg_Mempool_Status&)
</UL><BR>[Called By]<UL><LI><a href="#[5138b24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_kmem_print_stats
<LI><a href="#[51389a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_get_mem_stats
</UL><P><STRONG><a name="[5d17880]"></a>Cyg_Mempool_dlmalloc_Implementation::Cyg_Mempool_dlmalloc_Implementation(unsigned char*, int, unsigned int)</STRONG> (ARM, 136 bytes, Stack size 16 bytes, dlmalloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[5d21bec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
</UL><P><STRONG><a name="[7404f80]"></a>Cyg_Mempool_dlmalloc_Implementation::try_alloc(int)</STRONG> (ARM, 1176 bytes, Stack size 36 bytes, dlmalloc.o(.text))
<BR>[Called By]<UL><LI><a href="#[4d322e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4db51b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;free
</UL><P><STRONG><a name="[7404ee8]"></a>Cyg_Mempool_dlmalloc_Implementation::free(unsigned char*, int)</STRONG> (ARM, 556 bytes, Stack size 16 bytes, dlmalloc.o(.text))
<BR>[Called By]<UL><LI><a href="#[4db51b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[7404d70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_dlmalloc_Implementation::resize_alloc(unsigned char*, int, int*)
</UL><P><STRONG><a name="[7404d70]"></a>Cyg_Mempool_dlmalloc_Implementation::resize_alloc(unsigned char*, int, int*)</STRONG> (ARM, 1112 bytes, Stack size 56 bytes, dlmalloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[7404ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_dlmalloc_Implementation::free(unsigned char*, int)
</UL><BR>[Called By]<UL><LI><a href="#[7404e10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;realloc
</UL><P><STRONG><a name="[7404cc0]"></a>Cyg_Mempool_dlmalloc_Implementation::get_status(unsigned short, Cyg_Mempool_Status&)</STRONG> (ARM, 192 bytes, Stack size 20 bytes, dlmalloc.o(.text))
<BR>[Called By]<UL><LI><a href="#[4e4ca48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mallinfo
</UL><P><STRONG><a name="[5d78d58]"></a>cyg_hal_plf_serial_putc</STRONG> (ARM, 36 bytes, Stack size 0 bytes, hal_diag.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hal_diag.o(.text)
</UL><P><STRONG><a name="[5d78cdc]"></a>cyg_hal_plf_serial_getc</STRONG> (ARM, 80 bytes, Stack size 24 bytes, hal_diag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[501e6f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_interrupt_acknowledge
</UL><BR>[Called By]<UL><LI><a href="#[5d78fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_plf_serial_read
</UL><BR>[Address Reference Count : 1]<UL><LI> hal_diag.o(.text)
</UL><P><STRONG><a name="[5d78c58]"></a>cyg_hal_plf_serial_getc_timeout</STRONG> (ARM, 152 bytes, Stack size 40 bytes, hal_diag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[501e6f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_interrupt_acknowledge
<LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> hal_diag.o(.text)
</UL><P><STRONG><a name="[7531c80]"></a>cyg_hal_plf_comms_init</STRONG> (ARM, 404 bytes, Stack size 40 bytes, hal_diag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
<LI><a href="#[5d79bc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_hal_plf_serial_init_channel
</UL><BR>[Called By]<UL><LI><a href="#[7531cfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hal_if_init
</UL><P><STRONG><a name="[5d78be4]"></a>hal_diag_led</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hal_diag.o(.text), UNUSED)
<P><STRONG><a name="[5d87dfc]"></a>freeaddrinfo</STRONG> (ARM, 60 bytes, Stack size 16 bytes, getaddrinfo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[5d87d8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getaddrinfo
</UL><P><STRONG><a name="[5d87d8c]"></a>getaddrinfo</STRONG> (ARM, 900 bytes, Stack size 72 bytes, getaddrinfo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7404e7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[5d87d14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getprotobynumber
<LI><a href="#[4dee704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[5d87dfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;freeaddrinfo
<LI><a href="#[51191b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getservbyname
<LI><a href="#[5d87ca0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getprotobyname
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[5d87c30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_pton
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><P><STRONG><a name="[5d87bbc]"></a>gai_strerror</STRONG> (ARM, 584 bytes, Stack size 0 bytes, getaddrinfo.o(.text), UNUSED)
<P><STRONG><a name="[5137d40]"></a>getnameinfo</STRONG> (ARM, 228 bytes, Stack size 16 bytes, getaddrinfo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5137aa8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_inet_ntop
<LI><a href="#[5d87b4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_inet_port
<LI><a href="#[5d87ad8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getservbyport
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Called By]<UL><LI><a href="#[5137e8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;show_network_tables
<LI><a href="#[5da8630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_show_all_interfaces
</UL><P><STRONG><a name="[51191b8]"></a>getservbyname</STRONG> (ARM, 160 bytes, Stack size 16 bytes, getserv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><BR>[Called By]<UL><LI><a href="#[4cecd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_dns_res_init
<LI><a href="#[5d87d8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getaddrinfo
</UL><P><STRONG><a name="[5d87ad8]"></a>getservbyport</STRONG> (ARM, 168 bytes, Stack size 16 bytes, getserv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><BR>[Called By]<UL><LI><a href="#[5137d40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getnameinfo
</UL><P><STRONG><a name="[5da8790]"></a>getifaddrs</STRONG> (ARM, 500 bytes, Stack size 1072 bytes, ifaddrs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[5137a34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_indextoname
<LI><a href="#[5da86ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_nametoindex
<LI><a href="#[5da8630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_show_all_interfaces
</UL><P><STRONG><a name="[5da8720]"></a>freeifaddrs</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ifaddrs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><P><STRONG><a name="[5137a34]"></a>if_indextoname</STRONG> (ARM, 168 bytes, Stack size 24 bytes, ifaddrs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5da8790]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getifaddrs
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><BR>[Called By]<UL><LI><a href="#[5139734]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dumpentry
<LI><a href="#[5da8630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_show_all_interfaces
</UL><P><STRONG><a name="[5da86ac]"></a>if_nametoindex</STRONG> (ARM, 156 bytes, Stack size 24 bytes, ifaddrs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5da8790]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getifaddrs
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><BR>[Called By]<UL><LI><a href="#[5da8630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_show_all_interfaces
<LI><a href="#[8401a80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_alternative_ifindex
<LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
</UL><P><STRONG><a name="[5da8630]"></a>_show_all_interfaces</STRONG> (ARM, 444 bytes, Stack size 96 bytes, ifaddrs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5da8790]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getifaddrs
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5137d40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getnameinfo
<LI><a href="#[5da86ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;if_nametoindex
<LI><a href="#[5137a34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;if_indextoname
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><P><STRONG><a name="[5db6480]"></a>inet_ntop</STRONG> (ARM, 140 bytes, Stack size 40 bytes, inet_ntop.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><P><STRONG><a name="[5137aa8]"></a>_inet_ntop</STRONG> (ARM, 144 bytes, Stack size 40 bytes, inet_ntop.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Called By]<UL><LI><a href="#[5139734]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dumpentry
<LI><a href="#[5137d40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getnameinfo
</UL><P><STRONG><a name="[5d87b4c]"></a>_inet_port</STRONG> (ARM, 36 bytes, Stack size 0 bytes, inet_ntop.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[5137d40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getnameinfo
</UL><P><STRONG><a name="[5183c18]"></a>ecos_synch_eth_drv_dsr</STRONG> (ARM, 12 bytes, Stack size 0 bytes, timeout.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
</UL><BR>[Called By]<UL><LI><a href="#[5183c94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_dsr
</UL><P><STRONG><a name="[5138310]"></a>cyg_alarm_timeout_init</STRONG> (ARM, 172 bytes, Stack size 24 bytes, timeout.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e4a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_real_time_clock
<LI><a href="#[4c2e61c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_clock_to_counter
<LI><a href="#[4c2e3b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_create
<LI><a href="#[4c2ccf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_init
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
</UL><BR>[Called By]<UL><LI><a href="#[4d1ee1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
</UL><P><STRONG><a name="[516d0c0]"></a>timeout</STRONG> (ARM, 244 bytes, Stack size 32 bytes, timeout.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5daa484]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splinternal
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4c2e1b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_initialize
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[516d1a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_timer_timer
<LI><a href="#[516d04c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_timer_init
<LI><a href="#[516cfd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_timer_queue_create
<LI><a href="#[7a80220]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pfslowtimo
<LI><a href="#[7a801b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pffasttimo
<LI><a href="#[5137f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;domaininit
<LI><a href="#[7ad5cb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_slowtimo
<LI><a href="#[5137f74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifinit
<LI><a href="#[7b2f9a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arp_rtrequest
<LI><a href="#[7b309cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arptimer
</UL><P><STRONG><a name="[5daa414]"></a>untimeout</STRONG> (ARM, 92 bytes, Stack size 16 bytes, timeout.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5daa484]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splinternal
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><P><STRONG><a name="[5183f2c]"></a>cyg_splimp</STRONG> (ARM, 8 bytes, Stack size 0 bytes, synch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a7222c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spl_any
</UL><BR>[Called By]<UL><LI><a href="#[5185604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_recv
<LI><a href="#[7a917b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_reclaim
<LI><a href="#[51380c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mbinit
<LI><a href="#[5183de4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_retry
<LI><a href="#[5183ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_retryhdr
<LI><a href="#[516d2f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_get
<LI><a href="#[7a91748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_gethdr
<LI><a href="#[7a916d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_getclr
<LI><a href="#[516d288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[5184008]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[7a91668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_prepend
<LI><a href="#[7a915fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copym
<LI><a href="#[7a9158c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copym2
<LI><a href="#[7a913d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_pullup
<LI><a href="#[7a91364]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_pullup2
<LI><a href="#[7a912f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_inject
<LI><a href="#[7a91288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_split
<LI><a href="#[7a91218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_devget
<LI><a href="#[7ad5cb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_slowtimo
<LI><a href="#[5137f74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifinit
<LI><a href="#[7ad5a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_detach
<LI><a href="#[7ad55b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifioctl
<LI><a href="#[7af4380]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_output
<LI><a href="#[5183d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_input
<LI><a href="#[7af3f80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_addmulti
<LI><a href="#[7af3f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_delmulti
<LI><a href="#[7af42a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;looutput
<LI><a href="#[5137c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arpintr
<LI><a href="#[7b3f8e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipv4_input
<LI><a href="#[5137bf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipintr
<LI><a href="#[7b3f804]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_slowtimo
<LI><a href="#[7b3f794]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_drain
<LI><a href="#[9a8a088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppioctl
<LI><a href="#[9a8a010]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_restart
<LI><a href="#[9a8a72c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_ccp
<LI><a href="#[9a8a5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_inproc
<LI><a href="#[5137b88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppintr
<LI><a href="#[9a89da0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppppktin
<LI><a href="#[9a8ac48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppsioctl
<LI><a href="#[863e994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbdrop
<LI><a href="#[863e228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbappendaddr
<LI><a href="#[863e140]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbdroprecord
<LI><a href="#[863e0cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbcreatecontrol
<LI><a href="#[8696d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_sendpkt
<LI><a href="#[869e38c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_ifinit
<LI><a href="#[7b4f498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[872efdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppgetm
<LI><a href="#[872eba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppasyncstart
<LI><a href="#[9ac289c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppwrite
<LI><a href="#[8aa4e60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sorflush
<LI><a href="#[8aa4a0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sosend
<LI><a href="#[8aa499c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soreceive
<LI><a href="#[8b1c96c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_setsockopt
<LI><a href="#[8b82764]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_template
<LI><a href="#[8b827d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL><P><STRONG><a name="[516d12c]"></a>cyg_splclock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, synch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a7222c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spl_any
</UL><BR>[Called By]<UL><LI><a href="#[516d1a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_timer_timer
<LI><a href="#[516ce64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_timer_add
</UL><P><STRONG><a name="[516d66c]"></a>cyg_splnet</STRONG> (ARM, 8 bytes, Stack size 0 bytes, synch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a7222c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spl_any
</UL><BR>[Called By]<UL><LI><a href="#[516d6dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtalloc2
<LI><a href="#[5184b38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_ioctl
<LI><a href="#[86d7a78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcballoc
<LI><a href="#[86d7a04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbrehash
<LI><a href="#[86d774c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbdetach
<LI><a href="#[8b82b68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcpdropoldhalfopen
</UL><P><STRONG><a name="[7a71558]"></a>cyg_splhigh</STRONG> (ARM, 8 bytes, Stack size 0 bytes, synch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a7222c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spl_any
</UL><P><STRONG><a name="[5137ccc]"></a>cyg_splsoftnet</STRONG> (ARM, 8 bytes, Stack size 0 bytes, synch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a7222c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spl_any
</UL><BR>[Called By]<UL><LI><a href="#[5139b64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_netint
<LI><a href="#[516dae8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtalloc1
<LI><a href="#[516da78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[516d1a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_timer_timer
<LI><a href="#[7ace838]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_usrreq
<LI><a href="#[7b309cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arptimer
<LI><a href="#[7b3f804]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_slowtimo
<LI><a href="#[9ac2f98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_establish_ppp
<LI><a href="#[9ac2a00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_output
<LI><a href="#[9ac2824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_wait_input
<LI><a href="#[9ac2644]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_read_packet
<LI><a href="#[9ac2554]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_send_config
<LI><a href="#[9ac2464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_set_xaccm
<LI><a href="#[9ac23e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_recv_config
<LI><a href="#[9ac2370]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ccp_test
<LI><a href="#[9a8a270]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppoutput
<LI><a href="#[9a8a088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppioctl
<LI><a href="#[8696cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_joingroup
<LI><a href="#[8696bec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_fasttimo
<LI><a href="#[8696b78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_slowtimo
<LI><a href="#[869e3fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_addmulti
<LI><a href="#[869e238]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_delmulti
<LI><a href="#[9ac1328]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppstart
<LI><a href="#[8aa4d84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sobind
<LI><a href="#[8aa4d14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;solisten
<LI><a href="#[8aa4ca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sodisconnect
<LI><a href="#[8aa4bc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soclose
<LI><a href="#[8aa4b58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soaccept
<LI><a href="#[8aa4ae8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soconnect
<LI><a href="#[8aa4a78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soconnect2
<LI><a href="#[8aa4a0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sosend
<LI><a href="#[8aa499c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soreceive
<LI><a href="#[8b1cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_connect
<LI><a href="#[8b1cba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_accept
<LI><a href="#[8b1c65c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_select
<LI><a href="#[8b19e24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_output
<LI><a href="#[86f68a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_usrreq
<LI><a href="#[86f6584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_fasttimo
<LI><a href="#[86f6510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_slowtimo
<LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
<LI><a href="#[86f66d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_ctloutput
<LI><a href="#[8bcd528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_ident
</UL><P><STRONG><a name="[5daa484]"></a>cyg_splinternal</STRONG> (ARM, 8 bytes, Stack size 0 bytes, synch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a7222c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spl_any
</UL><BR>[Called By]<UL><LI><a href="#[516d0c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;timeout
<LI><a href="#[5daa414]">&lt&lt</a>&nbsp;&nbsp;&nbsp;untimeout
<LI><a href="#[5daa6ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;alarm_thread
</UL><P><STRONG><a name="[5137b18]"></a>cyg_splx</STRONG> (ARM, 44 bytes, Stack size 0 bytes, synch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[5139b64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_netint
<LI><a href="#[516dae8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtalloc1
<LI><a href="#[516da78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[516d6dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtalloc2
<LI><a href="#[516d1a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_timer_timer
<LI><a href="#[516ce64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_timer_add
<LI><a href="#[5185604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_recv
<LI><a href="#[5184b38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_ioctl
<LI><a href="#[516d0c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;timeout
<LI><a href="#[5daa414]">&lt&lt</a>&nbsp;&nbsp;&nbsp;untimeout
<LI><a href="#[5daa6ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;alarm_thread
<LI><a href="#[7a917b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_reclaim
<LI><a href="#[51380c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mbinit
<LI><a href="#[5183de4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_retry
<LI><a href="#[5183ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_retryhdr
<LI><a href="#[516d2f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_get
<LI><a href="#[7a91748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_gethdr
<LI><a href="#[7a916d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_getclr
<LI><a href="#[516d288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[5184008]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[7a91668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_prepend
<LI><a href="#[7a915fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copym
<LI><a href="#[7a9158c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copym2
<LI><a href="#[7a913d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_pullup
<LI><a href="#[7a91364]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_pullup2
<LI><a href="#[7a912f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_inject
<LI><a href="#[7a91288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_split
<LI><a href="#[7a91218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_devget
<LI><a href="#[7ace838]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_usrreq
<LI><a href="#[7ad5cb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_slowtimo
<LI><a href="#[5137f74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifinit
<LI><a href="#[7ad5a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_detach
<LI><a href="#[7ad55b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifioctl
<LI><a href="#[7af4380]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_output
<LI><a href="#[5183d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_input
<LI><a href="#[7af3f80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_addmulti
<LI><a href="#[7af3f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_delmulti
<LI><a href="#[7af42a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;looutput
<LI><a href="#[5137c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arpintr
<LI><a href="#[7b309cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arptimer
<LI><a href="#[7b3f8e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipv4_input
<LI><a href="#[5137bf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipintr
<LI><a href="#[7b3f804]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_slowtimo
<LI><a href="#[7b3f794]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_drain
<LI><a href="#[9ac2f98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_establish_ppp
<LI><a href="#[9ac2a00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_output
<LI><a href="#[9ac2824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_wait_input
<LI><a href="#[9ac2644]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_read_packet
<LI><a href="#[9ac2554]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_send_config
<LI><a href="#[9ac2464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_set_xaccm
<LI><a href="#[9ac23e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_recv_config
<LI><a href="#[9ac2370]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ccp_test
<LI><a href="#[9a8a270]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppoutput
<LI><a href="#[9a8a088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppioctl
<LI><a href="#[9a8a010]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_restart
<LI><a href="#[9a8a72c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_ccp
<LI><a href="#[9a8a5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_inproc
<LI><a href="#[5137b88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppintr
<LI><a href="#[9a89da0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppppktin
<LI><a href="#[9a8ac48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppsioctl
<LI><a href="#[863e994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbdrop
<LI><a href="#[863e228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbappendaddr
<LI><a href="#[863e140]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbdroprecord
<LI><a href="#[863e0cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbcreatecontrol
<LI><a href="#[8696d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_sendpkt
<LI><a href="#[8696cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_joingroup
<LI><a href="#[8696bec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_fasttimo
<LI><a href="#[8696b78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_slowtimo
<LI><a href="#[869e3fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_addmulti
<LI><a href="#[869e38c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_ifinit
<LI><a href="#[869e238]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_delmulti
<LI><a href="#[86d7a78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcballoc
<LI><a href="#[86d7a04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbrehash
<LI><a href="#[86d774c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbdetach
<LI><a href="#[7b4f498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[872efdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppgetm
<LI><a href="#[872eba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppasyncstart
<LI><a href="#[9ac289c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppwrite
<LI><a href="#[9ac1328]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppstart
<LI><a href="#[8aa4e60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sorflush
<LI><a href="#[8aa4d84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sobind
<LI><a href="#[8aa4d14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;solisten
<LI><a href="#[8aa4ca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sodisconnect
<LI><a href="#[8aa4bc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soclose
<LI><a href="#[8aa4b58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soaccept
<LI><a href="#[8aa4ae8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soconnect
<LI><a href="#[8aa4a78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soconnect2
<LI><a href="#[8aa4a0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sosend
<LI><a href="#[8aa499c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soreceive
<LI><a href="#[8b1cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_connect
<LI><a href="#[8b1cba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_accept
<LI><a href="#[8b1c96c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_setsockopt
<LI><a href="#[8b1c65c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_select
<LI><a href="#[8b19e24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_output
<LI><a href="#[86f68a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_usrreq
<LI><a href="#[8b82b68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcpdropoldhalfopen
<LI><a href="#[8b82764]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_template
<LI><a href="#[86f6584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_fasttimo
<LI><a href="#[86f6510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_slowtimo
<LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
<LI><a href="#[86f66d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_ctloutput
<LI><a href="#[8bcd528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_ident
<LI><a href="#[8b827d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL><P><STRONG><a name="[513829c]"></a>cyg_tsleep_init</STRONG> (ARM, 68 bytes, Stack size 16 bytes, synch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d3fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_init
<LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
</UL><BR>[Called By]<UL><LI><a href="#[4d1ee1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
</UL><P><STRONG><a name="[7a714e8]"></a>cyg_wakeup</STRONG> (ARM, 60 bytes, Stack size 16 bytes, synch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Called By]<UL><LI><a href="#[7b2f8c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_revarpinput
<LI><a href="#[863ec40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sowakeup
<LI><a href="#[7ace674]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soisconnected
<LI><a href="#[863ea78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soisdisconnecting
<LI><a href="#[863ea00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soisdisconnected
<LI><a href="#[863e768]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sonewconn1
<LI><a href="#[863e460]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbunlock
<LI><a href="#[8ba18c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_notify
</UL><P><STRONG><a name="[7a71478]"></a>cyg_tsleep</STRONG> (ARM, 288 bytes, Stack size 40 bytes, synch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a0359c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_self
<LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[4c2d3fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_init
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4c2d0f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_timed_wait
<LI><a href="#[4c2d1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_wait
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
</UL><BR>[Called By]<UL><LI><a href="#[7b2f7dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;revarpwhoarewe
<LI><a href="#[863e5a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbwait
<LI><a href="#[863e53c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sb_lock
<LI><a href="#[863e4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sblock
<LI><a href="#[8aa4bc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soclose
<LI><a href="#[8b1cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_connect
<LI><a href="#[8b1cba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_accept
</UL><P><STRONG><a name="[51841cc]"></a>cyg_ifplock</STRONG> (ARM, 4 bytes, Stack size 0 bytes, synch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
</UL><BR>[Called By]<UL><LI><a href="#[51851fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_send
<LI><a href="#[7af4380]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_output
<LI><a href="#[5183d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_input
<LI><a href="#[7af42a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;looutput
<LI><a href="#[5137c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arpintr
<LI><a href="#[5137bf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipintr
<LI><a href="#[9a8a270]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppoutput
<LI><a href="#[9a8a100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppdealloc
<LI><a href="#[9a8a088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppioctl
<LI><a href="#[9a89f98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_dequeue
<LI><a href="#[9a8a5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_inproc
<LI><a href="#[5137b88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppintr
<LI><a href="#[9a89da0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppppktin
<LI><a href="#[9ac25d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppread
</UL><P><STRONG><a name="[5184158]"></a>cyg_ifpunlock</STRONG> (ARM, 4 bytes, Stack size 0 bytes, synch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[51851fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_send
<LI><a href="#[7af4380]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_output
<LI><a href="#[5183d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_input
<LI><a href="#[7af42a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;looutput
<LI><a href="#[5137c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arpintr
<LI><a href="#[5137bf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipintr
<LI><a href="#[9a8a270]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppoutput
<LI><a href="#[9a8a100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppdealloc
<LI><a href="#[9a8a088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppioctl
<LI><a href="#[9a89f98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_dequeue
<LI><a href="#[9a8a5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_inproc
<LI><a href="#[5137b88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppintr
<LI><a href="#[9a89da0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppppktin
<LI><a href="#[9ac25d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppread
</UL><P><STRONG><a name="[7a80220]"></a>pfslowtimo</STRONG> (ARM, 108 bytes, Stack size 16 bytes, uipc_domain.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d0c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;timeout
</UL><BR>[Address Reference Count : 1]<UL><LI> uipc_domain.o(.text)
</UL><P><STRONG><a name="[7a801b0]"></a>pffasttimo</STRONG> (ARM, 116 bytes, Stack size 16 bytes, uipc_domain.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d0c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;timeout
</UL><BR>[Address Reference Count : 1]<UL><LI> uipc_domain.o(.text)
</UL><P><STRONG><a name="[5137f04]"></a>domaininit</STRONG> (ARM, 196 bytes, Stack size 16 bytes, uipc_domain.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d0c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;timeout
</UL><BR>[Called By]<UL><LI><a href="#[4d1ee1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
</UL><P><STRONG><a name="[7a9fc84]"></a>pffindtype</STRONG> (ARM, 108 bytes, Stack size 0 bytes, uipc_domain.o(.text))
<BR>[Called By]<UL><LI><a href="#[8aa4df0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;socreate
</UL><P><STRONG><a name="[7a9fc14]"></a>pffindproto</STRONG> (ARM, 152 bytes, Stack size 4 bytes, uipc_domain.o(.text))
<BR>[Called By]<UL><LI><a href="#[7b4f88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_init
<LI><a href="#[8aa4df0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;socreate
</UL><P><STRONG><a name="[7a9fba4]"></a>pfctlinput</STRONG> (ARM, 104 bytes, Stack size 24 bytes, uipc_domain.o(.text))
<BR>[Called By]<UL><LI><a href="#[7ad5764]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_down
<LI><a href="#[7ad55b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifioctl
<LI><a href="#[86f62dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL><P><STRONG><a name="[7a917b8]"></a>m_reclaim</STRONG> (ARM, 124 bytes, Stack size 16 bytes, uipc_mbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[5183d74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_clalloc
<LI><a href="#[5183de4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_retry
<LI><a href="#[5183ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_retryhdr
<LI><a href="#[5137bf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipintr
</UL><P><STRONG><a name="[5183d74]"></a>m_clalloc</STRONG> (ARM, 172 bytes, Stack size 16 bytes, uipc_mbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[5138ba0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_cluster_alloc
<LI><a href="#[7a917b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_reclaim
</UL><BR>[Called By]<UL><LI><a href="#[5185604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_recv
<LI><a href="#[51380c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mbinit
<LI><a href="#[7a9158c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copym2
<LI><a href="#[7a91364]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_pullup2
<LI><a href="#[7a91218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_devget
<LI><a href="#[7af42a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;looutput
<LI><a href="#[9a8a5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_inproc
<LI><a href="#[863e0cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbcreatecontrol
<LI><a href="#[872efdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppgetm
<LI><a href="#[9ac289c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppwrite
<LI><a href="#[8aa4a0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sosend
<LI><a href="#[8b1c96c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_setsockopt
<LI><a href="#[8b82764]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_template
<LI><a href="#[8b827d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL><P><STRONG><a name="[51380c8]"></a>mbinit</STRONG> (ARM, 60 bytes, Stack size 8 bytes, uipc_mbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5183d74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_clalloc
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
</UL><BR>[Called By]<UL><LI><a href="#[4d1ee1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
</UL><P><STRONG><a name="[5183de4]"></a>m_retry</STRONG> (ARM, 136 bytes, Stack size 16 bytes, uipc_mbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[513838c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;setsoftnet
<LI><a href="#[7a917b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_reclaim
<LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[5185604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_recv
<LI><a href="#[516d2f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_get
<LI><a href="#[7a916d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_getclr
<LI><a href="#[7a91668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_prepend
<LI><a href="#[7a915fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copym
<LI><a href="#[7a9158c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copym2
<LI><a href="#[7a913d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_pullup
<LI><a href="#[7a91364]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_pullup2
<LI><a href="#[7a912f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_inject
<LI><a href="#[7a91288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_split
<LI><a href="#[7a91218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_devget
<LI><a href="#[863e228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbappendaddr
<LI><a href="#[9ac289c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppwrite
<LI><a href="#[8aa4a0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sosend
</UL><P><STRONG><a name="[5183ebc]"></a>m_retryhdr</STRONG> (ARM, 140 bytes, Stack size 16 bytes, uipc_mbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[513838c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;setsoftnet
<LI><a href="#[7a917b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_reclaim
<LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[5185604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_recv
<LI><a href="#[7a91748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_gethdr
<LI><a href="#[7a91288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_split
<LI><a href="#[7a91218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_devget
<LI><a href="#[7af42a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;looutput
<LI><a href="#[9a8a5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_inproc
<LI><a href="#[8696d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_sendpkt
<LI><a href="#[7b4f498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[872efdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppgetm
<LI><a href="#[8aa4a0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sosend
<LI><a href="#[8b827d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL><P><STRONG><a name="[516d2f4]"></a>m_get</STRONG> (ARM, 120 bytes, Stack size 16 bytes, uipc_mbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183de4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retry
</UL><BR>[Called By]<UL><LI><a href="#[516d360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtinit
<LI><a href="#[7ace604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copyback
<LI><a href="#[5183ab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_packet_send
<LI><a href="#[7b4f6cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[7b3f724]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_srcroute
<LI><a href="#[863e0cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbcreatecontrol
<LI><a href="#[872a240]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_getmoptions
<LI><a href="#[86f6910]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_ctloutput
<LI><a href="#[8aa499c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soreceive
<LI><a href="#[8aa484c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sogetopt
<LI><a href="#[8b1a640]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sockargs
<LI><a href="#[8b1cba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_accept
<LI><a href="#[8b1c96c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_setsockopt
<LI><a href="#[86f69f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[86f63bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_ctloutput
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[8b82764]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_template
<LI><a href="#[86f66d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_ctloutput
</UL><P><STRONG><a name="[7a91748]"></a>m_gethdr</STRONG> (ARM, 124 bytes, Stack size 16 bytes, uipc_mbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183ebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retryhdr
</UL><BR>[Called By]<UL><LI><a href="#[7aceea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_msg1
<LI><a href="#[7b30bcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arprequest
<LI><a href="#[7b2f850]">&lt&lt</a>&nbsp;&nbsp;&nbsp;revarprequest
<LI><a href="#[5183ab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_packet_send
<LI><a href="#[86fd02c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_reflect
<LI><a href="#[7b4f508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_error
<LI><a href="#[8b82684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_respond
</UL><P><STRONG><a name="[7a916d8]"></a>m_getclr</STRONG> (ARM, 136 bytes, Stack size 16 bytes, uipc_mbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183de4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retry
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
</UL><BR>[Called By]<UL><LI><a href="#[7ace604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copyback
<LI><a href="#[8b1cac8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_getname
</UL><P><STRONG><a name="[516d288]"></a>m_free</STRONG> (ARM, 192 bytes, Stack size 16 bytes, uipc_mbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[5138c98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_free
</UL><BR>[Called By]<UL><LI><a href="#[516d360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtinit
<LI><a href="#[5185604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_recv
<LI><a href="#[7a914b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_cat
<LI><a href="#[7a913d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_pullup
<LI><a href="#[7a91364]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_pullup2
<LI><a href="#[7a91288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_split
<LI><a href="#[7af42a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;looutput
<LI><a href="#[7b4f73c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_freef
<LI><a href="#[7b4f6cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[863e3f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbcompress
<LI><a href="#[863e0cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbcreatecontrol
<LI><a href="#[86fd02c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_reflect
<LI><a href="#[872a15c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_pcbopts
<LI><a href="#[86f6910]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_ctloutput
<LI><a href="#[8aa499c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soreceive
<LI><a href="#[8aa48bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sosetopt
<LI><a href="#[8aa484c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sogetopt
<LI><a href="#[8b1a640]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sockargs
<LI><a href="#[8b1c9e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_getsockopt
<LI><a href="#[8b1c96c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_setsockopt
<LI><a href="#[86f63bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_ctloutput
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[8b82764]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_template
<LI><a href="#[8b82af8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[86f66d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_ctloutput
<LI><a href="#[8b827d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL><P><STRONG><a name="[5184008]"></a>m_freem</STRONG> (ARM, 200 bytes, Stack size 24 bytes, uipc_mbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[5138c98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_free
</UL><BR>[Called By]<UL><LI><a href="#[5185590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_tx_done
<LI><a href="#[5185604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_recv
<LI><a href="#[7a91668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_prepend
<LI><a href="#[7a915fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copym
<LI><a href="#[7a9158c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_copym2
<LI><a href="#[7a913d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_pullup
<LI><a href="#[7a91364]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_pullup2
<LI><a href="#[7a912f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_inject
<LI><a href="#[7a91218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_devget
<LI><a href="#[7ace920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_output
<LI><a href="#[7aceea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_msg1
<LI><a href="#[7ad57d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_qflush
<LI><a href="#[7ad5764]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_down
<LI><a href="#[7ad55b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifioctl
<LI><a href="#[7af4380]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_output
<LI><a href="#[5183d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_input
<LI><a href="#[7af42a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;looutput
<LI><a href="#[7b2f9a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arp_rtrequest
<LI><a href="#[7af4310]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arpresolve
<LI><a href="#[7b3070c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_arpinput
<LI><a href="#[5137c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arpintr
<LI><a href="#[7b2f8c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_revarpinput
<LI><a href="#[7af40dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;revarpinput
<LI><a href="#[5183ab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_packet_send
<LI><a href="#[7b4f73c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_freef
<LI><a href="#[7b4f6cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[7b4f5ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_forward
<LI><a href="#[7b3f8e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipv4_input
<LI><a href="#[9a8a270]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppoutput
<LI><a href="#[9a8a100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppdealloc
<LI><a href="#[9a8a088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppioctl
<LI><a href="#[9a89f98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_dequeue
<LI><a href="#[9a8a5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_inproc
<LI><a href="#[7ace994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;raw_input
<LI><a href="#[7ace6e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;raw_usrreq
<LI><a href="#[8696e2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_input
<LI><a href="#[86d774c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbdetach
<LI><a href="#[86fd02c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_reflect
<LI><a href="#[7b4f508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_error
<LI><a href="#[86f62dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[7b4f498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[9ac25d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppread
<LI><a href="#[9ac289c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppwrite
<LI><a href="#[872e964]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppasyncrelinq
<LI><a href="#[8aa4a0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sosend
<LI><a href="#[8aa499c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soreceive
<LI><a href="#[8b1cc88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_bind
<LI><a href="#[8b1cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_connect
<LI><a href="#[8b1cba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_accept
<LI><a href="#[8b1cac8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_getname
<LI><a href="#[8b1c96c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_setsockopt
<LI><a href="#[8b1c8fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_sendmsg
<LI><a href="#[8b1c88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_recvmsg
<LI><a href="#[86f69f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[8b19e24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_output
<LI><a href="#[86f68a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_usrreq
<LI><a href="#[8696dbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_input
<LI><a href="#[86f6430]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_output
<LI><a href="#[86f634c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_usrreq
<LI><a href="#[8b82be0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_reass
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[8b82684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_respond
<LI><a href="#[8b82af8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
<LI><a href="#[8b827d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL><P><STRONG><a name="[7a91668]"></a>m_prepend</STRONG> (ARM, 256 bytes, Stack size 24 bytes, uipc_mbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183de4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retry
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Called By]<UL><LI><a href="#[7af4380]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_output
<LI><a href="#[5183d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_input
<LI><a href="#[9a8a270]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppoutput
<LI><a href="#[8b19e24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_output
<LI><a href="#[86f6430]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_output
</UL><P><STRONG><a name="[7a915fc]"></a>m_copym</STRONG> (ARM, 728 bytes, Stack size 40 bytes, uipc_mbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183de4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retry
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Called By]<UL><LI><a href="#[7af4380]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_output
<LI><a href="#[7b4f5ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_forward
<LI><a href="#[7ace994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;raw_input
<LI><a href="#[7b4f498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[8aa499c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soreceive
<LI><a href="#[86f69f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[8696dbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_input
<LI><a href="#[8b827d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL><P><STRONG><a name="[7a9158c]"></a>m_copym2</STRONG> (ARM, 840 bytes, Stack size 40 bytes, uipc_mbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183de4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retry
<LI><a href="#[5183d74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_clalloc
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Called By]<UL><LI><a href="#[7a912f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_inject
</UL><P><STRONG><a name="[7a9151c]"></a>m_copydata</STRONG> (ARM, 288 bytes, Stack size 24 bytes, uipc_mbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
</UL><BR>[Called By]<UL><LI><a href="#[7ace920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_output
<LI><a href="#[7af42a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;looutput
<LI><a href="#[9a8a5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_inproc
<LI><a href="#[8b827d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL><P><STRONG><a name="[7a914b0]"></a>m_cat</STRONG> (ARM, 144 bytes, Stack size 16 bytes, uipc_mbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
</UL><BR>[Called By]<UL><LI><a href="#[7b4f6cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_reass
</UL><P><STRONG><a name="[7a91444]"></a>m_adj</STRONG> (ARM, 300 bytes, Stack size 4 bytes, uipc_mbuf.o(.text))
<BR>[Called By]<UL><LI><a href="#[5183d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_input
<LI><a href="#[7af42a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;looutput
<LI><a href="#[7b4f6cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[7b3f8e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipv4_input
<LI><a href="#[7b4f498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[86f69f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[8b82be0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_reass
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL><P><STRONG><a name="[7a913d4]"></a>m_pullup</STRONG> (ARM, 488 bytes, Stack size 32 bytes, uipc_mbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183de4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retry
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Called By]<UL><LI><a href="#[7a91364]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_pullup2
<LI><a href="#[7ace920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_output
<LI><a href="#[7b3f8e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipv4_input
<LI><a href="#[8696e2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_input
<LI><a href="#[86f62dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL><P><STRONG><a name="[7a91364]"></a>m_pullup2</STRONG> (ARM, 612 bytes, Stack size 32 bytes, uipc_mbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a913d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_pullup
<LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183de4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retry
<LI><a href="#[5183d74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_clalloc
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Called By]<UL><LI><a href="#[86f69f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL><P><STRONG><a name="[7a912f4]"></a>m_inject</STRONG> (ARM, 436 bytes, Stack size 32 bytes, uipc_mbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a9158c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_copym2
<LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183de4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retry
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><P><STRONG><a name="[7a91288]"></a>m_split</STRONG> (ARM, 636 bytes, Stack size 40 bytes, uipc_mbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183ebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retryhdr
<LI><a href="#[7a91288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_split
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[5183de4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retry
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
</UL><BR>[Called By]<UL><LI><a href="#[7a91288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;m_split
<LI><a href="#[7b3f8e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipv4_input
</UL><P><STRONG><a name="[7a91218]"></a>m_devget</STRONG> (ARM, 696 bytes, Stack size 56 bytes, uipc_mbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183ebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retryhdr
<LI><a href="#[5183de4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retry
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[5183d74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_clalloc
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
</UL><P><STRONG><a name="[7a911ac]"></a>m_zero</STRONG> (ARM, 128 bytes, Stack size 16 bytes, uipc_mbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
</UL><P><STRONG><a name="[7a91140]"></a>m_apply</STRONG> (ARM, 288 bytes, Stack size 32 bytes, uipc_mbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
</UL><P><STRONG><a name="[7ace838]"></a>route_usrreq</STRONG> (ARM, 444 bytes, Stack size 40 bytes, rtsock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[7ace758]">&gt&gt</a>&nbsp;&nbsp;&nbsp;raw_attach
<LI><a href="#[7ace6e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;raw_usrreq
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[7ace674]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soisconnected
</UL><BR>[Address Reference Count : 1]<UL><LI> rtsock.o(.data)
</UL><P><STRONG><a name="[7ace604]"></a>m_copyback</STRONG> (ARM, 280 bytes, Stack size 32 bytes, rtsock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a916d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_getclr
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[516d2f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_get
</UL><BR>[Called By]<UL><LI><a href="#[7ace920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_output
<LI><a href="#[7aceea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_msg1
</UL><P><STRONG><a name="[7ace590]"></a>rt_setmetrics</STRONG> (ARM, 100 bytes, Stack size 0 bytes, rtsock.o(.text))
<BR>[Called By]<UL><LI><a href="#[7ace920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_output
</UL><P><STRONG><a name="[7ace920]"></a>route_output</STRONG> (ARM, 1476 bytes, Stack size 104 bytes, rtsock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[7a913d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_pullup
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[7a9151c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_copydata
<LI><a href="#[7ace4b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rn_addmask
<LI><a href="#[743b118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcmp
<LI><a href="#[516da78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[7acf06c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_setif
<LI><a href="#[7ace590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_setmetrics
<LI><a href="#[7acf000]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_msg2
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[516d998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_setgate
<LI><a href="#[516dbcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtfree
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[7ace604]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_copyback
<LI><a href="#[7ace994]">&gt&gt</a>&nbsp;&nbsp;&nbsp;raw_input
</UL><BR>[Address Reference Count : 1]<UL><LI> rtsock.o(.data)
</UL><P><STRONG><a name="[516da08]"></a>rt_missmsg</STRONG> (ARM, 112 bytes, Stack size 24 bytes, rtsock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7aceea4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_msg1
<LI><a href="#[7ace994]">&gt&gt</a>&nbsp;&nbsp;&nbsp;raw_input
</UL><BR>[Called By]<UL><LI><a href="#[516dae8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtalloc1
<LI><a href="#[516d6dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtalloc2
<LI><a href="#[516d51c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtredirect
<LI><a href="#[86d7420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_losing
</UL><P><STRONG><a name="[7ace440]"></a>rt_ifmsg</STRONG> (ARM, 148 bytes, Stack size 56 bytes, rtsock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[7aceea4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_msg1
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[7ace994]">&gt&gt</a>&nbsp;&nbsp;&nbsp;raw_input
</UL><BR>[Called By]<UL><LI><a href="#[7ad5764]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_down
<LI><a href="#[7ad56f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_up
<LI><a href="#[7ad55b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifioctl
</UL><P><STRONG><a name="[516d214]"></a>rt_newaddrmsg</STRONG> (ARM, 400 bytes, Stack size 96 bytes, rtsock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[7aceea4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_msg1
<LI><a href="#[7ace994]">&gt&gt</a>&nbsp;&nbsp;&nbsp;raw_input
</UL><BR>[Called By]<UL><LI><a href="#[516d360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtinit
</UL><P><STRONG><a name="[7ad5cb8]"></a>if_slowtimo</STRONG> (ARM, 124 bytes, Stack size 16 bytes, if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[516d0c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;timeout
</UL><BR>[Address Reference Count : 1]<UL><LI> if.o(.text)
</UL><P><STRONG><a name="[5137f74]"></a>ifinit</STRONG> (ARM, 168 bytes, Stack size 16 bytes, if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[516d0c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;timeout
</UL><BR>[Called By]<UL><LI><a href="#[4d1ee1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
</UL><P><STRONG><a name="[516d74c]"></a>ifaof_ifpforaddr</STRONG> (ARM, 236 bytes, Stack size 24 bytes, if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[743b118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcmp
</UL><BR>[Called By]<UL><LI><a href="#[516d924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithroute
<LI><a href="#[7acf06c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_setif
<LI><a href="#[7ad5c44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;link_rtrequest
<LI><a href="#[7b3f9c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_dooptions
<LI><a href="#[86fd02c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_reflect
<LI><a href="#[86f62dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL><P><STRONG><a name="[7ad5c44]"></a>link_rtrequest</STRONG> (ARM, 164 bytes, Stack size 24 bytes, if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d74c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifaof_ifpforaddr
<LI><a href="#[516dcb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifafree
</UL><BR>[Address Reference Count : 1]<UL><LI> if.o(.text)
</UL><P><STRONG><a name="[7ad5bd0]"></a>if_attachsetup</STRONG> (ARM, 500 bytes, Stack size 40 bytes, if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
</UL><BR>[Called By]<UL><LI><a href="#[7ad5b5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_attachhead
<LI><a href="#[51840e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_attach
</UL><P><STRONG><a name="[7ad5b5c]"></a>if_attachhead</STRONG> (ARM, 76 bytes, Stack size 0 bytes, if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7ad5bd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;if_attachsetup
</UL><BR>[Called By]<UL><LI><a href="#[5138058]">&lt&lt</a>&nbsp;&nbsp;&nbsp;loopattach
</UL><P><STRONG><a name="[51840e8]"></a>if_attach</STRONG> (ARM, 88 bytes, Stack size 0 bytes, if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7ad5bd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;if_attachsetup
</UL><BR>[Called By]<UL><LI><a href="#[5185678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_init
<LI><a href="#[5137fe0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppattach
</UL><P><STRONG><a name="[7ad5ae4]"></a>if_detach_rtdelete</STRONG> (ARM, 64 bytes, Stack size 16 bytes, if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516da78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtrequest
</UL><BR>[Address Reference Count : 1]<UL><LI> if.o(.text)
</UL><P><STRONG><a name="[7ad5a74]"></a>if_detach</STRONG> (ARM, 264 bytes, Stack size 24 bytes, if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[7ad5a04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rti_delete
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><P><STRONG><a name="[516d838]"></a>ifa_ifwithaddr</STRONG> (ARM, 172 bytes, Stack size 16 bytes, if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[743b118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcmp
</UL><BR>[Called By]<UL><LI><a href="#[516d924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithroute
<LI><a href="#[516d51c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtredirect
<LI><a href="#[7acf06c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_setif
<LI><a href="#[7b3f9c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_dooptions
<LI><a href="#[86f634c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_usrreq
</UL><P><STRONG><a name="[516d8ac]"></a>ifa_ifwithdstaddr</STRONG> (ARM, 132 bytes, Stack size 16 bytes, if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[743b118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcmp
</UL><BR>[Called By]<UL><LI><a href="#[516d924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithroute
<LI><a href="#[7b3f9c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_dooptions
<LI><a href="#[86d7834]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_selectsrc
<LI><a href="#[7b4f498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_output
</UL><P><STRONG><a name="[516d7c4]"></a>ifa_ifwithnet</STRONG> (ARM, 276 bytes, Stack size 32 bytes, if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7ad58b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rn_refines
</UL><BR>[Called By]<UL><LI><a href="#[516d924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithroute
<LI><a href="#[516d51c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtredirect
<LI><a href="#[7acf06c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_setif
<LI><a href="#[7b3f9c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_dooptions
<LI><a href="#[86d7834]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_selectsrc
<LI><a href="#[7b4f498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_output
</UL><P><STRONG><a name="[7ad5840]"></a>ifa_ifwithaf</STRONG> (ARM, 80 bytes, Stack size 0 bytes, if.o(.text), UNUSED)
<P><STRONG><a name="[7ad57d0]"></a>if_qflush</STRONG> (ARM, 56 bytes, Stack size 16 bytes, if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><P><STRONG><a name="[7ad5764]"></a>if_down</STRONG> (ARM, 116 bytes, Stack size 16 bytes, if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a9fba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pfctlinput
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[7ace440]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_ifmsg
</UL><BR>[Called By]<UL><LI><a href="#[9a8a100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppdealloc
</UL><P><STRONG><a name="[7ad56f8]"></a>if_up</STRONG> (ARM, 16 bytes, Stack size 0 bytes, if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7ace440]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_ifmsg
</UL><P><STRONG><a name="[7ad568c]"></a>ifunit</STRONG> (ARM, 68 bytes, Stack size 16 bytes, if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
</UL><BR>[Called By]<UL><LI><a href="#[86f68a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_usrreq
</UL><P><STRONG><a name="[7ace520]"></a>if_withname</STRONG> (ARM, 152 bytes, Stack size 40 bytes, if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
</UL><BR>[Called By]<UL><LI><a href="#[7acf06c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_setif
</UL><P><STRONG><a name="[7ad5620]"></a>ifconf</STRONG> (ARM, 428 bytes, Stack size 72 bytes, if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[51384d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;copyout
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[7ad55b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifioctl
</UL><P><STRONG><a name="[7ad55b4]"></a>ifioctl</STRONG> (ARM, 776 bytes, Stack size 40 bytes, if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7ad5620]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifconf
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[51384d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;copyout
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[7a9fba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pfctlinput
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[7ace440]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_ifmsg
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[8b1c6cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_ioctl
</UL><P><STRONG><a name="[5183b2c]"></a>ether_ioctl</STRONG> (ARM, 8 bytes, Stack size 0 bytes, if_ethersubr.o(.text))
<BR>[Called By]<UL><LI><a href="#[5184b38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_ioctl
</UL><P><STRONG><a name="[7af4380]"></a>ether_output</STRONG> (ARM, 1224 bytes, Stack size 56 bytes, if_ethersubr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516dae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtalloc1
<LI><a href="#[516dbcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtfree
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[7a915fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_copym
<LI><a href="#[7af4310]">&gt&gt</a>&nbsp;&nbsp;&nbsp;arpresolve
<LI><a href="#[7a91668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_prepend
<LI><a href="#[7af42a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;looutput
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[51841cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifplock
<LI><a href="#[5184158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifpunlock
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Address Reference Count : 1]<UL><LI> if_ethersubr.o(.text)
</UL><P><STRONG><a name="[5183d04]"></a>ether_input</STRONG> (ARM, 740 bytes, Stack size 24 bytes, if_ethersubr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[743b118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcmp
<LI><a href="#[7af41bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_on_drv_recv
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[7af40dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;revarpinput
<LI><a href="#[7a91444]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_adj
<LI><a href="#[7a91668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_prepend
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[51841cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifplock
<LI><a href="#[5184158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifpunlock
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
</UL><BR>[Called By]<UL><LI><a href="#[5185604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_recv
</UL><P><STRONG><a name="[7af4068]"></a>ether_sprintf</STRONG> (ARM, 84 bytes, Stack size 8 bytes, if_ethersubr.o(.text), UNUSED)
<P><STRONG><a name="[5184074]"></a>ether_ifattach</STRONG> (ARM, 144 bytes, Stack size 8 bytes, if_ethersubr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
</UL><BR>[Called By]<UL><LI><a href="#[5185678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_init
</UL><P><STRONG><a name="[7af3ff4]"></a>ether_ifdetach</STRONG> (ARM, 72 bytes, Stack size 8 bytes, if_ethersubr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><P><STRONG><a name="[7af3f80]"></a>ether_addmulti</STRONG> (ARM, 544 bytes, Stack size 48 bytes, if_ethersubr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[743b118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcmp
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
</UL><P><STRONG><a name="[7af3f0c]"></a>ether_delmulti</STRONG> (ARM, 452 bytes, Stack size 40 bytes, if_ethersubr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[743b118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcmp
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><P><STRONG><a name="[7af42a0]"></a>looutput</STRONG> (ARM, 968 bytes, Stack size 56 bytes, if_loop.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183ebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retryhdr
<LI><a href="#[5183d74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_clalloc
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7a9151c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_copydata
<LI><a href="#[7a91444]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_adj
<LI><a href="#[51841cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifplock
<LI><a href="#[5184158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifpunlock
<LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
</UL><BR>[Called By]<UL><LI><a href="#[7af4380]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_output
<LI><a href="#[7b4f498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_output
</UL><BR>[Address Reference Count : 1]<UL><LI> if_loop.o(.text)
</UL><P><STRONG><a name="[7b1db24]"></a>lortrequest</STRONG> (ARM, 16 bytes, Stack size 0 bytes, if_loop.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> if_loop.o(.text)
</UL><P><STRONG><a name="[7b1dab8]"></a>loioctl</STRONG> (ARM, 128 bytes, Stack size 0 bytes, if_loop.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> if_loop.o(.text)
</UL><P><STRONG><a name="[5138058]"></a>loopattach</STRONG> (ARM, 140 bytes, Stack size 32 bytes, if_loop.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7ad5b5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;if_attachhead
</UL><BR>[Called By]<UL><LI><a href="#[4d1ee1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
</UL><P><STRONG><a name="[7b2c914]"></a>rn_search</STRONG> (ARM, 64 bytes, Stack size 0 bytes, radix.o(.text), UNUSED)
<P><STRONG><a name="[7b2c8a4]"></a>rn_search_m</STRONG> (ARM, 76 bytes, Stack size 4 bytes, radix.o(.text), UNUSED)
<P><STRONG><a name="[7ad58b4]"></a>rn_refines</STRONG> (ARM, 212 bytes, Stack size 16 bytes, radix.o(.text))
<BR>[Called By]<UL><LI><a href="#[516d7c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithnet
<LI><a href="#[7b2c674]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_addroute
</UL><P><STRONG><a name="[7b2c834]"></a>rn_match</STRONG> (ARM, 532 bytes, Stack size 32 bytes, radix.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b2d1f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rn_satsifies_leaf
</UL><BR>[Called By]<UL><LI><a href="#[7b2c6e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_lookup
</UL><BR>[Address Reference Count : 1]<UL><LI> radix.o(.text)
</UL><P><STRONG><a name="[7b2c7c4]"></a>rn_newpair</STRONG> (ARM, 76 bytes, Stack size 4 bytes, radix.o(.text), UNUSED)
<P><STRONG><a name="[7b2c754]"></a>rn_insert</STRONG> (ARM, 352 bytes, Stack size 20 bytes, radix.o(.text))
<BR>[Called By]<UL><LI><a href="#[7ace4b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_addmask
<LI><a href="#[7b2c674]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_addroute
</UL><P><STRONG><a name="[7ace4b0]"></a>rn_addmask</STRONG> (ARM, 588 bytes, Stack size 32 bytes, radix.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[743b118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcmp
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[7b2c754]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rn_insert
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><BR>[Called By]<UL><LI><a href="#[7ace920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_output
<LI><a href="#[7b2c6e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_lookup
<LI><a href="#[7b2c674]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_addroute
<LI><a href="#[7b2c604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_delete
</UL><P><STRONG><a name="[7b2c6e4]"></a>rn_lookup</STRONG> (ARM, 108 bytes, Stack size 16 bytes, radix.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7ace4b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rn_addmask
<LI><a href="#[7b2c834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rn_match
</UL><BR>[Address Reference Count : 1]<UL><LI> radix.o(.text)
</UL><P><STRONG><a name="[7b2c674]"></a>rn_addroute</STRONG> (ARM, 920 bytes, Stack size 64 bytes, radix.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7ace4b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rn_addmask
<LI><a href="#[7b2c754]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rn_insert
<LI><a href="#[7ad58b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rn_refines
<LI><a href="#[7b2cdbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rn_new_radix_mask
</UL><BR>[Address Reference Count : 1]<UL><LI> radix.o(.text)
</UL><P><STRONG><a name="[7b2c604]"></a>rn_delete</STRONG> (ARM, 888 bytes, Stack size 24 bytes, radix.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[743b118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcmp
<LI><a href="#[7ace4b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rn_addmask
</UL><BR>[Address Reference Count : 1]<UL><LI> radix.o(.text)
</UL><P><STRONG><a name="[7b2c594]"></a>rn_walktree</STRONG> (ARM, 184 bytes, Stack size 24 bytes, radix.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> radix.o(.text)
</UL><P><STRONG><a name="[7b2c524]"></a>rn_inithead</STRONG> (ARM, 268 bytes, Stack size 16 bytes, radix.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
</UL><BR>[Called By]<UL><LI><a href="#[516dd1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_init
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[516dd1c]"></a>rn_init</STRONG> (ARM, 244 bytes, Stack size 8 bytes, radix.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[7b2c524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rn_inithead
</UL><BR>[Called By]<UL><LI><a href="#[516dd88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_init
</UL><P><STRONG><a name="[7b2f9a8]"></a>arp_rtrequest</STRONG> (ARM, 668 bytes, Stack size 32 bytes, if_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d0c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;timeout
<LI><a href="#[516d998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_setgate
<LI><a href="#[7b30bcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;arprequest
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><BR>[Address Reference Count : 1]<UL><LI> if_ether.o(.text)
</UL><P><STRONG><a name="[7af4310]"></a>arpresolve</STRONG> (ARM, 508 bytes, Stack size 40 bytes, if_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[7b3077c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;arplookup
<LI><a href="#[7b30bcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;arprequest
</UL><BR>[Called By]<UL><LI><a href="#[7af4380]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_output
</UL><P><STRONG><a name="[5137c60]"></a>arpintr</STRONG> (ARM, 292 bytes, Stack size 32 bytes, if_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[51841cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifplock
<LI><a href="#[5184158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifpunlock
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[7b3070c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_arpinput
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Called By]<UL><LI><a href="#[5139b64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_netint
</UL><P><STRONG><a name="[7b2f938]"></a>arpioctl</STRONG> (ARM, 8 bytes, Stack size 0 bytes, if_ether.o(.text), UNUSED)
<P><STRONG><a name="[5183a48]"></a>arp_ifinit</STRONG> (ARM, 48 bytes, Stack size 8 bytes, if_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b30bcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;arprequest
</UL><BR>[Called By]<UL><LI><a href="#[5184b38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_ioctl
</UL><P><STRONG><a name="[7b2f8c4]"></a>in_revarpinput</STRONG> (ARM, 196 bytes, Stack size 24 bytes, if_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b3070c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_arpinput
<LI><a href="#[743b118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcmp
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[7a714e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_wakeup
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Called By]<UL><LI><a href="#[7af40dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;revarpinput
</UL><P><STRONG><a name="[7af40dc]"></a>revarpinput</STRONG> (ARM, 100 bytes, Stack size 0 bytes, if_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b2f8c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_revarpinput
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Called By]<UL><LI><a href="#[5183d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_input
</UL><P><STRONG><a name="[7b2f850]"></a>revarprequest</STRONG> (ARM, 244 bytes, Stack size 40 bytes, if_ether.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a91748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_gethdr
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
</UL><BR>[Called By]<UL><LI><a href="#[7b2f7dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;revarpwhoarewe
</UL><P><STRONG><a name="[7b2f7dc]"></a>revarpwhoarewe</STRONG> (ARM, 204 bytes, Stack size 32 bytes, if_ether.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b2f850]">&gt&gt</a>&nbsp;&nbsp;&nbsp;revarprequest
<LI><a href="#[7a71478]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_tsleep
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
</UL><BR>[Called By]<UL><LI><a href="#[7b2f768]">&lt&lt</a>&nbsp;&nbsp;&nbsp;revarpwhoami
</UL><P><STRONG><a name="[7b2f768]"></a>revarpwhoami</STRONG> (ARM, 24 bytes, Stack size 8 bytes, if_ether.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b2f7dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;revarpwhoarewe
</UL><P><STRONG><a name="[5183ab8]"></a>eth_packet_send</STRONG> (ARM, 296 bytes, Stack size 48 bytes, if_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a91748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_gethdr
<LI><a href="#[516d2f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_get
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
</UL><BR>[Called By]<UL><LI><a href="#[5184b38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_ioctl
</UL><P><STRONG><a name="[7b4f88c]"></a>ip_init</STRONG> (ARM, 528 bytes, Stack size 40 bytes, ip_input.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[7a9fc14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pffindproto
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[7b4f73c]"></a>ip_freef</STRONG> (ARM, 132 bytes, Stack size 24 bytes, ip_input.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
</UL><BR>[Called By]<UL><LI><a href="#[7b4f6cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[7b4f65c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_flush
<LI><a href="#[7b3f8e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipv4_input
<LI><a href="#[7b3f804]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_slowtimo
<LI><a href="#[7b3f794]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_drain
</UL><P><STRONG><a name="[7b4f6cc]"></a>ip_reass</STRONG> (ARM, 1344 bytes, Stack size 40 bytes, ip_input.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d2f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_get
<LI><a href="#[7a91444]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_adj
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[7b4f73c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_freef
<LI><a href="#[7a914b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_cat
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
</UL><BR>[Called By]<UL><LI><a href="#[7b3f8e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipv4_input
</UL><P><STRONG><a name="[7b4f65c]"></a>ip_flush</STRONG> (ARM, 100 bytes, Stack size 24 bytes, ip_input.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b4f73c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_freef
</UL><P><STRONG><a name="[7b4f5ec]"></a>ip_forward</STRONG> (ARM, 1268 bytes, Stack size 72 bytes, ip_input.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b4f578]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_canforward
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[7b4f508]">&gt&gt</a>&nbsp;&nbsp;&nbsp;icmp_error
<LI><a href="#[516dbcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtfree
<LI><a href="#[516d58c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtalloc
<LI><a href="#[7a915fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_copym
<LI><a href="#[516dae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtalloc1
<LI><a href="#[743b118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcmp
<LI><a href="#[7b4f498]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_output
</UL><BR>[Called By]<UL><LI><a href="#[7b3f9c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_dooptions
<LI><a href="#[7b3f8e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipv4_input
</UL><P><STRONG><a name="[7b3faa4]"></a>in_iawithaddr</STRONG> (ARM, 196 bytes, Stack size 16 bytes, ip_input.o(.text))
<BR>[Called By]<UL><LI><a href="#[7b3f8e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipv4_input
<LI><a href="#[86d7920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbbind
</UL><P><STRONG><a name="[7b3fa34]"></a>ip_rtaddr</STRONG> (ARM, 132 bytes, Stack size 16 bytes, ip_input.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516dbcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtfree
<LI><a href="#[516d58c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtalloc
</UL><BR>[Called By]<UL><LI><a href="#[7b3f9c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_dooptions
</UL><P><STRONG><a name="[7b3f9c0]"></a>ip_dooptions</STRONG> (ARM, 1280 bytes, Stack size 72 bytes, ip_input.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d838]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithaddr
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[516d8ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithdstaddr
<LI><a href="#[516d7c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithnet
<LI><a href="#[7b3fa34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_rtaddr
<LI><a href="#[516d74c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifaof_ifpforaddr
<LI><a href="#[7b3f954]">&gt&gt</a>&nbsp;&nbsp;&nbsp;iptime
<LI><a href="#[7b4f5ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_forward
<LI><a href="#[7b4f508]">&gt&gt</a>&nbsp;&nbsp;&nbsp;icmp_error
</UL><BR>[Called By]<UL><LI><a href="#[7b3f8e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipv4_input
</UL><P><STRONG><a name="[7b3f8e4]"></a>ipv4_input</STRONG> (ARM, 1688 bytes, Stack size 48 bytes, ip_input.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a91288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_split
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[7a913d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_pullup
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7b3f874]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_cksum
<LI><a href="#[7a91444]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_adj
<LI><a href="#[7b3f9c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_dooptions
<LI><a href="#[7b3faa4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_iawithaddr
<LI><a href="#[7b4f5ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_forward
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[7b4f73c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_freef
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[7b4f6cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_reass
</UL><BR>[Called By]<UL><LI><a href="#[5137bf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipintr
</UL><P><STRONG><a name="[5137bf4]"></a>ipintr</STRONG> (ARM, 156 bytes, Stack size 32 bytes, ip_input.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a917b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_reclaim
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[51841cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifplock
<LI><a href="#[5184158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifpunlock
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[7b3f8e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ipv4_input
</UL><BR>[Called By]<UL><LI><a href="#[5139b64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_netint
</UL><P><STRONG><a name="[7b3f804]"></a>ip_slowtimo</STRONG> (ARM, 144 bytes, Stack size 24 bytes, ip_input.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[7b4f73c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_freef
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[7b3f794]"></a>ip_drain</STRONG> (ARM, 108 bytes, Stack size 16 bytes, ip_input.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[7b4f73c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_freef
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[7b3f724]"></a>ip_srcroute</STRONG> (ARM, 304 bytes, Stack size 16 bytes, ip_input.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d2f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_get
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
</UL><BR>[Called By]<UL><LI><a href="#[86fd02c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_reflect
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL><P><STRONG><a name="[7b3f6b0]"></a>ip_stripoptions</STRONG> (ARM, 104 bytes, Stack size 16 bytes, ip_input.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
</UL><BR>[Called By]<UL><LI><a href="#[86f69f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_input
</UL><P><STRONG><a name="[7b2f6a8]"></a>wmm_cleanup_queues</STRONG> (ARM, 56 bytes, Stack size 0 bytes, wlan_wmm.o(.text))
<BR>[Called By]<UL><LI><a href="#[7bec660]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MacEventDisconnected
</UL><P><STRONG><a name="[52aa608]"></a>wlan_wmm_enable_ioctl</STRONG> (ARM, 288 bytes, Stack size 32 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[4d32118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetMacPacketFilter
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[52aa408]"></a>wlan_wmm_para_ie_ioctl</STRONG> (ARM, 136 bytes, Stack size 8 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[52aa484]"></a>wlan_wmm_ack_policy_ioctl</STRONG> (ARM, 336 bytes, Stack size 48 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[51de2fc]"></a>wlan_cmd_wmm_ack_policy</STRONG> (ARM, 72 bytes, Stack size 0 bytes, wlan_wmm.o(.text))
<BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><P><STRONG><a name="[7b2f660]"></a>wlan_cmdresp_wmm_ack_policy</STRONG> (ARM, 52 bytes, Stack size 0 bytes, wlan_wmm.o(.text))
<BR>[Called By]<UL><LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
</UL><P><STRONG><a name="[51de378]"></a>wlan_cmd_wmm_get_status</STRONG> (ARM, 88 bytes, Stack size 8 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><P><STRONG><a name="[7b1f8cc]"></a>wlan_cmd_wmm_prio_pkt_avail</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wlan_wmm.o(.text), UNUSED)
<P><STRONG><a name="[7b1f858]"></a>sendWMMStatusChangeCmd</STRONG> (ARM, 40 bytes, Stack size 16 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[51b5138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_event
</UL><P><STRONG><a name="[51b5398]"></a>wmm_lists_empty</STRONG> (ARM, 32 bytes, Stack size 0 bytes, wlan_wmm.o(.text))
<BR>[Called By]<UL><LI><a href="#[51b6884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_service_main_thread
<LI><a href="#[524b5f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CheckLastPacketIndication
<LI><a href="#[524b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_tx
</UL><P><STRONG><a name="[524b50c]"></a>wmm_map_and_add_skb</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[524b584]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_process_tx
</UL><BR>[Called By]<UL><LI><a href="#[4d31e64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_tx_packet
</UL><P><STRONG><a name="[7b1f7d8]"></a>wlan_cmdresp_wmm_get_status</STRONG> (ARM, 1352 bytes, Stack size 48 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[51dee50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_iwevcustom_event
</UL><BR>[Called By]<UL><LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
</UL><P><STRONG><a name="[7b1f750]"></a>wlan_wmm_process_association_req</STRONG> (ARM, 316 bytes, Stack size 24 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4d32118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetMacPacketFilter
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[51de80c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_associate
</UL><P><STRONG><a name="[52aa588]"></a>wlan_wmm_queue_status_ioctl</STRONG> (ARM, 204 bytes, Stack size 40 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[52aa18c]"></a>wlan_wmm_addts_req_ioctl</STRONG> (ARM, 256 bytes, Stack size 704 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[52aa10c]"></a>wlan_wmm_delts_req_ioctl</STRONG> (ARM, 184 bytes, Stack size 176 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[7baef0c]"></a>wlan_cmdresp_wmm_addts_req</STRONG> (ARM, 144 bytes, Stack size 8 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
</UL><P><STRONG><a name="[7baee8c]"></a>wlan_cmdresp_wmm_delts_req</STRONG> (ARM, 68 bytes, Stack size 8 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
</UL><P><STRONG><a name="[51de280]"></a>wlan_cmd_wmm_addts_req</STRONG> (ARM, 164 bytes, Stack size 16 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><P><STRONG><a name="[51de204]"></a>wlan_cmd_wmm_delts_req</STRONG> (ARM, 132 bytes, Stack size 16 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><P><STRONG><a name="[51de184]"></a>wlan_cmd_wmm_queue_config</STRONG> (ARM, 152 bytes, Stack size 16 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><P><STRONG><a name="[7baee08]"></a>wlan_cmdresp_wmm_queue_config</STRONG> (ARM, 92 bytes, Stack size 8 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
</UL><P><STRONG><a name="[52aa08c]"></a>wlan_wmm_queue_config_ioctl</STRONG> (ARM, 244 bytes, Stack size 120 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[51de104]"></a>wlan_cmd_wmm_queue_stats</STRONG> (ARM, 104 bytes, Stack size 8 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><P><STRONG><a name="[7baed84]"></a>wlan_cmdresp_wmm_queue_stats</STRONG> (ARM, 108 bytes, Stack size 8 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
</UL><P><STRONG><a name="[52aa00c]"></a>wlan_wmm_queue_stats_ioctl</STRONG> (ARM, 260 bytes, Stack size 88 bytes, wlan_wmm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[7bb1e64]"></a>wlan_channel_known_11d</STRONG> (ARM, 136 bytes, Stack size 8 bytes, wlan_11d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><P><STRONG><a name="[52aac74]"></a>chan_2_freq</STRONG> (ARM, 64 bytes, Stack size 8 bytes, wlan_11d.o(.text))
<BR>[Called By]<UL><LI><a href="#[525266c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_range
</UL><P><STRONG><a name="[7bb1de0]"></a>wlan_generate_domain_info_11d</STRONG> (ARM, 308 bytes, Stack size 32 bytes, wlan_11d.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[7bb18e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_parse_dnld_countryinfo_11d
<LI><a href="#[7bb1860]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_create_dnld_countryinfo_11d
</UL><P><STRONG><a name="[7bb1d54]"></a>wlan_generate_parsed_region_chan_11d</STRONG> (ARM, 380 bytes, Stack size 24 bytes, wlan_11d.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[7bb1860]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_create_dnld_countryinfo_11d
</UL><P><STRONG><a name="[7bb1cd0]"></a>wlan_region_chan_supported_11d</STRONG> (ARM, 128 bytes, Stack size 16 bytes, wlan_11d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51b56d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_get_region_cfp_table
</UL><P><STRONG><a name="[7bb1c50]"></a>wlan_parse_domain_info_11d</STRONG> (ARM, 888 bytes, Stack size 80 bytes, wlan_11d.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aad5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;toupper
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51b56d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_get_region_cfp_table
</UL><BR>[Called By]<UL><LI><a href="#[7bb18e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_parse_dnld_countryinfo_11d
</UL><P><STRONG><a name="[7bb1bd4]"></a>wlan_get_scan_type_11d</STRONG> (ARM, 188 bytes, Stack size 8 bytes, wlan_11d.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[7c61d44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_scan_setup_scan_config
</UL><P><STRONG><a name="[52aace4]"></a>wlan_get_state_11d</STRONG> (ARM, 20 bytes, Stack size 0 bytes, wlan_11d.o(.text))
<BR>[Called By]<UL><LI><a href="#[525266c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_range
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[7c61d44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_scan_setup_scan_config
</UL><P><STRONG><a name="[7bb1b60]"></a>wlan_init_11d</STRONG> (ARM, 40 bytes, Stack size 0 bytes, wlan_11d.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Called By]<UL><LI><a href="#[51b5844]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_fw
</UL><P><STRONG><a name="[7bb1aec]"></a>wlan_enable_11d</STRONG> (ARM, 112 bytes, Stack size 16 bytes, wlan_11d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><P><STRONG><a name="[7bb1a6c]"></a>wlan_set_domain_info_11d</STRONG> (ARM, 180 bytes, Stack size 16 bytes, wlan_11d.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[7bb18e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_parse_dnld_countryinfo_11d
<LI><a href="#[7bb1860]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_create_dnld_countryinfo_11d
</UL><P><STRONG><a name="[7bb19f0]"></a>wlan_set_universaltable</STRONG> (ARM, 120 bytes, Stack size 16 bytes, wlan_11d.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
</UL><P><STRONG><a name="[51de4fc]"></a>wlan_cmd_802_11d_domain_info</STRONG> (ARM, 236 bytes, Stack size 32 bytes, wlan_11d.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><P><STRONG><a name="[52aa684]"></a>wlan_cmd_enable_11d</STRONG> (ARM, 276 bytes, Stack size 32 bytes, wlan_11d.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[7bb196c]"></a>wlan_ret_802_11d_domain_info</STRONG> (ARM, 236 bytes, Stack size 24 bytes, wlan_11d.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
</UL><P><STRONG><a name="[7bb18e8]"></a>wlan_parse_dnld_countryinfo_11d</STRONG> (ARM, 240 bytes, Stack size 24 bytes, wlan_11d.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[7bb1c50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_parse_domain_info_11d
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[7bb1de0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_generate_domain_info_11d
<LI><a href="#[7bb1a6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_set_domain_info_11d
</UL><BR>[Called By]<UL><LI><a href="#[51de80c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_associate
<LI><a href="#[51de600]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_ad_hoc_join
</UL><P><STRONG><a name="[7bb1860]"></a>wlan_create_dnld_countryinfo_11d</STRONG> (ARM, 372 bytes, Stack size 24 bytes, wlan_11d.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[7bb1d54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_generate_parsed_region_chan_11d
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[7bb1de0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_generate_domain_info_11d
<LI><a href="#[7bb1a6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_set_domain_info_11d
</UL><BR>[Called By]<UL><LI><a href="#[51de704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_ad_hoc_start
</UL><P><STRONG><a name="[7bec660]"></a>MacEventDisconnected</STRONG> (ARM, 608 bytes, Stack size 40 bytes, wlan_cmdresp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[51ded60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wireless_send_event
<LI><a href="#[7b2f6a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wmm_cleanup_queues
<LI><a href="#[51b5754]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cleanup_txqueues
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[51ddec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PSWakeup
</UL><BR>[Called By]<UL><LI><a href="#[7bec6f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HandleDisconnectEvent
<LI><a href="#[7bec4e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_associate
<LI><a href="#[7bec45c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_disassociate
<LI><a href="#[7bec3e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_ad_hoc
<LI><a href="#[7bec2dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_ad_hoc_stop
</UL><P><STRONG><a name="[7bec5dc]"></a>wlan_ret_802_11_eeprom_access</STRONG> (ARM, 192 bytes, Stack size 16 bytes, wlan_cmdresp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
</UL><P><STRONG><a name="[51b522c]"></a>wlan_process_rx_command</STRONG> (ARM, 5988 bytes, Stack size 80 bytes, wlan_cmdresp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4c2decc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_disable
<LI><a href="#[51dea70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CleanupAndInsertCmd
<LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[51ddec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PSWakeup
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[51decdc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_host_sleep_activated_event
<LI><a href="#[7bec5dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_eeprom_access
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[51b5658]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_set_regiontable
<LI><a href="#[7bb19f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_set_universaltable
<LI><a href="#[7bec560]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_scan
<LI><a href="#[51ded60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wireless_send_event
<LI><a href="#[7bec4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_associate
<LI><a href="#[7bec45c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_disassociate
<LI><a href="#[7bec3e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_ad_hoc
<LI><a href="#[7bec35c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_authenticate
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[51dec54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_host_sleep_deactivated_event
<LI><a href="#[7bec2dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_ad_hoc_stop
<LI><a href="#[7bb196c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11d_domain_info
<LI><a href="#[7b2f660]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmdresp_wmm_ack_policy
<LI><a href="#[7b1f7d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmdresp_wmm_get_status
<LI><a href="#[7baef0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmdresp_wmm_addts_req
<LI><a href="#[7baee8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmdresp_wmm_delts_req
<LI><a href="#[7baee08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmdresp_wmm_queue_config
<LI><a href="#[7baed84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmdresp_wmm_queue_stats
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
</UL><BR>[Called By]<UL><LI><a href="#[51b6884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_service_main_thread
</UL><P><STRONG><a name="[51b5138]"></a>wlan_process_event</STRONG> (ARM, 1696 bytes, Stack size 32 bytes, wlan_cmdresp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7bec6f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;HandleDisconnectEvent
<LI><a href="#[51ddc74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PSConfirmSleep
<LI><a href="#[524b5f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CheckLastPacketIndication
<LI><a href="#[524b498]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendNullPacket
<LI><a href="#[51ddec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PSWakeup
<LI><a href="#[7bec25c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_reset_deepsleep_wakeup
<LI><a href="#[4c2bd18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_broadcast
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[51dee50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_iwevcustom_event
<LI><a href="#[7bec1e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sendBgScanQueryCmd
<LI><a href="#[7b1f858]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sendWMMStatusChangeCmd
<LI><a href="#[7bec16c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sendADHOCBSSIDQuery
<LI><a href="#[734d704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wifiSetHostSleepFlag
</UL><BR>[Called By]<UL><LI><a href="#[51b6884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_service_main_thread
</UL><P><STRONG><a name="[7c01528]"></a>fw_buffer_free</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wlan_fw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><P><STRONG><a name="[7c014ac]"></a>wlan_setup_station_hw</STRONG> (ARM, 660 bytes, Stack size 24 bytes, wlan_fw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51b504c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_disable_host_int
<LI><a href="#[7c01438]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_prog_helper
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7c013b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_prog_firmware_w_helper
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[7c0133c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_verify_fw_download
<LI><a href="#[7c012c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_enable_host_int
<LI><a href="#[4ced1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memset
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[4d32118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetMacPacketFilter
</UL><BR>[Called By]<UL><LI><a href="#[51b5844]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_fw
</UL><P><STRONG><a name="[51b4fd4]"></a>wlan_free_adapter</STRONG> (ARM, 352 bytes, Stack size 24 bytes, wlan_fw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51ddfa4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FreeCmdBuffer
<LI><a href="#[4c2decc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_disable
<LI><a href="#[4c2e2a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_delete
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><BR>[Called By]<UL><LI><a href="#[51b626c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_remove_card
<LI><a href="#[51b5844]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_fw
</UL><P><STRONG><a name="[51b5844]"></a>wlan_init_fw</STRONG> (ARM, 840 bytes, Stack size 40 bytes, wlan_fw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[51b4fd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_free_adapter
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[51de018]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AllocateCmdBuffer
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ced1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memset
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4c2c128]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_init
<LI><a href="#[51ddbfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WirelessDrvCmdAlarm
<LI><a href="#[51ddb04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WirelessDrvAlarm
<LI><a href="#[7c014ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_setup_station_hw
<LI><a href="#[7bb1b60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_init_11d
</UL><BR>[Called By]<UL><LI><a href="#[4d32200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_add_card
</UL><P><STRONG><a name="[51ddb7c]"></a>MrvDrvCommandTimerFunction</STRONG> (ARM, 248 bytes, Stack size 32 bytes, wlan_fw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[533115c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_interrupt
<LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[51deb60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;QueueCmd
<LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_cmd.o(.text)
</UL><P><STRONG><a name="[51dda8c]"></a>MrvDrvTimerFunction</STRONG> (ARM, 256 bytes, Stack size 16 bytes, wlan_fw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4c2e1b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_initialize
<LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_cmd.o(.text)
</UL><P><STRONG><a name="[52aadc8]"></a>SendDeauthentication</STRONG> (ARM, 68 bytes, Stack size 16 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[5250e48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_encode_nonwpa
<LI><a href="#[525283c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_mode
</UL><P><STRONG><a name="[52aa8d4]"></a>wlan_send_deauth</STRONG> (ARM, 100 bytes, Stack size 16 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[52aa20c]"></a>wlan_get_assoc_rsp_ioctl</STRONG> (ARM, 72 bytes, Stack size 16 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[52aa28c]"></a>wlan_set_mrvl_tlv_ioctl</STRONG> (ARM, 104 bytes, Stack size 16 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[52a9f94]"></a>StopAdhocNetwork</STRONG> (ARM, 44 bytes, Stack size 16 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[5252924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_freq
<LI><a href="#[525283c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_mode
</UL><P><STRONG><a name="[52aa858]"></a>wlan_do_adhocstop_ioctl</STRONG> (ARM, 80 bytes, Stack size 16 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[52a9db4]"></a>StartAdhocNetwork</STRONG> (ARM, 292 bytes, Stack size 24 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51de090]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetRadioControl
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[5252924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_freq
<LI><a href="#[52ab028]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_essid
</UL><P><STRONG><a name="[52a9e2c]"></a>JoinAdhocNetwork</STRONG> (ARM, 652 bytes, Stack size 32 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7c3895c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SSIDcmp
<LI><a href="#[51de090]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetRadioControl
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[5252924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_freq
<LI><a href="#[52ab028]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_essid
<LI><a href="#[52ab184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_wap
</UL><P><STRONG><a name="[7c388e8]"></a>wlan_associate</STRONG> (ARM, 100 bytes, Stack size 24 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[52ab028]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_essid
<LI><a href="#[52ab184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_wap
<LI><a href="#[52aa774]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlanidle_off
<LI><a href="#[51b5930]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_reassociation_thread
</UL><P><STRONG><a name="[52ab028]"></a>wlan_set_essid</STRONG> (ARM, 1176 bytes, Stack size 96 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4c2decc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_disable
<LI><a href="#[4c2c388]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_trylock
<LI><a href="#[7c38870]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FindBestNetworkSsid
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[52a9f18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendSpecificSSIDScan
<LI><a href="#[52a9ea4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FindSSIDInList
<LI><a href="#[7c388e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_associate
<LI><a href="#[7c3895c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SSIDcmp
<LI><a href="#[52a9e2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;JoinAdhocNetwork
<LI><a href="#[52a9db4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;StartAdhocNetwork
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[52ab184]"></a>wlan_set_wap</STRONG> (ARM, 728 bytes, Stack size 56 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4c2decc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_disable
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[7c387f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FindBestSSIDInList
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[7c38784]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FindBSSIDInList
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[7c388e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_associate
<LI><a href="#[52a9e2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;JoinAdhocNetwork
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[52aa774]"></a>wlanidle_off</STRONG> (ARM, 468 bytes, Stack size 48 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[52a9ea4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FindSSIDInList
<LI><a href="#[7c38708]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendSpecificBSSIDScan
<LI><a href="#[52a9f18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendSpecificSSIDScan
<LI><a href="#[7c388e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_associate
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[52aa7e8]"></a>wlanidle_on</STRONG> (ARM, 264 bytes, Stack size 32 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[4c2decc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_disable
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[7c38688]"></a>wlan_cmd_append_generic_ie</STRONG> (ARM, 228 bytes, Stack size 24 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[51de80c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_associate
</UL><P><STRONG><a name="[7c38608]"></a>wlan_cmd_append_marvell_tlv</STRONG> (ARM, 140 bytes, Stack size 16 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[51de80c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_associate
</UL><P><STRONG><a name="[7c38588]"></a>wlan_cmd_append_reassoc_tlv</STRONG> (ARM, 280 bytes, Stack size 40 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[51de80c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_associate
</UL><P><STRONG><a name="[51de680]"></a>wlan_cmd_802_11_authenticate</STRONG> (ARM, 160 bytes, Stack size 24 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><P><STRONG><a name="[51de788]"></a>wlan_cmd_802_11_deauthenticate</STRONG> (ARM, 84 bytes, Stack size 8 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL><BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><P><STRONG><a name="[51de80c]"></a>wlan_cmd_802_11_associate</STRONG> (ARM, 1012 bytes, Stack size 64 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[51de090]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetRadioControl
<LI><a href="#[7c3a4bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_common_rates
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7b1f750]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_process_association_req
<LI><a href="#[7c38588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_append_reassoc_tlv
<LI><a href="#[7c38688]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_append_generic_ie
<LI><a href="#[7c38608]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_append_marvell_tlv
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7bb18e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_parse_dnld_countryinfo_11d
</UL><BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><P><STRONG><a name="[51de704]"></a>wlan_cmd_802_11_ad_hoc_start</STRONG> (ARM, 1116 bytes, Stack size 48 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7bb1860]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_create_dnld_countryinfo_11d
</UL><BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><P><STRONG><a name="[51de580]"></a>wlan_cmd_802_11_ad_hoc_stop</STRONG> (ARM, 40 bytes, Stack size 0 bytes, wlan_join.o(.text))
<BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><P><STRONG><a name="[51de600]"></a>wlan_cmd_802_11_ad_hoc_join</STRONG> (ARM, 828 bytes, Stack size 56 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[7c3a4bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_common_rates
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[7bb18e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_parse_dnld_countryinfo_11d
</UL><BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><P><STRONG><a name="[7bec35c]"></a>wlan_ret_802_11_authenticate</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wlan_join.o(.text))
<BR>[Called By]<UL><LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
</UL><P><STRONG><a name="[7bec4e0]"></a>wlan_ret_802_11_associate</STRONG> (ARM, 624 bytes, Stack size 48 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7bec660]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MacEventDisconnected
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[51ded60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wireless_send_event
</UL><BR>[Called By]<UL><LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
</UL><P><STRONG><a name="[7bec45c]"></a>wlan_ret_802_11_disassociate</STRONG> (ARM, 16 bytes, Stack size 8 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7bec660]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MacEventDisconnected
</UL><BR>[Called By]<UL><LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
</UL><P><STRONG><a name="[7bec3e0]"></a>wlan_ret_802_11_ad_hoc</STRONG> (ARM, 692 bytes, Stack size 64 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7bec660]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MacEventDisconnected
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[7c38514]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
<LI><a href="#[51ded60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wireless_send_event
</UL><BR>[Called By]<UL><LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
</UL><P><STRONG><a name="[7bec2dc]"></a>wlan_ret_802_11_ad_hoc_stop</STRONG> (ARM, 16 bytes, Stack size 8 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7bec660]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MacEventDisconnected
</UL><BR>[Called By]<UL><LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
</UL><P><STRONG><a name="[51b5930]"></a>wlan_reassociation_thread</STRONG> (ARM, 936 bytes, Stack size 48 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2ccf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_init
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4c2c92c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_wait
<LI><a href="#[51b5a24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;thread_should_stop
<LI><a href="#[4c2c388]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_trylock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[52a9f18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendSpecificSSIDScan
<LI><a href="#[52a9ea4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FindSSIDInList
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[7c388e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_associate
<LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
<LI><a href="#[4c2e1b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_initialize
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_main.o(.text)
</UL><P><STRONG><a name="[7bec16c]"></a>sendADHOCBSSIDQuery</STRONG> (ARM, 40 bytes, Stack size 16 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[51b5138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_event
</UL><P><STRONG><a name="[7c3895c]"></a>SSIDcmp</STRONG> (ARM, 104 bytes, Stack size 8 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
</UL><BR>[Called By]<UL><LI><a href="#[52a9e2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;JoinAdhocNetwork
<LI><a href="#[52ab028]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_essid
<LI><a href="#[7c6050c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_scan_networks
<LI><a href="#[52a9ea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FindSSIDInList
<LI><a href="#[52a9f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendSpecificSSIDScan
<LI><a href="#[52ab09c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_scan
</UL><P><STRONG><a name="[52aa6fc]"></a>wlan_bg_scan_enable</STRONG> (ARM, 40 bytes, Stack size 24 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[7c6050c]"></a>wlan_scan_networks</STRONG> (ARM, 1016 bytes, Stack size 568 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[7c61d44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_scan_setup_scan_config
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[7c3895c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SSIDcmp
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
</UL><BR>[Called By]<UL><LI><a href="#[7c38870]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FindBestNetworkSsid
<LI><a href="#[52ab110]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_scan
<LI><a href="#[52a9f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendSpecificSSIDScan
<LI><a href="#[7c38708]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendSpecificBSSIDScan
<LI><a href="#[52aa388]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_user_scan_ioctl
</UL><P><STRONG><a name="[7c38784]"></a>FindBSSIDInList</STRONG> (ARM, 184 bytes, Stack size 32 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[7c624f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;IsNetworkCompatible
</UL><BR>[Called By]<UL><LI><a href="#[52ab184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_wap
</UL><P><STRONG><a name="[52a9ea4]"></a>FindSSIDInList</STRONG> (ARM, 316 bytes, Stack size 40 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7c3895c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SSIDcmp
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[7c624f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;IsNetworkCompatible
</UL><BR>[Called By]<UL><LI><a href="#[5252924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_freq
<LI><a href="#[52ab028]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_essid
<LI><a href="#[52aa774]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlanidle_off
<LI><a href="#[51b5930]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_reassociation_thread
</UL><P><STRONG><a name="[7c387f8]"></a>FindBestSSIDInList</STRONG> (ARM, 208 bytes, Stack size 32 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7c624f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;IsNetworkCompatible
</UL><BR>[Called By]<UL><LI><a href="#[52ab184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_wap
<LI><a href="#[7c38870]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FindBestNetworkSsid
</UL><P><STRONG><a name="[7c38870]"></a>FindBestNetworkSsid</STRONG> (ARM, 212 bytes, Stack size 32 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[7c6050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_scan_networks
<LI><a href="#[7c387f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FindBestSSIDInList
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[52ab028]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_essid
</UL><P><STRONG><a name="[7c60490]"></a>wlan_scan_radio_to_band</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wlan_scan.o(.text), UNUSED)
<P><STRONG><a name="[52ab110]"></a>wlan_set_scan</STRONG> (ARM, 264 bytes, Stack size 32 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4c2c388]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_trylock
<LI><a href="#[7c6050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_scan_networks
<LI><a href="#[51ded60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wireless_send_event
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[52a9f18]"></a>SendSpecificSSIDScan</STRONG> (ARM, 724 bytes, Stack size 336 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7c3895c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SSIDcmp
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[7c6050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_scan_networks
</UL><BR>[Called By]<UL><LI><a href="#[5252924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_freq
<LI><a href="#[52ab028]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_essid
<LI><a href="#[52aa774]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlanidle_off
<LI><a href="#[51b5930]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_reassociation_thread
<LI><a href="#[52aaa34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_extscan_ioctl
</UL><P><STRONG><a name="[7c38708]"></a>SendSpecificBSSIDScan</STRONG> (ARM, 92 bytes, Stack size 312 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[7c6050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_scan_networks
</UL><BR>[Called By]<UL><LI><a href="#[52aa774]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlanidle_off
</UL><P><STRONG><a name="[52ab09c]"></a>wlan_get_scan</STRONG> (ARM, 2484 bytes, Stack size 640 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[52aaf2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_cfp_by_band_and_channel
<LI><a href="#[79d85c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isprint
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[7c61098]">&gt&gt</a>&nbsp;&nbsp;&nbsp;iwe_stream_add_point
<LI><a href="#[7c3895c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SSIDcmp
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[52aa308]"></a>wlan_get_scan_table_ioctl</STRONG> (ARM, 848 bytes, Stack size 96 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[52aa388]"></a>wlan_set_user_scan_ioctl</STRONG> (ARM, 116 bytes, Stack size 320 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[7c6050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_scan_networks
<LI><a href="#[51ded60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wireless_send_event
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[51de88c]"></a>wlan_cmd_802_11_scan</STRONG> (ARM, 176 bytes, Stack size 16 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><P><STRONG><a name="[7c60408]"></a>wlan_ret_802_11_scan_store_beacon</STRONG> (ARM, 896 bytes, Stack size 72 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL><BR>[Called By]<UL><LI><a href="#[7bec560]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_scan
</UL><P><STRONG><a name="[7bec560]"></a>wlan_ret_802_11_scan</STRONG> (ARM, 1096 bytes, Stack size 1016 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[7c60c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;InterpretBSSDescriptionWithIE
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[7c60408]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_scan_store_beacon
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
</UL><BR>[Called By]<UL><LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
</UL><P><STRONG><a name="[52aaa34]"></a>wlan_extscan_ioctl</STRONG> (ARM, 100 bytes, Stack size 64 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[52a9f18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendSpecificSSIDScan
<LI><a href="#[51ded60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wireless_send_event
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[7bec1e4]"></a>sendBgScanQueryCmd</STRONG> (ARM, 72 bytes, Stack size 24 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[51b5138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_event
</UL><P><STRONG><a name="[52aa504]"></a>wlan_do_bg_scan_config_ioctl</STRONG> (ARM, 340 bytes, Stack size 24 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[51de478]"></a>wlan_cmd_802_11_bg_scan_config</STRONG> (ARM, 88 bytes, Stack size 8 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><P><STRONG><a name="[51de3f4]"></a>wlan_cmd_802_11_bg_scan_query</STRONG> (ARM, 52 bytes, Stack size 0 bytes, wlan_scan.o(.text))
<BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><P><STRONG><a name="[51b5570]"></a>sbi_register</STRONG> (ARM, 56 bytes, Stack size 0 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[532139c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_register
</UL><BR>[Called By]<UL><LI><a href="#[4d31c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_module
</UL><P><STRONG><a name="[51b5484]"></a>sbi_unregister</STRONG> (ARM, 12 bytes, Stack size 0 bytes, if_sdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5321328]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_unregister
</UL><BR>[Called By]<UL><LI><a href="#[51b54f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cleanup_module
</UL><P><STRONG><a name="[52aa9c0]"></a>sbi_read_ioreg</STRONG> (ARM, 8 bytes, Stack size 0 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5330ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_read_ioreg
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[52aa94c]"></a>sbi_write_ioreg</STRONG> (ARM, 8 bytes, Stack size 0 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5330f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_write_ioreg
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[51dda0c]"></a>sbi_reenable_host_interrupt</STRONG> (ARM, 16 bytes, Stack size 8 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[53312bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_enable_SDIO_INT
</UL><BR>[Called By]<UL><LI><a href="#[51df798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownloadCommandToStation
</UL><P><STRONG><a name="[51b5320]"></a>sbi_get_int_status</STRONG> (ARM, 1592 bytes, Stack size 72 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5330ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_read_ioreg
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5330f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_write_ioreg
<LI><a href="#[7c84e88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mv_sdio_read_scratch
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[7c84e08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mv_sdio_poll_card_status
<LI><a href="#[5330e94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_read_iomem
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[53312bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_enable_SDIO_INT
</UL><BR>[Called By]<UL><LI><a href="#[51b6884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_service_main_thread
</UL><P><STRONG><a name="[7c83268]"></a>sbi_card_to_host</STRONG> (ARM, 8 bytes, Stack size 0 bytes, if_sdio.o(.text), UNUSED)
<P><STRONG><a name="[51b51b0]"></a>sbi_read_event_cause</STRONG> (ARM, 8 bytes, Stack size 0 bytes, if_sdio.o(.text))
<BR>[Called By]<UL><LI><a href="#[51b6884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_service_main_thread
</UL><P><STRONG><a name="[51b504c]"></a>sbi_disable_host_int</STRONG> (ARM, 156 bytes, Stack size 16 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5330ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_read_ioreg
<LI><a href="#[5330f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_write_ioreg
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[51b626c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_remove_card
<LI><a href="#[7c014ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_setup_station_hw
</UL><P><STRONG><a name="[7c012c4]"></a>sbi_enable_host_int</STRONG> (ARM, 80 bytes, Stack size 8 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5330f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_write_ioreg
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[7c014ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_setup_station_hw
</UL><P><STRONG><a name="[51b57cc]"></a>sbi_unregister_dev</STRONG> (ARM, 80 bytes, Stack size 8 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[532165c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_free_irq
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4d32200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_add_card
<LI><a href="#[51b626c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_remove_card
</UL><P><STRONG><a name="[51b58b8]"></a>sbi_register_dev</STRONG> (ARM, 640 bytes, Stack size 32 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[5330ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_read_ioreg
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5330f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_write_ioreg
<LI><a href="#[53216d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_request_irq
</UL><BR>[Called By]<UL><LI><a href="#[4d32200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_add_card
</UL><P><STRONG><a name="[51ddd60]"></a>sbi_host_to_card</STRONG> (ARM, 372 bytes, Stack size 48 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7c84e08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mv_sdio_poll_card_status
<LI><a href="#[5330f08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_write_iomem
</UL><BR>[Called By]<UL><LI><a href="#[51dddd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendConfirmSleep
<LI><a href="#[51df798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownloadCommandToStation
<LI><a href="#[51b50c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_send
<LI><a href="#[524b498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendNullPacket
</UL><P><STRONG><a name="[7c831f0]"></a>sbi_get_cis_info</STRONG> (ARM, 156 bytes, Stack size 792 bytes, if_sdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5330ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_read_ioreg
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
</UL><P><STRONG><a name="[51b59b0]"></a>sbi_probe_card</STRONG> (ARM, 324 bytes, Stack size 16 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5321488]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_get_vendor_id
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5330ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_read_ioreg
<LI><a href="#[5330f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_write_ioreg
</UL><BR>[Called By]<UL><LI><a href="#[4d32200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_add_card
</UL><P><STRONG><a name="[7c013b8]"></a>sbi_prog_firmware_w_helper</STRONG> (ARM, 96 bytes, Stack size 8 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7c84d88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_download_wlan_fw_image
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[7c014ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_setup_station_hw
</UL><P><STRONG><a name="[7c83178]"></a>sbi_prog_firmware</STRONG> (ARM, 76 bytes, Stack size 8 bytes, if_sdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c85094]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_prog_firmware_image
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><P><STRONG><a name="[7c01438]"></a>sbi_prog_helper</STRONG> (ARM, 96 bytes, Stack size 8 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7c85094]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_prog_firmware_image
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[7c014ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_setup_station_hw
</UL><P><STRONG><a name="[7c0133c]"></a>sbi_verify_fw_download</STRONG> (ARM, 372 bytes, Stack size 32 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7c84e88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mv_sdio_read_scratch
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51b5a9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;udelay
<LI><a href="#[5330ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_read_ioreg
</UL><BR>[Called By]<UL><LI><a href="#[7c014ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_setup_station_hw
</UL><P><STRONG><a name="[51dd994]"></a>sbi_set_bus_clock</STRONG> (ARM, 40 bytes, Stack size 8 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5321500]">&gt&gt</a>&nbsp;&nbsp;&nbsp;start_bus_clock
<LI><a href="#[53215e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;stop_bus_clock_2
</UL><BR>[Called By]<UL><LI><a href="#[51df798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownloadCommandToStation
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[51b52a8]"></a>sbi_exit_deep_sleep</STRONG> (ARM, 112 bytes, Stack size 16 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5321500]">&gt&gt</a>&nbsp;&nbsp;&nbsp;start_bus_clock
<LI><a href="#[5330f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_write_ioreg
</UL><BR>[Called By]<UL><LI><a href="#[51b6884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_service_main_thread
<LI><a href="#[51b626c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_remove_card
<LI><a href="#[52aab90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetDeepSleep
</UL><P><STRONG><a name="[7bec25c]"></a>sbi_reset_deepsleep_wakeup</STRONG> (ARM, 48 bytes, Stack size 0 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5330f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_write_ioreg
</UL><BR>[Called By]<UL><LI><a href="#[51b5138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_event
</UL><P><STRONG><a name="[51ded60]"></a>wireless_send_event</STRONG> (ARM, 844 bytes, Stack size 56 bytes, wireless.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[9afb0e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_kernel_driver_wext_send_link_event
</UL><BR>[Called By]<UL><LI><a href="#[51dee50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_iwevcustom_event
<LI><a href="#[51b626c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_remove_card
<LI><a href="#[7bec660]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MacEventDisconnected
<LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
<LI><a href="#[7bec4e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_associate
<LI><a href="#[7bec3e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_ad_hoc
<LI><a href="#[52ab110]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_scan
<LI><a href="#[52aa388]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_user_scan_ioctl
<LI><a href="#[52aaa34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_extscan_ioctl
</UL><P><STRONG><a name="[51839cc]"></a>wireless_process_ioctl</STRONG> (ARM, 1240 bytes, Stack size 40 bytes, wireless.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><BR>[Called By]<UL><LI><a href="#[5184b38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_ioctl
</UL><P><STRONG><a name="[9add120]"></a>pipelib_purge</STRONG> (ARM, 4 bytes, Stack size 0 bytes, pipelib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bfe81c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsync
</UL><P><STRONG><a name="[75ee8cc]"></a>pipe_create</STRONG> (ARM, 192 bytes, Stack size 48 bytes, pipelib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4bba590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;open
<LI><a href="#[4bfe81c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsync
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[75eeb88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_send_cmd
<LI><a href="#[7967ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_init
<LI><a href="#[582d278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;socket_pipe
<LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
<LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
<LI><a href="#[79725a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_register_reconfig
</UL><P><STRONG><a name="[9add0ac]"></a>pipe_destroy</STRONG> (ARM, 80 bytes, Stack size 16 bytes, pipelib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[7966fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_deinit
<LI><a href="#[839b2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_deinit
</UL><P><STRONG><a name="[9add514]"></a>pipelib_init</STRONG> (ARM, 72 bytes, Stack size 16 bytes, pipelib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4c2c128]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_init
<LI><a href="#[4ce7738]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_selinit
</UL><BR>[Address Reference Count : 9]<UL><LI> pipelib.o(pipedevtab)
<LI> pipelib.o(pipedevtab)
<LI> pipelib.o(pipedevtab)
<LI> pipelib.o(pipedevtab)
<LI> pipelib.o(pipedevtab)
<LI> pipelib.o(pipedevtab)
<LI> pipelib.o(pipedevtab)
<LI> pipelib.o(pipedevtab)
<LI> pipelib.o(pipedevtab)
</UL><P><STRONG><a name="[9add5f8]"></a>pipelib_init0</STRONG> (ARM, 112 bytes, Stack size 16 bytes, pipelib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4c2c128]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_init
<LI><a href="#[4ce7738]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_selinit
</UL><BR>[Address Reference Count : 1]<UL><LI> pipelib.o(pipedevtab)
</UL><P><STRONG><a name="[9ac3628]"></a>cyg_ppp_syslog</STRONG> (ARM, 88 bytes, Stack size 24 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ba28b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_vprintf
</UL><BR>[Called By]<UL><LI><a href="#[9ac35b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_init
<LI><a href="#[9ac34c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_cifproxyarp
<LI><a href="#[9ac33d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_cifaddr
<LI><a href="#[9ac2f98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_establish_ppp
<LI><a href="#[9ac2c48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_set_up_tty
<LI><a href="#[9ac2a00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_output
<LI><a href="#[9ac2824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_wait_input
<LI><a href="#[9ac2644]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_read_packet
<LI><a href="#[9ac2554]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_send_config
<LI><a href="#[9ac2464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_set_xaccm
<LI><a href="#[9ac23e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_recv_config
<LI><a href="#[9ac22f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ccp_flags_set
<LI><a href="#[9ac2278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ccp_fatal_error
<LI><a href="#[9ac2184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifvjcomp
<LI><a href="#[9ac2110]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifup
<LI><a href="#[9ac2098]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifnpmode
<LI><a href="#[9ac2024]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifdown
<LI><a href="#[9ac1fb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifaddr
<LI><a href="#[9ac1e48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifproxyarp
<LI><a href="#[9ac1dd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_GetMask
<LI><a href="#[9ac2914]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_log_packet
<LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
<LI><a href="#[871a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
<LI><a href="#[8769f54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_novm
<LI><a href="#[874c9b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pr_log
<LI><a href="#[879677c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_demand_conf
<LI><a href="#[8796f28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_up
<LI><a href="#[8bf22f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_extcode
<LI><a href="#[8bf26e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_addci
<LI><a href="#[8bf2608]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_nakci
<LI><a href="#[8bf24bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_up
<LI><a href="#[8bf02cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LcpEchoCheck
<LI><a href="#[8c22f1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_protrej
<LI><a href="#[8c22f90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_input
<LI><a href="#[8c22918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_timeout
<LI><a href="#[874a314]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_link_terminated
<LI><a href="#[8befac4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_link_established
<LI><a href="#[8c21978]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_peer_success
<LI><a href="#[8c218f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_withpeer_success
<LI><a href="#[8794b38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_ip_addr
<LI><a href="#[8c29840]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_check_access
<LI><a href="#[8c2a6f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_time_expired
<LI><a href="#[8c2a76c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_idle
<LI><a href="#[8c49b08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_input
<LI><a href="#[8c49ea0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_up
<LI><a href="#[8c497ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_datainput
<LI><a href="#[8c6cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapInput
<LI><a href="#[8c6c4a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapChallengeTimeout
<LI><a href="#[874a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat
<LI><a href="#[8ca6744]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsm_timeout
<LI><a href="#[8794ca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_input
</UL><P><STRONG><a name="[9ac35b0]"></a>cyg_ppp_sys_init</STRONG> (ARM, 204 bytes, Stack size 16 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[9ac3540]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_die
<LI><a href="#[4c2e4a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_real_time_clock
<LI><a href="#[4c2e51c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_clock_get_resolution
<LI><a href="#[4c2e3b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_create
</UL><BR>[Called By]<UL><LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
</UL><P><STRONG><a name="[9ac34c8]"></a>cyg_ppp_cifproxyarp</STRONG> (ARM, 260 bytes, Stack size 24 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[9ac32ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_cleanup
<LI><a href="#[8796eb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_down
</UL><P><STRONG><a name="[9ac344c]"></a>cyg_ppp_cifdefaultroute</STRONG> (ARM, 12 bytes, Stack size 0 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac639c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dodefaultroute
</UL><BR>[Called By]<UL><LI><a href="#[8796eb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_down
</UL><P><STRONG><a name="[9ac33d8]"></a>cyg_ppp_cifaddr</STRONG> (ARM, 268 bytes, Stack size 80 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
</UL><BR>[Called By]<UL><LI><a href="#[9ac32ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_cleanup
<LI><a href="#[8796eb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_down
</UL><P><STRONG><a name="[9ac32ec]"></a>cyg_ppp_sys_cleanup</STRONG> (ARM, 208 bytes, Stack size 48 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[9ac33d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_cifaddr
<LI><a href="#[9ac639c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dodefaultroute
<LI><a href="#[9ac34c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_cifproxyarp
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[9ac3540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_die
</UL><P><STRONG><a name="[9ac3274]"></a>cyg_ppp_sys_exit</STRONG> (ARM, 148 bytes, Stack size 24 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[4c30f64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_exit
</UL><BR>[Called By]<UL><LI><a href="#[9ac3540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_die
</UL><P><STRONG><a name="[9ac3188]"></a>cyg_ppp_sys_close</STRONG> (ARM, 40 bytes, Stack size 8 bytes, sys-ecos.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><P><STRONG><a name="[9ac3108]"></a>cyg_ppp_sys_check_options</STRONG> (ARM, 4 bytes, Stack size 0 bytes, sys-ecos.o(.text), UNUSED)
<P><STRONG><a name="[9ac308c]"></a>cyg_ppp_ppp_available</STRONG> (ARM, 120 bytes, Stack size 48 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
</UL><P><STRONG><a name="[9ac2f98]"></a>cyg_ppp_establish_ppp</STRONG> (ARM, 324 bytes, Stack size 24 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[9ac2f24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppopen
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[9ac2e34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppptioctl
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
</UL><P><STRONG><a name="[9ac2db8]"></a>cyg_ppp_restore_loop</STRONG> (ARM, 4 bytes, Stack size 0 bytes, sys-ecos.o(.text), UNUSED)
<P><STRONG><a name="[9ac2d38]"></a>cyg_ppp_disestablish_ppp</STRONG> (ARM, 4 bytes, Stack size 0 bytes, sys-ecos.o(.text))
<BR>[Called By]<UL><LI><a href="#[9ac3540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_die
<LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
</UL><P><STRONG><a name="[9ac2cc0]"></a>cyg_ppp_clean_check</STRONG> (ARM, 4 bytes, Stack size 0 bytes, sys-ecos.o(.text))
<BR>[Called By]<UL><LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
</UL><P><STRONG><a name="[9ac2c48]"></a>cyg_ppp_set_up_tty</STRONG> (ARM, 308 bytes, Stack size 32 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a034a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_get_config
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[9ac3540]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_die
<LI><a href="#[4bba670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_set_config
</UL><BR>[Called By]<UL><LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
</UL><P><STRONG><a name="[9ac2ae8]"></a>cyg_ppp_restore_tty</STRONG> (ARM, 4 bytes, Stack size 0 bytes, sys-ecos.o(.text))
<BR>[Called By]<UL><LI><a href="#[9ac3540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_die
<LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
</UL><P><STRONG><a name="[9ac2a74]"></a>cyg_ppp_setdtr</STRONG> (ARM, 4 bytes, Stack size 0 bytes, sys-ecos.o(.text), UNUSED)
<P><STRONG><a name="[9ac2a00]"></a>cyg_ppp_output</STRONG> (ARM, 184 bytes, Stack size 40 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac2914]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_log_packet
<LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[9ac289c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppwrite
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
</UL><BR>[Called By]<UL><LI><a href="#[8c2298c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_sauthreq
<LI><a href="#[8c21de4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_sresp
<LI><a href="#[8c6c520]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapSendChallenge
<LI><a href="#[8c6ba5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapSendStatus
<LI><a href="#[8c6b804]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapSendResponse
<LI><a href="#[8befcac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_sdata
</UL><P><STRONG><a name="[9ac2824]"></a>cyg_ppp_wait_input</STRONG> (ARM, 460 bytes, Stack size 64 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac27ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppcheck
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4c2e1b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_initialize
<LI><a href="#[4a034a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_get_config
<LI><a href="#[4c2dfc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_enable
<LI><a href="#[4bf48a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_read
<LI><a href="#[4c2decc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_disable
<LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[9ac2734]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppinput
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
</UL><P><STRONG><a name="[9ac26bc]"></a>cyg_ppp_wait_time</STRONG> (ARM, 4 bytes, Stack size 0 bytes, sys-ecos.o(.text), UNUSED)
<P><STRONG><a name="[9ac2644]"></a>cyg_ppp_read_packet</STRONG> (ARM, 156 bytes, Stack size 40 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[9ac25d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppread
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[9ac3540]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_die
</UL><BR>[Called By]<UL><LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
</UL><P><STRONG><a name="[9ac2554]"></a>cyg_ppp_ppp_send_config</STRONG> (ARM, 364 bytes, Stack size 80 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[9ac24e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_quit
<LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[9ac2e34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppptioctl
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[874a484]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_lowerup
<LI><a href="#[8bf24bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_up
<LI><a href="#[8bf244c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_down
</UL><P><STRONG><a name="[9ac2464]"></a>cyg_ppp_ppp_set_xaccm</STRONG> (ARM, 112 bytes, Stack size 16 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[9ac2e34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppptioctl
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
</UL><BR>[Called By]<UL><LI><a href="#[874a484]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_lowerup
</UL><P><STRONG><a name="[9ac23e8]"></a>cyg_ppp_ppp_recv_config</STRONG> (ARM, 300 bytes, Stack size 40 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[9ac2e34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppptioctl
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[874a484]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_lowerup
<LI><a href="#[8bf24bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_up
<LI><a href="#[8bf244c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_down
</UL><P><STRONG><a name="[9ac2370]"></a>cyg_ppp_ccp_test</STRONG> (ARM, 116 bytes, Stack size 24 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[9ac2e34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppptioctl
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[8c4a1ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_resetci
<LI><a href="#[8c4a0cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_addci
<LI><a href="#[8c49f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_reqci
</UL><P><STRONG><a name="[9ac22f4]"></a>cyg_ppp_ccp_flags_set</STRONG> (ARM, 152 bytes, Stack size 24 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac2e34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppptioctl
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
</UL><BR>[Called By]<UL><LI><a href="#[8c49944]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_open
<LI><a href="#[8c498d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_close
<LI><a href="#[8c49b08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_input
<LI><a href="#[8c49a98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_protrej
<LI><a href="#[8c49ea0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_up
<LI><a href="#[8c49e30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_down
<LI><a href="#[8c497ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_datainput
</UL><P><STRONG><a name="[9ac2278]"></a>cyg_ppp_ccp_fatal_error</STRONG> (ARM, 92 bytes, Stack size 8 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac2e34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppptioctl
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
</UL><BR>[Called By]<UL><LI><a href="#[8c497ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_datainput
</UL><P><STRONG><a name="[9ac21fc]"></a>cyg_ppp_get_idle_time</STRONG> (ARM, 36 bytes, Stack size 8 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac2e34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppptioctl
</UL><BR>[Called By]<UL><LI><a href="#[8c2a76c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_idle
</UL><P><STRONG><a name="[9ac2184]"></a>cyg_ppp_sifvjcomp</STRONG> (ARM, 288 bytes, Stack size 40 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac2e34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppptioctl
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
</UL><BR>[Called By]<UL><LI><a href="#[8796f28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_up
<LI><a href="#[8796eb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_down
</UL><P><STRONG><a name="[9ac2110]"></a>cyg_ppp_sifup</STRONG> (ARM, 220 bytes, Stack size 48 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
</UL><BR>[Called By]<UL><LI><a href="#[879677c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_demand_conf
<LI><a href="#[8796f28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_up
</UL><P><STRONG><a name="[9ac2098]"></a>cyg_ppp_sifnpmode</STRONG> (ARM, 132 bytes, Stack size 24 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac2e34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppptioctl
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
</UL><BR>[Called By]<UL><LI><a href="#[879677c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_demand_conf
<LI><a href="#[8796f28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_up
</UL><P><STRONG><a name="[9ac2024]"></a>cyg_ppp_sifdown</STRONG> (ARM, 244 bytes, Stack size 56 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac2e34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppptioctl
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
</UL><BR>[Called By]<UL><LI><a href="#[8796eb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_down
</UL><P><STRONG><a name="[9ac1fb0]"></a>cyg_ppp_sifaddr</STRONG> (ARM, 560 bytes, Stack size 128 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[9ac1f3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ip_ntoa
</UL><BR>[Called By]<UL><LI><a href="#[879677c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_demand_conf
<LI><a href="#[8796f28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_up
</UL><P><STRONG><a name="[9ac1ec0]"></a>cyg_ppp_sifdefaultroute</STRONG> (ARM, 12 bytes, Stack size 0 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac639c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dodefaultroute
</UL><BR>[Called By]<UL><LI><a href="#[879677c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_demand_conf
<LI><a href="#[8796f28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_up
</UL><P><STRONG><a name="[9ac1e48]"></a>cyg_ppp_sifproxyarp</STRONG> (ARM, 872 bytes, Stack size 1104 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[879677c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_demand_conf
<LI><a href="#[8796f28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_up
</UL><P><STRONG><a name="[9ac1dd4]"></a>cyg_ppp_GetMask</STRONG> (ARM, 408 bytes, Stack size 1104 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
</UL><BR>[Called By]<UL><LI><a href="#[879677c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_demand_conf
<LI><a href="#[8796f28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_up
</UL><P><STRONG><a name="[9ac1ce4]"></a>cyg_ppp_get_host_seed</STRONG> (ARM, 8 bytes, Stack size 0 bytes, sys-ecos.o(.text))
<BR>[Called By]<UL><LI><a href="#[874a570]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_magic_init
</UL><P><STRONG><a name="[75eea98]"></a>cyg_ppp_options_init</STRONG> (ARM, 140 bytes, Stack size 8 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
</UL><BR>[Called By]<UL><LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
</UL><P><STRONG><a name="[75eea28]"></a>cyg_ppp_up</STRONG> (ARM, 316 bytes, Stack size 40 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4c2d3fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_init
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
</UL><BR>[Called By]<UL><LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
</UL><P><STRONG><a name="[9ac1b80]"></a>cyg_ppp_options_install</STRONG> (ARM, 288 bytes, Stack size 8 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
</UL><BR>[Called By]<UL><LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
</UL><P><STRONG><a name="[75ee9b4]"></a>cyg_ppp_down</STRONG> (ARM, 60 bytes, Stack size 16 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30b10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_release
</UL><BR>[Called By]<UL><LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
</UL><P><STRONG><a name="[9ac1570]"></a>cyg_ppp_wait_up</STRONG> (ARM, 76 bytes, Stack size 16 bytes, sys-ecos.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
</UL><P><STRONG><a name="[75ee93c]"></a>cyg_ppp_wait_down</STRONG> (ARM, 64 bytes, Stack size 16 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[4c30e70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delete
</UL><BR>[Called By]<UL><LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
</UL><P><STRONG><a name="[9ac14fc]"></a>cyg_ppp_crypt</STRONG> (ARM, 8 bytes, Stack size 0 bytes, sys-ecos.o(.text), UNUSED)
<P><STRONG><a name="[9ac1488]"></a>cyg_ppp_drand48</STRONG> (ARM, 108 bytes, Stack size 8 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[4f74974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dflt
<LI><a href="#[4f73bfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL><BR>[Called By]<UL><LI><a href="#[8c6c42c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapGenChallenge
</UL><P><STRONG><a name="[9ac1414]"></a>cyg_ppp_mrand48</STRONG> (ARM, 4 bytes, Stack size 0 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rand
</UL><BR>[Called By]<UL><LI><a href="#[8befbbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_magic
</UL><P><STRONG><a name="[9ac13a0]"></a>cyg_ppp_srand48</STRONG> (ARM, 4 bytes, Stack size 0 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[508d088]">&gt&gt</a>&nbsp;&nbsp;&nbsp;srand
</UL><BR>[Called By]<UL><LI><a href="#[874a570]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_magic_init
</UL><P><STRONG><a name="[9a8a270]"></a>cyg_ppp_pppoutput</STRONG> (ARM, 760 bytes, Stack size 40 bytes, if_ppp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a91668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_prepend
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[51841cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifplock
<LI><a href="#[5184158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifpunlock
<LI><a href="#[5138620]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getmicrotime
</UL><BR>[Called By]<UL><LI><a href="#[9ac289c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppwrite
</UL><BR>[Address Reference Count : 1]<UL><LI> if_ppp.o(.text)
</UL><P><STRONG><a name="[5137fe0]"></a>cyg_ppp_pppattach</STRONG> (ARM, 168 bytes, Stack size 32 bytes, if_ppp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[51840e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;if_attach
</UL><BR>[Called By]<UL><LI><a href="#[4d1ee1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
</UL><P><STRONG><a name="[9a8a1f8]"></a>cyg_ppp_pppalloc</STRONG> (ARM, 196 bytes, Stack size 16 bytes, if_ppp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[9a8a178]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sl_compress_init
</UL><BR>[Called By]<UL><LI><a href="#[9ac2f24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppopen
</UL><P><STRONG><a name="[9a8a100]"></a>cyg_ppp_pppdealloc</STRONG> (ARM, 432 bytes, Stack size 24 bytes, if_ppp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7ad5764]">&gt&gt</a>&nbsp;&nbsp;&nbsp;if_down
<LI><a href="#[5138620]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getmicrotime
<LI><a href="#[51841cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifplock
<LI><a href="#[5184158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifpunlock
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><BR>[Called By]<UL><LI><a href="#[872def8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppclose
</UL><P><STRONG><a name="[9a8a088]"></a>cyg_ppp_pppioctl</STRONG> (ARM, 1468 bytes, Stack size 80 bytes, if_ppp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[9a8a178]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sl_compress_init
<LI><a href="#[5138468]">&gt&gt</a>&nbsp;&nbsp;&nbsp;copyin
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51841cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifplock
<LI><a href="#[5184158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifpunlock
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Called By]<UL><LI><a href="#[9ac2e34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppptioctl
</UL><P><STRONG><a name="[9a8a010]"></a>cyg_ppp_ppp_restart</STRONG> (ARM, 52 bytes, Stack size 16 bytes, if_ppp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><P><STRONG><a name="[9a89f98]"></a>cyg_ppp_ppp_dequeue</STRONG> (ARM, 692 bytes, Stack size 40 bytes, if_ppp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51841cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifplock
<LI><a href="#[5184158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifpunlock
<LI><a href="#[9a8a72c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ppp_ccp
<LI><a href="#[9a89f1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sl_compress_tcp
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Called By]<UL><LI><a href="#[872eba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppasyncstart
</UL><P><STRONG><a name="[5137b88]"></a>pppintr</STRONG> (ARM, 224 bytes, Stack size 32 bytes, if_ppp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[51841cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifplock
<LI><a href="#[5184158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifpunlock
<LI><a href="#[9a8a5cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ppp_inproc
</UL><BR>[Called By]<UL><LI><a href="#[5139b64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_netint
</UL><P><STRONG><a name="[9a89da0]"></a>cyg_ppp_ppppktin</STRONG> (ARM, 124 bytes, Stack size 24 bytes, if_ppp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[51841cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifplock
<LI><a href="#[5184158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifpunlock
<LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[9ac2734]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppinput
</UL><P><STRONG><a name="[82c4474]"></a>audio_i2c_write</STRONG> (ARM, 2104 bytes, Stack size 32 bytes, audio_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82c4744]">&gt&gt</a>&nbsp;&nbsp;&nbsp;delay
</UL><BR>[Called By]<UL><LI><a href="#[82c4390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dev_wm8978_init
<LI><a href="#[82c4138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_stop_play
<LI><a href="#[82c40c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_set_volume
<LI><a href="#[82c4044]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_set_wav_volume
<LI><a href="#[82c3fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_enable_output
<LI><a href="#[82c3f54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_enable_input
<LI><a href="#[82c3edc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_disable_input
<LI><a href="#[82c3e68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_set_eq
</UL><P><STRONG><a name="[82c4404]"></a>if_iis_io</STRONG> (ARM, 116 bytes, Stack size 0 bytes, audio_driver.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[82c4318]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_device_init
</UL><P><STRONG><a name="[82c4390]"></a>dev_wm8978_init</STRONG> (ARM, 456 bytes, Stack size 4 bytes, audio_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82c4474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audio_i2c_write
<LI><a href="#[82c4744]">&gt&gt</a>&nbsp;&nbsp;&nbsp;delay
</UL><BR>[Called By]<UL><LI><a href="#[82c4318]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_device_init
</UL><P><STRONG><a name="[82c4318]"></a>audio_device_init</STRONG> (ARM, 60 bytes, Stack size 16 bytes, audio_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[82c44fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;if_iis_init
<LI><a href="#[82c4404]">&gt&gt</a>&nbsp;&nbsp;&nbsp;if_iis_io
<LI><a href="#[82c4390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dev_wm8978_init
</UL><P><STRONG><a name="[82c42a0]"></a>audio_set_channels</STRONG> (ARM, 88 bytes, Stack size 0 bytes, audio_driver.o(.text), UNUSED)
<P><STRONG><a name="[755f494]"></a>audio_get_clk_cfg</STRONG> (ARM, 372 bytes, Stack size 4 bytes, audio_driver.o(.text))
<BR>[Called By]<UL><LI><a href="#[755f954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_WM8978_test
<LI><a href="#[7365a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartPlay
<LI><a href="#[7365758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartRecord
</UL><P><STRONG><a name="[755f420]"></a>audio_set_clk</STRONG> (ARM, 44 bytes, Stack size 0 bytes, audio_driver.o(.text))
<BR>[Called By]<UL><LI><a href="#[755f954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_WM8978_test
<LI><a href="#[7365a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartPlay
<LI><a href="#[7365758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartRecord
</UL><P><STRONG><a name="[82c4224]"></a>audio_set_play_buffer</STRONG> (ARM, 20 bytes, Stack size 0 bytes, audio_driver.o(.text), UNUSED)
<P><STRONG><a name="[82c41ac]"></a>audio_start_play</STRONG> (ARM, 24 bytes, Stack size 0 bytes, audio_driver.o(.text), UNUSED)
<P><STRONG><a name="[82c4138]"></a>audio_stop_play</STRONG> (ARM, 52 bytes, Stack size 4 bytes, audio_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82c4474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audio_i2c_write
</UL><P><STRONG><a name="[82c40c0]"></a>audio_set_volume</STRONG> (ARM, 104 bytes, Stack size 8 bytes, audio_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82c4474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audio_i2c_write
</UL><P><STRONG><a name="[82c4044]"></a>audio_set_wav_volume</STRONG> (ARM, 496 bytes, Stack size 12 bytes, audio_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82c4474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audio_i2c_write
</UL><P><STRONG><a name="[82c3fcc]"></a>audio_enable_output</STRONG> (ARM, 56 bytes, Stack size 4 bytes, audio_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82c4474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audio_i2c_write
</UL><P><STRONG><a name="[82c3f54]"></a>audio_enable_input</STRONG> (ARM, 56 bytes, Stack size 4 bytes, audio_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82c4474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audio_i2c_write
</UL><P><STRONG><a name="[82c3edc]"></a>audio_disable_input</STRONG> (ARM, 56 bytes, Stack size 4 bytes, audio_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82c4474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audio_i2c_write
</UL><P><STRONG><a name="[82c3e68]"></a>audio_set_eq</STRONG> (ARM, 112 bytes, Stack size 4 bytes, audio_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82c4474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audio_i2c_write
</UL><P><STRONG><a name="[82c3df4]"></a>audio_reset_i2s</STRONG> (ARM, 44 bytes, Stack size 4 bytes, audio_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82c4744]">&gt&gt</a>&nbsp;&nbsp;&nbsp;delay
</UL><P><STRONG><a name="[83df7c4]"></a>_fopen</STRONG> (ARM, 212 bytes, Stack size 24 bytes, fopen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[83dfa24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;process_mode(const char*, Cyg_StdioStream::OpenMode*, int*, int*)
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bba590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;open
<LI><a href="#[83dfd3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fopen_inner(int, Cyg_StdioStream::OpenMode, int, int)
</UL><P><STRONG><a name="[8199840]"></a>fileno</STRONG> (ARM, 8 bytes, Stack size 0 bytes, fopen.o(.text))
<BR>[Called By]<UL><LI><a href="#[8c29840]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_check_access
<LI><a href="#[81998ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yy_init_buffer
</UL><P><STRONG><a name="[83df758]"></a>fdopen</STRONG> (ARM, 332 bytes, Stack size 32 bytes, fopen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[83dfa24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;process_mode(const char*, Cyg_StdioStream::OpenMode*, int*, int*)
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[83dfd3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fopen_inner(int, Cyg_StdioStream::OpenMode, int, int)
<LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4bfe8f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lseek
<LI><a href="#[746a0dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::flush_output_unlocked()
</UL><P><STRONG><a name="[5c590f8]"></a>Cyg_StdioStreamBuffer::set_buffer(unsigned int, unsigned char*)</STRONG> (ARM, 136 bytes, Stack size 16 bytes, streambuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[5084474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::Cyg_StdioStream(int, Cyg_StdioStream::OpenMode, int, int, int, unsigned int, unsigned char*)
<LI><a href="#[746a1dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::Cyg_StdioStream(Cyg_StdioStream::OpenMode, unsigned int, unsigned char*)
</UL><P><STRONG><a name="[5c4982c]"></a>vsscanf</STRONG> (ARM, 216 bytes, Stack size 72 bytes, vsscanf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[746a1dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::Cyg_StdioStream(Cyg_StdioStream::OpenMode, unsigned int, unsigned char*)
<LI><a href="#[84c0170]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vfscanf
<LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[746a0dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::flush_output_unlocked()
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4c2c478]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::~Cyg_Mutex()
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[52aaaac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sscanf
</UL><P><STRONG><a name="[8199614]"></a>fwrite</STRONG> (ARM, 152 bytes, Stack size 24 bytes, fwrite.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74523d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::write(const unsigned char*, unsigned int, unsigned int*)
<LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[81996ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yylex
</UL><P><STRONG><a name="[8401a14]"></a>qsort</STRONG> (ARM, 1048 bytes, Stack size 64 bytes, qsort.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[84e3708]">&gt&gt</a>&nbsp;&nbsp;&nbsp;swapfunc(char*, char*, int, int)
<LI><a href="#[84e368c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;med3(char*, char*, char*, int (*)(const void*, const void*))
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[8401a14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;qsort
</UL><BR>[Called By]<UL><LI><a href="#[8401a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;qsort
<LI><a href="#[839b4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_scan_results
</UL><P><STRONG><a name="[5c88ed8]"></a>memchr</STRONG> (ARM, 244 bytes, Stack size 32 bytes, memchr.o(.text))
<BR>[Called By]<UL><LI><a href="#[746a16c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vfnprintf
</UL><P><STRONG><a name="[5cc2994]"></a>__kernel_rem_pio2</STRONG> (ARM, 2512 bytes, Stack size 672 bytes, k_rem_pio2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f74974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dflt
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[4e4cde8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[4f74668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[84edd1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;scalbn
<LI><a href="#[84edca8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__softfp_floor
<LI><a href="#[4f741d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[74125ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[4f73c68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub
</UL><BR>[Called By]<UL><LI><a href="#[740f5e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL><P><STRONG><a name="[5ce5894]"></a>rint</STRONG> (ARM, 336 bytes, Stack size 16 bytes, s_rint.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[4f73c68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub
</UL><BR>[Called By]<UL><LI><a href="#[7415ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_standard
</UL><P><STRONG><a name="[5ce5824]"></a>copysign</STRONG> (ARM, 16 bytes, Stack size 0 bytes, s_copysign.o(.text))
<BR>[Called By]<UL><LI><a href="#[7415ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_standard
<LI><a href="#[84edd1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;scalbn
</UL><P><STRONG><a name="[5c88f44]"></a>finite</STRONG> (ARM, 20 bytes, Stack size 0 bytes, s_finite.o(.text))
<BR>[Called By]<UL><LI><a href="#[5c89038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cvt(double, int, int, char*, int, char*, char*)
</UL><P><STRONG><a name="[5c88fb0]"></a>__softfp_modf</STRONG> (ARM, 308 bytes, Stack size 24 bytes, s_modf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f73c68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
</UL><BR>[Called By]<UL><LI><a href="#[5c89330]">&lt&lt</a>&nbsp;&nbsp;&nbsp;round(double, int*, char*, char*, char, char*)
<LI><a href="#[5c89038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cvt(double, int, int, char*, int, char*, char*)
</UL><P><STRONG><a name="[5cc6628]"></a>__softfp_atan</STRONG> (ARM, 1080 bytes, Stack size 40 bytes, s_atan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[4f741d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4f73c68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[5cc9f44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_drdiv
<LI><a href="#[4f74668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_drsb
</UL><BR>[Called By]<UL><LI><a href="#[7412658]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__ieee754_atan2
</UL><P><STRONG><a name="[5ce5978]"></a>matherr</STRONG> (ARM, 8 bytes, Stack size 0 bytes, matherr.o(.text))
<BR>[Called By]<UL><LI><a href="#[7415ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_standard
</UL><P><STRONG><a name="[5cef5e4]"></a>Cyg_Mempool_Fixed::Cyg_Mempool_Fixed(unsigned char*, int, unsigned int)</STRONG> (ARM, 292 bytes, Stack size 24 bytes, memfixed.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[51381a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_fix_create
</UL><P><STRONG><a name="[5cef4e8]"></a>Cyg_Mempool_Fixed::~Cyg_Mempool_Fixed()</STRONG> (ARM, 184 bytes, Stack size 24 bytes, memfixed.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7509ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::dequeue()
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[4c8d848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL><BR>[Called By]<UL><LI><a href="#[5cef568]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_fix_delete
</UL><P><STRONG><a name="[5cef464]"></a>Cyg_Mempool_Fixed::alloc()</STRONG> (ARM, 168 bytes, Stack size 24 bytes, memfixed.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8511c3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed_Implementation::try_alloc(int)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[74eb4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[7509b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)
<LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
</UL><BR>[Called By]<UL><LI><a href="#[5138d90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_fix_alloc
</UL><P><STRONG><a name="[5cef360]"></a>Cyg_Mempool_Fixed::alloc(unsigned long long)</STRONG> (ARM, 272 bytes, Stack size 40 bytes, memfixed.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8511c3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed_Implementation::try_alloc(int)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[4c2e130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::initialize(unsigned long long, unsigned long long)
<LI><a href="#[74eb4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[7509b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)
<LI><a href="#[4c2de40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::rem_alarm(Cyg_Alarm*)
<LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
</UL><BR>[Called By]<UL><LI><a href="#[5cef3e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_fix_timed_alloc
</UL><P><STRONG><a name="[5cef2d8]"></a>Cyg_Mempool_Fixed::try_alloc()</STRONG> (ARM, 44 bytes, Stack size 8 bytes, memfixed.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8511c3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed_Implementation::try_alloc(int)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[5138d10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_fix_try_alloc
</UL><P><STRONG><a name="[5cef254]"></a>Cyg_Mempool_Fixed::free(unsigned char*)</STRONG> (ARM, 248 bytes, Stack size 24 bytes, memfixed.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[7509ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::dequeue()
<LI><a href="#[8511c3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed_Implementation::try_alloc(int)
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[5138c1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_fix_free
</UL><P><STRONG><a name="[8511bac]"></a>Cyg_Mempool_Fixed::resize_alloc(unsigned char*, int, int*)</STRONG> (ARM, 60 bytes, Stack size 8 bytes, memfixed.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><P><STRONG><a name="[5cef13c]"></a>Cyg_Mempool_Fixed::get_status(unsigned short, Cyg_Mempool_Status&)</STRONG> (ARM, 228 bytes, Stack size 8 bytes, memfixed.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[5cef1d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_fix_waiting
<LI><a href="#[5138a24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_fix_get_info
</UL><P><STRONG><a name="[5cefb24]"></a>Cyg_Mempool_Variable::Cyg_Mempool_Variable(unsigned char*, int, int)</STRONG> (ARM, 196 bytes, Stack size 16 bytes, memvar.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[5138220]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_var_create
</UL><P><STRONG><a name="[5cefa24]"></a>Cyg_Mempool_Variable::~Cyg_Mempool_Variable()</STRONG> (ARM, 184 bytes, Stack size 24 bytes, memvar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7509ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::dequeue()
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[4c8d848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL><BR>[Called By]<UL><LI><a href="#[5cefaa8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_var_delete
</UL><P><STRONG><a name="[5cef9a0]"></a>Cyg_Mempool_Variable::alloc(int)</STRONG> (ARM, 176 bytes, Stack size 32 bytes, memvar.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[852fa74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable_Implementation::try_alloc(int)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[74eb4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[7509b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)
<LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
</UL><BR>[Called By]<UL><LI><a href="#[5139060]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_var_alloc
</UL><P><STRONG><a name="[5cef898]"></a>Cyg_Mempool_Variable::alloc(int, unsigned long long)</STRONG> (ARM, 276 bytes, Stack size 48 bytes, memvar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[852fa74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable_Implementation::try_alloc(int)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
<LI><a href="#[4c2e130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::initialize(unsigned long long, unsigned long long)
<LI><a href="#[74eb4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[7509b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)
<LI><a href="#[4c2de40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::rem_alarm(Cyg_Alarm*)
<LI><a href="#[4c30ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::exit()
</UL><BR>[Called By]<UL><LI><a href="#[5cef920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_var_timed_alloc
</UL><P><STRONG><a name="[5cef810]"></a>Cyg_Mempool_Variable::try_alloc(int)</STRONG> (ARM, 40 bytes, Stack size 8 bytes, memvar.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[852fa74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable_Implementation::try_alloc(int)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[5138fe0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_var_try_alloc
</UL><P><STRONG><a name="[852f9e4]"></a>Cyg_Mempool_Variable::resize_alloc(unsigned char*, int, int*)</STRONG> (ARM, 248 bytes, Stack size 24 bytes, memvar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[852f918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable_Implementation::insert_free_block(Cyg_Mempool_Variable_Implementation::memdq*)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><P><STRONG><a name="[5cef788]"></a>Cyg_Mempool_Variable::free(unsigned char*, int)</STRONG> (ARM, 328 bytes, Stack size 40 bytes, memvar.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[852f918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable_Implementation::insert_free_block(Cyg_Mempool_Variable_Implementation::memdq*)
<LI><a href="#[7509ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::dequeue()
<LI><a href="#[852fa74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable_Implementation::try_alloc(int)
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
<LI><a href="#[7509b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::enqueue(Cyg_Thread*)
<LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[5138ef0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_var_free
</UL><P><STRONG><a name="[5cef66c]"></a>Cyg_Mempool_Variable::get_status(unsigned short, Cyg_Mempool_Status&)</STRONG> (ARM, 192 bytes, Stack size 0 bytes, memvar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74d4898]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[5cef70c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_var_waiting
<LI><a href="#[5138aa4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_mempool_var_get_info
</UL><P><STRONG><a name="[853c158]"></a>Cyg_libc_signals_dummy_init_class::Cyg_libc_signals_dummy_init_class()</STRONG> (ARM, 60 bytes, Stack size 8 bytes, siginit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL><P><STRONG><a name="[853c0d0]"></a>cyg_libc_signals_default_handler</STRONG> (ARM, 8 bytes, Stack size 0 bytes, siginit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e4a4f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;exit
</UL><BR>[Called By]<UL><LI><a href="#[8603c20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_read
</UL><P><STRONG><a name="[9be34f8]"></a>cyg_libc_signals_lock_do_lock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, siginit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
</UL><BR>[Called By]<UL><LI><a href="#[8603c20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_read
<LI><a href="#[9be36ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;signal
</UL><P><STRONG><a name="[9be33f4]"></a>cyg_libc_signals_lock_do_unlock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, siginit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[8603c20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_read
<LI><a href="#[9be36ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;signal
</UL><P><STRONG><a name="[5d5fb14]"></a>cyg_iso_c_start</STRONG> (ARM, 32 bytes, Stack size 0 bytes, cstartup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30bfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::resume()
</UL><BR>[Called By]<UL><LI><a href="#[8a908a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
</UL><P><STRONG><a name="[85605b8]"></a>_sys_exit</STRONG> (ARM, 4 bytes, Stack size 0 bytes, cstartup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74766bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_exit
</UL><BR>[Called By]<UL><LI><a href="#[8f6b190]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__32__rt_raise
</UL><P><STRONG><a name="[8560548]"></a>_ttywrch</STRONG> (ARM, 4 bytes, Stack size 0 bytes, cstartup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85604dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;putchar
</UL><BR>[Called By]<UL><LI><a href="#[8f6a700]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__default_signal_handler
</UL><P><STRONG><a name="[8560464]"></a>_sys_command_string</STRONG> (ARM, 8 bytes, Stack size 0 bytes, cstartup.o(.text), UNUSED)
<P><STRONG><a name="[85603e4]"></a>__user_initial_stackheap</STRONG> (ARM, 12 bytes, Stack size 0 bytes, cstartup.o(.text), UNUSED)
<P><STRONG><a name="[5d5f800]"></a>cyg_start</STRONG> (ARM, 24 bytes, Stack size 8 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85ae594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_prestart
<LI><a href="#[85ae51c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_package_start
<LI><a href="#[85ae4a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_user_start
<LI><a href="#[4c3126c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::start()
</UL><BR>[Called By]<UL><LI><a href="#[5d5f3cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;start
</UL><P><STRONG><a name="[5d87ca0]"></a>getprotobyname</STRONG> (ARM, 80 bytes, Stack size 16 bytes, getproto.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><BR>[Called By]<UL><LI><a href="#[5d87d8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getaddrinfo
</UL><P><STRONG><a name="[5d87d14]"></a>getprotobynumber</STRONG> (ARM, 68 bytes, Stack size 8 bytes, getproto.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><BR>[Called By]<UL><LI><a href="#[5d87d8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getaddrinfo
</UL><P><STRONG><a name="[5d87c30]"></a>inet_pton</STRONG> (ARM, 276 bytes, Stack size 40 bytes, inet_pton.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><BR>[Called By]<UL><LI><a href="#[5d87d8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getaddrinfo
</UL><P><STRONG><a name="[863ecb0]"></a>soisconnecting</STRONG> (ARM, 20 bytes, Stack size 0 bytes, uipc_socket2.o(.text))
<BR>[Called By]<UL><LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
</UL><P><STRONG><a name="[863ec40]"></a>sowakeup</STRONG> (ARM, 56 bytes, Stack size 8 bytes, uipc_socket2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[863ebd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;selwakeup
<LI><a href="#[7a714e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_wakeup
</UL><BR>[Called By]<UL><LI><a href="#[7ace674]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soisconnected
<LI><a href="#[863ea78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soisdisconnecting
<LI><a href="#[863ea00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soisdisconnected
<LI><a href="#[863e768]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sonewconn1
<LI><a href="#[863e688]">&lt&lt</a>&nbsp;&nbsp;&nbsp;socantsendmore
<LI><a href="#[863e614]">&lt&lt</a>&nbsp;&nbsp;&nbsp;socantrcvmore
<LI><a href="#[7ace994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;raw_input
<LI><a href="#[86f69f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[8b29ae4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_notify
<LI><a href="#[8696dbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_input
<LI><a href="#[8b82be0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_reass
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[8ba18c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_notify
</UL><P><STRONG><a name="[863eb60]"></a>soqinsque</STRONG> (ARM, 116 bytes, Stack size 0 bytes, uipc_socket2.o(.text))
<BR>[Called By]<UL><LI><a href="#[7ace674]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soisconnected
<LI><a href="#[863e768]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sonewconn1
</UL><P><STRONG><a name="[863eaf0]"></a>soqremque</STRONG> (ARM, 124 bytes, Stack size 0 bytes, uipc_socket2.o(.text))
<BR>[Called By]<UL><LI><a href="#[7ace674]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soisconnected
<LI><a href="#[863e768]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sonewconn1
<LI><a href="#[86729a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sofree
<LI><a href="#[8aa4bc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soclose
<LI><a href="#[8b1cba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_accept
</UL><P><STRONG><a name="[7ace674]"></a>soisconnected</STRONG> (ARM, 192 bytes, Stack size 16 bytes, uipc_socket2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[863eaf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soqremque
<LI><a href="#[863eb60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soqinsque
<LI><a href="#[863ec40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sowakeup
<LI><a href="#[7a714e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_wakeup
</UL><BR>[Called By]<UL><LI><a href="#[7ace838]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_usrreq
<LI><a href="#[86f68a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_usrreq
<LI><a href="#[86f634c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_usrreq
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL><P><STRONG><a name="[863ea78]"></a>soisdisconnecting</STRONG> (ARM, 88 bytes, Stack size 8 bytes, uipc_socket2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a714e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_wakeup
<LI><a href="#[863ec40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sowakeup
</UL><BR>[Called By]<UL><LI><a href="#[8bcd608]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_disconnect
</UL><P><STRONG><a name="[863ea00]"></a>soisdisconnected</STRONG> (ARM, 88 bytes, Stack size 8 bytes, uipc_socket2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a714e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_wakeup
<LI><a href="#[863ec40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sowakeup
</UL><BR>[Called By]<UL><LI><a href="#[7ace6e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;raw_usrreq
<LI><a href="#[86f68a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_usrreq
<LI><a href="#[86f634c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_usrreq
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[8b82af8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[8bcd67c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrclosed
</UL><P><STRONG><a name="[863e994]"></a>sbdrop</STRONG> (ARM, 636 bytes, Stack size 40 bytes, uipc_socket2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[5138c98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_free
</UL><BR>[Called By]<UL><LI><a href="#[863e928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbflush
<LI><a href="#[863e8b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbrelease
<LI><a href="#[863e7d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soreserve
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL><P><STRONG><a name="[863e928]"></a>sbflush</STRONG> (ARM, 112 bytes, Stack size 8 bytes, uipc_socket2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[863e994]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbdrop
</UL><BR>[Called By]<UL><LI><a href="#[8bcd608]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_disconnect
</UL><P><STRONG><a name="[863e8b8]"></a>sbrelease</STRONG> (ARM, 100 bytes, Stack size 8 bytes, uipc_socket2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[863e994]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbdrop
</UL><BR>[Called By]<UL><LI><a href="#[8aa4e60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sorflush
<LI><a href="#[86729a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sofree
</UL><P><STRONG><a name="[863e848]"></a>sbreserve</STRONG> (ARM, 92 bytes, Stack size 4 bytes, uipc_socket2.o(.text))
<BR>[Called By]<UL><LI><a href="#[863e7d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soreserve
<LI><a href="#[8aa48bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sosetopt
<LI><a href="#[8b829a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_mss
</UL><P><STRONG><a name="[863e7d8]"></a>soreserve</STRONG> (ARM, 204 bytes, Stack size 16 bytes, uipc_socket2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[863e848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbreserve
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[863e994]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbdrop
</UL><BR>[Called By]<UL><LI><a href="#[863e768]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sonewconn1
<LI><a href="#[7ace758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;raw_attach
<LI><a href="#[86f68a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_usrreq
<LI><a href="#[86f634c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_usrreq
<LI><a href="#[8bcd598]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_attach
</UL><P><STRONG><a name="[863e768]"></a>sonewconn1</STRONG> (ARM, 516 bytes, Stack size 24 bytes, uipc_socket2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[863e7d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soreserve
<LI><a href="#[863eb60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soqinsque
<LI><a href="#[863eaf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soqremque
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[863ec40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sowakeup
<LI><a href="#[7a714e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_wakeup
</UL><BR>[Called By]<UL><LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL><P><STRONG><a name="[863e688]"></a>socantsendmore</STRONG> (ARM, 20 bytes, Stack size 0 bytes, uipc_socket2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[863ec40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sowakeup
</UL><BR>[Called By]<UL><LI><a href="#[7ace6e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;raw_usrreq
<LI><a href="#[86f68a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_usrreq
<LI><a href="#[86f634c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_usrreq
<LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
</UL><P><STRONG><a name="[863e614]"></a>socantrcvmore</STRONG> (ARM, 64 bytes, Stack size 8 bytes, uipc_socket2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[863ec40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sowakeup
</UL><BR>[Called By]<UL><LI><a href="#[8aa4e60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sorflush
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL><P><STRONG><a name="[863e5a8]"></a>sbwait</STRONG> (ARM, 28 bytes, Stack size 0 bytes, uipc_socket2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a71478]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_tsleep
</UL><BR>[Called By]<UL><LI><a href="#[8aa4a0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sosend
<LI><a href="#[8aa499c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soreceive
</UL><P><STRONG><a name="[863e53c]"></a>sb_lock</STRONG> (ARM, 100 bytes, Stack size 16 bytes, uipc_socket2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a71478]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_tsleep
</UL><P><STRONG><a name="[863e4d0]"></a>sblock</STRONG> (ARM, 156 bytes, Stack size 16 bytes, uipc_socket2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c31164]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_safe_lock
<LI><a href="#[7a71478]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_tsleep
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Called By]<UL><LI><a href="#[8aa4e60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sorflush
<LI><a href="#[8aa4a0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sosend
<LI><a href="#[8aa499c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soreceive
</UL><P><STRONG><a name="[863e460]"></a>sbunlock</STRONG> (ARM, 56 bytes, Stack size 8 bytes, uipc_socket2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[7a714e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_wakeup
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Called By]<UL><LI><a href="#[8aa4e60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sorflush
<LI><a href="#[8aa4a0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sosend
<LI><a href="#[8aa499c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soreceive
</UL><P><STRONG><a name="[863e3f0]"></a>sbcompress</STRONG> (ARM, 388 bytes, Stack size 24 bytes, uipc_socket2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[863e37c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbappendrecord
<LI><a href="#[863e30c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbappend
<LI><a href="#[863e29c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbinsertoob
</UL><P><STRONG><a name="[863e37c]"></a>sbappendrecord</STRONG> (ARM, 164 bytes, Stack size 0 bytes, uipc_socket2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[863e3f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbcompress
</UL><BR>[Called By]<UL><LI><a href="#[863e30c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbappend
</UL><P><STRONG><a name="[863e30c]"></a>sbappend</STRONG> (ARM, 80 bytes, Stack size 0 bytes, uipc_socket2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[863e37c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbappendrecord
<LI><a href="#[863e3f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbcompress
</UL><BR>[Called By]<UL><LI><a href="#[8b82be0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_reass
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
</UL><P><STRONG><a name="[863e29c]"></a>sbinsertoob</STRONG> (ARM, 200 bytes, Stack size 0 bytes, uipc_socket2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[863e3f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbcompress
</UL><P><STRONG><a name="[863e228]"></a>sbappendaddr</STRONG> (ARM, 424 bytes, Stack size 32 bytes, uipc_socket2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183de4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retry
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
</UL><BR>[Called By]<UL><LI><a href="#[7ace994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;raw_input
<LI><a href="#[86f69f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[8696dbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_input
</UL><P><STRONG><a name="[863e1b4]"></a>sbappendcontrol</STRONG> (ARM, 272 bytes, Stack size 24 bytes, uipc_socket2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
</UL><P><STRONG><a name="[863e140]"></a>sbdroprecord</STRONG> (ARM, 268 bytes, Stack size 32 bytes, uipc_socket2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[5138c98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_free
</UL><BR>[Called By]<UL><LI><a href="#[8aa499c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soreceive
</UL><P><STRONG><a name="[863e0cc]"></a>sbcreatecontrol</STRONG> (ARM, 348 bytes, Stack size 40 bytes, uipc_socket2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[516d2f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_get
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5183d74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_clalloc
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
</UL><P><STRONG><a name="[7ace758]"></a>raw_attach</STRONG> (ARM, 116 bytes, Stack size 16 bytes, raw_cb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[863e7d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soreserve
</UL><BR>[Called By]<UL><LI><a href="#[7ace838]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_usrreq
<LI><a href="#[7ace6e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;raw_usrreq
</UL><P><STRONG><a name="[8672a10]"></a>raw_detach</STRONG> (ARM, 64 bytes, Stack size 8 bytes, raw_cb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86729a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sofree
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><BR>[Called By]<UL><LI><a href="#[7ace6e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;raw_usrreq
</UL><P><STRONG><a name="[8672930]"></a>raw_disconnect</STRONG> (ARM, 76 bytes, Stack size 8 bytes, raw_cb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86729a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sofree
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><BR>[Called By]<UL><LI><a href="#[7ace6e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;raw_usrreq
</UL><P><STRONG><a name="[7ace7c8]"></a>raw_init</STRONG> (ARM, 16 bytes, Stack size 0 bytes, raw_usrreq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rtsock.o(.data)
</UL><P><STRONG><a name="[7ace994]"></a>raw_input</STRONG> (ARM, 396 bytes, Stack size 56 bytes, raw_usrreq.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[743b118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcmp
<LI><a href="#[7a915fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_copym
<LI><a href="#[863e228]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbappendaddr
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[863ec40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sowakeup
</UL><BR>[Called By]<UL><LI><a href="#[7ace920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_output
<LI><a href="#[516da08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_missmsg
<LI><a href="#[7ace440]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_ifmsg
<LI><a href="#[516d214]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_newaddrmsg
</UL><BR>[Address Reference Count : 1]<UL><LI> rtsock.o(.data)
</UL><P><STRONG><a name="[7ace8ac]"></a>raw_ctlinput</STRONG> (ARM, 28 bytes, Stack size 0 bytes, raw_usrreq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rtsock.o(.data)
</UL><P><STRONG><a name="[7ace6e8]"></a>raw_usrreq</STRONG> (ARM, 512 bytes, Stack size 24 bytes, raw_usrreq.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7ace758]">&gt&gt</a>&nbsp;&nbsp;&nbsp;raw_attach
<LI><a href="#[8672a10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;raw_detach
<LI><a href="#[8672930]">&gt&gt</a>&nbsp;&nbsp;&nbsp;raw_disconnect
<LI><a href="#[863ea00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soisdisconnected
<LI><a href="#[863e688]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socantsendmore
<LI><a href="#[86729a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sofree
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Called By]<UL><LI><a href="#[7ace838]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_usrreq
</UL><P><STRONG><a name="[8696e9c]"></a>igmp_init</STRONG> (ARM, 20 bytes, Stack size 0 bytes, igmp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[7ad5a04]"></a>rti_delete</STRONG> (ARM, 72 bytes, Stack size 0 bytes, igmp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><BR>[Called By]<UL><LI><a href="#[7ad5a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_detach
</UL><P><STRONG><a name="[8696e2c]"></a>igmp_input</STRONG> (ARM, 1868 bytes, Stack size 56 bytes, igmp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[7a913d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_pullup
<LI><a href="#[7b3f874]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_cksum
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[50d9870]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_arc4random
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[8696dbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rip_input
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[8696d48]"></a>igmp_sendpkt</STRONG> (ARM, 464 bytes, Stack size 120 bytes, igmp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183ebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retryhdr
<LI><a href="#[7b3f874]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_cksum
<LI><a href="#[7b4f498]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_output
</UL><BR>[Called By]<UL><LI><a href="#[8696cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_joingroup
<LI><a href="#[8696c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_leavegroup
<LI><a href="#[8696bec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_fasttimo
</UL><P><STRONG><a name="[8696cd4]"></a>igmp_joingroup</STRONG> (ARM, 248 bytes, Stack size 24 bytes, igmp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[8696d48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;igmp_sendpkt
<LI><a href="#[50d9870]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_arc4random
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[869e3fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_addmulti
</UL><P><STRONG><a name="[8696c60]"></a>igmp_leavegroup</STRONG> (ARM, 96 bytes, Stack size 0 bytes, igmp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8696d48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;igmp_sendpkt
</UL><BR>[Called By]<UL><LI><a href="#[869e238]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_delmulti
</UL><P><STRONG><a name="[8696bec]"></a>igmp_fasttimo</STRONG> (ARM, 244 bytes, Stack size 32 bytes, igmp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[8696d48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;igmp_sendpkt
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[8696b78]"></a>igmp_slowtimo</STRONG> (ARM, 80 bytes, Stack size 8 bytes, igmp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[869e54c]"></a>in_localaddr</STRONG> (ARM, 124 bytes, Stack size 0 bytes, in.o(.text))
<BR>[Called By]<UL><LI><a href="#[8b829a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_mss
</UL><P><STRONG><a name="[7b4f578]"></a>in_canforward</STRONG> (ARM, 56 bytes, Stack size 0 bytes, in.o(.text))
<BR>[Called By]<UL><LI><a href="#[7b4f5ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_forward
<LI><a href="#[86fd02c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_reflect
</UL><P><STRONG><a name="[869e4dc]"></a>in_socktrim</STRONG> (ARM, 64 bytes, Stack size 0 bytes, in.o(.text), UNUSED)
<P><STRONG><a name="[869e46c]"></a>in_ifscrub</STRONG> (ARM, 84 bytes, Stack size 8 bytes, in.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d360]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtinit
</UL><BR>[Called By]<UL><LI><a href="#[869e38c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_ifinit
<LI><a href="#[869e31c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_control
</UL><P><STRONG><a name="[869e3fc]"></a>in_addmulti</STRONG> (ARM, 424 bytes, Stack size 56 bytes, in.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[8696cd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;igmp_joingroup
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><BR>[Called By]<UL><LI><a href="#[869e38c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_ifinit
<LI><a href="#[872a1cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_setmoptions
</UL><P><STRONG><a name="[869e38c]"></a>in_ifinit</STRONG> (ARM, 552 bytes, Stack size 72 bytes, in.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[869e46c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_ifscrub
<LI><a href="#[516d360]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtinit
<LI><a href="#[869e3fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_addmulti
</UL><BR>[Called By]<UL><LI><a href="#[869e31c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_control
</UL><P><STRONG><a name="[869e31c]"></a>in_control</STRONG> (ARM, 1920 bytes, Stack size 56 bytes, in.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[869e90c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_lifaddr_ioctl
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[516d360]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtinit
<LI><a href="#[869e46c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_ifscrub
<LI><a href="#[516dcb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifafree
<LI><a href="#[869e38c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_ifinit
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[869e90c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_lifaddr_ioctl
<LI><a href="#[86f68a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_usrreq
<LI><a href="#[86f634c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_usrreq
<LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
</UL><P><STRONG><a name="[869e2a8]"></a>in_broadcast</STRONG> (ARM, 288 bytes, Stack size 4 bytes, in.o(.text))
<BR>[Called By]<UL><LI><a href="#[7b4f498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[86f69f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
</UL><P><STRONG><a name="[869e238]"></a>in_delmulti</STRONG> (ARM, 136 bytes, Stack size 48 bytes, in.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[8696c60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;igmp_leavegroup
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[872a1cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_setmoptions
<LI><a href="#[86d76d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_freemoptions
</UL><P><STRONG><a name="[7b3f874]"></a>in_cksum</STRONG> (ARM, 648 bytes, Stack size 24 bytes, in_cksum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[7b3f8e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipv4_input
<LI><a href="#[8696e2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_input
<LI><a href="#[8696d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_sendpkt
<LI><a href="#[86fd0a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_send
<LI><a href="#[7b4f508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_error
<LI><a href="#[86f62dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[7b4f498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[86f69f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[8b19e24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_output
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[8b82684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_respond
<LI><a href="#[8b827d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL><P><STRONG><a name="[86d7bcc]"></a>in_pcbinit</STRONG> (ARM, 52 bytes, Stack size 8 bytes, in_pcb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86d7b5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hashinit
</UL><BR>[Called By]<UL><LI><a href="#[86f6830]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_init
<LI><a href="#[86f626c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_init
<LI><a href="#[86f65f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_init
</UL><P><STRONG><a name="[86d7ae8]"></a>in_baddynamic</STRONG> (ARM, 92 bytes, Stack size 0 bytes, in_pcb.o(.text))
<BR>[Called By]<UL><LI><a href="#[86d7920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbbind
</UL><P><STRONG><a name="[86d7a78]"></a>in_pcballoc</STRONG> (ARM, 460 bytes, Stack size 16 bytes, in_pcb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[516d66c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splnet
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[86f68a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_usrreq
<LI><a href="#[86f634c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_usrreq
<LI><a href="#[8bcd598]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_attach
</UL><P><STRONG><a name="[86d7a04]"></a>in_pcbrehash</STRONG> (ARM, 348 bytes, Stack size 16 bytes, in_pcb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d66c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splnet
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[86d7920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbbind
<LI><a href="#[86d77c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbconnect
<LI><a href="#[86d7660]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbdisconnect
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL><P><STRONG><a name="[86d7990]"></a>in_pcblookup</STRONG> (ARM, 276 bytes, Stack size 24 bytes, in_pcb.o(.text))
<BR>[Called By]<UL><LI><a href="#[86d7920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbbind
<LI><a href="#[86f69f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[8bcd528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_ident
</UL><P><STRONG><a name="[86d7920]"></a>in_pcbbind</STRONG> (ARM, 1120 bytes, Stack size 64 bytes, in_pcb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b3faa4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_iawithaddr
<LI><a href="#[86d7990]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcblookup
<LI><a href="#[50d9870]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_arc4random
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[86d7ae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_baddynamic
<LI><a href="#[86d7a04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbrehash
</UL><BR>[Called By]<UL><LI><a href="#[86d77c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbconnect
<LI><a href="#[86f68a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_usrreq
<LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
</UL><P><STRONG><a name="[86d78a8]"></a>in_pcbhashlookup</STRONG> (ARM, 228 bytes, Stack size 12 bytes, in_pcb.o(.text))
<BR>[Called By]<UL><LI><a href="#[86d77c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbconnect
<LI><a href="#[86f69f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[8bcd528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_ident
</UL><P><STRONG><a name="[86d7834]"></a>in_selectsrc</STRONG> (ARM, 468 bytes, Stack size 40 bytes, in_pcb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516dbcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtfree
<LI><a href="#[516d58c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtalloc
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[516d8ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithdstaddr
<LI><a href="#[516d7c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithnet
</UL><BR>[Called By]<UL><LI><a href="#[86d77c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbconnect
</UL><P><STRONG><a name="[86d77c0]"></a>in_pcbconnect</STRONG> (ARM, 568 bytes, Stack size 32 bytes, in_pcb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86d7834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_selectsrc
<LI><a href="#[86d78a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbhashlookup
<LI><a href="#[86d7920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbbind
<LI><a href="#[86d7a04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbrehash
</UL><BR>[Called By]<UL><LI><a href="#[8b19e24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_output
<LI><a href="#[86f68a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_usrreq
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
</UL><P><STRONG><a name="[86d774c]"></a>in_pcbdetach</STRONG> (ARM, 160 bytes, Stack size 8 bytes, in_pcb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86729a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sofree
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[516dbcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtfree
<LI><a href="#[86d76d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_freemoptions
<LI><a href="#[516d66c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splnet
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><BR>[Called By]<UL><LI><a href="#[86d7660]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbdisconnect
<LI><a href="#[86f68a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_usrreq
<LI><a href="#[86f634c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_usrreq
<LI><a href="#[8b82af8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[8bcd598]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_attach
</UL><P><STRONG><a name="[86d7660]"></a>in_pcbdisconnect</STRONG> (ARM, 56 bytes, Stack size 8 bytes, in_pcb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86d7a04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbrehash
<LI><a href="#[86d774c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbdetach
</UL><BR>[Called By]<UL><LI><a href="#[8b19e24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_output
<LI><a href="#[86f68a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_usrreq
<LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
</UL><P><STRONG><a name="[86d75ec]"></a>in_setsockaddr</STRONG> (ARM, 88 bytes, Stack size 16 bytes, in_pcb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
</UL><BR>[Called By]<UL><LI><a href="#[86f68a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_usrreq
<LI><a href="#[86f634c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_usrreq
<LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
</UL><P><STRONG><a name="[86d7578]"></a>in_setpeeraddr</STRONG> (ARM, 88 bytes, Stack size 16 bytes, in_pcb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
</UL><BR>[Called By]<UL><LI><a href="#[86f68a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_usrreq
<LI><a href="#[86f634c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_usrreq
<LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
</UL><P><STRONG><a name="[86d7504]"></a>in_pcbnotify</STRONG> (ARM, 192 bytes, Stack size 40 bytes, in_pcb.o(.text))
<BR>[Called By]<UL><LI><a href="#[86f6984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_ctlinput
<LI><a href="#[86f674c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_ctlinput
</UL><P><STRONG><a name="[86d7490]"></a>in_pcbnotifyall</STRONG> (ARM, 140 bytes, Stack size 24 bytes, in_pcb.o(.text))
<BR>[Called By]<UL><LI><a href="#[86f6984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_ctlinput
<LI><a href="#[86f674c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_ctlinput
</UL><P><STRONG><a name="[86d7420]"></a>in_losing</STRONG> (ARM, 160 bytes, Stack size 64 bytes, in_pcb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[516da08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rt_missmsg
<LI><a href="#[516da78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[516dbcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtfree
</UL><BR>[Called By]<UL><LI><a href="#[8bc5600]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_timers
</UL><P><STRONG><a name="[86d73b0]"></a>in_rtchange</STRONG> (ARM, 36 bytes, Stack size 8 bytes, in_pcb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516dbcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtfree
</UL><BR>[Address Reference Count : 2]<UL><LI> udp_usrreq.o(.text)
<LI> tcp_subr.o(.text)
</UL><P><STRONG><a name="[86fd0a0]"></a>icmp_send</STRONG> (ARM, 160 bytes, Stack size 32 bytes, ip_icmp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b3f874]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_cksum
<LI><a href="#[7b4f498]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_output
</UL><BR>[Called By]<UL><LI><a href="#[86fd02c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_reflect
</UL><P><STRONG><a name="[86fd02c]"></a>icmp_reflect</STRONG> (ARM, 784 bytes, Stack size 40 bytes, ip_icmp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b4f578]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_canforward
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[516d74c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifaof_ifpforaddr
<LI><a href="#[7b3f724]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_srcroute
<LI><a href="#[7a91748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_gethdr
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[86fd0a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;icmp_send
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
</UL><BR>[Called By]<UL><LI><a href="#[7b4f508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_error
<LI><a href="#[86f62dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL><P><STRONG><a name="[7b4f508]"></a>icmp_error</STRONG> (ARM, 804 bytes, Stack size 184 bytes, ip_icmp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a91748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_gethdr
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[7b3f874]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_cksum
<LI><a href="#[86fd02c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;icmp_reflect
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Called By]<UL><LI><a href="#[7b4f5ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_forward
<LI><a href="#[7b3f9c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_dooptions
<LI><a href="#[86f69f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[8696dbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_input
</UL><P><STRONG><a name="[7b3f954]"></a>iptime</STRONG> (ARM, 124 bytes, Stack size 16 bytes, ip_icmp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5138694]">&gt&gt</a>&nbsp;&nbsp;&nbsp;microtime
</UL><BR>[Called By]<UL><LI><a href="#[7b3f9c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_dooptions
</UL><P><STRONG><a name="[86f62dc]"></a>icmp_input</STRONG> (ARM, 1784 bytes, Stack size 56 bytes, ip_icmp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a913d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_pullup
<LI><a href="#[7b3f874]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_cksum
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[5138694]">&gt&gt</a>&nbsp;&nbsp;&nbsp;microtime
<LI><a href="#[516d74c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifaof_ifpforaddr
<LI><a href="#[86fd02c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;icmp_reflect
<LI><a href="#[516d51c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtredirect
<LI><a href="#[7a9fba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pfctlinput
<LI><a href="#[8696dbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rip_input
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[872a2b4]"></a>ip_optcopy</STRONG> (ARM, 164 bytes, Stack size 32 bytes, ip_output.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
</UL><BR>[Called By]<UL><LI><a href="#[7b4f498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_output
</UL><P><STRONG><a name="[7b4f498]"></a>ip_output</STRONG> (ARM, 3088 bytes, Stack size 104 bytes, ip_output.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183ebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retryhdr
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[51383fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ovbcopy
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[516dbcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtfree
<LI><a href="#[516d8ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithdstaddr
<LI><a href="#[516d7c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithnet
<LI><a href="#[516d58c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtalloc
<LI><a href="#[7a915fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_copym
<LI><a href="#[7b3f874]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_cksum
<LI><a href="#[7af42a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;looutput
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[869e2a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_broadcast
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[872a2b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_optcopy
<LI><a href="#[7a91444]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_adj
</UL><BR>[Called By]<UL><LI><a href="#[7b4f5ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_forward
<LI><a href="#[8696d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_sendpkt
<LI><a href="#[86fd0a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_send
<LI><a href="#[8b19e24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_output
<LI><a href="#[86f6430]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_output
<LI><a href="#[8b82684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_respond
<LI><a href="#[8b827d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[872a240]"></a>ip_getmoptions</STRONG> (ARM, 252 bytes, Stack size 16 bytes, ip_output.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d2f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_get
</UL><BR>[Called By]<UL><LI><a href="#[86f6910]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_ctloutput
</UL><P><STRONG><a name="[872a1cc]"></a>ip_setmoptions</STRONG> (ARM, 1184 bytes, Stack size 56 bytes, ip_output.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[516d58c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtalloc
<LI><a href="#[516dbcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtfree
<LI><a href="#[869e3fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_addmulti
<LI><a href="#[869e238]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_delmulti
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><BR>[Called By]<UL><LI><a href="#[86f6910]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_ctloutput
</UL><P><STRONG><a name="[872a15c]"></a>ip_pcbopts</STRONG> (ARM, 320 bytes, Stack size 32 bytes, ip_output.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[51383fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ovbcopy
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
</UL><BR>[Called By]<UL><LI><a href="#[86f6910]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_ctloutput
</UL><P><STRONG><a name="[86f6910]"></a>ip_ctloutput</STRONG> (ARM, 1004 bytes, Stack size 40 bytes, ip_output.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[872a15c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_pcbopts
<LI><a href="#[872a1cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_setmoptions
<LI><a href="#[516d2f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_get
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[872a240]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_getmoptions
</UL><BR>[Called By]<UL><LI><a href="#[86f63bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_ctloutput
<LI><a href="#[86f66d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_ctloutput
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[86d76d8]"></a>ip_freemoptions</STRONG> (ARM, 72 bytes, Stack size 16 bytes, ip_output.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[869e238]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_delmulti
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><BR>[Called By]<UL><LI><a href="#[86d774c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbdetach
</UL><P><STRONG><a name="[872df70]"></a>splxtty</STRONG> (ARM, 44 bytes, Stack size 0 bytes, ppp_io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[872eba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppasyncstart
<LI><a href="#[9ac2f24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppopen
<LI><a href="#[872def8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppclose
<LI><a href="#[9ac27ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppcheck
<LI><a href="#[9ac25d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppread
<LI><a href="#[9ac289c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppwrite
<LI><a href="#[9ac2e34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppptioctl
<LI><a href="#[9ac2734]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppinput
<LI><a href="#[872e964]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppasyncrelinq
<LI><a href="#[872e9d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppasyncctlp
</UL><P><STRONG><a name="[9ac2f24]"></a>cyg_ppp_pppopen</STRONG> (ARM, 200 bytes, Stack size 24 bytes, ppp_io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[872eb3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spltty
<LI><a href="#[9a8a1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppalloc
<LI><a href="#[872df70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;splxtty
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[872efdc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pppgetm
<LI><a href="#[5138620]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getmicrotime
</UL><BR>[Called By]<UL><LI><a href="#[9ac2f98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_establish_ppp
</UL><P><STRONG><a name="[872def8]"></a>cyg_ppp_pppclose</STRONG> (ARM, 80 bytes, Stack size 16 bytes, ppp_io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[872eb3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spltty
<LI><a href="#[872e964]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pppasyncrelinq
<LI><a href="#[9a8a100]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppdealloc
<LI><a href="#[872df70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;splxtty
</UL><BR>[Called By]<UL><LI><a href="#[9ac3540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_die
<LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
</UL><P><STRONG><a name="[9ac27ac]"></a>cyg_ppp_pppcheck</STRONG> (ARM, 144 bytes, Stack size 16 bytes, ppp_io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[872eb3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spltty
<LI><a href="#[872df70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;splxtty
</UL><BR>[Called By]<UL><LI><a href="#[9ac2824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_wait_input
</UL><P><STRONG><a name="[9ac25d0]"></a>cyg_ppp_pppread</STRONG> (ARM, 248 bytes, Stack size 32 bytes, ppp_io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[872eb3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spltty
<LI><a href="#[872df70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;splxtty
<LI><a href="#[51841cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifplock
<LI><a href="#[5184158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifpunlock
<LI><a href="#[872de8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;uiomove
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Called By]<UL><LI><a href="#[9ac2644]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_read_packet
</UL><P><STRONG><a name="[9ac289c]"></a>cyg_ppp_pppwrite</STRONG> (ARM, 592 bytes, Stack size 56 bytes, ppp_io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[872eb3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spltty
<LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183de4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retry
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[872df70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;splxtty
<LI><a href="#[5183d74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_clalloc
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[872de8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;uiomove
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[9a8a270]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppoutput
</UL><BR>[Called By]<UL><LI><a href="#[9ac2a00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_output
</UL><P><STRONG><a name="[9ac2e34]"></a>cyg_ppp_ppptioctl</STRONG> (ARM, 344 bytes, Stack size 24 bytes, ppp_io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[872eb3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spltty
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[872df70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;splxtty
<LI><a href="#[9a8a088]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppioctl
<LI><a href="#[872efdc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pppgetm
</UL><BR>[Called By]<UL><LI><a href="#[9ac2f98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_establish_ppp
<LI><a href="#[9ac2554]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_send_config
<LI><a href="#[9ac2464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_set_xaccm
<LI><a href="#[9ac23e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_recv_config
<LI><a href="#[9ac2370]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ccp_test
<LI><a href="#[9ac22f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ccp_flags_set
<LI><a href="#[9ac2278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ccp_fatal_error
<LI><a href="#[9ac21fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_get_idle_time
<LI><a href="#[9ac2184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifvjcomp
<LI><a href="#[9ac2098]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifnpmode
<LI><a href="#[9ac2024]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifdown
</UL><P><STRONG><a name="[9ac1328]"></a>cyg_ppp_pppstart</STRONG> (ARM, 124 bytes, Stack size 40 bytes, ppp_io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a034a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_get_config
<LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[872eba8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pppasyncstart
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[9ac3ea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_tx_thread
</UL><P><STRONG><a name="[9ac2734]"></a>cyg_ppp_pppinput</STRONG> (ARM, 1740 bytes, Stack size 24 bytes, ppp_io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[872eb3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spltty
<LI><a href="#[872df70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;splxtty
<LI><a href="#[872e1f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ppplogchar
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[9a89da0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppppktin
<LI><a href="#[872efdc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pppgetm
</UL><BR>[Called By]<UL><LI><a href="#[9ac2824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_wait_input
</UL><P><STRONG><a name="[9ac3540]"></a>cyg_ppp_die</STRONG> (ARM, 84 bytes, Stack size 16 bytes, pppd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac32ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_cleanup
<LI><a href="#[9ac2d38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_disestablish_ppp
<LI><a href="#[9ac2ae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_restore_tty
<LI><a href="#[872def8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppclose
<LI><a href="#[9ac3274]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_exit
</UL><BR>[Called By]<UL><LI><a href="#[9ac35b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_init
<LI><a href="#[9ac2c48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_set_up_tty
<LI><a href="#[9ac2644]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_read_packet
<LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
<LI><a href="#[9ac24e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_quit
<LI><a href="#[871a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
<LI><a href="#[8769f54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_novm
</UL><P><STRONG><a name="[874a6d4]"></a>cyg_ppp_vfmtmsg</STRONG> (ARM, 1980 bytes, Stack size 104 bytes, pppd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[743f850]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isdigit
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[9ac1f3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ip_ntoa
<LI><a href="#[874a6d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_vfmtmsg
<LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[874a664]">&gt&gt</a>&nbsp;&nbsp;&nbsp;localtime
<LI><a href="#[5773e88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_libc_time_itoa
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[874a6d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_vfmtmsg
<LI><a href="#[8769ee0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fmtmsg
<LI><a href="#[874c9b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pr_log
</UL><P><STRONG><a name="[874a5e8]"></a>cyg_ppp_format_packet</STRONG> (ARM, 280 bytes, Stack size 24 bytes, pppd.o(.text))
<BR>[Called By]<UL><LI><a href="#[9ac2914]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_log_packet
<LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
</UL><P><STRONG><a name="[9ac2914]"></a>cyg_ppp_log_packet</STRONG> (ARM, 116 bytes, Stack size 24 bytes, pppd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[874a5e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_format_packet
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
</UL><BR>[Called By]<UL><LI><a href="#[9ac2a00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_output
<LI><a href="#[8794ca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_input
</UL><P><STRONG><a name="[9ac1bfc]"></a>cyg_pppd_main</STRONG> (ARM, 1644 bytes, Stack size 56 bytes, pppd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac1b80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_options_install
<LI><a href="#[9ac308c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_available
<LI><a href="#[4e4a4f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[9ac35b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_init
<LI><a href="#[874a570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_magic_init
<LI><a href="#[4bba6e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_lookup
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[9ac2c48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_set_up_tty
<LI><a href="#[874a4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat
<LI><a href="#[9ac2f98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_establish_ppp
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[874a484]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_lowerup
<LI><a href="#[874a40c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_open
<LI><a href="#[524b678]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[9ac2824]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_wait_input
<LI><a href="#[9ac3540]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_die
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[9ac2644]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_read_packet
<LI><a href="#[874a390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_lowerdown
<LI><a href="#[874a314]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_link_terminated
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[874a5e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_format_packet
<LI><a href="#[873a390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_sprotrej
<LI><a href="#[871a5b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_close
<LI><a href="#[9ac2cc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_clean_check
<LI><a href="#[9ac2d38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_disestablish_ppp
<LI><a href="#[9ac2ae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_restore_tty
<LI><a href="#[872def8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppclose
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Address Reference Count : 1]<UL><LI> sys-ecos.o(.text)
</UL><P><STRONG><a name="[9ac24e0]"></a>cyg_ppp_quit</STRONG> (ARM, 8 bytes, Stack size 0 bytes, pppd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac3540]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_die
</UL><BR>[Called By]<UL><LI><a href="#[9ac2554]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_send_config
</UL><P><STRONG><a name="[871a4fc]"></a>cyg_ppp_timeout</STRONG> (ARM, 196 bytes, Stack size 24 bytes, pppd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[9ac3540]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_die
<LI><a href="#[524b678]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gettimeofday
</UL><BR>[Called By]<UL><LI><a href="#[8bf24bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_up
<LI><a href="#[8bf02cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LcpEchoCheck
<LI><a href="#[8c2298c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_sauthreq
<LI><a href="#[8c21b70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_upap_authpeer
<LI><a href="#[8c22ea8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_lowerup
<LI><a href="#[8794bb4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_np_up
<LI><a href="#[8c2a76c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_idle
<LI><a href="#[8c497ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_datainput
<LI><a href="#[8c48e14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_rack_timeout
<LI><a href="#[8c6c520]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapSendChallenge
<LI><a href="#[8c6cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapInput
<LI><a href="#[8c6b804]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapSendResponse
<LI><a href="#[8ca6744]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsm_timeout
<LI><a href="#[8ca66d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsm_sconfreq
<LI><a href="#[8794e0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_close
<LI><a href="#[8794ca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_input
<LI><a href="#[8befc30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_protreject
</UL><P><STRONG><a name="[876a044]"></a>cyg_ppp_untimeout</STRONG> (ARM, 72 bytes, Stack size 0 bytes, pppd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[8bf244c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_down
<LI><a href="#[8c22e34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_lowerdown
<LI><a href="#[8c22f1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_protrej
<LI><a href="#[8c22f90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_input
<LI><a href="#[8794ac4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_np_down
<LI><a href="#[8c49dc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_extcode
<LI><a href="#[8c49e30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_down
<LI><a href="#[8c6cabc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapLowerDown
<LI><a href="#[8c6cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapInput
<LI><a href="#[8794d18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_lowerdown
<LI><a href="#[8794e0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_close
<LI><a href="#[8794ca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_input
<LI><a href="#[8befc30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_protreject
</UL><P><STRONG><a name="[8769fc8]"></a>cyg_ppp_print_string</STRONG> (ARM, 248 bytes, Stack size 24 bytes, pppd.o(.text))
<BR>[Called By]<UL><LI><a href="#[8796868]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_printpkt
<LI><a href="#[8bf1ee4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_printpkt
<LI><a href="#[8c22dc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_printpkt
<LI><a href="#[8c49860]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_printpkt
<LI><a href="#[8c6ca48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapPrintPkt
</UL><P><STRONG><a name="[8769f54]"></a>cyg_ppp_novm</STRONG> (ARM, 72 bytes, Stack size 8 bytes, pppd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[9ac3540]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_die
</UL><P><STRONG><a name="[8769ee0]"></a>cyg_ppp_fmtmsg</STRONG> (ARM, 36 bytes, Stack size 24 bytes, pppd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[874a6d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_vfmtmsg
</UL><BR>[Called By]<UL><LI><a href="#[8794ca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_input
</UL><P><STRONG><a name="[9a8a178]"></a>cyg_ppp_sl_compress_init</STRONG> (ARM, 156 bytes, Stack size 16 bytes, slcompress.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
</UL><BR>[Called By]<UL><LI><a href="#[9a8a1f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppalloc
<LI><a href="#[9a8a088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppioctl
</UL><P><STRONG><a name="[9a89f1c]"></a>cyg_ppp_sl_compress_tcp</STRONG> (ARM, 1784 bytes, Stack size 72 bytes, slcompress.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[743b118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcmp
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
</UL><BR>[Called By]<UL><LI><a href="#[9a89f98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_dequeue
</UL><P><STRONG><a name="[9a89e18]"></a>cyg_ppp_sl_uncompress_tcp_core</STRONG> (ARM, 1920 bytes, Stack size 56 bytes, slcompress.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
</UL><BR>[Called By]<UL><LI><a href="#[9a8a5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_inproc
<LI><a href="#[9a89e9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sl_uncompress_tcp
</UL><P><STRONG><a name="[9a89e9c]"></a>cyg_ppp_sl_uncompress_tcp</STRONG> (ARM, 176 bytes, Stack size 40 bytes, slcompress.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9a89e18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sl_uncompress_tcp_core
<LI><a href="#[51383fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ovbcopy
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
</UL><BR>[Called By]<UL><LI><a href="#[9a8a5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_inproc
</UL><P><STRONG><a name="[9ac1f3c]"></a>cyg_ppp_ip_ntoa</STRONG> (ARM, 108 bytes, Stack size 16 bytes, ipcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Called By]<UL><LI><a href="#[9ac1fb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifaddr
<LI><a href="#[874a6d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_vfmtmsg
<LI><a href="#[879677c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_demand_conf
<LI><a href="#[8796f28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_up
</UL><P><STRONG><a name="[85ae51c]"></a>cyg_package_start</STRONG> (ARM, 4 bytes, Stack size 0 bytes, pkgstart.o(.text))
<BR>[Called By]<UL><LI><a href="#[5d5f800]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_start
</UL><P><STRONG><a name="[85ae594]"></a>cyg_prestart</STRONG> (ARM, 4 bytes, Stack size 0 bytes, prestart.o(.text))
<BR>[Called By]<UL><LI><a href="#[5d5f800]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_start
</UL><P><STRONG><a name="[85ae4a8]"></a>cyg_user_start</STRONG> (ARM, 4 bytes, Stack size 0 bytes, userstart.o(.text))
<BR>[Called By]<UL><LI><a href="#[5d5f800]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_start
</UL><P><STRONG><a name="[84c0170]"></a>vfscanf</STRONG> (ARM, 3468 bytes, Stack size 656 bytes, vfscanf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[743f8bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[8a61df0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::bytes_available_to_read()
<LI><a href="#[5c5906c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::refill_read_buffer()
<LI><a href="#[5c58ed4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::peek_byte(unsigned char*)
<LI><a href="#[5c58f5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::read_byte(unsigned char*)
<LI><a href="#[743f778]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isupper
<LI><a href="#[8a61d68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::set_position(unsigned int, int)
<LI><a href="#[8a61cfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ungetc
<LI><a href="#[8a61c88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__softfp_strtod
<LI><a href="#[4f74894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_d2f
</UL><BR>[Called By]<UL><LI><a href="#[5c4982c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vsscanf
</UL><P><STRONG><a name="[8a87d34]"></a>fputc</STRONG> (ARM, 152 bytes, Stack size 24 bytes, fputc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74523d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::write(const unsigned char*, unsigned int, unsigned int*)
<LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
</UL><BR>[Called By]<UL><LI><a href="#[85604dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;putchar
</UL><P><STRONG><a name="[85604dc]"></a>putchar</STRONG> (ARM, 12 bytes, Stack size 0 bytes, fputc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8a87d34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fputc
</UL><BR>[Called By]<UL><LI><a href="#[8560548]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL><P><STRONG><a name="[891db10]"></a>strftime</STRONG> (ARM, 156 bytes, Stack size 32 bytes, strftime.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8a7b628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;do_format(unsigned char, unsigned int, char*, const tm*)
</UL><BR>[Called By]<UL><LI><a href="#[8a7b628]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_format(unsigned char, unsigned int, char*, const tm*)
<LI><a href="#[811935c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;write_access_log
</UL><P><STRONG><a name="[84edca8]"></a>__softfp_floor</STRONG> (ARM, 364 bytes, Stack size 32 bytes, s_floor.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[4f741d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL><BR>[Called By]<UL><LI><a href="#[5cc2994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_rem_pio2
</UL><P><STRONG><a name="[84edd1c]"></a>scalbn</STRONG> (ARM, 344 bytes, Stack size 16 bytes, s_scalbn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[5ce5824]">&gt&gt</a>&nbsp;&nbsp;&nbsp;copysign
</UL><BR>[Called By]<UL><LI><a href="#[5cc2994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_rem_pio2
</UL><P><STRONG><a name="[8aa4e60]"></a>sorflush</STRONG> (ARM, 164 bytes, Stack size 56 bytes, uipc_socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[863e4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sblock
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[863e614]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socantrcvmore
<LI><a href="#[863e460]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbunlock
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[863e8b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbrelease
</UL><BR>[Called By]<UL><LI><a href="#[86729a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sofree
<LI><a href="#[8aa492c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soshutdown
</UL><P><STRONG><a name="[86729a4]"></a>sofree</STRONG> (ARM, 96 bytes, Stack size 8 bytes, uipc_socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[863eaf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soqremque
<LI><a href="#[863e8b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbrelease
<LI><a href="#[8aa4e60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sorflush
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
</UL><BR>[Called By]<UL><LI><a href="#[8672a10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;raw_detach
<LI><a href="#[8672930]">&lt&lt</a>&nbsp;&nbsp;&nbsp;raw_disconnect
<LI><a href="#[7ace6e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;raw_usrreq
<LI><a href="#[86d774c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbdetach
<LI><a href="#[8aa4df0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;socreate
<LI><a href="#[8aa4bc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soclose
</UL><P><STRONG><a name="[8aa4df0]"></a>socreate</STRONG> (ARM, 236 bytes, Stack size 32 bytes, uipc_socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a9fc14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pffindproto
<LI><a href="#[7a9fc84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pffindtype
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[86729a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sofree
</UL><BR>[Called By]<UL><LI><a href="#[8b1c34c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_socket
</UL><P><STRONG><a name="[8aa4d84]"></a>sobind</STRONG> (ARM, 84 bytes, Stack size 24 bytes, uipc_socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[8b1cc88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_bind
</UL><P><STRONG><a name="[8aa4d14]"></a>solisten</STRONG> (ARM, 156 bytes, Stack size 24 bytes, uipc_socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[8b1cb38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_listen
</UL><P><STRONG><a name="[8aa4ca0]"></a>sodisconnect</STRONG> (ARM, 96 bytes, Stack size 16 bytes, uipc_socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[8aa4bc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soclose
<LI><a href="#[8aa4ae8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soconnect
</UL><P><STRONG><a name="[8aa4c34]"></a>soabort</STRONG> (ARM, 36 bytes, Stack size 8 bytes, uipc_socket.o(.text))
<BR>[Called By]<UL><LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL><P><STRONG><a name="[8aa4bc8]"></a>soclose</STRONG> (ARM, 464 bytes, Stack size 32 bytes, uipc_socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[863eaf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soqremque
<LI><a href="#[8aa4ca0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sodisconnect
<LI><a href="#[7a71478]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_tsleep
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[86729a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sofree
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[8b1c57c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_close
</UL><P><STRONG><a name="[8aa4b58]"></a>soaccept</STRONG> (ARM, 136 bytes, Stack size 24 bytes, uipc_socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[8b1cba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_accept
</UL><P><STRONG><a name="[8aa4ae8]"></a>soconnect</STRONG> (ARM, 156 bytes, Stack size 24 bytes, uipc_socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[8aa4ca0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sodisconnect
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[8b1cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_connect
</UL><P><STRONG><a name="[8aa4a78]"></a>soconnect2</STRONG> (ARM, 84 bytes, Stack size 24 bytes, uipc_socket.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><P><STRONG><a name="[8aa4a0c]"></a>sosend</STRONG> (ARM, 1792 bytes, Stack size 80 bytes, uipc_socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[863e4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sblock
<LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[863e460]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbunlock
<LI><a href="#[863e5a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbwait
<LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5183ebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retryhdr
<LI><a href="#[5183de4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retry
<LI><a href="#[5183d74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_clalloc
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[872de8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;uiomove
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Called By]<UL><LI><a href="#[8b1c8fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_sendmsg
<LI><a href="#[8b1c7ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_write
</UL><P><STRONG><a name="[8aa499c]"></a>soreceive</STRONG> (ARM, 2840 bytes, Stack size 96 bytes, uipc_socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d2f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_get
<LI><a href="#[872de8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;uiomove
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[863e4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sblock
<LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[7a915fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_copym
<LI><a href="#[863e460]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbunlock
<LI><a href="#[863e5a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbwait
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[5138c98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_free
<LI><a href="#[863e140]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbdroprecord
</UL><BR>[Called By]<UL><LI><a href="#[8b1c88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_recvmsg
<LI><a href="#[8b1c81c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_read
</UL><P><STRONG><a name="[8aa492c]"></a>soshutdown</STRONG> (ARM, 100 bytes, Stack size 24 bytes, uipc_socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8aa4e60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sorflush
</UL><BR>[Called By]<UL><LI><a href="#[8b1ca54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_shutdown
</UL><P><STRONG><a name="[8aa48bc]"></a>sosetopt</STRONG> (ARM, 704 bytes, Stack size 56 bytes, uipc_socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[863e848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbreserve
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
</UL><BR>[Called By]<UL><LI><a href="#[8b1c96c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_setsockopt
</UL><P><STRONG><a name="[8aa484c]"></a>sogetopt</STRONG> (ARM, 496 bytes, Stack size 24 bytes, uipc_socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d2f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_get
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
</UL><BR>[Called By]<UL><LI><a href="#[8b1c9e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_getsockopt
</UL><P><STRONG><a name="[8aa47d8]"></a>sohasoutofband</STRONG> (ARM, 8 bytes, Stack size 0 bytes, uipc_socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[863ebd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;selwakeup
</UL><BR>[Called By]<UL><LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL><P><STRONG><a name="[872de8c]"></a>uiomove</STRONG> (ARM, 296 bytes, Stack size 32 bytes, kern_subr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[51384d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;copyout
<LI><a href="#[5138468]">&gt&gt</a>&nbsp;&nbsp;&nbsp;copyin
</UL><BR>[Called By]<UL><LI><a href="#[9ac25d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppread
<LI><a href="#[9ac289c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppwrite
<LI><a href="#[8aa4a0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sosend
<LI><a href="#[8aa499c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soreceive
</UL><P><STRONG><a name="[86d7b5c]"></a>hashinit</STRONG> (ARM, 132 bytes, Stack size 24 bytes, kern_subr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
</UL><BR>[Called By]<UL><LI><a href="#[86d7bcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbinit
</UL><P><STRONG><a name="[8b1a640]"></a>sockargs</STRONG> (ARM, 124 bytes, Stack size 24 bytes, tcpip_sockio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d2f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_get
<LI><a href="#[5138468]">&gt&gt</a>&nbsp;&nbsp;&nbsp;copyin
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
</UL><BR>[Called By]<UL><LI><a href="#[8b1cc88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_bind
<LI><a href="#[8b1cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_connect
<LI><a href="#[8b1c8fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bsd_sendmsg
</UL><P><STRONG><a name="[8b1a5d0]"></a>selrecord</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tcpip_sockio.o(.text), UNUSED)
<P><STRONG><a name="[863ebd0]"></a>selwakeup</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tcpip_sockio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ce7650]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_selwakeup
</UL><BR>[Called By]<UL><LI><a href="#[863ec40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sowakeup
<LI><a href="#[8aa47d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sohasoutofband
</UL><P><STRONG><a name="[86f6830]"></a>udp_init</STRONG> (ARM, 16 bytes, Stack size 0 bytes, udp_usrreq.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86d7bcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbinit
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[86f69f8]"></a>udp_input</STRONG> (ARM, 1916 bytes, Stack size 120 bytes, udp_usrreq.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b3f6b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_stripoptions
<LI><a href="#[7a91364]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_pullup2
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7a91444]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_adj
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[7b3f874]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_cksum
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[869e2a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_broadcast
<LI><a href="#[7a915fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_copym
<LI><a href="#[863e228]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbappendaddr
<LI><a href="#[863ec40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sowakeup
<LI><a href="#[86d78a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbhashlookup
<LI><a href="#[86d7990]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcblookup
<LI><a href="#[7b4f508]">&gt&gt</a>&nbsp;&nbsp;&nbsp;icmp_error
<LI><a href="#[516d2f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_get
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[86f6984]"></a>udp_ctlinput</STRONG> (ARM, 244 bytes, Stack size 32 bytes, udp_usrreq.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86d7504]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbnotify
<LI><a href="#[86d7490]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbnotifyall
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[8b19e24]"></a>udp_output</STRONG> (ARM, 700 bytes, Stack size 72 bytes, udp_usrreq.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[86d77c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbconnect
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[7a91668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_prepend
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[7b3f874]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_cksum
<LI><a href="#[7b4f498]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[86d7660]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbdisconnect
</UL><BR>[Called By]<UL><LI><a href="#[86f68a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_usrreq
</UL><P><STRONG><a name="[86f68a0]"></a>udp_usrreq</STRONG> (ARM, 784 bytes, Stack size 32 bytes, udp_usrreq.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7ad568c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifunit
<LI><a href="#[869e31c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_control
<LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[86d7a78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcballoc
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[863e7d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soreserve
<LI><a href="#[86d774c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbdetach
<LI><a href="#[86d7920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbbind
<LI><a href="#[86d77c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbconnect
<LI><a href="#[7ace674]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soisconnected
<LI><a href="#[86d7660]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbdisconnect
<LI><a href="#[863e688]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socantsendmore
<LI><a href="#[8b19e24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;udp_output
<LI><a href="#[863ea00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soisdisconnected
<LI><a href="#[86d75ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_setsockaddr
<LI><a href="#[86d7578]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_setpeeraddr
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[86f626c]"></a>rip_init</STRONG> (ARM, 12 bytes, Stack size 0 bytes, raw_ip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86d7bcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbinit
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[8696dbc]"></a>rip_input</STRONG> (ARM, 504 bytes, Stack size 40 bytes, raw_ip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a915fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_copym
<LI><a href="#[863e228]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbappendaddr
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[863ec40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sowakeup
<LI><a href="#[7b4f508]">&gt&gt</a>&nbsp;&nbsp;&nbsp;icmp_error
</UL><BR>[Called By]<UL><LI><a href="#[8696e2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_input
<LI><a href="#[86f62dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[86f6430]"></a>rip_output</STRONG> (ARM, 644 bytes, Stack size 48 bytes, raw_ip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[7a91668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_prepend
<LI><a href="#[7b4f498]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_output
</UL><BR>[Called By]<UL><LI><a href="#[86f634c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rip_usrreq
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[86f63bc]"></a>rip_ctloutput</STRONG> (ARM, 316 bytes, Stack size 24 bytes, raw_ip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[516d2f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_get
<LI><a href="#[86f6910]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_ctloutput
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[86f634c]"></a>rip_usrreq</STRONG> (ARM, 816 bytes, Stack size 24 bytes, raw_ip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[869e31c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_control
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[863e7d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soreserve
<LI><a href="#[86d7a78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcballoc
<LI><a href="#[863ea00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soisdisconnected
<LI><a href="#[86d774c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbdetach
<LI><a href="#[516d838]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithaddr
<LI><a href="#[7ace674]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soisconnected
<LI><a href="#[863e688]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socantsendmore
<LI><a href="#[86f6430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rip_output
<LI><a href="#[86d75ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_setsockaddr
<LI><a href="#[86d7578]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_setpeeraddr
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[8b82be0]"></a>tcp_reass</STRONG> (ARM, 1232 bytes, Stack size 56 bytes, tcp_input.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[7a91444]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_adj
<LI><a href="#[863e30c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbappend
<LI><a href="#[863ec40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sowakeup
</UL><BR>[Called By]<UL><LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL><P><STRONG><a name="[8b82b68]"></a>tcpdropoldhalfopen</STRONG> (ARM, 180 bytes, Stack size 24 bytes, tcp_input.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d66c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splnet
<LI><a href="#[8b82af8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL><P><STRONG><a name="[8b82a80]"></a>tcp_pulloutofband</STRONG> (ARM, 168 bytes, Stack size 8 bytes, tcp_input.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
</UL><BR>[Called By]<UL><LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL><P><STRONG><a name="[8b82a0c]"></a>tcp_xmit_timer</STRONG> (ARM, 244 bytes, Stack size 0 bytes, tcp_input.o(.text))
<BR>[Called By]<UL><LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL><P><STRONG><a name="[8b829a0]"></a>tcp_mss</STRONG> (ARM, 624 bytes, Stack size 40 bytes, tcp_input.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d58c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtalloc
<LI><a href="#[869e54c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_localaddr
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[863e848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbreserve
</UL><BR>[Called By]<UL><LI><a href="#[8b828bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_dooptions
<LI><a href="#[8b827d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL><P><STRONG><a name="[8b828bc]"></a>tcp_dooptions</STRONG> (ARM, 420 bytes, Stack size 40 bytes, tcp_input.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[8b829a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_mss
</UL><BR>[Called By]<UL><LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL><P><STRONG><a name="[86f67c0]"></a>tcp_input</STRONG> (ARM, 7964 bytes, Stack size 128 bytes, tcp_input.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[7a91364]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_pullup2
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[7b3f874]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_cksum
<LI><a href="#[86d78a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbhashlookup
<LI><a href="#[86d7990]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcblookup
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[863e768]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sonewconn1
<LI><a href="#[8b82b68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcpdropoldhalfopen
<LI><a href="#[7b3f724]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_srcroute
<LI><a href="#[86d7a04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbrehash
<LI><a href="#[8b828bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_dooptions
<LI><a href="#[8b82a0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_xmit_timer
<LI><a href="#[863e994]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbdrop
<LI><a href="#[863ec40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sowakeup
<LI><a href="#[8b827d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[7a91444]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_adj
<LI><a href="#[863e30c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbappend
<LI><a href="#[516d2f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_get
<LI><a href="#[86d77c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbconnect
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[8b82764]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_template
<LI><a href="#[8b826f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_drop
<LI><a href="#[50d9870]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_arc4random
<LI><a href="#[7ace674]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soisconnected
<LI><a href="#[8b82be0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_reass
<LI><a href="#[8b82af8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[8b82684]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_respond
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[863ea00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soisdisconnected
<LI><a href="#[8b8259c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_canceltimers
<LI><a href="#[8aa4c34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soabort
<LI><a href="#[8aa47d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sohasoutofband
<LI><a href="#[8b82a80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_pulloutofband
<LI><a href="#[863e614]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socantrcvmore
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[86f65f8]"></a>tcp_init</STRONG> (ARM, 40 bytes, Stack size 8 bytes, tcp_subr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[50d9870]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_arc4random
<LI><a href="#[86d7bcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbinit
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[8b82764]"></a>tcp_template</STRONG> (ARM, 568 bytes, Stack size 32 bytes, tcp_subr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d2f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_get
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5183d74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_clalloc
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
</UL><BR>[Called By]<UL><LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
</UL><P><STRONG><a name="[8b82684]"></a>tcp_respond</STRONG> (ARM, 748 bytes, Stack size 48 bytes, tcp_subr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a91748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_gethdr
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[7b3f874]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_cksum
<LI><a href="#[7b4f498]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_output
</UL><BR>[Called By]<UL><LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[8bc5600]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_timers
</UL><P><STRONG><a name="[8ba1938]"></a>tcp_newtcpcb</STRONG> (ARM, 188 bytes, Stack size 16 bytes, tcp_subr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
</UL><BR>[Called By]<UL><LI><a href="#[8bcd598]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_attach
</UL><P><STRONG><a name="[8b82af8]"></a>tcp_close</STRONG> (ARM, 440 bytes, Stack size 24 bytes, tcp_subr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[863ea00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soisdisconnected
<LI><a href="#[86d774c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbdetach
</UL><BR>[Called By]<UL><LI><a href="#[8b82b68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcpdropoldhalfopen
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[8b826f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_drop
<LI><a href="#[8bc5600]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_timers
<LI><a href="#[8bcd67c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrclosed
<LI><a href="#[8bcd608]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_disconnect
</UL><P><STRONG><a name="[8b826f4]"></a>tcp_drop</STRONG> (ARM, 236 bytes, Stack size 24 bytes, tcp_subr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8b827d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[8b82af8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_close
</UL><BR>[Called By]<UL><LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[8bc5600]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_timers
<LI><a href="#[8bcd608]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_disconnect
<LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
</UL><P><STRONG><a name="[86f64a0]"></a>tcp_drain</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tcp_subr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[8ba18c8]"></a>tcp_notify</STRONG> (ARM, 156 bytes, Stack size 8 bytes, tcp_subr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a714e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_wakeup
<LI><a href="#[863ec40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sowakeup
</UL><BR>[Address Reference Count : 1]<UL><LI> tcp_subr.o(.text)
</UL><P><STRONG><a name="[8ba1858]"></a>tcp_quench</STRONG> (ARM, 20 bytes, Stack size 0 bytes, tcp_subr.o(.text))
<BR>[Called By]<UL><LI><a href="#[8b827d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL><BR>[Address Reference Count : 1]<UL><LI> tcp_subr.o(.text)
</UL><P><STRONG><a name="[86f674c]"></a>tcp_ctlinput</STRONG> (ARM, 240 bytes, Stack size 32 bytes, tcp_subr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86d7504]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbnotify
<LI><a href="#[86d7490]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbnotifyall
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[86f6584]"></a>tcp_fasttimo</STRONG> (ARM, 112 bytes, Stack size 24 bytes, tcp_timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[8b827d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[86f6510]"></a>tcp_slowtimo</STRONG> (ARM, 332 bytes, Stack size 32 bytes, tcp_timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[86f6668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
<LI><a href="#[50d9870]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_arc4random
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[8b8259c]"></a>tcp_canceltimers</STRONG> (ARM, 32 bytes, Stack size 0 bytes, tcp_timer.o(.text))
<BR>[Called By]<UL><LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL><P><STRONG><a name="[8bc5600]"></a>tcp_timers</STRONG> (ARM, 712 bytes, Stack size 24 bytes, tcp_timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8b82af8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[8b826f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_drop
<LI><a href="#[86d7420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_losing
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[8b827d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[8bc558c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_setpersist
<LI><a href="#[8b82684]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_respond
</UL><BR>[Called By]<UL><LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
</UL><P><STRONG><a name="[8bcd67c]"></a>tcp_usrclosed</STRONG> (ARM, 164 bytes, Stack size 8 bytes, tcp_usrreq.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8b82af8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[863ea00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soisdisconnected
</UL><BR>[Called By]<UL><LI><a href="#[8bcd608]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_disconnect
<LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
</UL><P><STRONG><a name="[8bcd608]"></a>tcp_disconnect</STRONG> (ARM, 132 bytes, Stack size 16 bytes, tcp_usrreq.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8b82af8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[8b826f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_drop
<LI><a href="#[863ea78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soisdisconnecting
<LI><a href="#[863e928]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbflush
<LI><a href="#[8bcd67c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_usrclosed
<LI><a href="#[8b827d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL><BR>[Called By]<UL><LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
</UL><P><STRONG><a name="[8bcd598]"></a>tcp_attach</STRONG> (ARM, 148 bytes, Stack size 16 bytes, tcp_usrreq.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[863e7d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soreserve
<LI><a href="#[86d7a78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcballoc
<LI><a href="#[8ba1938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_newtcpcb
<LI><a href="#[86d774c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbdetach
</UL><BR>[Called By]<UL><LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
</UL><P><STRONG><a name="[86f6668]"></a>tcp_usrreq</STRONG> (ARM, 1316 bytes, Stack size 40 bytes, tcp_usrreq.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[869e31c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_control
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[8bcd598]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_attach
<LI><a href="#[8bcd608]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_disconnect
<LI><a href="#[86d7920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbbind
<LI><a href="#[869e2a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_broadcast
<LI><a href="#[86d77c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbconnect
<LI><a href="#[8b82764]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_template
<LI><a href="#[86d7660]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbdisconnect
<LI><a href="#[863ecb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soisconnecting
<LI><a href="#[50d9870]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_arc4random
<LI><a href="#[8b827d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[86d7578]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_setpeeraddr
<LI><a href="#[863e688]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socantsendmore
<LI><a href="#[8bcd67c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_usrclosed
<LI><a href="#[863e30c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbappend
<LI><a href="#[8b826f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_drop
<LI><a href="#[86d75ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_setsockaddr
<LI><a href="#[8bc5600]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_timers
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
</UL><BR>[Called By]<UL><LI><a href="#[86f6510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_slowtimo
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[86f66d8]"></a>tcp_ctloutput</STRONG> (ARM, 424 bytes, Stack size 40 bytes, tcp_usrreq.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[86f6910]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_ctloutput
<LI><a href="#[516d2f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_get
</UL><BR>[Address Reference Count : 1]<UL><LI> in_proto.o(.data)
</UL><P><STRONG><a name="[8bcd528]"></a>tcp_ident</STRONG> (ARM, 324 bytes, Stack size 80 bytes, tcp_usrreq.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5138468]">&gt&gt</a>&nbsp;&nbsp;&nbsp;copyin
<LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[86d78a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcbhashlookup
<LI><a href="#[86d7990]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_pcblookup
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[51384d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;copyout
</UL><P><STRONG><a name="[874a40c]"></a>cyg_ppp_lcp_open</STRONG> (ARM, 80 bytes, Stack size 0 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8794e84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_open
</UL><BR>[Called By]<UL><LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
</UL><BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[871a5b8]"></a>cyg_ppp_lcp_close</STRONG> (ARM, 76 bytes, Stack size 0 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[874a314]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_link_terminated
<LI><a href="#[8794e0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_close
</UL><BR>[Called By]<UL><LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
<LI><a href="#[8bf2608]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_nakci
<LI><a href="#[8bf24bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_up
<LI><a href="#[8bf02cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LcpEchoCheck
<LI><a href="#[8befac4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_link_established
<LI><a href="#[8c21a74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_peer_fail
<LI><a href="#[8794a4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_np_finished
<LI><a href="#[8c2af5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;network_phase
<LI><a href="#[8c2a6f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_time_expired
<LI><a href="#[8c2a76c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_idle
</UL><BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[874a484]"></a>cyg_ppp_lcp_lowerup</STRONG> (ARM, 156 bytes, Stack size 32 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac2464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_set_xaccm
<LI><a href="#[9ac2554]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_send_config
<LI><a href="#[9ac23e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_recv_config
<LI><a href="#[8794d94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_lowerup
</UL><BR>[Called By]<UL><LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
</UL><BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[874a390]"></a>cyg_ppp_lcp_lowerdown</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8794d18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_lowerdown
</UL><BR>[Called By]<UL><LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
</UL><BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[873a390]"></a>cyg_ppp_lcp_sprotrej</STRONG> (ARM, 60 bytes, Stack size 8 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8befcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_sdata
</UL><BR>[Called By]<UL><LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
</UL><P><STRONG><a name="[874a570]"></a>cyg_ppp_magic_init</STRONG> (ARM, 56 bytes, Stack size 16 bytes, magic.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[524b678]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[9ac1ce4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_get_host_seed
<LI><a href="#[9ac13a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_srand48
</UL><BR>[Called By]<UL><LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
</UL><P><STRONG><a name="[8befbbc]"></a>cyg_ppp_magic</STRONG> (ARM, 4 bytes, Stack size 0 bytes, magic.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac1414]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_mrand48
</UL><BR>[Called By]<UL><LI><a href="#[8bf27c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_resetci
<LI><a href="#[8bf2608]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_nakci
<LI><a href="#[8bf2528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_reqci
</UL><P><STRONG><a name="[8c21bec]"></a>cyg_ppp_upap_authwithpeer</STRONG> (ARM, 100 bytes, Stack size 16 bytes, upap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8c2298c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;upap_sauthreq
</UL><BR>[Called By]<UL><LI><a href="#[8befac4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_link_established
</UL><P><STRONG><a name="[8c21b70]"></a>cyg_ppp_upap_authpeer</STRONG> (ARM, 64 bytes, Stack size 0 bytes, upap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[871a4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
</UL><BR>[Called By]<UL><LI><a href="#[8befac4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_link_established
</UL><P><STRONG><a name="[8bef9d0]"></a>cyg_ppp_link_required</STRONG> (ARM, 4 bytes, Stack size 0 bytes, auth.o(.text))
<BR>[Called By]<UL><LI><a href="#[8bf23d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_starting
</UL><P><STRONG><a name="[874a314]"></a>cyg_ppp_link_terminated</STRONG> (ARM, 180 bytes, Stack size 8 bytes, auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
</UL><BR>[Called By]<UL><LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
<LI><a href="#[8bf2364]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_finished
<LI><a href="#[871a5b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_close
</UL><P><STRONG><a name="[8befa4c]"></a>cyg_ppp_link_down</STRONG> (ARM, 176 bytes, Stack size 24 bytes, auth.o(.text))
<BR>[Called By]<UL><LI><a href="#[8bf244c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_down
</UL><P><STRONG><a name="[8befac4]"></a>cyg_ppp_link_established</STRONG> (ARM, 488 bytes, Stack size 32 bytes, auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[871a5b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_close
<LI><a href="#[8c29a34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ChapAuthPeer
<LI><a href="#[8c21b70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_upap_authpeer
<LI><a href="#[8c299b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ChapAuthWithPeer
<LI><a href="#[8c21bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_upap_authwithpeer
<LI><a href="#[8c2af5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;network_phase
</UL><BR>[Called By]<UL><LI><a href="#[8bf24bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_up
</UL><P><STRONG><a name="[8c21a74]"></a>cyg_ppp_auth_peer_fail</STRONG> (ARM, 32 bytes, Stack size 0 bytes, auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[871a5b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_close
</UL><BR>[Called By]<UL><LI><a href="#[8c22f1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_protrej
<LI><a href="#[8c22f90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_input
<LI><a href="#[8c225d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_reqtimeout
<LI><a href="#[8c6cba0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapProtocolReject
<LI><a href="#[8c6cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapInput
<LI><a href="#[8c6c4a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapChallengeTimeout
</UL><P><STRONG><a name="[8c21978]"></a>cyg_ppp_auth_peer_success</STRONG> (ARM, 180 bytes, Stack size 24 bytes, auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[8c2af5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;network_phase
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
</UL><BR>[Called By]<UL><LI><a href="#[8c22f90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_input
<LI><a href="#[8c6cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapInput
</UL><P><STRONG><a name="[8c21af0]"></a>cyg_ppp_auth_withpeer_fail</STRONG> (ARM, 28 bytes, Stack size 0 bytes, auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Called By]<UL><LI><a href="#[8c22f1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_protrej
<LI><a href="#[8c22f90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_input
<LI><a href="#[8c22918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_timeout
<LI><a href="#[8c6cba0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapProtocolReject
<LI><a href="#[8c6cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapInput
</UL><P><STRONG><a name="[8c218f4]"></a>cyg_ppp_auth_withpeer_success</STRONG> (ARM, 120 bytes, Stack size 8 bytes, auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[8c2af5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;network_phase
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Called By]<UL><LI><a href="#[8c22f90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_input
<LI><a href="#[8c6cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapInput
</UL><P><STRONG><a name="[8794bb4]"></a>cyg_ppp_np_up</STRONG> (ARM, 112 bytes, Stack size 8 bytes, auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[871a4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
</UL><BR>[Called By]<UL><LI><a href="#[8796f28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_up
</UL><P><STRONG><a name="[8794ac4]"></a>cyg_ppp_np_down</STRONG> (ARM, 48 bytes, Stack size 0 bytes, auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[876a044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_untimeout
</UL><BR>[Called By]<UL><LI><a href="#[8796eb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_down
</UL><P><STRONG><a name="[8794a4c]"></a>cyg_ppp_np_finished</STRONG> (ARM, 88 bytes, Stack size 0 bytes, auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[871a5b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_close
</UL><BR>[Called By]<UL><LI><a href="#[8796e44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_finished
</UL><P><STRONG><a name="[8c29934]"></a>cyg_ppp_auth_check_options</STRONG> (ARM, 808 bytes, Stack size 16 bytes, auth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4e4a4f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;exit
</UL><P><STRONG><a name="[8befb44]"></a>cyg_ppp_auth_reset</STRONG> (ARM, 168 bytes, Stack size 0 bytes, auth.o(.text))
<BR>[Called By]<UL><LI><a href="#[8bf27c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_resetci
</UL><P><STRONG><a name="[8c219f8]"></a>cyg_ppp_check_passwd</STRONG> (ARM, 8 bytes, Stack size 0 bytes, auth.o(.text))
<BR>[Called By]<UL><LI><a href="#[8c22f90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_input
</UL><P><STRONG><a name="[8c298bc]"></a>cyg_ppp_get_secret</STRONG> (ARM, 48 bytes, Stack size 16 bytes, auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
</UL><BR>[Called By]<UL><LI><a href="#[8c6cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapInput
</UL><P><STRONG><a name="[8794c28]"></a>cyg_ppp_bad_ip_adrs</STRONG> (ARM, 68 bytes, Stack size 0 bytes, auth.o(.text))
<BR>[Called By]<UL><LI><a href="#[87967f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_check_options
</UL><P><STRONG><a name="[8794b38]"></a>cyg_ppp_auth_ip_addr</STRONG> (ARM, 528 bytes, Stack size 40 bytes, auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[4dee704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
</UL><BR>[Called By]<UL><LI><a href="#[8796f28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_up
</UL><P><STRONG><a name="[8c29840]"></a>cyg_ppp_check_access</STRONG> (ARM, 184 bytes, Stack size 40 bytes, auth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8199840]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fileno
<LI><a href="#[4bfe740]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fstat
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
</UL><P><STRONG><a name="[8c299b4]"></a>cyg_ppp_ChapAuthWithPeer</STRONG> (ARM, 60 bytes, Stack size 0 bytes, chap.o(.text))
<BR>[Called By]<UL><LI><a href="#[8befac4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_link_established
</UL><P><STRONG><a name="[8c29a34]"></a>cyg_ppp_ChapAuthPeer</STRONG> (ARM, 80 bytes, Stack size 8 bytes, chap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8c6c42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ChapGenChallenge
<LI><a href="#[8c6c520]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ChapSendChallenge
</UL><BR>[Called By]<UL><LI><a href="#[8befac4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_link_established
</UL><P><STRONG><a name="[874a4fc]"></a>cyg_ppp_chat</STRONG> (ARM, 1232 bytes, Stack size 72 bytes, chat.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a0359c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_self
<LI><a href="#[4bba6e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_lookup
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[4c2e4a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_real_time_clock
<LI><a href="#[4c2e3b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_create
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4c2e1b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_initialize
<LI><a href="#[4bf48a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_read
<LI><a href="#[71ec834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[4c2decc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_disable
<LI><a href="#[8c976e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat_send
<LI><a href="#[4dee704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[4a034a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_get_config
</UL><BR>[Called By]<UL><LI><a href="#[9ac1bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_pppd_main
</UL><P><STRONG><a name="[8794efc]"></a>cyg_ppp_fsm_init</STRONG> (ARM, 56 bytes, Stack size 0 bytes, fsm.o(.text))
<BR>[Called By]<UL><LI><a href="#[8796b88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_init
<LI><a href="#[8bf2038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_init
<LI><a href="#[8c49b78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_init
</UL><P><STRONG><a name="[8befcac]"></a>cyg_ppp_fsm_sdata</STRONG> (ARM, 164 bytes, Stack size 32 bytes, fsm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9ac2a00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_output
</UL><BR>[Called By]<UL><LI><a href="#[8bf22f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_extcode
<LI><a href="#[873a390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_sprotrej
<LI><a href="#[8bf24bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_up
<LI><a href="#[8bf02cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LcpEchoCheck
<LI><a href="#[8c49dc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_extcode
<LI><a href="#[8c497ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_datainput
<LI><a href="#[8c48e14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_rack_timeout
<LI><a href="#[8ca6744]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsm_timeout
<LI><a href="#[8ca66d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsm_sconfreq
<LI><a href="#[8794e0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_close
<LI><a href="#[8794ca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_input
<LI><a href="#[8befc30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_protreject
</UL><P><STRONG><a name="[8794d94]"></a>cyg_ppp_fsm_lowerup</STRONG> (ARM, 80 bytes, Stack size 8 bytes, fsm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8ca66d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsm_sconfreq
</UL><BR>[Called By]<UL><LI><a href="#[8796a30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_lowerup
<LI><a href="#[874a484]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_lowerup
<LI><a href="#[8c49a28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_lowerup
</UL><P><STRONG><a name="[8794d18]"></a>cyg_ppp_fsm_lowerdown</STRONG> (ARM, 188 bytes, Stack size 8 bytes, fsm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[876a044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_untimeout
</UL><BR>[Called By]<UL><LI><a href="#[87969bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_lowerdown
<LI><a href="#[8796aa4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_protrej
<LI><a href="#[874a390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_lowerdown
<LI><a href="#[8c499b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_lowerdown
<LI><a href="#[8c49a98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_protrej
<LI><a href="#[8794e84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_open
</UL><P><STRONG><a name="[8794e84]"></a>cyg_ppp_fsm_open</STRONG> (ARM, 244 bytes, Stack size 8 bytes, fsm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8ca66d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsm_sconfreq
<LI><a href="#[8794d18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_lowerdown
</UL><BR>[Called By]<UL><LI><a href="#[879694c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_open
<LI><a href="#[874a40c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_open
<LI><a href="#[8c49944]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_open
</UL><P><STRONG><a name="[8794e0c]"></a>cyg_ppp_fsm_close</STRONG> (ARM, 284 bytes, Stack size 16 bytes, fsm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[876a044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_untimeout
<LI><a href="#[8befcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_sdata
<LI><a href="#[871a4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
</UL><BR>[Called By]<UL><LI><a href="#[87968dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_close
<LI><a href="#[8796f28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_up
<LI><a href="#[871a5b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_close
<LI><a href="#[8c498d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_close
<LI><a href="#[8c49b08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_input
<LI><a href="#[8c497ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_datainput
</UL><P><STRONG><a name="[8794ca0]"></a>cyg_ppp_fsm_input</STRONG> (ARM, 1968 bytes, Stack size 112 bytes, fsm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8befcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_sdata
<LI><a href="#[8ca66d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsm_sconfreq
<LI><a href="#[876a044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_untimeout
<LI><a href="#[9ac2914]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_log_packet
<LI><a href="#[8769ee0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fmtmsg
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[871a4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
</UL><BR>[Called By]<UL><LI><a href="#[8796b18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_input
<LI><a href="#[8bf1fc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_input
<LI><a href="#[8c49b08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_input
</UL><P><STRONG><a name="[8befc30]"></a>cyg_ppp_fsm_protreject</STRONG> (ARM, 292 bytes, Stack size 16 bytes, fsm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[876a044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_untimeout
<LI><a href="#[8befcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_sdata
<LI><a href="#[871a4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
</UL><BR>[Called By]<UL><LI><a href="#[8bf1f58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_protrej
</UL><P><STRONG><a name="[8a61cfc]"></a>ungetc</STRONG> (ARM, 148 bytes, Stack size 16 bytes, ungetc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><BR>[Called By]<UL><LI><a href="#[84c0170]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vfscanf
</UL><P><STRONG><a name="[8a61c88]"></a>__softfp_strtod</STRONG> (ARM, 720 bytes, Stack size 48 bytes, strtod.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[743f8bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4f74974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dflt
<LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[743f850]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isdigit
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[8d09e70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;exp10(unsigned int)
<LI><a href="#[5cc9f44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_drdiv
</UL><BR>[Called By]<UL><LI><a href="#[84c0170]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vfscanf
</UL><P><STRONG><a name="[8a905bc]"></a>cyg_libc_invoke_main</STRONG> (ARM, 52 bytes, Stack size 16 bytes, invokemain.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a55678]">&gt&gt</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4e4a4f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;exit
</UL><BR>[Address Reference Count : 1]<UL><LI> mainthrd.o(C$$ctor)
</UL><P><STRONG><a name="[8bc558c]"></a>tcp_setpersist</STRONG> (ARM, 148 bytes, Stack size 16 bytes, tcp_output.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
</UL><BR>[Called By]<UL><LI><a href="#[8bc5600]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_timers
<LI><a href="#[8b827d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL><P><STRONG><a name="[8b827d8]"></a>tcp_output</STRONG> (ARM, 3236 bytes, Stack size 112 bytes, tcp_output.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8bc558c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_setpersist
<LI><a href="#[8b829a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_mss
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183ebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retryhdr
<LI><a href="#[5183d74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_clalloc
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[7a9151c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_copydata
<LI><a href="#[7a915fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_copym
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[7b3f874]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_cksum
<LI><a href="#[7b4f498]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[8ba1858]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_quench
</UL><BR>[Called By]<UL><LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[8b826f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_drop
<LI><a href="#[86f6584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_fasttimo
<LI><a href="#[8bc5600]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_timers
<LI><a href="#[8bcd608]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_disconnect
<LI><a href="#[86f6668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_usrreq
</UL><P><STRONG><a name="[8f489ec]"></a>_main_redirection</STRONG> (ARM, 4 bytes, Stack size 0 bytes, _no_redirect.o(.text), UNUSED)
<P><STRONG><a name="[4a547ac]"></a>_main</STRONG> (ARM, 4 bytes, Stack size 0 bytes, _no_redirect.o(.text), UNUSED)
<P><STRONG><a name="[54acac8]"></a>__rt_divtest</STRONG> (ARM, 12 bytes, Stack size 0 bytes, divtest.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f4853c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_div0
</UL><BR>[Called By]<UL><LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[5422b3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encDoneCallback
</UL><P><STRONG><a name="[4c8d178]"></a>__cpp_finalise</STRONG> (ARM, 16 bytes, Stack size 8 bytes, final.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f4818c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__cpp_finalise_ddtors (Weak Reference)
<LI><a href="#[4c8d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__cpp_finalise_dtors
</UL><P><STRONG><a name="[4c8d0fc]"></a>__cpp_finalise_dtors</STRONG> (ARM, 56 bytes, Stack size 16 bytes, final_dtors.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[4c8d178]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__cpp_finalise
</UL><P><STRONG><a name="[49d2490]"></a>__cpp_initialise</STRONG> (ARM, 60 bytes, Stack size 16 bytes, init.o(.text))
<BR>[Called By]<UL><LI><a href="#[79f6a64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_invoke_constructors
</UL><P><STRONG><a name="[757f848]"></a>_ll_cmpu</STRONG> (ARM, 12 bytes, Stack size 0 bytes, llcmpu.o(.text))
<BR>[Called By]<UL><LI><a href="#[7580054]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pllTry
<LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[9b5e798]"></a>_ll_sdiv</STRONG> (ARM, 80 bytes, Stack size 8 bytes, llsdiv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f46ef0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_llsdiv_nonega
<LI><a href="#[8f46e7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_llsdiv_nonegb
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
<LI><a href="#[8f46e08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_llsdiv_nonegq
<LI><a href="#[8f46d94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_llsdiv_nonegr
</UL><BR>[Called By]<UL><LI><a href="#[9b640fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fread
<LI><a href="#[9b6408c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fwrite
<LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
</UL><P><STRONG><a name="[4ba2a84]"></a>_ll_shift_l</STRONG> (ARM, 40 bytes, Stack size 0 bytes, llshl.o(.text))
<BR>[Called By]<UL><LI><a href="#[4ba4034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_vprintf(void (*)(char, void**), void**, const char*, int**)
</UL><P><STRONG><a name="[9b5e808]"></a>_ll_srdv</STRONG> (ARM, 80 bytes, Stack size 8 bytes, llsrdv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f46668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_llsrdv_nonega
<LI><a href="#[8f465f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_llsrdv_nonegb
<LI><a href="#[8f4649c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_urdv
<LI><a href="#[8f46580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_llsrdv_nonegq
<LI><a href="#[8f4650c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_llsrdv_nonegr
</UL><BR>[Called By]<UL><LI><a href="#[9b640fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fread
<LI><a href="#[9b63f40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fseek
<LI><a href="#[9b63fac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fsizing
<LI><a href="#[9b6408c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fwrite
<LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
</UL><P><STRONG><a name="[7a37bf0]"></a>_ll_udiv10</STRONG> (ARM, 152 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR>[Called By]<UL><LI><a href="#[746a16c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vfnprintf
<LI><a href="#[7a37cb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_recv_response
</UL><P><STRONG><a name="[49e6c54]"></a>_ll_udiv</STRONG> (ARM, 704 bytes, Stack size 16 bytes, lludiv5.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8ef639c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_div0
<LI><a href="#[8f06344]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv_small
<LI><a href="#[8f062d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv_big
<LI><a href="#[8ef640c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv_ginormous
<LI><a href="#[8f16234]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv_small_nosh32
<LI><a href="#[8f06400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv_small_loopdone
<LI><a href="#[8f36044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv_small_loop
<LI><a href="#[8f063b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv_big_loopdone
<LI><a href="#[8f260f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv_big_loop
<LI><a href="#[8f4853c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_div0
</UL><BR>[Called By]<UL><LI><a href="#[49d2610]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_WallClock::get_hw_seconds()
<LI><a href="#[4ba2c50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_write_long_num
<LI><a href="#[4ba40b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_cvt(unsigned long long, char*, long, char*)
<LI><a href="#[4c8d7c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::synchronize()
<LI><a href="#[4c8e9b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;construct_converter(Cyg_Clock::converter*, unsigned long long, unsigned long long, unsigned long long, unsigned long long)
<LI><a href="#[5139bd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ktime_func
<LI><a href="#[9b5e798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_sdiv
<LI><a href="#[595132c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BuildFileInfo
<LI><a href="#[4e4a2b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;OnHttpInit
<LI><a href="#[4ce77a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Clock::convert(unsigned long long, Cyg_Clock::converter*)
<LI><a href="#[5774564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;current_time
<LI><a href="#[78448dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[77e9688]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[80360a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[813d274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[553a690]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[56aaca8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[56debe4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[5775c8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[588b8c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[76883b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[50da3b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_lease
<LI><a href="#[7a5ae98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;os_get_time
<LI><a href="#[757fd70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pllCalcFOUT
<LI><a href="#[7580054]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pllTry
<LI><a href="#[75c3274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_get_time
<LI><a href="#[75c3188]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_msec_to_ticks
<LI><a href="#[4db4ba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_ticks_to_msec
<LI><a href="#[77e8d74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_rtcp_read
<LI><a href="#[7810048]">&lt&lt</a>&nbsp;&nbsp;&nbsp;v4l_loop
<LI><a href="#[811935c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;write_access_log
</UL><P><STRONG><a name="[8f06344]"></a>_ll_udiv_small</STRONG> (ARM, 0 bytes, Stack size 0 bytes, lludiv5.o(.text))
<BR>[Called By]<UL><LI><a href="#[49e6c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
<LI><a href="#[8f4649c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_urdv
</UL><P><STRONG><a name="[8f062d0]"></a>_ll_udiv_big</STRONG> (ARM, 0 bytes, Stack size 0 bytes, lludiv5.o(.text))
<BR>[Called By]<UL><LI><a href="#[49e6c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
<LI><a href="#[8f4649c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_urdv
</UL><P><STRONG><a name="[8ef640c]"></a>_ll_udiv_ginormous</STRONG> (ARM, 0 bytes, Stack size 0 bytes, lludiv5.o(.text))
<BR>[Called By]<UL><LI><a href="#[49e6c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
<LI><a href="#[8f4649c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_urdv
</UL><P><STRONG><a name="[8ef639c]"></a>_ll_div0</STRONG> (ARM, 0 bytes, Stack size 0 bytes, lludiv5.o(.text))
<BR>[Called By]<UL><LI><a href="#[49e6c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
<LI><a href="#[8f4649c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_urdv
</UL><P><STRONG><a name="[8f655a8]"></a>__32memcpy</STRONG> (ARM, 0 bytes, Stack size 8 bytes, memcpy.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[5330e18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fill_buffer_forwrite
</UL><P><STRONG><a name="[5330dac]"></a>memcpy</STRONG> (ARM, 12 bytes, Stack size 8 bytes, memcpy.o(.text), UNUSED)
<P><STRONG><a name="[49d2820]"></a>operator new(unsigned int)</STRONG> (ARM, 4 bytes, Stack size 0 bytes, opnew.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f65204]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__new(unsigned int)
</UL><BR>[Called By]<UL><LI><a href="#[49d2890]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_WallClock::Cyg_WallClock()
<LI><a href="#[4c2ebf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counter::Cyg_Counter(unsigned int)
<LI><a href="#[4c2e788]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Clock::Cyg_Clock(Cyg_Clock::cyg_resolution)
<LI><a href="#[4c2e31c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::Cyg_Alarm(Cyg_Counter*, void (*)(Cyg_Alarm*, unsigned int), unsigned int)
<LI><a href="#[4c8d574]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Alarm::Cyg_Alarm()
<LI><a href="#[4c8d268]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_RealTimeClock::Cyg_RealTimeClock()
<LI><a href="#[750a5b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::Cyg_Scheduler_Implementation()
<LI><a href="#[7509d10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_SchedThread_Implementation::Cyg_SchedThread_Implementation(unsigned int)
<LI><a href="#[4c2d374]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Counting_Semaphore::Cyg_Counting_Semaphore(int)
<LI><a href="#[4c2cc78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::Cyg_Flag(unsigned int)
<LI><a href="#[4c2dd54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::Cyg_Mbox()
<LI><a href="#[4c2c568]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::Cyg_Mutex()
<LI><a href="#[4c2c098]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::Cyg_Condition_Variable(Cyg_Mutex&)
<LI><a href="#[7497fb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::Cyg_Condition_Variable()
<LI><a href="#[73eb140]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_SchedThread::Cyg_SchedThread(Cyg_Thread*, unsigned int)
<LI><a href="#[73db314]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Exception_Control::Cyg_Exception_Control()
<LI><a href="#[4c2fa48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Interrupt::Cyg_Interrupt(unsigned int, int, unsigned int, unsigned int (*)(unsigned int, unsigned int), void (*)(unsigned int, unsigned int, unsigned int))
<LI><a href="#[4c30fd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::Cyg_Thread(unsigned int, void (*)(unsigned int), unsigned int, char*, unsigned int, unsigned int)
<LI><a href="#[50250d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_IdleThread::Cyg_IdleThread()
<LI><a href="#[5081190]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Fileio_Init_Class::Cyg_Fileio_Init_Class()
<LI><a href="#[5084474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::Cyg_StdioStream(int, Cyg_StdioStream::OpenMode, int, int, int, unsigned int, unsigned char*)
<LI><a href="#[746a1dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::Cyg_StdioStream(Cyg_StdioStream::OpenMode, unsigned int, unsigned char*)
<LI><a href="#[5d17880]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_dlmalloc_Implementation::Cyg_Mempool_dlmalloc_Implementation(unsigned char*, int, unsigned int)
<LI><a href="#[5cef5e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::Cyg_Mempool_Fixed(unsigned char*, int, unsigned int)
<LI><a href="#[5cefb24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::Cyg_Mempool_Variable(unsigned char*, int, int)
<LI><a href="#[853c158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_libc_signals_dummy_init_class::Cyg_libc_signals_dummy_init_class()
<LI><a href="#[750a528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_CList_T<Cyg_Thread>::Cyg_CList_T<Cyg_Thread>()
</UL><P><STRONG><a name="[4ced2d4]"></a>__rt_memclr</STRONG> (ARM, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f64dc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_Bytes
<LI><a href="#[8f64d54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL><BR>[Called By]<UL><LI><a href="#[4ced504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_bootp
<LI><a href="#[4a556e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_net
<LI><a href="#[4d0cfac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_loopback_interface
<LI><a href="#[4ced0ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[7404e7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[50d98e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp_down_net
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[51deae8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CleanUpCmdCtrlNode
<LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[51de018]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AllocateCmdBuffer
<LI><a href="#[524b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_tx
<LI><a href="#[5250e48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_encode_nonwpa
<LI><a href="#[52525f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_wap
<LI><a href="#[5251fa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_encode
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[5252584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_essid
<LI><a href="#[7bb1b60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_11d
<LI><a href="#[7bb18e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_parse_dnld_countryinfo_11d
<LI><a href="#[7bb1860]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_create_dnld_countryinfo_11d
<LI><a href="#[51b5844]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_fw
<LI><a href="#[7c3a4bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_common_rates
<LI><a href="#[51de704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_ad_hoc_start
<LI><a href="#[51de600]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_ad_hoc_join
<LI><a href="#[7c38870]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FindBestNetworkSsid
<LI><a href="#[7c61d44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_scan_setup_scan_config
<LI><a href="#[7c85094]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_prog_firmware_image
<LI><a href="#[85e8764]">&lt&lt</a>&nbsp;&nbsp;&nbsp;findbuffer_node
<LI><a href="#[8c22f90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_input
<LI><a href="#[8c21af0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_withpeer_fail
<LI><a href="#[8c218f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_withpeer_success
<LI><a href="#[56dec34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Buffer_Assign
<LI><a href="#[5859bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetDevInterface
<LI><a href="#[7318338]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Implement
<LI><a href="#[7843860]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MD5Final
<LI><a href="#[5774480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PackNTP
<LI><a href="#[4e4a6c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetOtherThread
<LI><a href="#[9b61570]">&lt&lt</a>&nbsp;&nbsp;&nbsp;alloc_rw_buff
<LI><a href="#[8e927e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;build_code
<LI><a href="#[8d58478]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_10i40_35bits
<LI><a href="#[8d58658]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_2i40_11bits
<LI><a href="#[8d586d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_2i40_9bits
<LI><a href="#[8d585e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_3i40_14bits
<LI><a href="#[8d584f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_8i40_31bits
<LI><a href="#[83ed500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_processKey
<LI><a href="#[7a3acd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_descurl
<LI><a href="#[889f558]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsTruncatePath
<LI><a href="#[9b5e968]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_allocate_cluster
<LI><a href="#[9b5e4c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_next_dir_entry
<LI><a href="#[9b5e354]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_sdir_name
<LI><a href="#[7ddf928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;insert_to_region
<LI><a href="#[889f6b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lname_to_sname
<LI><a href="#[89f677c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;md5_vector
<LI><a href="#[500769c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[7968578]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_deinit
<LI><a href="#[56dba70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_mem_init
<LI><a href="#[56dbb5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_server_init
<LI><a href="#[5a6807c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;splitString
<LI><a href="#[7566420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauPlayCallback
<LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[7365a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartPlay
<LI><a href="#[796d5fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_alloc_eapol
<LI><a href="#[836e4a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_key
<LI><a href="#[8401c88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_bssid
<LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[8312d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[79689e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_mark_disassoc
<LI><a href="#[9d00544]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_verify_eapol_key_mic
</UL><P><STRONG><a name="[8f64ce8]"></a>_memset</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR>[Called By]<UL><LI><a href="#[4ced1f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memset
</UL><P><STRONG><a name="[4ced184]"></a>__rt_memclr_w</STRONG> (ARM, 88 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f64954]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_loop
</UL><BR>[Called By]<UL><LI><a href="#[4ced504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_bootp
<LI><a href="#[4a556e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_net
<LI><a href="#[4d0cfac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_loopback_interface
<LI><a href="#[4d3234c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initSDIO
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[51193f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyaddr
<LI><a href="#[511937c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[51de018]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AllocateCmdBuffer
<LI><a href="#[4d32200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_add_card
<LI><a href="#[525266c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_range
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[53323b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;register_sdiohost
<LI><a href="#[5da8790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getifaddrs
<LI><a href="#[52aa18c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_addts_req_ioctl
<LI><a href="#[52aa10c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_delts_req_ioctl
<LI><a href="#[52aa08c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_queue_config_ioctl
<LI><a href="#[7bb18e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_parse_dnld_countryinfo_11d
<LI><a href="#[7bb1860]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_create_dnld_countryinfo_11d
<LI><a href="#[7bec660]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MacEventDisconnected
<LI><a href="#[51b5844]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_fw
<LI><a href="#[7bec3e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_ad_hoc
<LI><a href="#[7c6050c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_scan_networks
<LI><a href="#[52a9f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendSpecificSSIDScan
<LI><a href="#[7c38708]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendSpecificBSSIDScan
<LI><a href="#[52ab09c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_scan
<LI><a href="#[7bec560]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_scan
<LI><a href="#[7bec1e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendBgScanQueryCmd
<LI><a href="#[7c831f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_get_cis_info
<LI><a href="#[9ac639c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dodefaultroute
<LI><a href="#[9ac1e48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifproxyarp
<LI><a href="#[75eea28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_up
<LI><a href="#[82c4318]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_device_init
<LI><a href="#[8c6cc88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapInit
<LI><a href="#[8c6cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapInput
<LI><a href="#[7686e74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_LOCAL_Init
<LI><a href="#[7686d14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Init
<LI><a href="#[7686d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Process
<LI><a href="#[5859ca8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateAndSendPackage
<LI><a href="#[55372d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateSubCmdRunStruct
<LI><a href="#[4a5583c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownInterface
<LI><a href="#[562bef8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWiFiStrength
<LI><a href="#[4e4cd74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWlanChannel
<LI><a href="#[4eaa974]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWlanOperationMode
<LI><a href="#[5887924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Init
<LI><a href="#[7318430]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Create
<LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[4e4dd60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InitDefaultParam
<LI><a href="#[7843860]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MD5Final
<LI><a href="#[4e4a738]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MailInfoInit
<LI><a href="#[577432c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Init
<LI><a href="#[5716828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ObjInit
<LI><a href="#[4e4db78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetCameraParam
<LI><a href="#[8a11a68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SHA1Final
<LI><a href="#[8a10b6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SHA1Transform
<LI><a href="#[4e4cab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanHostSleepCfg
<LI><a href="#[734d334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanHostWakeUpCfg
<LI><a href="#[4e4cb30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanPSMode
<LI><a href="#[59c92f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__CreateXML
<LI><a href="#[9b64168]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fopen
<LI><a href="#[9b81430]">&lt&lt</a>&nbsp;&nbsp;&nbsp;allocate_drive_number
<LI><a href="#[9baf8c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;allocate_file_handle
<LI><a href="#[755e3b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;amrEncode
<LI><a href="#[7843b10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_digest_response
<LI><a href="#[8d58658]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_2i40_11bits
<LI><a href="#[8d586d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_2i40_9bits
<LI><a href="#[5456468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;compare_image
<LI><a href="#[808c2b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;del_session
<LI><a href="#[7967790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_init
<LI><a href="#[7a3b334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;flush_upnp_struct
<LI><a href="#[5320e8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSDDevice
<LI><a href="#[52f8480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSMDevice
<LI><a href="#[72237bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSetCardDetection
<LI><a href="#[7317b20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;free_request
<LI><a href="#[9b80034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsAllocateDisk
<LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[9b7fdc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_parse_partition
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
<LI><a href="#[71ed450]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getIPInfo
<LI><a href="#[836c178]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_private_info
<LI><a href="#[89f6708]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hmac_md5_vector
<LI><a href="#[8354974]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hmac_sha1_vector
<LI><a href="#[4dee54c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetMac
<LI><a href="#[4eaa824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlScanAP
<LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
<LI><a href="#[59244b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_upnp
<LI><a href="#[7ddf928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;insert_to_region
<LI><a href="#[7966b34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_send
<LI><a href="#[4a551c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledInit
<LI><a href="#[808d8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;live_teardown
<LI><a href="#[836b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell2param
<LI><a href="#[836bc58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell_ioctl
<LI><a href="#[5859b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mc_rx_socket
<LI><a href="#[89f677c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;md5_vector
<LI><a href="#[77ac8f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_request
<LI><a href="#[7a3a280]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_xml
<LI><a href="#[9baf84c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;release_file_handle
<LI><a href="#[9c8aaf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_init
<LI><a href="#[811961c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_conn_disconnect
<LI><a href="#[80ea760]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_session_close
<LI><a href="#[88fe6a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_directroy
<LI><a href="#[88fe620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_fat16_root
<LI><a href="#[77e73ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_rtp_packet
<LI><a href="#[7a3b2bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_recv_response
<LI><a href="#[4d842e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdInit
<LI><a href="#[4d83f64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoInit
<LI><a href="#[54ad508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decAddRef
<LI><a href="#[54ad2b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decStart
<LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[836e42c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_init
<LI><a href="#[836e218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_scan
<LI><a href="#[8403ccc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_link
<LI><a href="#[84029a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless
<LI><a href="#[8402700]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless_custom
<LI><a href="#[84025d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless_michaelmicfailure
<LI><a href="#[8402670]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless_pmkidcand
<LI><a href="#[839b54c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_bssid
<LI><a href="#[8401b88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_ifflags
<LI><a href="#[8406cc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_range
<LI><a href="#[839b4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_scan_results
<LI><a href="#[839b5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_ssid
<LI><a href="#[8406fd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_pmksa
<LI><a href="#[839b6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_scan
<LI><a href="#[8401c88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_bssid
<LI><a href="#[839b7cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_freq
<LI><a href="#[8401b08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_ifflags
<LI><a href="#[839b84c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_mode
<LI><a href="#[8401c08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_region
<LI><a href="#[839b74c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_ssid
<LI><a href="#[797383c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_drv_get_mac_addr
<LI><a href="#[9cffdbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_pmksa_free_cb
<LI><a href="#[79690cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_pmk_from_pmksa
<LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[7969a1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_initiate_eapol
<LI><a href="#[4a55a8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_main
<LI><a href="#[9cfb728]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_pairwise_gtk
<LI><a href="#[9cfbf38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_parse_ies
<LI><a href="#[9d00334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
<LI><a href="#[9d003b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4
<LI><a href="#[7976e14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan
<LI><a href="#[79692bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
</UL><P><STRONG><a name="[8f64d54]"></a>_memset_w</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memclr_w.o(.text))
<BR>[Called By]<UL><LI><a href="#[4ced2d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><P><STRONG><a name="[4a561e0]"></a>__rt_memcpy</STRONG> (ARM, 180 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f64360]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_lastbytes
<LI><a href="#[8f643d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_dest_aligned
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[8f6451c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_src2_loop
<LI><a href="#[8f644a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_src3_loop
<LI><a href="#[8f64594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_src1_loop
</UL><BR>[Called By]<UL><LI><a href="#[4ced504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_bootp
<LI><a href="#[4d0cfac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_loopback_interface
<LI><a href="#[4d34100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_control
<LI><a href="#[4d33fa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_recv
<LI><a href="#[7404e10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[5119464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;real_name
<LI><a href="#[5119cd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;build_query
<LI><a href="#[5119b6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_answer
<LI><a href="#[4cece08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;setdomainname
<LI><a href="#[51387ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;net_memcpy
<LI><a href="#[51384d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;copyout
<LI><a href="#[5138468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;copyin
<LI><a href="#[51383fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ovbcopy
<LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[4d31f4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_mac_address
<LI><a href="#[4d31dec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ProcessRxedPacket
<LI><a href="#[524b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_tx
<LI><a href="#[524b498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendNullPacket
<LI><a href="#[5250e48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_encode_nonwpa
<LI><a href="#[52525f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_wap
<LI><a href="#[5252510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_nick
<LI><a href="#[5251fa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_encode
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[5252924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_freq
<LI><a href="#[5252584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_essid
<LI><a href="#[52aba00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_snr
<LI><a href="#[5c58fe4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::read(unsigned char*, unsigned int, unsigned int*)
<LI><a href="#[74523d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::write(const unsigned char*, unsigned int, unsigned int*)
<LI><a href="#[7404d70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_dlmalloc_Implementation::resize_alloc(unsigned char*, int, int*)
<LI><a href="#[5da8790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getifaddrs
<LI><a href="#[7ad5620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ifconf
<LI><a href="#[5183d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_input
<LI><a href="#[7b4f88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_init
<LI><a href="#[52aa408]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_para_ie_ioctl
<LI><a href="#[52aa484]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_ack_policy_ioctl
<LI><a href="#[7b1f7d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmdresp_wmm_get_status
<LI><a href="#[7b1f750]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_process_association_req
<LI><a href="#[52aa588]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_queue_status_ioctl
<LI><a href="#[52aa18c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_addts_req_ioctl
<LI><a href="#[52aa10c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_delts_req_ioctl
<LI><a href="#[7baef0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmdresp_wmm_addts_req
<LI><a href="#[51de280]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_wmm_addts_req
<LI><a href="#[51de204]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_wmm_delts_req
<LI><a href="#[51de184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_wmm_queue_config
<LI><a href="#[7baee08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmdresp_wmm_queue_config
<LI><a href="#[52aa08c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_queue_config_ioctl
<LI><a href="#[51de104]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_wmm_queue_stats
<LI><a href="#[7baed84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmdresp_wmm_queue_stats
<LI><a href="#[52aa00c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_wmm_queue_stats_ioctl
<LI><a href="#[51de4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11d_domain_info
<LI><a href="#[7bec660]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MacEventDisconnected
<LI><a href="#[7bec5dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_eeprom_access
<LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
<LI><a href="#[51b5844]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_fw
<LI><a href="#[7c3a4bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_common_rates
<LI><a href="#[52aa20c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_assoc_rsp_ioctl
<LI><a href="#[52aa28c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_mrvl_tlv_ioctl
<LI><a href="#[52a9e2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;JoinAdhocNetwork
<LI><a href="#[52ab028]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_essid
<LI><a href="#[52ab184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_wap
<LI><a href="#[7c38688]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_append_generic_ie
<LI><a href="#[7c38608]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_append_marvell_tlv
<LI><a href="#[7c38588]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_append_reassoc_tlv
<LI><a href="#[51de680]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_authenticate
<LI><a href="#[51de80c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_associate
<LI><a href="#[51de704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_ad_hoc_start
<LI><a href="#[51de600]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_ad_hoc_join
<LI><a href="#[7bec4e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_associate
<LI><a href="#[7bec3e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_ad_hoc
<LI><a href="#[7c6050c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_scan_networks
<LI><a href="#[7c38870]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FindBestNetworkSsid
<LI><a href="#[52a9f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendSpecificSSIDScan
<LI><a href="#[7c38708]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendSpecificBSSIDScan
<LI><a href="#[52ab09c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_scan
<LI><a href="#[52aa308]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_scan_table_ioctl
<LI><a href="#[52aa388]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_user_scan_ioctl
<LI><a href="#[51de88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_scan
<LI><a href="#[7c60408]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_scan_store_beacon
<LI><a href="#[7bec560]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_scan
<LI><a href="#[52aaa34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_extscan_ioctl
<LI><a href="#[52aa504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_bg_scan_config_ioctl
<LI><a href="#[51de478]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_bg_scan_config
<LI><a href="#[7c61d44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_scan_setup_scan_config
<LI><a href="#[7c60c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InterpretBSSDescriptionWithIE
<LI><a href="#[7c85094]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_prog_firmware_image
<LI><a href="#[7c84d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_download_wlan_fw_image
<LI><a href="#[51b5320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_get_int_status
<LI><a href="#[7c831f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_get_cis_info
<LI><a href="#[51ded60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wireless_send_event
<LI><a href="#[51839cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wireless_process_ioctl
<LI><a href="#[9ade690]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_write
<LI><a href="#[9ade620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pipe_read
<LI><a href="#[9ac639c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dodefaultroute
<LI><a href="#[9ac1e48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifproxyarp
<LI><a href="#[85c47d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;romfs_fo_read
<LI><a href="#[85e8048]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_direntry
<LI><a href="#[85e92fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_fo_read
<LI><a href="#[85e9288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_fo_write
<LI><a href="#[85e8e68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_fo_dirread
<LI><a href="#[8603960]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_lookup
<LI><a href="#[869e38c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_ifinit
<LI><a href="#[869e31c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_control
<LI><a href="#[7b4f498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[874a6d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_vfmtmsg
<LI><a href="#[8796f94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ipcp_reqci
<LI><a href="#[86f69f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[8bf2528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcp_reqci
<LI><a href="#[8c2298c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_sauthreq
<LI><a href="#[8c21de4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_sresp
<LI><a href="#[8c21978]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_peer_success
<LI><a href="#[8c49f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_reqci
<LI><a href="#[8c6c520]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapSendChallenge
<LI><a href="#[8c6ba5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapSendStatus
<LI><a href="#[8c6cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapInput
<LI><a href="#[8c6b804]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapSendResponse
<LI><a href="#[8befcac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_sdata
<LI><a href="#[8f655a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__32memcpy
<LI><a href="#[7338e98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[595132c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BuildFileInfo
<LI><a href="#[4e4b754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetWlan
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[5859ca8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateAndSendPackage
<LI><a href="#[82a3410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateInnerDescription
<LI><a href="#[8cd6d44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;D_plsf_3
<LI><a href="#[8cd6c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;D_plsf_5
<LI><a href="#[8cd7390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;D_plsf_init
<LI><a href="#[8cd7ae0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;D_plsf_reset
<LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
<LI><a href="#[886f0ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_reset
<LI><a href="#[5859bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetDevInterface
<LI><a href="#[57e7b1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetInnerPartName
<LI><a href="#[562bef8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWiFiStrength
<LI><a href="#[785f7c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[7318338]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Implement
<LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
<LI><a href="#[5536f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_PostDataGet
<LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[772e194]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_WebFile
<LI><a href="#[772e630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_WebFile_AddData
<LI><a href="#[4e4dd60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InitDefaultParam
<LI><a href="#[8d87988]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Init_D_plsf_3
<LI><a href="#[7843860]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MD5Final
<LI><a href="#[78438d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MD5Update
<LI><a href="#[89f7018]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MD5Update
<LI><a href="#[886ec0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Filter
<LI><a href="#[8dbdce8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Q_plsf_3
<LI><a href="#[4e4db78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetCameraParam
<LI><a href="#[8a10b6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SHA1Transform
<LI><a href="#[8a11ad8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SHA1Update
<LI><a href="#[71ecfd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBWrite
<LI><a href="#[71f3fe8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBWrite_Again
<LI><a href="#[56dc200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_GetOneImage
<LI><a href="#[4def390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
<LI><a href="#[7a3d390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;XML_Analysis
<LI><a href="#[9b6401c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fclose
<LI><a href="#[9b640fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fread
<LI><a href="#[9b63e60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fset_stat
<LI><a href="#[9b6408c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fwrite
<LI><a href="#[755ff5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauDecode
<LI><a href="#[7560bc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauRecord_AttachBuffer
<LI><a href="#[75613d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauRecord_IMA_ADPCM
<LI><a href="#[9cf688c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;aes_unwrap
<LI><a href="#[7ed018c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;amr2cod
<LI><a href="#[755e3b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;amrEncode
<LI><a href="#[5773ffc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;asctime_r
<LI><a href="#[88a0ffc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;build_ldir_entry
<LI><a href="#[7843c6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_basic_response
<LI><a href="#[88f5948]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_out_fat_sector
<LI><a href="#[7a3b3ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;checkip
<LI><a href="#[7e89cc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod2amr
<LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
<LI><a href="#[72f2704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;copy_mem_to_usb
<LI><a href="#[7ddf7cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_merge
<LI><a href="#[5456a80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dspInitialization
<LI><a href="#[8cc5614]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_buffer
<LI><a href="#[8cd6f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec
<LI><a href="#[8cd603c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec_activity_update
<LI><a href="#[8cd7820]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec_reset
<LI><a href="#[8cc5f54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_enc_reset
<LI><a href="#[8ac5ec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_buildIdentity
<LI><a href="#[8aaed90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_request
<LI><a href="#[9cf65d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_get_key
<LI><a href="#[83ed500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_processKey
<LI><a href="#[79680a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_rx_eapol
<LI><a href="#[732a970]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ffGetFile
<LI><a href="#[71ece7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;firmwareRequst
<LI><a href="#[765d64c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsIOWrite
<LI><a href="#[9b5e444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_ldir_name
<LI><a href="#[9b5e354]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_sdir_name
<LI><a href="#[9b7fdc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_parse_partition
<LI><a href="#[7a3a970]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gen_ssdp_pkt
<LI><a href="#[7a3b494]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gen_uuid
<LI><a href="#[7a37d28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_send_subscribe
<LI><a href="#[4fe1730]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_ns_version
<LI><a href="#[89595f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;h263_process_frame
<LI><a href="#[8180598]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_request
<LI><a href="#[89f6708]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hmac_md5_vector
<LI><a href="#[8354974]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hmac_sha1_vector
<LI><a href="#[4e49d40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpAddBody
<LI><a href="#[59c9bcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetTrimString
<LI><a href="#[59c9b50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetWebStyleString
<LI><a href="#[4e4c6a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
<LI><a href="#[5887490]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSetNullHeader
<LI><a href="#[59c9c44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSplitString
<LI><a href="#[4eaabc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetIP
<LI><a href="#[4dee54c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetMac
<LI><a href="#[4eaa904]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetWlan
<LI><a href="#[4eaa824]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlScanAP
<LI><a href="#[4dee5bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetMac
<LI><a href="#[4eaaae0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetWlan
<LI><a href="#[7e91c10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV9650
<LI><a href="#[77abff4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_get
<LI><a href="#[558f88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_Write
<LI><a href="#[7c61098]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iwe_stream_add_point
<LI><a href="#[7967f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_get_own_addr
<LI><a href="#[7967ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_init
<LI><a href="#[7966b34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_send
<LI><a href="#[727eb44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState
<LI><a href="#[8cc5684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp
<LI><a href="#[8cd713c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp_avg_init
<LI><a href="#[8cd7b54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp_avg_reset
<LI><a href="#[8cc5ae4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp_init
<LI><a href="#[8cc6208]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp_reset
<LI><a href="#[5859b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mc_rx_socket
<LI><a href="#[4f29404]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuSuspend
<LI><a href="#[89f677c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;md5_vector
<LI><a href="#[7da792c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4InitDecoder
<LI><a href="#[898cbbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mpeg4_process_frame
<LI><a href="#[4fc1f64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_rename
<LI><a href="#[4fc22ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_stop_and_save
<LI><a href="#[9b80d8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_partition_records
<LI><a href="#[9c5c614]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1
<LI><a href="#[8a10de4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1_f
<LI><a href="#[9cf6560]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_add
<LI><a href="#[9c8aa08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_candidate_add
<LI><a href="#[77ac238]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_logline
<LI><a href="#[89b7d68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rawaudio_process_frame
<LI><a href="#[77ac400]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_header
<LI><a href="#[7a3b1d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;recv_xml
<LI><a href="#[59af6ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_write
<LI><a href="#[81f92ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_write_rfc822_time
<LI><a href="#[9c8aaf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_init
<LI><a href="#[77e8878]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtcp_send
<LI><a href="#[5924610]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelReadData
<LI><a href="#[88fe6a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_directroy
<LI><a href="#[88fe620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_fat16_root
<LI><a href="#[9cf681c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sha1_prf
<LI><a href="#[8ac8b20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_SEND_RESPONSE_Enter
<LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
<LI><a href="#[7a3a4f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soap_invoke
<LI><a href="#[7a3b2bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_recv_response
<LI><a href="#[4a55f20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsAudioLoopbackTestHandler
<LI><a href="#[4a55b74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsGpioTestHandler
<LI><a href="#[4a55c5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsSuspendTestHandler
<LI><a href="#[4a54a54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsUartTestHandler
<LI><a href="#[7843bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;unbase64
<LI><a href="#[9b26334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data
<LI><a href="#[8cc51b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_gp_clipping
<LI><a href="#[9b26420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_page_data
<LI><a href="#[71eccb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbIPRequest
<LI><a href="#[72f1f1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbread
<LI><a href="#[7566420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauPlayCallback
<LI><a href="#[75620ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnRecord
<LI><a href="#[71ed534]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_getPPP
<LI><a href="#[71ed684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_setPPP
<LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[5422b3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encDoneCallback
<LI><a href="#[558f798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702WriteOSD
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[796d5fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_alloc_eapol
<LI><a href="#[79688f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_blacklist_add
<LI><a href="#[9c68154]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_psk
<LI><a href="#[9c612dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_wep_key
<LI><a href="#[79b2044]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_blob
<LI><a href="#[9c62f9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_string_ascii
<LI><a href="#[836e218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_scan
<LI><a href="#[836e4a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_key
<LI><a href="#[8403ccc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_link
<LI><a href="#[84029a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless
<LI><a href="#[8402670]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless_pmkidcand
<LI><a href="#[839b54c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_bssid
<LI><a href="#[839b4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_scan_results
<LI><a href="#[8406fd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_pmksa
<LI><a href="#[839b6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_scan
<LI><a href="#[8401c88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_bssid
<LI><a href="#[839b74c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_ssid
<LI><a href="#[797383c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_drv_get_mac_addr
<LI><a href="#[9cfc2bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_mic
<LI><a href="#[9cfdf44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_gen_wpa_ie_rsn
<LI><a href="#[9cfdecc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_gen_wpa_ie_wpa
<LI><a href="#[9cfbe48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_pmk_to_ptk
<LI><a href="#[9cf6ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_key_request
<LI><a href="#[9cf6be4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_notify_assoc
<LI><a href="#[796802c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
<LI><a href="#[79694b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_rsn_ie
<LI><a href="#[796952c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_wpa_ie
<LI><a href="#[7969434]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie
<LI><a href="#[79691c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie_default
<LI><a href="#[7967148]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_own_addr
<LI><a href="#[796914c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_pmk
<LI><a href="#[7968f58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_ssid_txt
<LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[9d004c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_decrypt_key_data
<LI><a href="#[7967fac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_driver_init
<LI><a href="#[8312d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[796dc4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_bssid
<LI><a href="#[9cfb728]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_pairwise_gtk
<LI><a href="#[9cfb48c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_rsn
<LI><a href="#[9cfb404]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_wpa
<LI><a href="#[9d003b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4
<LI><a href="#[7968188]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_rx_eapol
<LI><a href="#[9cfb304]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_2
<LI><a href="#[9cfbdc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_4
<LI><a href="#[9cfb8a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_4_of_4
<LI><a href="#[9d00544]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_verify_eapol_key_mic
</UL><P><STRONG><a name="[4d32034]"></a>__rt_memcpy_w</STRONG> (ARM, 108 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f63d28]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_small
<LI><a href="#[8f63dec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memcpy_aligned_loop
</UL><BR>[Called By]<UL><LI><a href="#[4d34100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_control
<LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[7ace440]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_ifmsg
<LI><a href="#[7bec4e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_associate
<LI><a href="#[7c6050c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_scan_networks
<LI><a href="#[52a9f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendSpecificSSIDScan
<LI><a href="#[7bec560]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_scan
<LI><a href="#[7c831f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_get_cis_info
<LI><a href="#[4a561e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[7c38514]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
<LI><a href="#[785fb1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Taxis
<LI><a href="#[577432c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Init
<LI><a href="#[7f8b86c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__W99702_SetImageQuality
<LI><a href="#[9b64168]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fopen
<LI><a href="#[756144c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauRecord_AMR_or_PCM
<LI><a href="#[7562580]">&lt&lt</a>&nbsp;&nbsp;&nbsp;auSplitter_GetFrame
<LI><a href="#[59af808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;auth_required
<LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
<LI><a href="#[83ed500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_processKey
<LI><a href="#[9b600e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_fileEx
<LI><a href="#[9b7fdc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_parse_partition
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
<LI><a href="#[4f294e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuGetReport
<LI><a href="#[808c394]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_session
<LI><a href="#[8a10de4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1_f
<LI><a href="#[808fcf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_track
<LI><a href="#[71eccb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbIPRequest
<LI><a href="#[53c2894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdSetSourceVideoSize
<LI><a href="#[53c2af8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdSetWindow
<LI><a href="#[544d694]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoSetTime
<LI><a href="#[4db5f78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_change
<LI><a href="#[79690cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_pmk_from_pmksa
<LI><a href="#[79769d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_wpa_none_key
<LI><a href="#[9d00544]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_verify_eapol_key_mic
</UL><P><STRONG><a name="[8f64360]"></a>_memcpy_lastbytes</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy_w.o(.text))
<BR>[Called By]<UL><LI><a href="#[4a561e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><P><STRONG><a name="[7338e98]"></a>__rt_memmove</STRONG> (ARM, 64 bytes, Stack size 0 bytes, rt_memmove.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[8f638b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__memmove_aligned
<LI><a href="#[8f6397c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memmove_loop
</UL><BR>[Called By]<UL><LI><a href="#[4ced040]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[51dfea8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_set_wep
<LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[51b522c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
<LI><a href="#[52aa7e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlanidle_on
<LI><a href="#[51de788]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_deauthenticate
<LI><a href="#[52a9f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendSpecificSSIDScan
<LI><a href="#[7c60408]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_scan_store_beacon
<LI><a href="#[7c60c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InterpretBSSDescriptionWithIE
<LI><a href="#[7686ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_LOCAL_Process
<LI><a href="#[7686d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Process
<LI><a href="#[58897c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;URLCGI_HTTPCResponse
<LI><a href="#[7566b1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;auSplitter_DelData
<LI><a href="#[7a38c8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_control_url
<LI><a href="#[7a38c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_event_url
<LI><a href="#[7a38d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_scpdurl
<LI><a href="#[54210d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4Splitter_DelData
<LI><a href="#[7a3a4f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soap_invoke
<LI><a href="#[4e4c9d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyRead
<LI><a href="#[71ece0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyWrite
<LI><a href="#[755fc10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauDecode
<LI><a href="#[54acefc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decPrepare
<LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
</UL><P><STRONG><a name="[7c38514]"></a>__rt_memmove_w</STRONG> (ARM, 88 bytes, Stack size 8 bytes, rt_memmove_w.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[8f63520]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_align_loop
<LI><a href="#[8f634d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_loop
</UL><BR>[Called By]<UL><LI><a href="#[7bec3e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_ad_hoc
<LI><a href="#[9be6978]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_sock_table_remove_sock
<LI><a href="#[79b048c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_add_prio_network
</UL><P><STRONG><a name="[8f638b4]"></a>__memmove_aligned</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memmove_w.o(.text))
<BR>[Called By]<UL><LI><a href="#[7338e98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL><P><STRONG><a name="[4ced1f8]"></a>__rt_memset</STRONG> (ARM, 20 bytes, Stack size 0 bytes, rt_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f64ce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_memset
</UL><BR>[Called By]<UL><LI><a href="#[4ced504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_bootp
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[513877c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;net_memset
<LI><a href="#[51b626c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_remove_card
<LI><a href="#[7c014ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_setup_station_hw
<LI><a href="#[51b5844]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_fw
<LI><a href="#[9b64168]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fopen
<LI><a href="#[79aff88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;base64_decode
<LI><a href="#[88a0ffc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;build_ldir_entry
<LI><a href="#[889f3ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_set_sdir_name
<LI><a href="#[9b26420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_page_data
<LI><a href="#[836e4a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_key
<LI><a href="#[839b6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_scan
</UL><P><STRONG><a name="[4e4d2c8]"></a>__rt_sdiv</STRONG> (ARM, 212 bytes, Stack size 0 bytes, rt_sdiv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f4853c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_div0
</UL><BR>[Called By]<UL><LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[51b5320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_get_int_status
<LI><a href="#[51ddd60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_host_to_card
<LI><a href="#[5cef5e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::Cyg_Mempool_Fixed(unsigned char*, int, unsigned int)
<LI><a href="#[5cef254]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::free(unsigned char*)
<LI><a href="#[8696e2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;igmp_input
<LI><a href="#[86d7920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_pcbbind
<LI><a href="#[8aa48bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sosetopt
<LI><a href="#[8aa484c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sogetopt
<LI><a href="#[8dac564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;A_Refl
<LI><a href="#[8dff5d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Az_lsp
<LI><a href="#[57b701c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Base64BufferSize
<LI><a href="#[4e4bf54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetTime
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4e4b6e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ScanWlan
<LI><a href="#[8e09fd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Div_32
<LI><a href="#[57b6fa8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;EncodeBase64
<LI><a href="#[8cd6200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Ex_ctrl
<LI><a href="#[8de3364]">&lt&lt</a>&nbsp;&nbsp;&nbsp;G_code
<LI><a href="#[8d7375c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;G_pitch
<LI><a href="#[4def1bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetRandomIP
<LI><a href="#[57e90dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MPClean
<LI><a href="#[8de3448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR475_update_unq_pred
<LI><a href="#[4e4a410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SelectThread
<LI><a href="#[8cd6194]">&lt&lt</a>&nbsp;&nbsp;&nbsp;agc2
<LI><a href="#[5a683cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;base64BufferSize
<LI><a href="#[5a66654]">&lt&lt</a>&nbsp;&nbsp;&nbsp;buildTime
<LI><a href="#[88a0ffc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;build_ldir_entry
<LI><a href="#[8de353c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;calc_filt_energies
<LI><a href="#[8e9c31c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;calc_unfilt_energies
<LI><a href="#[7d7fd58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capSetDdaFactor
<LI><a href="#[7ddf9a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_region_deviation
<LI><a href="#[77e76b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_udp_endpoint
<LI><a href="#[544e3e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_libc_time_year_is_leap
<LI><a href="#[5caaa8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;div
<LI><a href="#[8cd6f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec
<LI><a href="#[5a64c88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;encodeBase64
<LI><a href="#[8031b60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;event_loop
<LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
<LI><a href="#[5967258]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_mime_hash_value
<LI><a href="#[5355708]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gfxFillSolidRect
<LI><a href="#[537dc3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gfxPutImage
<LI><a href="#[821ccd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gmtime_r
<LI><a href="#[8e2218c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hp_max
<LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
<LI><a href="#[5a68848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailAck
<LI><a href="#[544d628]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mktime
<LI><a href="#[7da7c08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4InitIvtmn8
<LI><a href="#[87d897c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4Ivtmn8Update
<LI><a href="#[54ace08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetEncoderBitrate
<LI><a href="#[808c664]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_rtp_media_rawaudio_stream
<LI><a href="#[8e4c448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;noise_estimate_update
<LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[7967e4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;os_sleep
<LI><a href="#[89b7de4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rawaudio_send
<LI><a href="#[5a668cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcpConnectHost
<LI><a href="#[8032064]">&lt&lt</a>&nbsp;&nbsp;&nbsp;time_add
<LI><a href="#[80321b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;time_diff
<LI><a href="#[5a6636c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;timeoutRead
<LI><a href="#[8e4c9b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vad_decision
<LI><a href="#[755fb24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauNotificationGet
<LI><a href="#[5456a08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoDrawContent
<LI><a href="#[544ec74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoRegetXY
</UL><P><STRONG><a name="[4d846e0]"></a>__rt_udiv</STRONG> (ARM, 192 bytes, Stack size 0 bytes, rt_udiv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f4853c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_div0
</UL><BR>[Called By]<UL><LI><a href="#[4dee704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[4d31dec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ProcessRxedPacket
<LI><a href="#[59c9928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strtoul
<LI><a href="#[5773e88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_libc_time_itoa
<LI><a href="#[5d79bc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_plf_serial_init_channel
<LI><a href="#[8199614]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fwrite
<LI><a href="#[8401a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;qsort
<LI><a href="#[860ba74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_serial_config_port
<LI><a href="#[874a6d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_vfmtmsg
<LI><a href="#[8b829a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_mss
<LI><a href="#[86f67c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[8b82af8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[8bc5600]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_timers
<LI><a href="#[57b701c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Base64BufferSize
<LI><a href="#[8cd6430]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cb_gain_average
<LI><a href="#[7dcd9dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ImaSamplesIn
<LI><a href="#[7d7fc60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PacketReSetBufferAddr
<LI><a href="#[886ec0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Filter
<LI><a href="#[7ede18c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__IsScalingOK
<LI><a href="#[8cf34d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;agc
<LI><a href="#[5a683cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;base64BufferSize
<LI><a href="#[7d7fd58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capSetDdaFactor
<LI><a href="#[87ac2c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capSinglePipePolyPhaseFilter
<LI><a href="#[5456468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;compare_image
<LI><a href="#[5456a80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dspInitialization
<LI><a href="#[87ac3b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;factor
<LI><a href="#[5320e8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSDDevice
<LI><a href="#[73a7f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Init
<LI><a href="#[7648dd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSMDelete
<LI><a href="#[76492e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read
<LI><a href="#[76491f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Write
<LI><a href="#[4a5548c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSetFMIReferenceClock
<LI><a href="#[762f3e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSlowDownSDClock
<LI><a href="#[9b7fdc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_parse_partition
<LI><a href="#[57e7cf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gcd
<LI><a href="#[55047a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;jpegDecGetImage
<LI><a href="#[5504ce0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;jpegEncSetBasicOption
<LI><a href="#[87ac34c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcd
<LI><a href="#[87ac25c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;maxlcd
<LI><a href="#[87ac420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;maxlcd_2
<LI><a href="#[7da7fd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4InitEncoder
<LI><a href="#[7da7c08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4InitIvtmn8
<LI><a href="#[54ace08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetEncoderBitrate
<LI><a href="#[9cf6560]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_add
<LI><a href="#[7338ff0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiInitDevice
<LI><a href="#[5459b04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_WaitEncode
<LI><a href="#[537ffb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdAdjustWindow
<LI><a href="#[4db5ef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_linkrefresh
<LI><a href="#[5456b70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeDownScale
<LI><a href="#[537eb84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeFormatConversionDDA
<LI><a href="#[7d7a728]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeLcd
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[7365a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartPlay
<LI><a href="#[839b4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_scan_results
</UL><P><STRONG><a name="[5b5dad8]"></a>__rt_sdiv10</STRONG> (ARM, 64 bytes, Stack size 0 bytes, rtsdiv10.o(.text))
<BR>[Called By]<UL><LI><a href="#[889f6b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lname_to_sname
<LI><a href="#[5b5db48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_uart_read
<LI><a href="#[81f9328]">&lt&lt</a>&nbsp;&nbsp;&nbsp;simple_itoa
<LI><a href="#[839b4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_scan_results
</UL><P><STRONG><a name="[821cda8]"></a>__rt_udiv10</STRONG> (ARM, 44 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR>[Called By]<UL><LI><a href="#[87d897c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4Ivtmn8Update
<LI><a href="#[81f92ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_write_rfc822_time
</UL><P><STRONG><a name="[4d0cc10]"></a>strerror</STRONG> (ARM, 208 bytes, Stack size 0 bytes, strerror.o(.text))
<BR>[Called By]<UL><LI><a href="#[5da8630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_show_all_interfaces
<LI><a href="#[9ac639c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dodefaultroute
<LI><a href="#[874a6d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_vfmtmsg
<LI><a href="#[4dd624c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;clr_flag
<LI><a href="#[77e76b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_udp_endpoint
<LI><a href="#[8180324]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_accept
<LI><a href="#[81192f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_read
<LI><a href="#[7967508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_run
<LI><a href="#[7a37d28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_send_subscribe
<LI><a href="#[7967ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_init
<LI><a href="#[8401d08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[7a3abf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_desc
<LI><a href="#[7a391f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_serv_xml
<LI><a href="#[77e8878]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtcp_send
<LI><a href="#[77e73ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_rtp_packet
<LI><a href="#[891eee4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_file
<LI><a href="#[4dd61dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_flag
<LI><a href="#[7a3a4f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soap_invoke
<LI><a href="#[8180814]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_listen
<LI><a href="#[77e8d74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_rtcp_read
<LI><a href="#[77e8de8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_rtp_read
<LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
<LI><a href="#[8406c44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_send_oper_ifla
<LI><a href="#[9afb0e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_kernel_driver_wext_send_link_event
<LI><a href="#[79725a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_register_reconfig
</UL><P><STRONG><a name="[891dbd0]"></a>__rt_uread4</STRONG> (ARM, 32 bytes, Stack size 0 bytes, uread4.o(.text))
<BR>[Called By]<UL><LI><a href="#[811935c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;write_access_log
</UL><P><STRONG><a name="[4defa4c]"></a>__rt_uwrite4</STRONG> (ARM, 32 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR>[Called By]<UL><LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[750a4a8]"></a>__vecmap1c(void*, void*, int, void (*)(void*))</STRONG> (ARM, 68 bytes, Stack size 24 bytes, vc1c.o(.text))
<BR>[Called By]<UL><LI><a href="#[502597c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
<LI><a href="#[50584e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
<LI><a href="#[5061a68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
<LI><a href="#[50a2a5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__C
<LI><a href="#[750a5b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::Cyg_Scheduler_Implementation()
</UL><P><STRONG><a name="[73eb034]"></a>__vecmap1ci(void*, void*, int, void (*)(void*, int))</STRONG> (ARM, 72 bytes, Stack size 24 bytes, vc1ci.o(.text))
<BR>[Called By]<UL><LI><a href="#[73eb848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[502588c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[50583f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[5061978]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
<LI><a href="#[50a2944]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__D
</UL><P><STRONG><a name="[8f4649c]"></a>_ll_urdv</STRONG> (ARM, 96 bytes, Stack size 16 bytes, llurdv5.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8ef639c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_div0
<LI><a href="#[8f06344]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv_small
<LI><a href="#[8f062d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv_big
<LI><a href="#[8ef640c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv_ginormous
</UL><BR>[Called By]<UL><LI><a href="#[9b5e808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_srdv
</UL><P><STRONG><a name="[8f65204]"></a>__new(unsigned int)</STRONG> (ARM, 68 bytes, Stack size 16 bytes, prim_new.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f71204]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__user_libspace
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[49d2820]">&lt&lt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL><P><STRONG><a name="[8f4853c]"></a>__rt_div0</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_div0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f6b190]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__32__rt_raise
</UL><BR>[Called By]<UL><LI><a href="#[54acac8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_divtest
<LI><a href="#[49e6c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
<LI><a href="#[4e4d2c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4d846e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><P><STRONG><a name="[8f6065c]"></a>__rt_fp_status_addr</STRONG> (ARM, 16 bytes, Stack size 8 bytes, rt_fp_status_addr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f71204]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__user_libspace
</UL><BR>[Called By]<UL><LI><a href="#[4f74894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[8f5eec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__dunder
<LI><a href="#[8f60918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f60830]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__funder
<LI><a href="#[8f6c120]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL><P><STRONG><a name="[8f6c194]"></a>_fp_trap</STRONG> (ARM, 96 bytes, Stack size 40 bytes, _fptrap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f6bb6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fp_trap_big (Weak Reference)
<LI><a href="#[8f6b190]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__32__rt_raise
</UL><BR>[Called By]<UL><LI><a href="#[8f607bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fp_trapveneer
</UL><P><STRONG><a name="[8f71204]"></a>__user_libspace</STRONG> (ARM, 8 bytes, Stack size 0 bytes, libspace.o(.text))
<BR>[Called By]<UL><LI><a href="#[8f65204]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__new(unsigned int)
<LI><a href="#[8f6065c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL><P><STRONG><a name="[8f6b190]"></a>__32__rt_raise</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rt_raise.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f6b204]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__raise
<LI><a href="#[85605b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL><BR>[Called By]<UL><LI><a href="#[8f4853c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_div0
<LI><a href="#[8f6c194]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fp_trap
</UL><P><STRONG><a name="[8f70cf4]"></a>__rt_raise</STRONG> (ARM, 24 bytes, Stack size 8 bytes, rt_raise.o(.text), UNUSED)
<P><STRONG><a name="[8f6b204]"></a>__raise</STRONG> (ARM, 92 bytes, Stack size 16 bytes, __raise.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f6a780]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__sigvec_lookup (Weak Reference)
<LI><a href="#[8f6a700]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__default_signal_handler
</UL><BR>[Called By]<UL><LI><a href="#[8f6b190]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__32__rt_raise
</UL><P><STRONG><a name="[8f6a700]"></a>__default_signal_handler</STRONG> (ARM, 352 bytes, Stack size 16 bytes, defsig.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8560548]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL><BR>[Called By]<UL><LI><a href="#[8f6b204]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__raise
</UL><P><STRONG><a name="[73eb2cc]"></a>hal_thread_switch_context</STRONG> (ARM, 0 bytes, Stack size 0 bytes, context.o(Cont1))
<BR>[Called By]<UL><LI><a href="#[4c310dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><P><STRONG><a name="[73eb1cc]"></a>hal_thread_load_context</STRONG> (ARM, 0 bytes, Stack size 0 bytes, context.o(Cont1))
<BR>[Called By]<UL><LI><a href="#[73eb248]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::start_cpu()
<LI><a href="#[4c3126c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::start()
</UL><P><STRONG><a name="[79f18e4]"></a>hal_setjmp</STRONG> (ARM, 0 bytes, Stack size 0 bytes, context.o(Cont1), UNUSED)
<P><STRONG><a name="[79f1874]"></a>hal_longjmp</STRONG> (ARM, 0 bytes, Stack size 0 bytes, context.o(Cont1), UNUSED)
<P><STRONG><a name="[5094598]"></a>sys_flush_and_clean_dcache</STRONG> (ARM, 0 bytes, Stack size 0 bytes, w99702_dcache.o(MEM_INIT))
<BR>[Called By]<UL><LI><a href="#[5094618]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hal_disable_cache
<LI><a href="#[5094524]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hal_flush_cache
<LI><a href="#[5094434]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hal_hardware_init
<LI><a href="#[4d845f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sysDisableCache
<LI><a href="#[4d8466c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sysFlushCache
</UL><P><STRONG><a name="[8dac564]"></a>A_Refl</STRONG> (ARM, 456 bytes, Stack size 80 bytes, a_refl.o(i.A_Refl))
<BR><BR>[Calls]<UL><LI><a href="#[8d461d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;norm_l
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[8d54e30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_msu
</UL><BR>[Called By]<UL><LI><a href="#[8cd6f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec
</UL><P><STRONG><a name="[5950900]"></a>AddBufferFileList</STRONG> (ARM, 204 bytes, Stack size 16 bytes, mail.o(i.AddBufferFileList))
<BR><BR>[Calls]<UL><LI><a href="#[595132c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;BuildFileInfo
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[57b6f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DO_TestSendMailFile
</UL><P><STRONG><a name="[4e4cec8]"></a>AddHttpNum</STRONG> (ARM, 52 bytes, Stack size 80 bytes, Register.o(i.AddHttpNum))
<BR><BR>[Calls]<UL><LI><a href="#[4deeff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpLong2String
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
</UL><BR>[Called By]<UL><LI><a href="#[4e4c4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_DropData
<LI><a href="#[4e4b83c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetCamera
<LI><a href="#[4e4c2fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetDDNS
<LI><a href="#[4e4b510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetMail
<LI><a href="#[4e4aaf0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetPPP
<LI><a href="#[4e4abd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetUPnP
<LI><a href="#[4e4acc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetVNet
<LI><a href="#[4e4b754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetWlan
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4e4b6e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ScanWlan
</UL><P><STRONG><a name="[4e4d1e0]"></a>AddHttpValue</STRONG> (ARM, 64 bytes, Stack size 16 bytes, Register.o(i.AddHttpValue))
<BR><BR>[Calls]<UL><LI><a href="#[5537d20]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AppendXMLArray
<LI><a href="#[5537560]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpCreateXMLText
<LI><a href="#[5537c38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAppendXML
</UL><BR>[Called By]<UL><LI><a href="#[4e4cec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AddHttpNum
<LI><a href="#[4e4a894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ControlMCU
<LI><a href="#[4fe1448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ControlNAV
<LI><a href="#[4e4a984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_EnableTestNet
<LI><a href="#[4e4c2fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetDDNS
<LI><a href="#[4e4b3b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetHttp
<LI><a href="#[4e4b2cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetIP
<LI><a href="#[4e4c3e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetLog
<LI><a href="#[4e4be6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetLogo
<LI><a href="#[4e4b5f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetMac
<LI><a href="#[4e4b510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetMail
<LI><a href="#[4e4b92c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetMediaFormat
<LI><a href="#[4e4ba24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetMotionDetect
<LI><a href="#[4e4c210]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetMyself
<LI><a href="#[4e4ad34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetName
<LI><a href="#[4e4aaf0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetPPP
<LI><a href="#[4e4c458]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetStatus
<LI><a href="#[4e4bf54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetTime
<LI><a href="#[4e4abd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetUPnP
<LI><a href="#[4e4c19c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetUser
<LI><a href="#[4e4acc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetVNet
<LI><a href="#[4e4c370]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetVer
<LI><a href="#[4e4b754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetWlan
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4e4b258]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_Reboot
<LI><a href="#[4e4b6e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ScanWlan
<LI><a href="#[4e4aff4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_UpdateProgress
</UL><P><STRONG><a name="[5716588]"></a>AddSelectFD</STRONG> (ARM, 56 bytes, Stack size 16 bytes, SSelect.o(i.AddSelectFD))
<BR><BR>[Calls]<UL><LI><a href="#[56dc448]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendMsg
</UL><BR>[Called By]<UL><LI><a href="#[588acf0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AddDDNS
<LI><a href="#[57755a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AddNTP
<LI><a href="#[5924444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BPC_New
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
</UL><P><STRONG><a name="[5537d20]"></a>AppendXMLArray</STRONG> (ARM, 328 bytes, Stack size 32 bytes, Register.o(i.AppendXMLArray))
<BR><BR>[Calls]<UL><LI><a href="#[5537cac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpCreateXML
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[5537c38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAppendXML
<LI><a href="#[5537bc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteXML
<LI><a href="#[5537b50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetString
<LI><a href="#[5537adc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDetachXML
</UL><BR>[Called By]<UL><LI><a href="#[4e4d1e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
<LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
</UL><P><STRONG><a name="[4defc68]"></a>Asmalloc</STRONG> (ARM, 52 bytes, Stack size 8 bytes, System.o(i.Asmalloc))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
</UL><P><STRONG><a name="[8e06738]"></a>Autocorr</STRONG> (ARM, 1308 bytes, Stack size 512 bytes, autocorr.o(i.Autocorr))
<BR>[Called By]<UL><LI><a href="#[8cc56ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lpc
</UL><P><STRONG><a name="[8dff5d4]"></a>Az_lsp</STRONG> (ARM, 928 bytes, Stack size 72 bytes, az_lsp.o(i.Az_lsp))
<BR><BR>[Calls]<UL><LI><a href="#[8e6ecbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Chebps
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[8cc5684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp
</UL><P><STRONG><a name="[5924444]"></a>BPC_New</STRONG> (ARM, 236 bytes, Stack size 64 bytes, BypassClient.o(i.BPC_New))
<BR><BR>[Calls]<UL><LI><a href="#[5716828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjInit
<LI><a href="#[5716588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddSelectFD
</UL><BR>[Called By]<UL><LI><a href="#[5927be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_start
</UL><P><STRONG><a name="[7686e00]"></a>BP_LOCAL_Final</STRONG> (ARM, 8 bytes, Stack size 0 bytes, BypassClient.o(i.BP_LOCAL_Final))
<BR><BR>[Calls]<UL><LI><a href="#[57167b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjFinal
</UL><BR>[Address Reference Count : 1]<UL><LI> BypassClient.o(i.BPC_New)
</UL><P><STRONG><a name="[7686e74]"></a>BP_LOCAL_Init</STRONG> (ARM, 144 bytes, Stack size 56 bytes, BypassClient.o(i.BP_LOCAL_Init))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[5716828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjInit
</UL><BR>[Address Reference Count : 1]<UL><LI> BypassClient.o(i.BPC_New)
</UL><P><STRONG><a name="[7686ee8]"></a>BP_LOCAL_Process</STRONG> (ARM, 1028 bytes, Stack size 56 bytes, BypassClient.o(i.BP_LOCAL_Process))
<BR><BR>[Calls]<UL><LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4bfe664]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fcntl
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4d0cf3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_addr
<LI><a href="#[50a2524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[5716670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FD_Next
<LI><a href="#[76883b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[50a2444]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getsockopt
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
</UL><BR>[Address Reference Count : 1]<UL><LI> BypassClient.o(i.BP_LOCAL_Init)
</UL><P><STRONG><a name="[7686ca0]"></a>BP_REMOTE_Final</STRONG> (ARM, 48 bytes, Stack size 8 bytes, BypassClient.o(i.BP_REMOTE_Final))
<BR><BR>[Calls]<UL><LI><a href="#[57167b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjFinal
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Address Reference Count : 1]<UL><LI> BypassClient.o(i.BPC_New)
</UL><P><STRONG><a name="[7686d14]"></a>BP_REMOTE_Init</STRONG> (ARM, 252 bytes, Stack size 72 bytes, BypassClient.o(i.BP_REMOTE_Init))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[7687b4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[5716828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjInit
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Address Reference Count : 1]<UL><LI> BypassClient.o(i.BPC_New)
</UL><P><STRONG><a name="[7686d88]"></a>BP_REMOTE_Process</STRONG> (ARM, 1124 bytes, Stack size 56 bytes, BypassClient.o(i.BP_REMOTE_Process))
<BR><BR>[Calls]<UL><LI><a href="#[577472c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ResolveHost
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4bfe664]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fcntl
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[50a2524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[5716670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FD_Next
<LI><a href="#[76883b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[50a2444]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getsockopt
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[57746bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DeleteHost
</UL><BR>[Address Reference Count : 1]<UL><LI> BypassClient.o(i.BP_REMOTE_Init)
</UL><P><STRONG><a name="[57b701c]"></a>Base64BufferSize</STRONG> (ARM, 44 bytes, Stack size 8 bytes, Mailapp.o(i.Base64BufferSize))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[57b6fa8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;EncodeBase64
</UL><P><STRONG><a name="[8cd60b8]"></a>Bgn_scd</STRONG> (ARM, 536 bytes, Stack size 32 bytes, bgnscd.o(i.Bgn_scd))
<BR><BR>[Calls]<UL><LI><a href="#[8d66ae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gmed_n
</UL><BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cd75d8]"></a>Bgn_scd_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, bgnscd.o(i.Bgn_scd_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[886ef44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_exit
</UL><P><STRONG><a name="[8cd70c8]"></a>Bgn_scd_init</STRONG> (ARM, 72 bytes, Stack size 16 bytes, bgnscd.o(i.Bgn_scd_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[8cc62e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Set_zero
</UL><BR>[Called By]<UL><LI><a href="#[886eddc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_init
</UL><P><STRONG><a name="[8cd7908]"></a>Bgn_scd_reset</STRONG> (ARM, 40 bytes, Stack size 8 bytes, bgnscd.o(i.Bgn_scd_reset))
<BR><BR>[Calls]<UL><LI><a href="#[8cc62e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Set_zero
</UL><BR>[Called By]<UL><LI><a href="#[886f0ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_reset
</UL><P><STRONG><a name="[885c870]"></a>Bits2prm</STRONG> (ARM, 164 bytes, Stack size 24 bytes, bits2prm.o(i.Bits2prm))
<BR>[Called By]<UL><LI><a href="#[7ecff90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame
<LI><a href="#[7ed0088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;decoder_homing_frame_test
<LI><a href="#[7ed0108]">&lt&lt</a>&nbsp;&nbsp;&nbsp;decoder_homing_frame_test_first
</UL><P><STRONG><a name="[881ea58]"></a>CAM_SensorPowerOn</STRONG> (ARM, 424 bytes, Stack size 16 bytes, dsp_init.o(i.CAM_SensorPowerOn))
<BR><BR>[Calls]<UL><LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
</UL><BR>[Called By]<UL><LI><a href="#[7e91ba0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV7670
<LI><a href="#[7e91c10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV9650
<LI><a href="#[7e91b2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_PO6030K
</UL><P><STRONG><a name="[881eb44]"></a>CAM_SetZoom</STRONG> (ARM, 256 bytes, Stack size 32 bytes, dsp_init.o(i.CAM_SetZoom))
<BR><BR>[Calls]<UL><LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
</UL><BR>[Called By]<UL><LI><a href="#[7e91c10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV9650
</UL><P><STRONG><a name="[881ead0]"></a>CAM_SuspendTV</STRONG> (ARM, 292 bytes, Stack size 16 bytes, dsp_init.o(i.CAM_SuspendTV))
<BR><BR>[Calls]<UL><LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[759f430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cSetDeviceSlaveAddr
<LI><a href="#[759f77c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cInitSerialBus
<LI><a href="#[4e4c884]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cWriteI2C
</UL><BR>[Called By]<UL><LI><a href="#[7e91c10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV9650
</UL><P><STRONG><a name="[4e4a39c]"></a>CameraThread</STRONG> (ARM, 1200 bytes, Stack size 64 bytes, CameraCtl.o(i.CameraThread))
<BR><BR>[Calls]<UL><LI><a href="#[4defc68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Asmalloc
<LI><a href="#[56dec34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Buffer_Assign
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[56dc2f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;TryGetMsg
<LI><a href="#[56dc278]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99702_OpenCamera
<LI><a href="#[56dc3d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetCameraInitState
<LI><a href="#[56debe4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[56dc200]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99702_GetOneImage
<LI><a href="#[56dc360]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SaveJpeg
<LI><a href="#[56dc180]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99702_GetImageResolution
<LI><a href="#[558f058]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetLocalVideoSource
<LI><a href="#[56dc100]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99702_SetImageResolution
<LI><a href="#[56dc084]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99702_SetImageQuality
<LI><a href="#[56dc00c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99702_SetFramerate
<LI><a href="#[56dbf8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99702_SetImageBrightness
<LI><a href="#[56dbf10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99702_SetSpeakerVolume
<LI><a href="#[56dbe98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99702_SetMicVolume
<LI><a href="#[558dccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702EnableDrawImageTime
<LI><a href="#[558dc54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetDrawContent
<LI><a href="#[56dbe20]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99702_CloseCamera
<LI><a href="#[558e4f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702EnableSuspend
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.ResetOtherThread)
</UL><P><STRONG><a name="[8cd6430]"></a>Cb_gain_average</STRONG> (ARM, 900 bytes, Stack size 72 bytes, c_g_aver.o(i.Cb_gain_average))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cd74e8]"></a>Cb_gain_average_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, c_g_aver.o(i.Cb_gain_average_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[886ef44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_exit
</UL><P><STRONG><a name="[8cd71b0]"></a>Cb_gain_average_init</STRONG> (ARM, 76 bytes, Stack size 16 bytes, c_g_aver.o(i.Cb_gain_average_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[8cc62e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Set_zero
</UL><BR>[Called By]<UL><LI><a href="#[886eddc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_init
</UL><P><STRONG><a name="[8cd7bc8]"></a>Cb_gain_average_reset</STRONG> (ARM, 44 bytes, Stack size 8 bytes, c_g_aver.o(i.Cb_gain_average_reset))
<BR><BR>[Calls]<UL><LI><a href="#[8cc62e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Set_zero
</UL><BR>[Called By]<UL><LI><a href="#[886f0ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_reset
</UL><P><STRONG><a name="[759f524]"></a>Check_FastI2C_Status</STRONG> (ARM, 108 bytes, Stack size 0 bytes, Dsp_i2c.o(i.Check_FastI2C_Status))
<BR>[Called By]<UL><LI><a href="#[759f77c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;i2cInitSerialBus
</UL><P><STRONG><a name="[5887840]"></a>CkIP_HTTPC_Init</STRONG> (ARM, 36 bytes, Stack size 8 bytes, HttpClient.o(i.CkIP_HTTPC_Init))
<BR><BR>[Calls]<UL><LI><a href="#[5887924]">&gt&gt</a>&nbsp;&nbsp;&nbsp;HTTPC_Init
</UL><BR>[Address Reference Count : 1]<UL><LI> HttpClient.o(i.DDNS_Do_CheckIP)
</UL><P><STRONG><a name="[5537468]"></a>ClearHttpSendData</STRONG> (ARM, 16 bytes, Stack size 0 bytes, HttpServer.o(i.ClearHttpSendData))
<BR>[Called By]<UL><LI><a href="#[55374e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendRedirectRequest
</UL><P><STRONG><a name="[4e4bc10]"></a>Config_ChBrightness</STRONG> (ARM, 140 bytes, Stack size 80 bytes, CameraCtl.o(i.Config_ChBrightness))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[4deeff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpLong2String
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
<LI><a href="#[4eab0f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetBrightness
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4bd00]"></a>Config_ChCompressRatio</STRONG> (ARM, 140 bytes, Stack size 80 bytes, CameraCtl.o(i.Config_ChCompressRatio))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[4deeff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpLong2String
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
<LI><a href="#[4eab350]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetQuality
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4bdf4]"></a>Config_ChDirection</STRONG> (ARM, 8 bytes, Stack size 0 bytes, CameraCtl.o(i.Config_ChDirection))
<BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4bc88]"></a>Config_ChFramerate</STRONG> (ARM, 140 bytes, Stack size 80 bytes, CameraCtl.o(i.Config_ChFramerate))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[4deeff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpLong2String
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
<LI><a href="#[4eab1e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetFramerate
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4bb1c]"></a>Config_ChMicVolume</STRONG> (ARM, 140 bytes, Stack size 80 bytes, CameraCtl.o(i.Config_ChMicVolume))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[4deeff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpLong2String
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
<LI><a href="#[4eaaf0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetMicVolume
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4bd7c]"></a>Config_ChResolution</STRONG> (ARM, 140 bytes, Stack size 80 bytes, CameraCtl.o(i.Config_ChResolution))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[4deeff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpLong2String
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
<LI><a href="#[4eab530]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetResolution
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4bb94]"></a>Config_ChSpeakerVolume</STRONG> (ARM, 140 bytes, Stack size 80 bytes, CameraCtl.o(i.Config_ChSpeakerVolume))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[4deeff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpLong2String
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
<LI><a href="#[4eab000]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetSpeakerVolume
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4a894]"></a>Config_ControlMCU</STRONG> (ARM, 240 bytes, Stack size 544 bytes, System.o(i.Config_ControlMCU))
<BR><BR>[Calls]<UL><LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4deeb74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpHex2Char
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a560fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlCtrlMCU
<LI><a href="#[4deea94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpChar2Hex
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4fe1448]"></a>Config_ControlNAV</STRONG> (ARM, 180 bytes, Stack size 544 bytes, er_ns_cgi.o(i.Config_ControlNAV))
<BR><BR>[Calls]<UL><LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4fc2130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[4fc2540]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><BR>[Address Reference Count : 1]<UL><LI> er_ns_cgi.o(i.er_register_ns_cgi)
</UL><P><STRONG><a name="[4e4c0b4]"></a>Config_DelUser</STRONG> (ARM, 220 bytes, Stack size 152 bytes, User.o(i.Config_DelUser))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[5642438]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetCurrentUser
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4eab9d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlDelUser
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4c4d0]"></a>Config_DropData</STRONG> (ARM, 148 bytes, Stack size 24 bytes, CameraCtl.o(i.Config_DropData))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[56dbcbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDisconnect
<LI><a href="#[4e4cec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpNum
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4a984]"></a>Config_EnableTestNet</STRONG> (ARM, 104 bytes, Stack size 16 bytes, TestNetServer.o(i.Config_EnableTestNet))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[7700938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;TestNet_ThreadInit
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4b83c]"></a>Config_GetCamera</STRONG> (ARM, 60 bytes, Stack size 8 bytes, CameraCtl.o(i.Config_GetCamera))
<BR><BR>[Calls]<UL><LI><a href="#[54570d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptGetFrequency
<LI><a href="#[4e4cec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpNum
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4c2fc]"></a>Config_GetDDNS</STRONG> (ARM, 416 bytes, Stack size 152 bytes, HttpClient.o(i.Config_GetDDNS))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4deeff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpLong2String
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
<LI><a href="#[4e4d254]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIP2String
<LI><a href="#[4e4cec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpNum
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4b3b4]"></a>Config_GetHttp</STRONG> (ARM, 120 bytes, Stack size 104 bytes, System.o(i.Config_GetHttp))
<BR><BR>[Calls]<UL><LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4deeff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpLong2String
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4b2cc]"></a>Config_GetIP</STRONG> (ARM, 744 bytes, Stack size 200 bytes, System.o(i.Config_GetIP))
<BR><BR>[Calls]<UL><LI><a href="#[4def6b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetClientAddr
<LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4e4d254]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIP2String
<LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4def4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[4deeff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpLong2String
<LI><a href="#[4def22c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetPubIPInfo
<LI><a href="#[4deed40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wsp_get_config_state
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4c3e4]"></a>Config_GetLog</STRONG> (ARM, 436 bytes, Stack size 112 bytes, WebCameraLog.o(i.Config_GetLog))
<BR><BR>[Calls]<UL><LI><a href="#[562be10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetPrivilege
<LI><a href="#[56aaca8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4deea94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpChar2Hex
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4be6c]"></a>Config_GetLogo</STRONG> (ARM, 152 bytes, Stack size 152 bytes, Register.o(i.Config_GetLogo))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
<LI><a href="#[4deeff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpLong2String
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4b5f8]"></a>Config_GetMac</STRONG> (ARM, 148 bytes, Stack size 48 bytes, System.o(i.Config_GetMac))
<BR><BR>[Calls]<UL><LI><a href="#[4dee54c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlGetMac
<LI><a href="#[4deea94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpChar2Hex
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4b510]"></a>Config_GetMail</STRONG> (ARM, 304 bytes, Stack size 400 bytes, Mailapp.o(i.Config_GetMail))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
<LI><a href="#[4e4cec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpNum
<LI><a href="#[4deeff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpLong2String
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4b92c]"></a>Config_GetMediaFormat</STRONG> (ARM, 136 bytes, Stack size 144 bytes, CameraCtl.o(i.Config_GetMediaFormat))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4deeff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpLong2String
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4ba24]"></a>Config_GetMotionDetect</STRONG> (ARM, 124 bytes, Stack size 144 bytes, CameraCtl.o(i.Config_GetMotionDetect))
<BR><BR>[Calls]<UL><LI><a href="#[4deeff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpLong2String
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4c210]"></a>Config_GetMyself</STRONG> (ARM, 148 bytes, Stack size 152 bytes, User.o(i.Config_GetMyself))
<BR><BR>[Calls]<UL><LI><a href="#[4def474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetBool
<LI><a href="#[4eabd00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlGetMyself
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4ad34]"></a>Config_GetName</STRONG> (ARM, 56 bytes, Stack size 8 bytes, System.o(i.Config_GetName))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4aaf0]"></a>Config_GetPPP</STRONG> (ARM, 288 bytes, Stack size 56 bytes, System.o(i.Config_GetPPP))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4e4cec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpNum
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
<LI><a href="#[4dee380]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ppot_is_online
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4c458]"></a>Config_GetStatus</STRONG> (ARM, 100 bytes, Stack size 144 bytes, Status.o(i.Config_GetStatus))
<BR><BR>[Calls]<UL><LI><a href="#[562be84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetRunTimeState
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4eab5a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetWebCamStateString
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4bf54]"></a>Config_GetTime</STRONG> (ARM, 196 bytes, Stack size 152 bytes, Register.o(i.Config_GetTime))
<BR><BR>[Calls]<UL><LI><a href="#[4e4a244]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetCheckedTime
<LI><a href="#[4deeff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpLong2String
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4abd8]"></a>Config_GetUPnP</STRONG> (ARM, 252 bytes, Stack size 64 bytes, System.o(i.Config_GetUPnP))
<BR><BR>[Calls]<UL><LI><a href="#[4dee468]">&gt&gt</a>&nbsp;&nbsp;&nbsp;upnp_get_port
<LI><a href="#[4dee3f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;upnp_get_extip
<LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4e4cec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpNum
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4c19c]"></a>Config_GetUser</STRONG> (ARM, 336 bytes, Stack size 920 bytes, User.o(i.Config_GetUser))
<BR><BR>[Calls]<UL><LI><a href="#[4def474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetBool
<LI><a href="#[4eab880]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlGetUser
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4acc0]"></a>Config_GetVNet</STRONG> (ARM, 248 bytes, Stack size 288 bytes, BypassClient.o(i.Config_GetVNet))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4e4cec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpNum
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4c370]"></a>Config_GetVer</STRONG> (ARM, 60 bytes, Stack size 8 bytes, Version.o(i.Config_GetVer))
<BR><BR>[Calls]<UL><LI><a href="#[71ee3ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WRGetProductVersion
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4b754]"></a>Config_GetWlan</STRONG> (ARM, 604 bytes, Stack size 168 bytes, wlan0.o(i.Config_GetWlan))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4e4cec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpNum
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4deed40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wsp_get_config_state
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4d418]"></a>Config_MemDebug</STRONG> (ARM, 3776 bytes, Stack size 344 bytes, LibIPCamera.o(i.Config_MemDebug))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
<LI><a href="#[4e4d338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4e4d254]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIP2String
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
<LI><a href="#[4e4d16c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ppot_disconnect
<LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[4e4d088]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ppot_connect
<LI><a href="#[4e4cec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpNum
<LI><a href="#[4e4cde8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[4e4cd74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetWlanChannel
<LI><a href="#[4e4cd00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;upnp_refresh
<LI><a href="#[4e4cc8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DDNS_CheckIP
<LI><a href="#[4e4cc1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DDNS_Update
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4e4cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcuGetErrorStatus
<LI><a href="#[4e4cb30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetWlanPSMode
<LI><a href="#[4e4cab8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetWlanHostSleepCfg
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[4e4ca48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mallinfo
<LI><a href="#[4db4d88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoDynamicBitrate
<LI><a href="#[4e4c9d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyRead
<LI><a href="#[4e4c964]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetULong
<LI><a href="#[4e4c8f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cReadI2C
<LI><a href="#[4e4c884]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cWriteI2C
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4b258]"></a>Config_Reboot</STRONG> (ARM, 116 bytes, Stack size 24 bytes, System.o(i.Config_Reboot))
<BR><BR>[Calls]<UL><LI><a href="#[4def6b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetClientAddr
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
<LI><a href="#[4deec54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;RebootOnConnectionOver
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4b6e0]"></a>Config_ScanWlan</STRONG> (ARM, 364 bytes, Stack size 2344 bytes, wlan0.o(i.Config_ScanWlan))
<BR><BR>[Calls]<UL><LI><a href="#[4eaa824]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlScanAP
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
<LI><a href="#[4e4cec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpNum
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4b49c]"></a>Config_SendMail</STRONG> (ARM, 108 bytes, Stack size 8 bytes, Mailapp.o(i.Config_SendMail))
<BR><BR>[Calls]<UL><LI><a href="#[5456f70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerNotify
<LI><a href="#[5456ef8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerWait
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[57b6f30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DO_TestSendMailFile
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4b8b4]"></a>Config_SetCamera</STRONG> (ARM, 100 bytes, Stack size 80 bytes, CameraCtl.o(i.Config_SetCamera))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[5457588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptSetFrequency
<LI><a href="#[4deeff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpLong2String
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4c288]"></a>Config_SetDDNS</STRONG> (ARM, 696 bytes, Stack size 72 bytes, HttpClient.o(i.Config_SetDDNS))
<BR><BR>[Calls]<UL><LI><a href="#[4def474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetBool
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4def404]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetIP
<LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4def554]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpMyStrncpy
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[4e4cc1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DDNS_Update
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4b428]"></a>Config_SetHttp</STRONG> (ARM, 260 bytes, Stack size 40 bytes, System.o(i.Config_SetHttp))
<BR><BR>[Calls]<UL><LI><a href="#[4def6b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetClientAddr
<LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4defdb8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99802Reboot
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4b340]"></a>Config_SetIP</STRONG> (ARM, 640 bytes, Stack size 56 bytes, System.o(i.Config_SetIP))
<BR><BR>[Calls]<UL><LI><a href="#[4def6b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetClientAddr
<LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4def554]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpMyStrncpy
<LI><a href="#[4def4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[4def474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetBool
<LI><a href="#[4def404]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetIP
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
<LI><a href="#[4def2a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wsp_set_network_ip
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4bee0]"></a>Config_SetLogo</STRONG> (ARM, 664 bytes, Stack size 48 bytes, Register.o(i.Config_SetLogo))
<BR><BR>[Calls]<UL><LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
<LI><a href="#[4eab4bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendCameraMsg
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4b66c]"></a>Config_SetMac</STRONG> (ARM, 276 bytes, Stack size 40 bytes, System.o(i.Config_SetMac))
<BR><BR>[Calls]<UL><LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4dee704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[4dee5bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetMac
<LI><a href="#[4deec54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;RebootOnConnectionOver
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4b584]"></a>Config_SetMail</STRONG> (ARM, 676 bytes, Stack size 32 bytes, Mailapp.o(i.Config_SetMail))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4def554]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpMyStrncpy
<LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4def474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetBool
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4b9a8]"></a>Config_SetMediaFormat</STRONG> (ARM, 184 bytes, Stack size 24 bytes, CameraCtl.o(i.Config_SetMediaFormat))
<BR><BR>[Calls]<UL><LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[4eaae1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetMediaFormat
<LI><a href="#[4deec54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;RebootOnConnectionOver
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4baa0]"></a>Config_SetMotionDetect</STRONG> (ARM, 308 bytes, Stack size 64 bytes, CameraCtl.o(i.Config_SetMotionDetect))
<BR><BR>[Calls]<UL><LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4def4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[4eaa9f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpString2Long
<LI><a href="#[4def474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetBool
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
<LI><a href="#[4eab4bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendCameraMsg
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4ada8]"></a>Config_SetName</STRONG> (ARM, 148 bytes, Stack size 32 bytes, System.o(i.Config_SetName))
<BR><BR>[Calls]<UL><LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4def554]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpMyStrncpy
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4aa7c]"></a>Config_SetPPP</STRONG> (ARM, 796 bytes, Stack size 152 bytes, System.o(i.Config_SetPPP))
<BR><BR>[Calls]<UL><LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4def474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetBool
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4def554]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpMyStrncpy
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4e4d16c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ppot_disconnect
<LI><a href="#[4e4d088]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ppot_connect
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4bfc8]"></a>Config_SetTime</STRONG> (ARM, 256 bytes, Stack size 40 bytes, Register.o(i.Config_SetTime))
<BR><BR>[Calls]<UL><LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[4e4a1d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetCheckedTime
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4ab64]"></a>Config_SetUPnP</STRONG> (ARM, 212 bytes, Stack size 32 bytes, System.o(i.Config_SetUPnP))
<BR><BR>[Calls]<UL><LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4def474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetBool
<LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4deec54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;RebootOnConnectionOver
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4c128]"></a>Config_SetUser</STRONG> (ARM, 344 bytes, Stack size 160 bytes, User.o(i.Config_SetUser))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[5642438]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetCurrentUser
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4eabc1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAuthGetUser
<LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4eabc90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetUser
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4c03c]"></a>Config_SetUserCheck</STRONG> (ARM, 116 bytes, Stack size 16 bytes, User.o(i.Config_SetUserCheck))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d928]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsEnableUserCheck
<LI><a href="#[4def474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetBool
<LI><a href="#[4eab808]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetUserCheck
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4ac4c]"></a>Config_SetVNet</STRONG> (ARM, 480 bytes, Stack size 72 bytes, BypassClient.o(i.Config_SetVNet))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4def474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetBool
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4def554]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpMyStrncpy
<LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[52aaaac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sscanf
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4deec54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;RebootOnConnectionOver
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4b7c8]"></a>Config_SetWlan</STRONG> (ARM, 540 bytes, Stack size 96 bytes, wlan0.o(i.Config_SetWlan))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[4eaaae0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetWlan
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
<LI><a href="#[4dee9b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetWlan
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4aff4]"></a>Config_UpdateProgress</STRONG> (ARM, 144 bytes, Stack size 80 bytes, Upload.o(i.Config_UpdateProgress))
<BR><BR>[Calls]<UL><LI><a href="#[4deeff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpLong2String
<LI><a href="#[4e4d1e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[8cc5054]"></a>Convolve</STRONG> (ARM, 448 bytes, Stack size 28 bytes, convolve.o(i.Convolve))
<BR>[Called By]<UL><LI><a href="#[8ec7778]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Norm_Corr
<LI><a href="#[8cc5308]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cl_ltp
<LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
</UL><P><STRONG><a name="[5859ca8]"></a>CreateAndSendPackage</STRONG> (ARM, 264 bytes, Stack size 144 bytes, mcrxtest.o(i.CreateAndSendPackage))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[5859c38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MCTxTest
</UL><BR>[Called By]<UL><LI><a href="#[5859b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mc_rx_socket
</UL><P><STRONG><a name="[5950978]"></a>CreateFileList</STRONG> (ARM, 148 bytes, Stack size 16 bytes, mail.o(i.CreateFileList))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[57b6f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DO_TestSendMailFile
</UL><P><STRONG><a name="[4e4a484]"></a>CreateMsgQueue</STRONG> (ARM, 204 bytes, Stack size 24 bytes, Msg.o(i.CreateMsgQueue))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[582d278]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket_pipe
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[5536bc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpCreateList
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4c2d3fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_init
</UL><BR>[Called By]<UL><LI><a href="#[4e4a6c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetOtherThread
</UL><P><STRONG><a name="[55372d4]"></a>CreateSubCmdRunStruct</STRONG> (ARM, 180 bytes, Stack size 32 bytes, Register.o(i.CreateSubCmdRunStruct))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[5537260]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpParseString
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[55371e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsRegisterEmbedFunEx
</UL><BR>[Called By]<UL><LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
</UL><P><STRONG><a name="[4e4cc8c]"></a>DDNS_CheckIP</STRONG> (ARM, 88 bytes, Stack size 24 bytes, HttpClient.o(i.DDNS_CheckIP))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5887678]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DDNS_Do_CheckIP
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4e4cc1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DDNS_Update
</UL><P><STRONG><a name="[5887678]"></a>DDNS_Do_CheckIP</STRONG> (ARM, 248 bytes, Stack size 88 bytes, HttpClient.o(i.DDNS_Do_CheckIP))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5716828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjInit
<LI><a href="#[57165f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;InsertCustomProcess
</UL><BR>[Called By]<UL><LI><a href="#[4e4cc8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DDNS_CheckIP
</UL><P><STRONG><a name="[58877cc]"></a>DDNS_HTTPC_Init</STRONG> (ARM, 36 bytes, Stack size 8 bytes, HttpClient.o(i.DDNS_HTTPC_Init))
<BR><BR>[Calls]<UL><LI><a href="#[5887924]">&gt&gt</a>&nbsp;&nbsp;&nbsp;HTTPC_Init
</UL><BR>[Address Reference Count : 1]<UL><LI> HttpClient.o(i.Do_DNS)
</UL><P><STRONG><a name="[4e4cc1c]"></a>DDNS_Update</STRONG> (ARM, 32 bytes, Stack size 0 bytes, HttpClient.o(i.DDNS_Update))
<BR><BR>[Calls]<UL><LI><a href="#[58876ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DDNS_Update_IP
<LI><a href="#[4e4cc8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DDNS_CheckIP
</UL><BR>[Called By]<UL><LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4e4c288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetDDNS
<LI><a href="#[4dee7dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;OnSetIP
<LI><a href="#[5889cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckDDNS
</UL><P><STRONG><a name="[58876ec]"></a>DDNS_Update_IP</STRONG> (ARM, 220 bytes, Stack size 48 bytes, HttpClient.o(i.DDNS_Update_IP))
<BR><BR>[Calls]<UL><LI><a href="#[511937c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[5887760]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Do_DNS
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[588a7e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CkIP_Response_dnsomatic
<LI><a href="#[588a864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CkIP_Response_dyndns
<LI><a href="#[4e4cc1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DDNS_Update
</UL><P><STRONG><a name="[57b6f30]"></a>DO_TestSendMailFile</STRONG> (ARM, 268 bytes, Stack size 64 bytes, mail.o(i.DO_TestSendMailFile))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5950978]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CreateFileList
<LI><a href="#[5950818]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_mail_mem
<LI><a href="#[595088c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DeleteFileList
<LI><a href="#[5950900]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddBufferFileList
<LI><a href="#[5950a5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sendMailMsg
<LI><a href="#[5950acc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ret_mail_mem
</UL><BR>[Called By]<UL><LI><a href="#[4e4b49c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SendMail
<LI><a href="#[5ad0ae4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capture_and_email_picture
</UL><P><STRONG><a name="[759f2d8]"></a>DSP_ReadI2C</STRONG> (ARM, 72 bytes, Stack size 12 bytes, Dsp_i2c.o(i.DSP_ReadI2C))
<BR><BR>[Calls]<UL><LI><a href="#[7e28b00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;OstartI2C
<LI><a href="#[7e28a1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;O1B2I2C_wACK
<LI><a href="#[7e28a90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;OstopI2C
<LI><a href="#[7e28938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;I1B_fromI2C
</UL><BR>[Called By]<UL><LI><a href="#[4e4c8f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;i2cReadI2C
</UL><P><STRONG><a name="[759f018]"></a>DSP_ReadI2C_16b</STRONG> (ARM, 80 bytes, Stack size 12 bytes, Dsp_i2c.o(i.DSP_ReadI2C_16b))
<BR><BR>[Calls]<UL><LI><a href="#[7e28b00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;OstartI2C
<LI><a href="#[7e28a1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;O1B2I2C_wACK
<LI><a href="#[7e288c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;I1B_fromI2C_16b
<LI><a href="#[7e28938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;I1B_fromI2C
<LI><a href="#[7e28a90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;OstopI2C
</UL><BR>[Called By]<UL><LI><a href="#[759f08c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;i2cReadI2C_16b
</UL><P><STRONG><a name="[759f348]"></a>DSP_WriteI2C</STRONG> (ARM, 52 bytes, Stack size 12 bytes, Dsp_i2c.o(i.DSP_WriteI2C))
<BR><BR>[Calls]<UL><LI><a href="#[7e28b00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;OstartI2C
<LI><a href="#[7e28a1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;O1B2I2C_wACK
<LI><a href="#[7e28a90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;OstopI2C
</UL><BR>[Called By]<UL><LI><a href="#[4e4c884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;i2cWriteI2C
</UL><P><STRONG><a name="[759f100]"></a>DSP_WriteI2C_16b</STRONG> (ARM, 60 bytes, Stack size 12 bytes, Dsp_i2c.o(i.DSP_WriteI2C_16b))
<BR><BR>[Calls]<UL><LI><a href="#[7e28b00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;OstartI2C
<LI><a href="#[7e28a1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;O1B2I2C_wACK
<LI><a href="#[7e28a90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;OstopI2C
</UL><BR>[Called By]<UL><LI><a href="#[759f178]">&lt&lt</a>&nbsp;&nbsp;&nbsp;i2cWriteI2C_16b
</UL><P><STRONG><a name="[8cd6d44]"></a>D_plsf_3</STRONG> (ARM, 640 bytes, Stack size 72 bytes, d_plsf_3.o(i.D_plsf_3))
<BR><BR>[Calls]<UL><LI><a href="#[8d879fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Reorder_lsf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[8cd6e94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lsf_lsp
</UL><BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
<LI><a href="#[8cd6f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec
</UL><P><STRONG><a name="[8cd6c60]"></a>D_plsf_5</STRONG> (ARM, 664 bytes, Stack size 120 bytes, d_plsf_5.o(i.D_plsf_5))
<BR><BR>[Calls]<UL><LI><a href="#[8d879fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Reorder_lsf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[8cd6e94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lsf_lsp
</UL><BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cd77b0]"></a>D_plsf_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, d_plsf.o(i.D_plsf_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[886ef44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_exit
</UL><P><STRONG><a name="[8cd7390]"></a>D_plsf_init</STRONG> (ARM, 104 bytes, Stack size 16 bytes, d_plsf.o(i.D_plsf_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[886eddc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_init
</UL><P><STRONG><a name="[8cd7ae0]"></a>D_plsf_reset</STRONG> (ARM, 76 bytes, Stack size 8 bytes, d_plsf.o(i.D_plsf_reset))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[886f0ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_reset
</UL><P><STRONG><a name="[8cd666c]"></a>Dec_gain</STRONG> (ARM, 384 bytes, Stack size 72 bytes, dec_gain.o(i.Dec_gain))
<BR><BR>[Calls]<UL><LI><a href="#[8d99304]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Log2
<LI><a href="#[8d93fdc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred
<LI><a href="#[8d93f70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pow2
<LI><a href="#[8d93efc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred_update
</UL><BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cd6b7c]"></a>Dec_lag3</STRONG> (ARM, 284 bytes, Stack size 24 bytes, dec_lag3.o(i.Dec_lag3))
<BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cd6a94]"></a>Dec_lag6</STRONG> (ARM, 188 bytes, Stack size 12 bytes, dec_lag6.o(i.Dec_lag6))
<BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[592459c]"></a>DecodeBase64</STRONG> (ARM, 212 bytes, Stack size 24 bytes, util.o(i.DecodeBase64))
<BR>[Called By]<UL><LI><a href="#[59af2e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;base64decode
<LI><a href="#[5924610]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelReadData
</UL><P><STRONG><a name="[755fd20]"></a>DecodeLAW</STRONG> (ARM, 168 bytes, Stack size 40 bytes, aulaw_interface.o(i.DecodeLAW))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[755ff5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauDecode
</UL><P><STRONG><a name="[886ec7c]"></a>Decoder_amr</STRONG> (ARM, 5876 bytes, Stack size 456 bytes, dec_amr.o(i.Decoder_amr))
<BR><BR>[Calls]<UL><LI><a href="#[8cd6f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rx_dtx_handler
<LI><a href="#[886f0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_reset
<LI><a href="#[8cd6f00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dtx_dec
<LI><a href="#[8cd6e94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lsf_lsp
<LI><a href="#[8cd6e28]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lsp_avg
<LI><a href="#[8cd6db4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;build_CN_param
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[8cd6d44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;D_plsf_3
<LI><a href="#[8cd6cd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Int_lpc_1to3
<LI><a href="#[8cd6c60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;D_plsf_5
<LI><a href="#[8cd6bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Int_lpc_1and3
<LI><a href="#[8cd6b7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Dec_lag3
<LI><a href="#[8cc50c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pred_lt_3or6
<LI><a href="#[8cd6b04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;decode_2i40_9bits
<LI><a href="#[8cd6a94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Dec_lag6
<LI><a href="#[8cd6a1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;decode_2i40_11bits
<LI><a href="#[8cd69a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;decode_3i40_14bits
<LI><a href="#[8cd692c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;decode_4i40_17bits
<LI><a href="#[8cd68b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dec_8i40_31bits
<LI><a href="#[8cd6844]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ec_gain_pitch
<LI><a href="#[8cd67d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;d_gain_pitch
<LI><a href="#[8cd6754]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ec_gain_pitch_update
<LI><a href="#[8cd66dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dec_10i40_35bits
<LI><a href="#[8cd666c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Dec_gain
<LI><a href="#[8cd65f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ec_gain_code
<LI><a href="#[8cd6580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ec_gain_code_update
<LI><a href="#[8cd6510]">&gt&gt</a>&nbsp;&nbsp;&nbsp;d_gain_code
<LI><a href="#[8cd64a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Int_lsf
<LI><a href="#[8cd6430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cb_gain_average
<LI><a href="#[8cd63bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ph_disp_release
<LI><a href="#[8cd6348]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ph_disp_lock
<LI><a href="#[8cd62dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ph_disp
<LI><a href="#[8cd626c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sqrt_l_exp
<LI><a href="#[8cd6200]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Ex_ctrl
<LI><a href="#[8cd6194]">&gt&gt</a>&nbsp;&nbsp;&nbsp;agc2
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[8cd60b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Bgn_scd
<LI><a href="#[8cd603c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dtx_dec_activity_update
</UL><BR>[Called By]<UL><LI><a href="#[7ecff90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame
</UL><P><STRONG><a name="[886ef44]"></a>Decoder_amr_exit</STRONG> (ARM, 144 bytes, Stack size 8 bytes, dec_amr.o(i.Decoder_amr_exit))
<BR><BR>[Calls]<UL><LI><a href="#[8cd77b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;D_plsf_exit
<LI><a href="#[8cd7738]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ec_gain_pitch_exit
<LI><a href="#[8cd76c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ec_gain_code_exit
<LI><a href="#[8cd764c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred_exit
<LI><a href="#[8cd75d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Bgn_scd_exit
<LI><a href="#[8cd7564]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ph_disp_exit
<LI><a href="#[8cd74e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cb_gain_average_exit
<LI><a href="#[8cd7474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lsp_avg_exit
<LI><a href="#[8cd7400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dtx_dec_exit
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[886eddc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_init
<LI><a href="#[7ed02ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame_init
</UL><P><STRONG><a name="[886eddc]"></a>Decoder_amr_init</STRONG> (ARM, 352 bytes, Stack size 16 bytes, dec_amr.o(i.Decoder_amr_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[8cd7390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;D_plsf_init
<LI><a href="#[8cd7318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ec_gain_pitch_init
<LI><a href="#[8cd72a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ec_gain_code_init
<LI><a href="#[8cd722c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred_init
<LI><a href="#[8cd71b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cb_gain_average_init
<LI><a href="#[8cd713c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lsp_avg_init
<LI><a href="#[8cd70c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Bgn_scd_init
<LI><a href="#[8cd7054]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ph_disp_init
<LI><a href="#[8cd6fe0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dtx_dec_init
<LI><a href="#[886ef44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_exit
<LI><a href="#[886f0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_reset
</UL><BR>[Called By]<UL><LI><a href="#[7ed02ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame_init
</UL><P><STRONG><a name="[886f0ac]"></a>Decoder_amr_reset</STRONG> (ARM, 304 bytes, Stack size 24 bytes, dec_amr.o(i.Decoder_amr_reset))
<BR><BR>[Calls]<UL><LI><a href="#[8cc62e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Set_zero
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[8cd7bc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cb_gain_average_reset
<LI><a href="#[8cd7b54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lsp_avg_reset
<LI><a href="#[8cd7ae0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;D_plsf_reset
<LI><a href="#[8cd7a68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ec_gain_pitch_reset
<LI><a href="#[8cd79f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ec_gain_code_reset
<LI><a href="#[8cd797c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred_reset
<LI><a href="#[8cd7908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Bgn_scd_reset
<LI><a href="#[8cd7894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ph_disp_reset
<LI><a href="#[8cd7820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dtx_dec_reset
</UL><BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
<LI><a href="#[886eddc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_init
<LI><a href="#[7ed02ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame_init
<LI><a href="#[7ed0008]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame_reset
</UL><P><STRONG><a name="[595088c]"></a>DeleteFileList</STRONG> (ARM, 56 bytes, Stack size 16 bytes, mail.o(i.DeleteFileList))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[57b6f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DO_TestSendMailFile
</UL><P><STRONG><a name="[57746bc]"></a>DeleteHost</STRONG> (ARM, 20 bytes, Stack size 0 bytes, Ntp.o(i.DeleteHost))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[7686d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Process
<LI><a href="#[5887994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Process
<LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
</UL><P><STRONG><a name="[59c93e0]"></a>DeleteNamedString</STRONG> (ARM, 48 bytes, Stack size 8 bytes, C_String.o(i.DeleteNamedString))
<BR><BR>[Calls]<UL><LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[59c95a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufNAMESTRINGDecRef
</UL><BR>[Called By]<UL><LI><a href="#[59c9368]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDelDictParam
<LI><a href="#[57e77e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteDict
</UL><P><STRONG><a name="[5537164]"></a>DeleteSubCmdRunStruct</STRONG> (ARM, 36 bytes, Stack size 8 bytes, Register.o(i.DeleteSubCmdRunStruct))
<BR><BR>[Calls]<UL><LI><a href="#[55370e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteParseString
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
</UL><P><STRONG><a name="[8e09fd0]"></a>Div_32</STRONG> (ARM, 244 bytes, Stack size 40 bytes, oper_32b.o(i.Div_32))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[8d54e30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_msu
</UL><BR>[Called By]<UL><LI><a href="#[8e06658]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Levinson
</UL><P><STRONG><a name="[5887760]"></a>Do_DNS</STRONG> (ARM, 420 bytes, Stack size 392 bytes, HttpClient.o(i.Do_DNS))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4def22c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetPubIPInfo
<LI><a href="#[4e4d254]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIP2String
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[5716828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjInit
<LI><a href="#[57165f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;InsertCustomProcess
</UL><BR>[Called By]<UL><LI><a href="#[58876ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DDNS_Update_IP
</UL><P><STRONG><a name="[4a5583c]"></a>DownInterface</STRONG> (ARM, 348 bytes, Stack size 56 bytes, System.o(i.DownInterface))
<BR><BR>[Calls]<UL><LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[4dee770]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetIP
<LI><a href="#[4e4da90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetNullIP
<LI><a href="#[4dee848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetRandomIP
<LI><a href="#[4dee9b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlan
</UL><P><STRONG><a name="[553772c]"></a>DumpJsObj</STRONG> (ARM, 680 bytes, Stack size 32 bytes, Register.o(i.DumpJsObj))
<BR><BR>[Calls]<UL><LI><a href="#[553b324]">&gt&gt</a>&nbsp;&nbsp;&nbsp;HTN
<LI><a href="#[4dee308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBodyString
<LI><a href="#[5537894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetCStyleString
<LI><a href="#[5537818]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteCStyleString
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[553779c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetCleanVariableName
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[553772c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DumpJsObj
</UL><BR>[Called By]<UL><LI><a href="#[553772c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DumpJsObj
<LI><a href="#[55376b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReturnTypeEnd
</UL><P><STRONG><a name="[5537984]"></a>DumpJsVar</STRONG> (ARM, 384 bytes, Stack size 40 bytes, Register.o(i.DumpJsVar))
<BR><BR>[Calls]<UL><LI><a href="#[4def474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetBool
<LI><a href="#[4dee308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBodyString
<LI><a href="#[5537984]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DumpJsVar
<LI><a href="#[553790c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetParentXML
<LI><a href="#[5537894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetCStyleString
<LI><a href="#[5537818]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteCStyleString
</UL><BR>[Called By]<UL><LI><a href="#[5537984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DumpJsVar
<LI><a href="#[55376b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReturnTypeEnd
</UL><P><STRONG><a name="[55379f4]"></a>Dump_HttpAdd</STRONG> (ARM, 24 bytes, Stack size 0 bytes, Register.o(i.Dump_HttpAdd))
<BR><BR>[Calls]<UL><LI><a href="#[4dee308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBodyString
</UL><BR>[Address Reference Count : 1]<UL><LI> Register.o(i.ReturnTypeEnd)
</UL><P><STRONG><a name="[4eaa720]"></a>ERSP_rovio_libns_restore_defaults</STRONG> (ARM, 4 bytes, Stack size 0 bytes, er_cgi_thread_routines.o(i.ERSP_rovio_libns_restore_defaults))
<BR><BR>[Calls]<UL><LI><a href="#[4fe14c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_restore_to_default
</UL><BR>[Called By]<UL><LI><a href="#[4e4b1dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SetFactoryDefault
<LI><a href="#[4eaa7a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetFactoryDefault
</UL><P><STRONG><a name="[4f72f90]"></a>ERSP_rovio_libns_thread_resume</STRONG> (ARM, 12 bytes, Stack size 0 bytes, er_ns_nav.o(i.ERSP_rovio_libns_thread_resume))
<BR><BR>[Calls]<UL><LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
</UL><BR>[Called By]<UL><LI><a href="#[734d4b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsWakeup
</UL><P><STRONG><a name="[4f73014]"></a>ERSP_rovio_libns_thread_suspend</STRONG> (ARM, 12 bytes, Stack size 0 bytes, er_ns_nav.o(i.ERSP_rovio_libns_thread_suspend))
<BR><BR>[Calls]<UL><LI><a href="#[4a0377c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_suspend
</UL><BR>[Called By]<UL><LI><a href="#[734d524]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsSuspend
</UL><P><STRONG><a name="[8ec7280]"></a>Enc_lag3</STRONG> (ARM, 260 bytes, Stack size 12 bytes, enc_lag3.o(i.Enc_lag3))
<BR>[Called By]<UL><LI><a href="#[8d737c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pitch_fr
</UL><P><STRONG><a name="[8ec7210]"></a>Enc_lag6</STRONG> (ARM, 84 bytes, Stack size 0 bytes, enc_lag6.o(i.Enc_lag6))
<BR>[Called By]<UL><LI><a href="#[8d737c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pitch_fr
</UL><P><STRONG><a name="[57b6fa8]"></a>EncodeBase64</STRONG> (ARM, 656 bytes, Stack size 56 bytes, Mailapp.o(i.EncodeBase64))
<BR><BR>[Calls]<UL><LI><a href="#[57b701c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Base64BufferSize
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
</UL><BR>[Called By]<UL><LI><a href="#[5887994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Process
</UL><P><STRONG><a name="[755e2c8]"></a>EncodeLAW</STRONG> (ARM, 172 bytes, Stack size 40 bytes, aulaw_interface.o(i.EncodeLAW))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[7561350]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauRecord_ALAW_OR_ULAW
</UL><P><STRONG><a name="[537dadc]"></a>EvaluateScalingSize</STRONG> (ARM, 132 bytes, Stack size 24 bytes, scaling.o(i.EvaluateScalingSize))
<BR><BR>[Calls]<UL><LI><a href="#[7ede18c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__IsScalingOK
</UL><BR>[Called By]<UL><LI><a href="#[537ffb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdAdjustWindow
</UL><P><STRONG><a name="[8cd6200]"></a>Ex_ctrl</STRONG> (ARM, 416 bytes, Stack size 32 bytes, ex_ctrl.o(i.Ex_ctrl))
<BR><BR>[Calls]<UL><LI><a href="#[8d66ae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gmed_n
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[57166dc]"></a>FD_Final</STRONG> (ARM, 4 bytes, Stack size 0 bytes, SSelect.o(i.FD_Final))
<BR>[Address Reference Count : 5]<UL><LI> BypassClient.o(i.BP_LOCAL_Init)
<LI> BypassClient.o(i.BP_REMOTE_Init)
<LI> HttpClient.o(i.HTTPC_Init)
<LI> Ntp.o(i.NTPC_Init)
<LI> Msg.o(i.SELECT_MSG_Init)
</UL><P><STRONG><a name="[571674c]"></a>FD_Init</STRONG> (ARM, 164 bytes, Stack size 0 bytes, SSelect.o(i.FD_Init))
<BR>[Address Reference Count : 5]<UL><LI> BypassClient.o(i.BP_LOCAL_Init)
<LI> BypassClient.o(i.BP_REMOTE_Init)
<LI> HttpClient.o(i.HTTPC_Init)
<LI> Ntp.o(i.NTPC_Init)
<LI> Msg.o(i.SELECT_MSG_Init)
</UL><P><STRONG><a name="[5716670]"></a>FD_Next</STRONG> (ARM, 44 bytes, Stack size 0 bytes, SSelect.o(i.FD_Next))
<BR>[Called By]<UL><LI><a href="#[7686ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_LOCAL_Process
<LI><a href="#[7686d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Process
<LI><a href="#[5887994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Process
<LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
</UL><P><STRONG><a name="[722434c]"></a>FMI_INTHandler</STRONG> (ARM, 808 bytes, Stack size 32 bytes, fmi.o(i.FMI_INTHandler))
<BR><BR>[Calls]<UL><LI><a href="#[72242d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_INTHandler
<LI><a href="#[722425c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSD_INTHandler
<LI><a href="#[7224174]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiBuffer2SDM
<LI><a href="#[72243c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDRAM_Read
<LI><a href="#[4c2ef7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_acknowledge
</UL><BR>[Address Reference Count : 1]<UL><LI> fmi.o(i.fmiInitDevice)
</UL><P><STRONG><a name="[72240fc]"></a>FMI_INTHandlerDsr</STRONG> (ARM, 24 bytes, Stack size 0 bytes, fmi.o(i.FMI_INTHandlerDsr))
<BR><BR>[Calls]<UL><LI><a href="#[7224084]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSD_INTHandlerDsr
</UL><BR>[Address Reference Count : 1]<UL><LI> fmi.o(i.fmiInitDevice)
</UL><P><STRONG><a name="[71ecd2c]"></a>FTPRequest</STRONG> (ARM, 108 bytes, Stack size 56 bytes, vp_com.o(i.FTPRequest))
<BR><BR>[Calls]<UL><LI><a href="#[71ed618]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBRead
<LI><a href="#[71ed5a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBResetForVCom
<LI><a href="#[71ee058]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrftpSettingStru
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[71ed6f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;statusReply
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
</UL><P><STRONG><a name="[577464c]"></a>FlushSocket</STRONG> (ARM, 116 bytes, Stack size 272 bytes, Ntp.o(i.FlushSocket))
<BR><BR>[Calls]<UL><LI><a href="#[50a236c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;recv
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
</UL><BR>[Called By]<UL><LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
</UL><P><STRONG><a name="[57e7858]"></a>FreeBoundary</STRONG> (ARM, 4 bytes, Stack size 0 bytes, C_HttpSupport.o(i.FreeBoundary))
<BR><BR>[Calls]<UL><LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
</UL><BR>[Called By]<UL><LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
</UL><P><STRONG><a name="[57e7a28]"></a>FreeInnerPartName</STRONG> (ARM, 4 bytes, Stack size 0 bytes, C_HttpSupport.o(i.FreeInnerPartName))
<BR><BR>[Calls]<UL><LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
</UL><BR>[Called By]<UL><LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[57e7c0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ProcessUpdate
</UL><P><STRONG><a name="[7223ea4]"></a>GPIO_INTHandler</STRONG> (ARM, 60 bytes, Stack size 16 bytes, fmi.o(i.GPIO_INTHandler))
<BR><BR>[Calls]<UL><LI><a href="#[49f8848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GpioOtherInterruptPinManage
<LI><a href="#[4c2ef7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_acknowledge
</UL><BR>[Address Reference Count : 1]<UL><LI> fmi.o(i.fmiInstallGPIO)
</UL><P><STRONG><a name="[49f8938]"></a>GPIO_ISR_USBPower</STRONG> (ARM, 84 bytes, Stack size 4 bytes, lib_patch.o(i.GPIO_ISR_USBPower))
<BR><BR>[Calls]<UL><LI><a href="#[49f89b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MY_Read_GPIO7
</UL><BR>[Called By]<UL><LI><a href="#[49f8848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GpioOtherInterruptPinManage
</UL><P><STRONG><a name="[8de3364]"></a>G_code</STRONG> (ARM, 264 bytes, Stack size 104 bytes, g_code.o(i.G_code))
<BR><BR>[Calls]<UL><LI><a href="#[8d461d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;norm_l
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[8cc5228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant
</UL><P><STRONG><a name="[8d7375c]"></a>G_pitch</STRONG> (ARM, 772 bytes, Stack size 136 bytes, g_pitch.o(i.G_pitch))
<BR><BR>[Calls]<UL><LI><a href="#[8d461d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;norm_l
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[8cc5308]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cl_ltp
</UL><P><STRONG><a name="[5c07acc]"></a>Get64KSafeSpace</STRONG> (ARM, 108 bytes, Stack size 16 bytes, er_rsm_thread_routines.o(i.Get64KSafeSpace))
<BR><BR>[Calls]<UL><LI><a href="#[4e4a074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetFlashCapability
</UL><BR>[Called By]<UL><LI><a href="#[4f72ea0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_init_path_module
</UL><P><STRONG><a name="[57e7940]"></a>GetBoundary</STRONG> (ARM, 68 bytes, Stack size 16 bytes, C_HttpSupport.o(i.GetBoundary))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[825cc18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpParseDescriptionLine
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[825e50c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[825cb98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteDescriptionLine
</UL><BR>[Called By]<UL><LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
</UL><P><STRONG><a name="[4e4a244]"></a>GetCheckedTime</STRONG> (ARM, 92 bytes, Stack size 16 bytes, Register.o(i.GetCheckedTime))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[553a690]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[55373f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetSystemTimeZone
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4bf54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetTime
<LI><a href="#[4e4a2b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;OnHttpInit
<LI><a href="#[5a66654]">&lt&lt</a>&nbsp;&nbsp;&nbsp;buildTime
</UL><P><STRONG><a name="[553779c]"></a>GetCleanVariableName</STRONG> (ARM, 192 bytes, Stack size 16 bytes, Register.o(i.GetCleanVariableName))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[553772c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DumpJsObj
</UL><P><STRONG><a name="[4eaa6a8]"></a>GetConfigCheckSum</STRONG> (ARM, 52 bytes, Stack size 0 bytes, CameraConfig.o(i.GetConfigCheckSum))
<BR>[Called By]<UL><LI><a href="#[4e4b1dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SetFactoryDefault
<LI><a href="#[4e4ddd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReadFlashMemory
<LI><a href="#[4eaa630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__WriteFlashMemory
<LI><a href="#[4eaa4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetDefaultMac
<LI><a href="#[4eaa7a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetFactoryDefault
</UL><P><STRONG><a name="[5859bc4]"></a>GetDevInterface</STRONG> (ARM, 512 bytes, Stack size 72 bytes, mcrxtest.o(i.GetDevInterface))
<BR><BR>[Calls]<UL><LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4cece7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_ntoa
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[5859b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mc_rx_socket
</UL><P><STRONG><a name="[4e4a074]"></a>GetFlashCapability</STRONG> (ARM, 96 bytes, Stack size 24 bytes, CameraConfig.o(i.GetFlashCapability))
<BR><BR>[Calls]<UL><LI><a href="#[7338f78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyGetTotalSize
<LI><a href="#[4e4c9d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyRead
</UL><BR>[Called By]<UL><LI><a href="#[5c07acc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Get64KSafeSpace
<LI><a href="#[4a5496c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ServerStart
</UL><P><STRONG><a name="[4defb84]"></a>GetGeneralIP</STRONG> (ARM, 140 bytes, Stack size 48 bytes, System.o(i.GetGeneralIP))
<BR><BR>[Calls]<UL><LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[4def9d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetIPAddress
</UL><P><STRONG><a name="[4def9d8]"></a>GetIPAddress</STRONG> (ARM, 8 bytes, Stack size 0 bytes, System.o(i.GetIPAddress))
<BR><BR>[Calls]<UL><LI><a href="#[4defb84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetGeneralIP
</UL><BR>[Called By]<UL><LI><a href="#[4e4cab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlanHostSleepCfg
</UL><P><STRONG><a name="[57e7b1c]"></a>GetInnerPartName</STRONG> (ARM, 236 bytes, Stack size 24 bytes, C_HttpSupport.o(i.GetInnerPartName))
<BR><BR>[Calls]<UL><LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[785f888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_New
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
</UL><BR>[Called By]<UL><LI><a href="#[57e7c0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ProcessUpdate
</UL><P><STRONG><a name="[5716430]"></a>GetMsg</STRONG> (ARM, 64 bytes, Stack size 16 bytes, Msg.o(i.GetMsg))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_wait
<LI><a href="#[582d194]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PopMsgNode
<LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><BR>[Called By]<UL><LI><a href="#[582cfcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SELECT_MSG_Process
<LI><a href="#[4e4a410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SelectThread
</UL><P><STRONG><a name="[562be10]"></a>GetPrivilege</STRONG> (ARM, 24 bytes, Stack size 8 bytes, User.o(i.GetPrivilege))
<BR><BR>[Calls]<UL><LI><a href="#[5536ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetAuthPrivilege
</UL><BR>[Called By]<UL><LI><a href="#[4e4c3e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetLog
<LI><a href="#[562be84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetRunTimeState
</UL><P><STRONG><a name="[4def22c]"></a>GetPubIPInfo</STRONG> (ARM, 572 bytes, Stack size 80 bytes, System.o(i.GetPubIPInfo))
<BR><BR>[Calls]<UL><LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4cece7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_ntoa
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ceceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_bootp_option
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4def1bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetRandomIP
</UL><BR>[Called By]<UL><LI><a href="#[4e4b2cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetIP
<LI><a href="#[5887760]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Do_DNS
<LI><a href="#[4dee770]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetIP
<LI><a href="#[4eaabc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetIP
<LI><a href="#[7a3b2bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_recv_response
</UL><P><STRONG><a name="[4def1bc]"></a>GetRandomIP</STRONG> (ARM, 92 bytes, Stack size 8 bytes, System.o(i.GetRandomIP))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[4def22c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetPubIPInfo
<LI><a href="#[4dee848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetRandomIP
</UL><P><STRONG><a name="[55373f0]"></a>GetSystemTimeZone</STRONG> (ARM, 52 bytes, Stack size 48 bytes, Register.o(i.GetSystemTimeZone))
<BR><BR>[Calls]<UL><LI><a href="#[553a690]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[544d544]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gmtime_r
<LI><a href="#[544d628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mktime
</UL><BR>[Called By]<UL><LI><a href="#[4e4a244]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetCheckedTime
<LI><a href="#[4e4a1d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetCheckedTime
</UL><P><STRONG><a name="[4eab5a8]"></a>GetWebCamStateString</STRONG> (ARM, 272 bytes, Stack size 160 bytes, Status.o(i.GetWebCamStateString))
<BR><BR>[Calls]<UL><LI><a href="#[4f29474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcuGetBattery
<LI><a href="#[562bef8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetWiFiStrength
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
</UL><BR>[Called By]<UL><LI><a href="#[4e4c458]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetStatus
<LI><a href="#[56dcec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillCameraData
</UL><P><STRONG><a name="[562bef8]"></a>GetWiFiStrength</STRONG> (ARM, 144 bytes, Stack size 40 bytes, Status.o(i.GetWiFiStrength))
<BR><BR>[Calls]<UL><LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[4eab5a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWebCamStateString
<LI><a href="#[4fc24d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_report
</UL><P><STRONG><a name="[4e4cd74]"></a>GetWlanChannel</STRONG> (ARM, 156 bytes, Stack size 48 bytes, wlan0.o(i.GetWlanChannel))
<BR><BR>[Calls]<UL><LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
</UL><P><STRONG><a name="[4eaa974]"></a>GetWlanOperationMode</STRONG> (ARM, 152 bytes, Stack size 48 bytes, wlan0.o(i.GetWlanOperationMode))
<BR><BR>[Calls]<UL><LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[4eaaae0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetWlan
</UL><P><STRONG><a name="[49f8848]"></a>GpioOtherInterruptPinManage</STRONG> (ARM, 60 bytes, Stack size 16 bytes, lib_patch.o(i.GpioOtherInterruptPinManage))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[49f8938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GPIO_ISR_USBPower
<LI><a href="#[49f87c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Reset_Int_ISR_MP4EVB_Board
</UL><BR>[Called By]<UL><LI><a href="#[7223ea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GPIO_INTHandler
</UL><P><STRONG><a name="[58878b4]"></a>HTTPC_Final</STRONG> (ARM, 148 bytes, Stack size 8 bytes, HttpClient.o(i.HTTPC_Final))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[57167b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjFinal
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Address Reference Count : 3]<UL><LI> HttpClient.o(i.DDNS_Do_CheckIP)
<LI> HttpClient.o(i.Do_DNS)
<LI> HttpClient.o(i.Http_SendHttpRequest)
</UL><P><STRONG><a name="[5887924]"></a>HTTPC_Init</STRONG> (ARM, 740 bytes, Stack size 96 bytes, HttpClient.o(i.HTTPC_Init))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[588b658]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[5716828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjInit
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[5887840]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CkIP_HTTPC_Init
<LI><a href="#[58877cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DDNS_HTTPC_Init
<LI><a href="#[5887584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;URLCGI_HTTPC_Init
</UL><P><STRONG><a name="[5887994]"></a>HTTPC_Process</STRONG> (ARM, 1788 bytes, Stack size 312 bytes, HttpClient.o(i.HTTPC_Process))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[577472c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ResolveHost
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4bfe664]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fcntl
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[50a2524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[5716670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FD_Next
<LI><a href="#[588b8c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[50a2444]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getsockopt
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[57b6fa8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;EncodeBase64
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[57746bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DeleteHost
</UL><BR>[Address Reference Count : 1]<UL><LI> HttpClient.o(i.HTTPC_Init)
</UL><P><STRONG><a name="[73183b4]"></a>Hash_Mem_Child_Pool_Add</STRONG> (ARM, 136 bytes, Stack size 16 bytes, hash_mem_pool.o(i.Hash_Mem_Child_Pool_Add))
<BR><BR>[Calls]<UL><LI><a href="#[785faa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_FindEmpty
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[785fb1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Taxis
</UL><BR>[Called By]<UL><LI><a href="#[4a54b44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpInitHashMemPool
</UL><P><STRONG><a name="[7318430]"></a>Hash_Mem_Pool_Create</STRONG> (ARM, 172 bytes, Stack size 16 bytes, hash_mem_pool.o(i.Hash_Mem_Pool_Create))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
</UL><BR>[Called By]<UL><LI><a href="#[4a54b44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpInitHashMemPool
</UL><P><STRONG><a name="[73182bc]"></a>Hash_Mem_Pool_Destroy</STRONG> (ARM, 36 bytes, Stack size 8 bytes, hash_mem_pool.o(i.Hash_Mem_Pool_Destroy))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[4a54b44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpInitHashMemPool
</UL><P><STRONG><a name="[785faa0]"></a>Hash_Mem_Pool_FindEmpty</STRONG> (ARM, 28 bytes, Stack size 0 bytes, hash_mem_pool.o(i.Hash_Mem_Pool_FindEmpty))
<BR>[Called By]<UL><LI><a href="#[73183b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Child_Pool_Add
</UL><P><STRONG><a name="[785f7c0]"></a>Hash_Mem_Pool_Free</STRONG> (ARM, 140 bytes, Stack size 16 bytes, hash_mem_pool.o(i.Hash_Mem_Pool_Free))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4db5294]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listGetNext
<LI><a href="#[4db5224]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listDetach
<LI><a href="#[4efdcf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listAttach
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[82a3410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateInnerDescription
<LI><a href="#[59c93e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DeleteNamedString
<LI><a href="#[57e7858]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FreeBoundary
<LI><a href="#[57e7a28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FreeInnerPartName
<LI><a href="#[56dbc48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetExtraHeader
<LI><a href="#[59c92f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__CreateXML
<LI><a href="#[59caf5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__DumpXML
<LI><a href="#[7317b20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;free_request
<LI><a href="#[73181dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpClearEmbedFun
<LI><a href="#[5537818]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteCStyleString
<LI><a href="#[825cb98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteDescriptionLine
<LI><a href="#[55370e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteParseString
<LI><a href="#[59c9cb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteSplitString
<LI><a href="#[5537bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteXML
<LI><a href="#[55371e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpIsRegisterEmbedFunEx
<LI><a href="#[5537260]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseString
<LI><a href="#[4e4d7c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpRegisterEmbedFunEx
<LI><a href="#[5537b50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSetString
<LI><a href="#[59c98b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpString2Bool
<LI><a href="#[77abff4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_get
</UL><P><STRONG><a name="[7318338]"></a>Hash_Mem_Pool_Implement</STRONG> (ARM, 324 bytes, Stack size 48 bytes, hash_mem_pool.o(i.Hash_Mem_Pool_Implement))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4efdcf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listAttach
</UL><BR>[Called By]<UL><LI><a href="#[4a54b44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpInitHashMemPool
</UL><P><STRONG><a name="[785f888]"></a>Hash_Mem_Pool_New</STRONG> (ARM, 184 bytes, Stack size 16 bytes, hash_mem_pool.o(i.Hash_Mem_Pool_New))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4db5294]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listGetNext
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4db5224]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listDetach
</UL><BR>[Called By]<UL><LI><a href="#[82a3410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateInnerDescription
<LI><a href="#[59b5a40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DecorateAccessName
<LI><a href="#[57e7b1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetInnerPartName
<LI><a href="#[56dbc48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetExtraHeader
<LI><a href="#[5537894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetCStyleString
<LI><a href="#[59c9bcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetTrimString
<LI><a href="#[59c9b50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetWebStyleString
<LI><a href="#[59c9c44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSplitString
<LI><a href="#[77abff4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_get
<LI><a href="#[59cd30c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[825e50c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[77ac0d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;translate_uri
</UL><P><STRONG><a name="[785fb1c]"></a>Hash_Mem_Pool_Taxis</STRONG> (ARM, 168 bytes, Stack size 48 bytes, hash_mem_pool.o(i.Hash_Mem_Pool_Taxis))
<BR><BR>[Calls]<UL><LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
</UL><BR>[Called By]<UL><LI><a href="#[73183b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Child_Pool_Add
</UL><P><STRONG><a name="[4e4ae1c]"></a>Http_CommonCmdInit</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Register.o(i.Http_CommonCmdInit))
<BR><BR>[Calls]<UL><LI><a href="#[5536d9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Http_ConnInit
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[5536cac]"></a>Http_CommonCmdRun</STRONG> (ARM, 752 bytes, Stack size 40 bytes, Register.o(i.Http_CommonCmdRun))
<BR><BR>[Calls]<UL><LI><a href="#[5537260]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpParseString
<LI><a href="#[5536c38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSplitBuffer
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[55372d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CreateSubCmdRunStruct
<LI><a href="#[5536bc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpCreateList
<LI><a href="#[5536b50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAppendNode
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[5536ad4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteSplitBuffer
<LI><a href="#[5536ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetAuthPrivilege
<LI><a href="#[5536f7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSendAuthRequired
<LI><a href="#[5537a68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ReturnTypeBegin
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[5537d20]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AppendXMLArray
<LI><a href="#[5537b50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetString
<LI><a href="#[55376b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ReturnTypeEnd
<LI><a href="#[55374e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Http_SendRedirectRequest
<LI><a href="#[5537164]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DeleteSubCmdRunStruct
<LI><a href="#[5536a60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteList
<LI><a href="#[55370e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteParseString
</UL><BR>[Address Reference Count : 1]<UL><LI> Register.o(i.Http_CommonCmdInit)
</UL><P><STRONG><a name="[5536d9c]"></a>Http_ConnInit</STRONG> (ARM, 172 bytes, Stack size 24 bytes, Register.o(i.Http_ConnInit))
<BR><BR>[Calls]<UL><LI><a href="#[7318590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetMethod
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[5536e10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetPostDataFun
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[5536d24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetQueryString
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
</UL><BR>[Called By]<UL><LI><a href="#[4e4ae1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdInit
<LI><a href="#[4e4d840]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SubCmdInit
</UL><P><STRONG><a name="[7318604]"></a>Http_DumpCGI</STRONG> (ARM, 184 bytes, Stack size 160 bytes, boa.o(i.Http_DumpCGI))
<BR><BR>[Calls]<UL><LI><a href="#[7318590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetMethod
<LI><a href="#[4dee308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBodyString
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4e4c6a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
</UL><BR>[Address Reference Count : 1]<UL><LI> boa.o(i.httpdStartEx3)
</UL><P><STRONG><a name="[4e4af08]"></a>Http_GetAudio</STRONG> (ARM, 52 bytes, Stack size 24 bytes, TransBack.o(i.Http_GetAudio))
<BR><BR>[Calls]<UL><LI><a href="#[558f88c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;iothread_Write
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4c544]"></a>Http_GetCameraData</STRONG> (ARM, 148 bytes, Stack size 32 bytes, CameraCtl.o(i.Http_GetCameraData))
<BR><BR>[Calls]<UL><LI><a href="#[56dbda8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpReadQueryList
<LI><a href="#[4def474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetBool
<LI><a href="#[56dbd30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteQueryList
<LI><a href="#[5456f70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerNotify
<LI><a href="#[5456ef8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerWait
<LI><a href="#[4e4c794]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetSendDataOverFun
<LI><a href="#[4e4c718]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetKeepAliveMode
<LI><a href="#[4e4c6a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4af7c]"></a>Http_GetFirmware</STRONG> (ARM, 232 bytes, Stack size 360 bytes, Upload.o(i.Http_GetFirmware))
<BR><BR>[Calls]<UL><LI><a href="#[4e4c794]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetSendDataOverFun
<LI><a href="#[4e4c718]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetKeepAliveMode
<LI><a href="#[4e4c9d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyRead
<LI><a href="#[5672c0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WRGetProductVersionNum
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[57e875c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;str_replace
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4e4c6a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[5536f04]"></a>Http_PostDataGet</STRONG> (ARM, 452 bytes, Stack size 48 bytes, Register.o(i.Http_PostDataGet))
<BR><BR>[Calls]<UL><LI><a href="#[5536e88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetContentLength
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4dee308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBodyString
<LI><a href="#[4e4c6a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[5536e10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetPostDataFun
</UL><BR>[Address Reference Count : 1]<UL><LI> Register.o(i.Http_ConnInit)
</UL><P><STRONG><a name="[4e4b0e4]"></a>Http_Post_FMUpload</STRONG> (ARM, 872 bytes, Stack size 312 bytes, Upload.o(i.Http_Post_FMUpload))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[57e7c0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ProcessUpdate
<LI><a href="#[5536ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetAuthPrivilege
<LI><a href="#[5536e88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetContentLength
<LI><a href="#[57e79b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetContentType
<LI><a href="#[57e7940]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetBoundary
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4def554]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpMyStrncpy
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[57e78cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpCreateDict
<LI><a href="#[57e7858]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FreeBoundary
<LI><a href="#[5536f7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSendAuthRequired
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4dee308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBodyString
<LI><a href="#[4e4c6a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[71ece0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyWrite
<LI><a href="#[4defcd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyFlash
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[57e77e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteDict
<LI><a href="#[57e7a28]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FreeInnerPartName
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4b070]"></a>Http_Post_Init</STRONG> (ARM, 52 bytes, Stack size 16 bytes, Upload.o(i.Http_Post_Init))
<BR><BR>[Calls]<UL><LI><a href="#[7318590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetMethod
<LI><a href="#[5536e10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetPostDataFun
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4ae94]"></a>Http_RtspTunnel</STRONG> (ARM, 332 bytes, Stack size 288 bytes, rtspserver.o(i.Http_RtspTunnel))
<BR><BR>[Calls]<UL><LI><a href="#[7318590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetMethod
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4e4c718]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetKeepAliveMode
<LI><a href="#[5924520]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetXSessionCookie
<LI><a href="#[59274e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtspTunnelCreate
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4e4c6a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
<LI><a href="#[4e4c794]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetSendDataOverFun
<LI><a href="#[5887508]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetRequestOverFun
<LI><a href="#[5536e10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetPostDataFun
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4a7ac]"></a>Http_Send500</STRONG> (ARM, 48 bytes, Stack size 16 bytes, upnp.o(i.Http_Send500))
<BR><BR>[Calls]<UL><LI><a href="#[4e4c6a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4a820]"></a>Http_SendDesc</STRONG> (ARM, 112 bytes, Stack size 24 bytes, upnp.o(i.Http_SendDesc))
<BR><BR>[Calls]<UL><LI><a href="#[7318590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetMethod
<LI><a href="#[4dee308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBodyString
<LI><a href="#[4e4c6a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4aa00]"></a>Http_SendHttpRequest</STRONG> (ARM, 956 bytes, Stack size 120 bytes, HttpClient.o(i.Http_SendHttpRequest))
<BR><BR>[Calls]<UL><LI><a href="#[7318590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetMethod
<LI><a href="#[56dbda8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpReadQueryList
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4e4d0fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[4def474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetBool
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4def554]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpMyStrncpy
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[56dbd30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteQueryList
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[5716828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjInit
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[4dee308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBodyString
<LI><a href="#[4e4c6a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
<LI><a href="#[5887508]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetRequestOverFun
<LI><a href="#[4e4c794]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetSendDataOverFun
<LI><a href="#[4e4c718]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetKeepAliveMode
<LI><a href="#[5887490]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetNullHeader
<LI><a href="#[5716588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddSelectFD
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4c5bc]"></a>Http_SendJpeg</STRONG> (ARM, 176 bytes, Stack size 32 bytes, CameraCtl.o(i.Http_SendJpeg))
<BR><BR>[Calls]<UL><LI><a href="#[7318590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetMethod
<LI><a href="#[5456f70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerNotify
<LI><a href="#[5456ef8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerWait
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4e49d40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBody
<LI><a href="#[4e4c6a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[56dbc48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetExtraHeader
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[55374e0]"></a>Http_SendRedirectRequest</STRONG> (ARM, 116 bytes, Stack size 280 bytes, Register.o(i.Http_SendRedirectRequest))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[5537468]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ClearHttpSendData
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4e4c6a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
</UL><BR>[Called By]<UL><LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
<LI><a href="#[5537074]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SubCmdRun
</UL><P><STRONG><a name="[4e4b1dc]"></a>Http_SetFactoryDefault</STRONG> (ARM, 92 bytes, Stack size 16 bytes, CameraConfig.o(i.Http_SetFactoryDefault))
<BR><BR>[Calls]<UL><LI><a href="#[4eaa720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ERSP_rovio_libns_restore_defaults
<LI><a href="#[4eaa6a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetConfigCheckSum
<LI><a href="#[4eaa630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__WriteFlashMemory
<LI><a href="#[4deec54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;RebootOnConnectionOver
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4d840]"></a>Http_SubCmdInit</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Register.o(i.Http_SubCmdInit))
<BR><BR>[Calls]<UL><LI><a href="#[5536d9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Http_ConnInit
</UL><BR>[Address Reference Count : 2]<UL><LI> Register.o(i.Http_CommonCmdRun)
<LI> LibIPCamera.o(i.RegisterSubCmd)
</UL><P><STRONG><a name="[5537074]"></a>Http_SubCmdRun</STRONG> (ARM, 176 bytes, Stack size 24 bytes, Register.o(i.Http_SubCmdRun))
<BR><BR>[Calls]<UL><LI><a href="#[5537260]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpParseString
<LI><a href="#[5536ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetAuthPrivilege
<LI><a href="#[5536f7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSendAuthRequired
<LI><a href="#[5537a68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ReturnTypeBegin
<LI><a href="#[55376b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ReturnTypeEnd
<LI><a href="#[55374e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Http_SendRedirectRequest
<LI><a href="#[55370e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteParseString
</UL><BR>[Address Reference Count : 1]<UL><LI> Register.o(i.Http_SubCmdInit)
</UL><P><STRONG><a name="[4e4c810]"></a>Http_TestSpeed</STRONG> (ARM, 84 bytes, Stack size 24 bytes, LibIPCamera.o(i.Http_TestSpeed))
<BR><BR>[Calls]<UL><LI><a href="#[4e4c794]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetSendDataOverFun
<LI><a href="#[4e4c718]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetKeepAliveMode
<LI><a href="#[4e4c6a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[4e4b15c]"></a>Http_UpdateFactoryDefault</STRONG> (ARM, 52 bytes, Stack size 8 bytes, CameraConfig.o(i.Http_UpdateFactoryDefault))
<BR><BR>[Calls]<UL><LI><a href="#[4eaa630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__WriteFlashMemory
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.RegisterUrls)
</UL><P><STRONG><a name="[772e194]"></a>Http_WebFile</STRONG> (ARM, 140 bytes, Stack size 96 bytes, web_files.o(i.Http_WebFile))
<BR><BR>[Calls]<UL><LI><a href="#[772e120]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_mime_type
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4e4c794]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetSendDataOverFun
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4e4c6a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
</UL><BR>[Address Reference Count : 1]<UL><LI> web_files.o(i.RegisterWebFiles)
</UL><P><STRONG><a name="[7e28938]"></a>I1B_fromI2C</STRONG> (ARM, 176 bytes, Stack size 16 bytes, Dsp_i2c.o(i.I1B_fromI2C))
<BR><BR>[Calls]<UL><LI><a href="#[759f5a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2c_delay
</UL><BR>[Called By]<UL><LI><a href="#[759f2d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DSP_ReadI2C
<LI><a href="#[759f018]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DSP_ReadI2C_16b
</UL><P><STRONG><a name="[7e288c4]"></a>I1B_fromI2C_16b</STRONG> (ARM, 160 bytes, Stack size 16 bytes, Dsp_i2c.o(i.I1B_fromI2C_16b))
<BR><BR>[Calls]<UL><LI><a href="#[759f5a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2c_delay
</UL><BR>[Called By]<UL><LI><a href="#[759f018]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DSP_ReadI2C_16b
</UL><P><STRONG><a name="[789fb80]"></a>I2CRDWRBegin</STRONG> (ARM, 36 bytes, Stack size 8 bytes, Vpost.o(i.I2CRDWRBegin))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[7c2a44c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sysGetIBitState
<LI><a href="#[7c2a538]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sysSetLocalInterrupt
</UL><BR>[Called By]<UL><LI><a href="#[73652b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;TwoWire_Write_Data
</UL><P><STRONG><a name="[789fb10]"></a>I2CRDWREnd</STRONG> (ARM, 40 bytes, Stack size 8 bytes, Vpost.o(i.I2CRDWREnd))
<BR><BR>[Calls]<UL><LI><a href="#[7c2a538]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sysSetLocalInterrupt
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Called By]<UL><LI><a href="#[73652b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;TwoWire_Write_Data
</UL><P><STRONG><a name="[7dcd968]"></a>ImaBlockMashI</STRONG> (ARM, 80 bytes, Stack size 48 bytes, ima_rw.o(i.ImaBlockMashI))
<BR><BR>[Calls]<UL><LI><a href="#[87f9c58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ImaMashChannel
</UL><BR>[Called By]<UL><LI><a href="#[755e338]">&lt&lt</a>&nbsp;&nbsp;&nbsp;imaadpcmBlockEnc
</UL><P><STRONG><a name="[7dcd9dc]"></a>ImaSamplesIn</STRONG> (ARM, 96 bytes, Stack size 16 bytes, ima_rw.o(i.ImaSamplesIn))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[755f254]">&lt&lt</a>&nbsp;&nbsp;&nbsp;imaadpcmInit
</UL><P><STRONG><a name="[4e4dd60]"></a>InitDefaultParam</STRONG> (ARM, 528 bytes, Stack size 32 bytes, CameraConfig.o(i.InitDefaultParam))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4d0cf3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_addr
</UL><BR>[Called By]<UL><LI><a href="#[4a55154]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReadCameraParam
<LI><a href="#[4eaa4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetDefaultMac
</UL><P><STRONG><a name="[4e4db00]"></a>InitNetInterface</STRONG> (ARM, 164 bytes, Stack size 48 bytes, System.o(i.InitNetInterface))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
<LI><a href="#[4dd624c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;clr_flag
<LI><a href="#[4dd61dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_flag
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[4e4db78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetCameraParam
<LI><a href="#[58d2b34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_init_interface
</UL><P><STRONG><a name="[4e4a000]"></a>InitResetGPIO</STRONG> (ARM, 168 bytes, Stack size 16 bytes, IpcamReset.o(i.InitResetGPIO))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
</UL><BR>[Called By]<UL><LI><a href="#[4a5496c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ServerStart
</UL><P><STRONG><a name="[8d87988]"></a>Init_D_plsf_3</STRONG> (ARM, 20 bytes, Stack size 0 bytes, d_plsf_3.o(i.Init_D_plsf_3))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[8cd6f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec
</UL><P><STRONG><a name="[57165f8]"></a>InsertCustomProcess</STRONG> (ARM, 96 bytes, Stack size 32 bytes, SSelect.o(i.InsertCustomProcess))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[56dc448]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[5887678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DDNS_Do_CheckIP
<LI><a href="#[5887760]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Do_DNS
<LI><a href="#[4e4a160]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NtpSetTime
<LI><a href="#[5889750]">&lt&lt</a>&nbsp;&nbsp;&nbsp;URLCGI_RequestOver
</UL><P><STRONG><a name="[8cd6bec]"></a>Int_lpc_1and3</STRONG> (ARM, 200 bytes, Stack size 40 bytes, int_lpc.o(i.Int_lpc_1and3))
<BR><BR>[Calls]<UL><LI><a href="#[8dac5d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lsp_Az
</UL><BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
<LI><a href="#[8cc5684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp
</UL><P><STRONG><a name="[8def85c]"></a>Int_lpc_1and3_2</STRONG> (ARM, 168 bytes, Stack size 40 bytes, int_lpc.o(i.Int_lpc_1and3_2))
<BR><BR>[Calls]<UL><LI><a href="#[8dac5d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lsp_Az
</UL><BR>[Called By]<UL><LI><a href="#[8cc5684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp
</UL><P><STRONG><a name="[8cd6cd0]"></a>Int_lpc_1to3</STRONG> (ARM, 256 bytes, Stack size 40 bytes, int_lpc.o(i.Int_lpc_1to3))
<BR><BR>[Calls]<UL><LI><a href="#[8dac5d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lsp_Az
</UL><BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
<LI><a href="#[8cc5684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp
</UL><P><STRONG><a name="[8def7e8]"></a>Int_lpc_1to3_2</STRONG> (ARM, 240 bytes, Stack size 40 bytes, int_lpc.o(i.Int_lpc_1to3_2))
<BR><BR>[Calls]<UL><LI><a href="#[8dac5d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lsp_Az
</UL><BR>[Called By]<UL><LI><a href="#[8cc5684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp
</UL><P><STRONG><a name="[8cd64a4]"></a>Int_lsf</STRONG> (ARM, 260 bytes, Stack size 4 bytes, int_lsf.o(i.Int_lsf))
<BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8ec719c]"></a>Interpol_3or6</STRONG> (ARM, 164 bytes, Stack size 16 bytes, inter_36.o(i.Interpol_3or6))
<BR>[Called By]<UL><LI><a href="#[8ec7708]">&lt&lt</a>&nbsp;&nbsp;&nbsp;searchFrac
</UL><P><STRONG><a name="[8d46244]"></a>Inv_sqrt</STRONG> (ARM, 124 bytes, Stack size 0 bytes, inv_sqrt.o(i.Inv_sqrt))
<BR>[Called By]<UL><LI><a href="#[8edb494]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Lag_max
<LI><a href="#[8ec7778]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Norm_Corr
<LI><a href="#[8cf34d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;agc
<LI><a href="#[8cd6194]">&lt&lt</a>&nbsp;&nbsp;&nbsp;agc2
<LI><a href="#[8d58658]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_2i40_11bits
<LI><a href="#[8d586d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_2i40_9bits
<LI><a href="#[8e79544]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cor_h
<LI><a href="#[8e8b09c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_sign12k2
</UL><P><STRONG><a name="[4eabba4]"></a>IsMoreThanOneAdmin</STRONG> (ARM, 52 bytes, Stack size 8 bytes, User.o(i.IsMoreThanOneAdmin))
<BR><BR>[Calls]<UL><LI><a href="#[56424b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetAuthUserList
</UL><BR>[Called By]<UL><LI><a href="#[4eab9d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlDelUser
<LI><a href="#[4eabc90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetUser
</UL><P><STRONG><a name="[8dda47c]"></a>L_Comp</STRONG> (ARM, 20 bytes, Stack size 0 bytes, oper_32b.o(i.L_Comp))
<BR>[Called By]<UL><LI><a href="#[8e9c31c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;calc_unfilt_energies
<LI><a href="#[8d93fdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gc_pred
</UL><P><STRONG><a name="[8cdefa0]"></a>L_Extract</STRONG> (ARM, 40 bytes, Stack size 8 bytes, oper_32b.o(i.L_Extract))
<BR><BR>[Calls]<UL><LI><a href="#[8d54e30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_msu
</UL><BR>[Called By]<UL><LI><a href="#[8ecc720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Get_lsp_pol
<LI><a href="#[8de33d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR475_gain_quant
<LI><a href="#[8f23f68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR795_gain_code_quant3
<LI><a href="#[8f23ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR795_gain_code_quant_mod
<LI><a href="#[8e0e814]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pitch_ol_wgh
<LI><a href="#[88867d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pre_Process
<LI><a href="#[8d93fdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gc_pred
</UL><P><STRONG><a name="[8d54e30]"></a>L_msu</STRONG> (ARM, 16 bytes, Stack size 0 bytes, basicop2.o(i.L_msu))
<BR>[Called By]<UL><LI><a href="#[8dac564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;A_Refl
<LI><a href="#[8e09fd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Div_32
<LI><a href="#[8ecc720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Get_lsp_pol
<LI><a href="#[8cdefa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;L_Extract
<LI><a href="#[8e0e814]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pitch_ol_wgh
<LI><a href="#[8cd6e28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp_avg
<LI><a href="#[8cd626c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sqrt_l_exp
<LI><a href="#[8e221f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vad_tone_detection
</UL><P><STRONG><a name="[8d54c10]"></a>L_negate</STRONG> (ARM, 16 bytes, Stack size 0 bytes, basicop2.o(i.L_negate))
<BR>[Called By]<UL><LI><a href="#[8e06658]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Levinson
</UL><P><STRONG><a name="[8f0ec34]"></a>L_shrsq</STRONG> (ARM, 108 bytes, Stack size 0 bytes, qgain475.o(i.L_shrsq))
<BR>[Called By]<UL><LI><a href="#[8de33d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR475_gain_quant
<LI><a href="#[8f0f0c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR475_quant_store_results
</UL><P><STRONG><a name="[8e066c8]"></a>Lag_window</STRONG> (ARM, 656 bytes, Stack size 8 bytes, lag_wind.o(i.Lag_window))
<BR>[Called By]<UL><LI><a href="#[8cc56ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lpc
</UL><P><STRONG><a name="[8e06658]"></a>Levinson</STRONG> (ARM, 1440 bytes, Stack size 144 bytes, levinson.o(i.Levinson))
<BR><BR>[Calls]<UL><LI><a href="#[8e09fd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Div_32
<LI><a href="#[8d54c10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_negate
</UL><BR>[Called By]<UL><LI><a href="#[8cc56ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lpc
</UL><P><STRONG><a name="[8e0681c]"></a>Levinson_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, levinson.o(i.Levinson_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[8cc5ee4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lpc_exit
<LI><a href="#[8cc5834]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lpc_init
</UL><P><STRONG><a name="[8e067a8]"></a>Levinson_init</STRONG> (ARM, 96 bytes, Stack size 16 bytes, levinson.o(i.Levinson_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[8cc5834]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lpc_init
</UL><P><STRONG><a name="[8e06890]"></a>Levinson_reset</STRONG> (ARM, 64 bytes, Stack size 0 bytes, levinson.o(i.Levinson_reset))
<BR>[Called By]<UL><LI><a href="#[8cc5834]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lpc_init
<LI><a href="#[8cc6278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lpc_reset
</UL><P><STRONG><a name="[8d99304]"></a>Log2</STRONG> (ARM, 116 bytes, Stack size 0 bytes, log2.o(i.Log2))
<BR>[Called By]<UL><LI><a href="#[8cd666c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Dec_gain
<LI><a href="#[8f0f0c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR475_quant_store_results
<LI><a href="#[8de3448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR475_update_unq_pred
<LI><a href="#[8e9c31c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;calc_unfilt_energies
<LI><a href="#[8cc5614]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_buffer
<LI><a href="#[8cd6f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec
<LI><a href="#[8cd603c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec_activity_update
<LI><a href="#[8d93fdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gc_pred
</UL><P><STRONG><a name="[8dda40c]"></a>Log2_norm</STRONG> (ARM, 84 bytes, Stack size 0 bytes, log2.o(i.Log2_norm))
<BR>[Called By]<UL><LI><a href="#[8d93fdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gc_pred
</UL><P><STRONG><a name="[8cd6e94]"></a>Lsf_lsp</STRONG> (ARM, 96 bytes, Stack size 12 bytes, lsp_lsf.o(i.Lsf_lsp))
<BR>[Called By]<UL><LI><a href="#[8cd6d44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;D_plsf_3
<LI><a href="#[8cd6c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;D_plsf_5
<LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
<LI><a href="#[8dbdce8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Q_plsf_3
<LI><a href="#[8dff564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Q_plsf_5
<LI><a href="#[8cd6f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec
<LI><a href="#[8cc55a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_enc
</UL><P><STRONG><a name="[8f04d0c]"></a>Lsf_wt</STRONG> (ARM, 216 bytes, Stack size 16 bytes, lsfwt.o(i.Lsf_wt))
<BR>[Called By]<UL><LI><a href="#[8dbdce8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Q_plsf_3
<LI><a href="#[8dff564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Q_plsf_5
</UL><P><STRONG><a name="[8dac5d0]"></a>Lsp_Az</STRONG> (ARM, 236 bytes, Stack size 72 bytes, lsp_az.o(i.Lsp_Az))
<BR><BR>[Calls]<UL><LI><a href="#[8ecc720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Get_lsp_pol
</UL><BR>[Called By]<UL><LI><a href="#[8cd6bec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Int_lpc_1and3
<LI><a href="#[8def85c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Int_lpc_1and3_2
<LI><a href="#[8cd6cd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Int_lpc_1to3
<LI><a href="#[8def7e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Int_lpc_1to3_2
<LI><a href="#[8cd6f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec
</UL><P><STRONG><a name="[8dac63c]"></a>Lsp_lsf</STRONG> (ARM, 192 bytes, Stack size 28 bytes, lsp_lsf.o(i.Lsp_lsf))
<BR>[Called By]<UL><LI><a href="#[8dbdce8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Q_plsf_3
<LI><a href="#[8dff564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Q_plsf_5
<LI><a href="#[8cd6f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec
<LI><a href="#[8cc55a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_enc
</UL><P><STRONG><a name="[5859c38]"></a>MCTxTest</STRONG> (ARM, 32 bytes, Stack size 8 bytes, mctxtest.o(i.MCTxTest))
<BR><BR>[Calls]<UL><LI><a href="#[7f76498]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mc_tx_socket
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[5859ca8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateAndSendPackage
</UL><P><STRONG><a name="[4a5616c]"></a>MCUCmdHandler</STRONG> (ARM, 44 bytes, Stack size 8 bytes, CameraTest.o(i.MCUCmdHandler))
<BR><BR>[Calls]<UL><LI><a href="#[4a560fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlCtrlMCU
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Address Reference Count : 1]<UL><LI> CameraTest.o(i.main)
</UL><P><STRONG><a name="[7843860]"></a>MD5Final</STRONG> (ARM, 152 bytes, Stack size 16 bytes, md5.o(i.MD5Final))
<BR><BR>[Calls]<UL><LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[80c19b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MD5Transform
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[8c6cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapInput
<LI><a href="#[784492c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;md5_hash
</UL><P><STRONG><a name="[7843940]"></a>MD5Init</STRONG> (ARM, 48 bytes, Stack size 0 bytes, md5.o(i.MD5Init))
<BR>[Called By]<UL><LI><a href="#[8c6cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapInput
<LI><a href="#[784492c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;md5_hash
</UL><P><STRONG><a name="[80c19b4]"></a>MD5Transform</STRONG> (ARM, 2540 bytes, Stack size 88 bytes, md5.o(i.MD5Transform))
<BR>[Called By]<UL><LI><a href="#[7843860]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MD5Final
<LI><a href="#[78438d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MD5Update
</UL><P><STRONG><a name="[78438d0]"></a>MD5Update</STRONG> (ARM, 200 bytes, Stack size 24 bytes, md5.o(i.MD5Update))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[80c19b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MD5Transform
</UL><BR>[Called By]<UL><LI><a href="#[8c6cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapInput
<LI><a href="#[784492c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;md5_hash
</UL><P><STRONG><a name="[57e7c80]"></a>MPTestWriteFlash</STRONG> (ARM, 156 bytes, Stack size 16 bytes, Upload.o(i.MPTestWriteFlash))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[71ece0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyWrite
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[57e90dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MPClean
</UL><BR>[Called By]<UL><LI><a href="#[57e7c0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ProcessUpdate
</UL><P><STRONG><a name="[8de33d0]"></a>MR475_gain_quant</STRONG> (ARM, 1120 bytes, Stack size 144 bytes, qgain475.o(i.MR475_gain_quant))
<BR><BR>[Calls]<UL><LI><a href="#[8d93f70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pow2
<LI><a href="#[8f0ec34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_shrsq
<LI><a href="#[8cdefa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_Extract
<LI><a href="#[8f0ebc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Mac_32_16
<LI><a href="#[8f0f0c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MR475_quant_store_results
<LI><a href="#[8d93fdc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred
</UL><BR>[Called By]<UL><LI><a href="#[8cc5228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant
</UL><P><STRONG><a name="[8de3448]"></a>MR475_update_unq_pred</STRONG> (ARM, 316 bytes, Stack size 40 bytes, qgain475.o(i.MR475_update_unq_pred))
<BR><BR>[Calls]<UL><LI><a href="#[8d93f70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pow2
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[8d99304]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Log2
<LI><a href="#[8d93efc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred_update
</UL><BR>[Called By]<UL><LI><a href="#[8cc5228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant
</UL><P><STRONG><a name="[8de327c]"></a>MR795_gain_quant</STRONG> (ARM, 376 bytes, Stack size 136 bytes, qgain795.o(i.MR795_gain_quant))
<BR><BR>[Calls]<UL><LI><a href="#[8d73670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;q_gain_pitch
<LI><a href="#[8d93f70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pow2
<LI><a href="#[8f23f68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MR795_gain_code_quant3
<LI><a href="#[8e9c31c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;calc_unfilt_energies
<LI><a href="#[8eb2f38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gain_adapt
<LI><a href="#[8f23ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MR795_gain_code_quant_mod
</UL><BR>[Called By]<UL><LI><a href="#[8cc5228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant
</UL><P><STRONG><a name="[49f89b0]"></a>MY_Read_GPIO7</STRONG> (ARM, 32 bytes, Stack size 0 bytes, lib_patch.o(i.MY_Read_GPIO7))
<BR>[Called By]<UL><LI><a href="#[49f8938]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GPIO_ISR_USBPower
</UL><P><STRONG><a name="[8f23a48]"></a>Mac_32</STRONG> (ARM, 56 bytes, Stack size 4 bytes, mac_32.o(i.Mac_32))
<BR>[Called By]<UL><LI><a href="#[8f23f68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR795_gain_code_quant3
<LI><a href="#[8f23ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR795_gain_code_quant_mod
</UL><P><STRONG><a name="[8f0ebc4]"></a>Mac_32_16</STRONG> (ARM, 32 bytes, Stack size 0 bytes, mac_32.o(i.Mac_32_16))
<BR>[Called By]<UL><LI><a href="#[8de33d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR475_gain_quant
<LI><a href="#[8f23f68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR795_gain_code_quant3
<LI><a href="#[8f23ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR795_gain_code_quant_mod
</UL><P><STRONG><a name="[4e4a738]"></a>MailInfoInit</STRONG> (ARM, 152 bytes, Stack size 8 bytes, LibIPCamera.o(i.MailInfoInit))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
</UL><BR>[Called By]<UL><LI><a href="#[4e4a6c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetOtherThread
</UL><P><STRONG><a name="[4e4a564]"></a>MailStart</STRONG> (ARM, 232 bytes, Stack size 64 bytes, mail.o(i.MailStart))
<BR><BR>[Calls]<UL><LI><a href="#[4c2ddcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mbox_create
<LI><a href="#[4c2dbf4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mbox_get
<LI><a href="#[4c30a1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_yield
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[5950b40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pushMail
<LI><a href="#[5950acc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ret_mail_mem
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.ResetOtherThread)
</UL><P><STRONG><a name="[57744ec]"></a>MakeClientPacket</STRONG> (ARM, 140 bytes, Stack size 16 bytes, Ntp.o(i.MakeClientPacket))
<BR><BR>[Calls]<UL><LI><a href="#[5774564]">&gt&gt</a>&nbsp;&nbsp;&nbsp;current_time
</UL><BR>[Called By]<UL><LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
</UL><P><STRONG><a name="[4e49f14]"></a>MctestThread</STRONG> (ARM, 80 bytes, Stack size 16 bytes, mcrxtest.o(i.MctestThread))
<BR><BR>[Calls]<UL><LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[5859b00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mc_rx_socket
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.ServerStart)
</UL><P><STRONG><a name="[77ac6ac]"></a>My_Common_read</STRONG> (ARM, 40 bytes, Stack size 8 bytes, request.o(i.My_Common_read))
<BR><BR>[Calls]<UL><LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><BR>[Address Reference Count : 1]<UL><LI> request.o(i.get_sock_request)
</UL><P><STRONG><a name="[77ac720]"></a>My_Common_write</STRONG> (ARM, 76 bytes, Stack size 16 bytes, request.o(i.My_Common_write))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[4db5138]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_write
</UL><BR>[Address Reference Count : 1]<UL><LI> request.o(i.get_sock_request)
</UL><P><STRONG><a name="[4f73540]"></a>NS_get_continuous_reports</STRONG> (ARM, 548 bytes, Stack size 40 bytes, er_ns_nav.o(i.NS_get_continuous_reports))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4f75528]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_read_report_packet
<LI><a href="#[4f750a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;flush_ns_uart
<LI><a href="#[4f749e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;update_rovio_pose
<LI><a href="#[4f734cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_mcu_report
<LI><a href="#[4f75930]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dprint_to_socket
<LI><a href="#[4f75828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_new_report_flags_and_start_report
<LI><a href="#[4f73440]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_get_expecting_report_end
<LI><a href="#[4f754a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;swap_curr_and_potential_next_room
<LI><a href="#[4f757a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_get_next_room
<LI><a href="#[4f75428]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_init
<LI><a href="#[4f74acc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;try_northstar_recovery
<LI><a href="#[4f733a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_get_approaching_room_switch_region
<LI><a href="#[4f73310]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_clear_approaching_room_switch_region
<LI><a href="#[4f75728]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_get_cur_room
<LI><a href="#[4f73294]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_update
<LI><a href="#[4f74d34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_stop_report
<LI><a href="#[4f74418]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rovio_home
<LI><a href="#[4f73218]">&gt&gt</a>&nbsp;&nbsp;&nbsp;check_incoming_calls
<LI><a href="#[4f755a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_start_continuous_report
</UL><BR>[Called By]<UL><LI><a href="#[4f77e9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_nav_thread
</UL><P><STRONG><a name="[57742bc]"></a>NTPC_Final</STRONG> (ARM, 36 bytes, Stack size 8 bytes, Ntp.o(i.NTPC_Final))
<BR><BR>[Calls]<UL><LI><a href="#[57167b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjFinal
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Address Reference Count : 1]<UL><LI> Ntp.o(i.NtpSetTime)
</UL><P><STRONG><a name="[577432c]"></a>NTPC_Init</STRONG> (ARM, 236 bytes, Stack size 584 bytes, Ntp.o(i.NTPC_Init))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[5716828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjInit
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Address Reference Count : 1]<UL><LI> Ntp.o(i.NtpSetTime)
</UL><P><STRONG><a name="[577439c]"></a>NTPC_Process</STRONG> (ARM, 1156 bytes, Stack size 152 bytes, Ntp.o(i.NTPC_Process))
<BR><BR>[Calls]<UL><LI><a href="#[577472c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ResolveHost
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4bfe664]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fcntl
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[50a2524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[5716670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FD_Next
<LI><a href="#[57744ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MakeClientPacket
<LI><a href="#[5774480]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PackNTP
<LI><a href="#[577464c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FlushSocket
<LI><a href="#[50a2294]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[5775c8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[5774410]">&gt&gt</a>&nbsp;&nbsp;&nbsp;UnpackNTP
<LI><a href="#[4f73c68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[74125ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[4f73d50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[4f741d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[5775c18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;NTPDataToTime
<LI><a href="#[57746bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DeleteHost
</UL><BR>[Address Reference Count : 1]<UL><LI> Ntp.o(i.NTPC_Init)
</UL><P><STRONG><a name="[4e4d57c]"></a>NetTestThread</STRONG> (ARM, 140 bytes, Stack size 32 bytes, LibIPCamera.o(i.NetTestThread))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d500]">&gt&gt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
<LI><a href="#[4e4d48c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;accept_client
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.Config_MemDebug)
</UL><P><STRONG><a name="[4e4a160]"></a>NtpSetTime</STRONG> (ARM, 88 bytes, Stack size 16 bytes, Ntp.o(i.NtpSetTime))
<BR><BR>[Calls]<UL><LI><a href="#[5716828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjInit
<LI><a href="#[57165f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;InsertCustomProcess
</UL><BR>[Called By]<UL><LI><a href="#[4e4a2b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;OnHttpInit
</UL><P><STRONG><a name="[7e28a1c]"></a>O1B2I2C_wACK</STRONG> (ARM, 228 bytes, Stack size 20 bytes, Dsp_i2c.o(i.O1B2I2C_wACK))
<BR><BR>[Calls]<UL><LI><a href="#[759f5a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2c_delay
</UL><BR>[Called By]<UL><LI><a href="#[759f2d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DSP_ReadI2C
<LI><a href="#[759f018]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DSP_ReadI2C_16b
<LI><a href="#[759f348]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DSP_WriteI2C
<LI><a href="#[759f100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DSP_WriteI2C_16b
</UL><P><STRONG><a name="[57167b8]"></a>ObjFinal</STRONG> (ARM, 88 bytes, Stack size 8 bytes, SSelect.o(i.ObjFinal))
<BR><BR>[Calls]<UL><LI><a href="#[57167b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjFinal
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[588acf0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AddDDNS
<LI><a href="#[57755a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AddNTP
<LI><a href="#[7686e00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_LOCAL_Final
<LI><a href="#[7686ca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Final
<LI><a href="#[58878b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Final
<LI><a href="#[57742bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Final
<LI><a href="#[57167b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ObjFinal
<LI><a href="#[571649c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SELECT_MSG_Final
<LI><a href="#[4e4a410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SelectThread
<LI><a href="#[5887c20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;URLCGI_DelFD
</UL><P><STRONG><a name="[5716828]"></a>ObjInit</STRONG> (ARM, 168 bytes, Stack size 32 bytes, SSelect.o(i.ObjInit))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[5924444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BPC_New
<LI><a href="#[7686e74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_LOCAL_Init
<LI><a href="#[7686d14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Init
<LI><a href="#[5887678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DDNS_Do_CheckIP
<LI><a href="#[5887760]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Do_DNS
<LI><a href="#[5887924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Init
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
<LI><a href="#[577432c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Init
<LI><a href="#[4e4a160]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NtpSetTime
<LI><a href="#[5716514]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SELECT_MSG_Init
<LI><a href="#[4e4a410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SelectThread
</UL><P><STRONG><a name="[4e4a2b8]"></a>OnHttpInit</STRONG> (ARM, 124 bytes, Stack size 16 bytes, LibIPCamera.o(i.OnHttpInit))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
<LI><a href="#[4e4a244]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetCheckedTime
<LI><a href="#[4e4a1d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetCheckedTime
<LI><a href="#[4e4a160]">&gt&gt</a>&nbsp;&nbsp;&nbsp;NtpSetTime
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.ServerStart)
</UL><P><STRONG><a name="[4e49ea0]"></a>OnRequestBegin</STRONG> (ARM, 180 bytes, Stack size 40 bytes, WebCameraLog.o(i.OnRequestBegin))
<BR><BR>[Calls]<UL><LI><a href="#[4def6b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetClientAddr
<LI><a href="#[56aa630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetClientMac
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[4def390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.ServerStart)
</UL><P><STRONG><a name="[4dee7dc]"></a>OnSetIP</STRONG> (ARM, 128 bytes, Stack size 48 bytes, System.o(i.OnSetIP))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4e4cc1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DDNS_Update
<LI><a href="#[4e4d088]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ppot_connect
</UL><BR>[Called By]<UL><LI><a href="#[50fca4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dhcp_mgt_entry
<LI><a href="#[4dee770]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetIP
</UL><P><STRONG><a name="[7e28b00]"></a>OstartI2C</STRONG> (ARM, 80 bytes, Stack size 8 bytes, Dsp_i2c.o(i.OstartI2C))
<BR><BR>[Calls]<UL><LI><a href="#[759f5a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2c_delay
</UL><BR>[Called By]<UL><LI><a href="#[759f2d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DSP_ReadI2C
<LI><a href="#[759f018]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DSP_ReadI2C_16b
<LI><a href="#[759f348]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DSP_WriteI2C
<LI><a href="#[759f100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DSP_WriteI2C_16b
</UL><P><STRONG><a name="[7e28a90]"></a>OstopI2C</STRONG> (ARM, 72 bytes, Stack size 8 bytes, Dsp_i2c.o(i.OstopI2C))
<BR><BR>[Calls]<UL><LI><a href="#[759f5a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2c_delay
</UL><BR>[Called By]<UL><LI><a href="#[759f2d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DSP_ReadI2C
<LI><a href="#[759f018]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DSP_ReadI2C_16b
<LI><a href="#[759f348]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DSP_WriteI2C
<LI><a href="#[759f100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DSP_WriteI2C_16b
</UL><P><STRONG><a name="[5774480]"></a>PackNTP</STRONG> (ARM, 520 bytes, Stack size 32 bytes, Ntp.o(i.PackNTP))
<BR><BR>[Calls]<UL><LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4f73d50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[4f73c68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4e4cde8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[4f74974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dflt
<LI><a href="#[4f74668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_drsb
</UL><BR>[Called By]<UL><LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
</UL><P><STRONG><a name="[7d7fc60]"></a>PacketReSetBufferAddr</STRONG> (ARM, 320 bytes, Stack size 40 bytes, Rotation.o(i.PacketReSetBufferAddr))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[5456c5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capImageTransform
</UL><P><STRONG><a name="[8d737c8]"></a>Pitch_fr</STRONG> (ARM, 860 bytes, Stack size 160 bytes, pitch_fr.o(i.Pitch_fr))
<BR><BR>[Calls]<UL><LI><a href="#[8ec7778]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Norm_Corr
<LI><a href="#[8ec7708]">&gt&gt</a>&nbsp;&nbsp;&nbsp;searchFrac
<LI><a href="#[8ec7280]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Enc_lag3
<LI><a href="#[8ec7210]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Enc_lag6
</UL><BR>[Called By]<UL><LI><a href="#[8cc5308]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cl_ltp
</UL><P><STRONG><a name="[8d738ac]"></a>Pitch_fr_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, pitch_fr.o(i.Pitch_fr_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[8cc5d90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cl_ltp_exit
<LI><a href="#[8cc5b54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cl_ltp_init
</UL><P><STRONG><a name="[8d73838]"></a>Pitch_fr_init</STRONG> (ARM, 60 bytes, Stack size 16 bytes, pitch_fr.o(i.Pitch_fr_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[8cc5b54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cl_ltp_init
</UL><P><STRONG><a name="[8d73920]"></a>Pitch_fr_reset</STRONG> (ARM, 24 bytes, Stack size 0 bytes, pitch_fr.o(i.Pitch_fr_reset))
<BR>[Called By]<UL><LI><a href="#[8cc5b54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cl_ltp_init
<LI><a href="#[8cc6194]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cl_ltp_reset
</UL><P><STRONG><a name="[8e0e888]"></a>Pitch_ol</STRONG> (ARM, 1092 bytes, Stack size 1296 bytes, pitch_ol.o(i.Pitch_ol))
<BR><BR>[Calls]<UL><LI><a href="#[8e22270]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vad_tone_detection_update
<LI><a href="#[8e222f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;comp_corr
<LI><a href="#[8edb494]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lag_max
<LI><a href="#[8e2218c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hp_max
<LI><a href="#[8e22108]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vad_complex_detection_update
</UL><BR>[Called By]<UL><LI><a href="#[8cc5460]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ol_ltp
</UL><P><STRONG><a name="[8e0e814]"></a>Pitch_ol_wgh</STRONG> (ARM, 940 bytes, Stack size 1280 bytes, p_ol_wgh.o(i.Pitch_ol_wgh))
<BR><BR>[Calls]<UL><LI><a href="#[8e222f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;comp_corr
<LI><a href="#[8cdefa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_Extract
<LI><a href="#[8e22270]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vad_tone_detection_update
<LI><a href="#[8e221f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vad_tone_detection
<LI><a href="#[8d54e30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_msu
<LI><a href="#[8d66ae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gmed_n
<LI><a href="#[8e2218c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hp_max
<LI><a href="#[8e22108]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vad_complex_detection_update
</UL><BR>[Called By]<UL><LI><a href="#[8cc5460]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ol_ltp
</UL><P><STRONG><a name="[7d7fcdc]"></a>PlanarReSetBufferAddr</STRONG> (ARM, 520 bytes, Stack size 36 bytes, Rotation.o(i.PlanarReSetBufferAddr))
<BR>[Called By]<UL><LI><a href="#[5456c5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capImageTransform
</UL><P><STRONG><a name="[582d194]"></a>PopMsgNode</STRONG> (ARM, 156 bytes, Stack size 24 bytes, Msg.o(i.PopMsgNode))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[57163bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteNode
<LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[5716430]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetMsg
<LI><a href="#[56dc2f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;TryGetMsg
</UL><P><STRONG><a name="[886ec0c]"></a>Post_Filter</STRONG> (ARM, 5120 bytes, Stack size 240 bytes, pstfilt.o(i.Post_Filter))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[8cf353c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;preemphasis
<LI><a href="#[8cf34d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;agc
</UL><BR>[Called By]<UL><LI><a href="#[7ecff90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame
</UL><P><STRONG><a name="[886eecc]"></a>Post_Filter_exit</STRONG> (ARM, 60 bytes, Stack size 8 bytes, pstfilt.o(i.Post_Filter_exit))
<BR><BR>[Calls]<UL><LI><a href="#[8cf370c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;agc_exit
<LI><a href="#[8cf3694]">&gt&gt</a>&nbsp;&nbsp;&nbsp;preemphasis_exit
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[7ed02ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame_init
</UL><P><STRONG><a name="[886ed64]"></a>Post_Filter_init</STRONG> (ARM, 228 bytes, Stack size 16 bytes, pstfilt.o(i.Post_Filter_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[8cf361c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;preemphasis_init
<LI><a href="#[8cf35ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;agc_init
<LI><a href="#[8cf370c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;agc_exit
<LI><a href="#[8cf3694]">&gt&gt</a>&nbsp;&nbsp;&nbsp;preemphasis_exit
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8cc62e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Set_zero
<LI><a href="#[8cf37f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;agc_reset
<LI><a href="#[8cf377c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;preemphasis_reset
</UL><BR>[Called By]<UL><LI><a href="#[7ed02ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame_init
</UL><P><STRONG><a name="[886f034]"></a>Post_Filter_reset</STRONG> (ARM, 76 bytes, Stack size 8 bytes, pstfilt.o(i.Post_Filter_reset))
<BR><BR>[Calls]<UL><LI><a href="#[8cc62e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Set_zero
<LI><a href="#[8cf37f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;agc_reset
<LI><a href="#[8cf377c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;preemphasis_reset
</UL><BR>[Called By]<UL><LI><a href="#[7ed02ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame_init
<LI><a href="#[7ed0008]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame_reset
</UL><P><STRONG><a name="[886eb98]"></a>Post_Process</STRONG> (ARM, 244 bytes, Stack size 36 bytes, post_pro.o(i.Post_Process))
<BR>[Called By]<UL><LI><a href="#[7ecff90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame
</UL><P><STRONG><a name="[886ee54]"></a>Post_Process_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, post_pro.o(i.Post_Process_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[7ed02ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame_init
</UL><P><STRONG><a name="[886ecec]"></a>Post_Process_init</STRONG> (ARM, 80 bytes, Stack size 16 bytes, post_pro.o(i.Post_Process_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[7ed02ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame_init
</UL><P><STRONG><a name="[886efbc]"></a>Post_Process_reset</STRONG> (ARM, 48 bytes, Stack size 0 bytes, post_pro.o(i.Post_Process_reset))
<BR>[Called By]<UL><LI><a href="#[7ed02ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame_init
<LI><a href="#[7ed0008]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame_reset
</UL><P><STRONG><a name="[8d93f70]"></a>Pow2</STRONG> (ARM, 76 bytes, Stack size 0 bytes, pow2.o(i.Pow2))
<BR>[Called By]<UL><LI><a href="#[8cd666c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Dec_gain
<LI><a href="#[8de33d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR475_gain_quant
<LI><a href="#[8de3448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR475_update_unq_pred
<LI><a href="#[8de327c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR795_gain_quant
<LI><a href="#[8de320c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Qua_gain
<LI><a href="#[8cd6510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;d_gain_code
<LI><a href="#[8cd6f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec
<LI><a href="#[8de32f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;q_gain_code
</UL><P><STRONG><a name="[88867d0]"></a>Pre_Process</STRONG> (ARM, 240 bytes, Stack size 40 bytes, pre_proc.o(i.Pre_Process))
<BR><BR>[Calls]<UL><LI><a href="#[8cdefa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_Extract
</UL><BR>[Called By]<UL><LI><a href="#[7e89da4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Encode_Frame
</UL><P><STRONG><a name="[8886a20]"></a>Pre_Process_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, pre_proc.o(i.Pre_Process_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[7e89ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Encode_Frame_init
</UL><P><STRONG><a name="[8886934]"></a>Pre_Process_init</STRONG> (ARM, 80 bytes, Stack size 16 bytes, pre_proc.o(i.Pre_Process_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[7e89ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Encode_Frame_init
</UL><P><STRONG><a name="[8886b0c]"></a>Pre_Process_reset</STRONG> (ARM, 48 bytes, Stack size 0 bytes, pre_proc.o(i.Pre_Process_reset))
<BR>[Called By]<UL><LI><a href="#[7e89ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Encode_Frame_init
<LI><a href="#[7e89c48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Encode_Frame_reset
</UL><P><STRONG><a name="[8cc50c4]"></a>Pred_lt_3or6</STRONG> (ARM, 360 bytes, Stack size 12 bytes, pred_lt.o(i.Pred_lt_3or6))
<BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
<LI><a href="#[8cc5308]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cl_ltp
<LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
</UL><P><STRONG><a name="[8886680]"></a>Prm2bits</STRONG> (ARM, 160 bytes, Stack size 32 bytes, prm2bits.o(i.Prm2bits))
<BR>[Called By]<UL><LI><a href="#[7e89da4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Encode_Frame
</UL><P><STRONG><a name="[57e7c0c]"></a>ProcessUpdate</STRONG> (ARM, 680 bytes, Stack size 40 bytes, Upload.o(i.ProcessUpdate))
<BR><BR>[Calls]<UL><LI><a href="#[57e90dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MPClean
<LI><a href="#[57e8e64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MPTestBoundary
<LI><a href="#[57e7b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpParseSinglePart
<LI><a href="#[57e7b1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetInnerPartName
<LI><a href="#[57e7aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteSinglePart
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[57e7a28]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FreeInnerPartName
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[71ece0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyWrite
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[57e7c80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MPTestWriteFlash
<LI><a href="#[5537b50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetString
</UL><BR>[Called By]<UL><LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
</UL><P><STRONG><a name="[582d124]"></a>PushMsgNode</STRONG> (ARM, 168 bytes, Stack size 24 bytes, Msg.o(i.PushMsgNode))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[5536b50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAppendNode
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
</UL><BR>[Called By]<UL><LI><a href="#[56dc448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendMsg
</UL><P><STRONG><a name="[8dbdce8]"></a>Q_plsf_3</STRONG> (ARM, 820 bytes, Stack size 200 bytes, q_plsf_3.o(i.Q_plsf_3))
<BR><BR>[Calls]<UL><LI><a href="#[8dac63c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lsp_lsf
<LI><a href="#[8f04d0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lsf_wt
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[8f05204]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Vq_subvec3
<LI><a href="#[8f05194]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Vq_subvec4
<LI><a href="#[8d879fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Reorder_lsf
<LI><a href="#[8cd6e94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lsf_lsp
</UL><BR>[Called By]<UL><LI><a href="#[8cc55a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_enc
<LI><a href="#[8cc5684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp
</UL><P><STRONG><a name="[8dff564]"></a>Q_plsf_5</STRONG> (ARM, 1240 bytes, Stack size 256 bytes, q_plsf_5.o(i.Q_plsf_5))
<BR><BR>[Calls]<UL><LI><a href="#[8dac63c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lsp_lsf
<LI><a href="#[8f04d0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lsf_wt
<LI><a href="#[8ef9aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Vq_subvec
<LI><a href="#[8d879fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Reorder_lsf
<LI><a href="#[8cd6e94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lsf_lsp
</UL><BR>[Called By]<UL><LI><a href="#[8cc5684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp
</UL><P><STRONG><a name="[8dff640]"></a>Q_plsf_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, q_plsf.o(i.Q_plsf_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[8cc5e74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp_exit
</UL><P><STRONG><a name="[8dff6b0]"></a>Q_plsf_init</STRONG> (ARM, 88 bytes, Stack size 16 bytes, q_plsf.o(i.Q_plsf_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[8cc5ae4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp_init
</UL><P><STRONG><a name="[8dff720]"></a>Q_plsf_reset</STRONG> (ARM, 56 bytes, Stack size 0 bytes, q_plsf.o(i.Q_plsf_reset))
<BR>[Called By]<UL><LI><a href="#[8cc5ae4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp_init
<LI><a href="#[8cc6208]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lsp_reset
</UL><P><STRONG><a name="[8de320c]"></a>Qua_gain</STRONG> (ARM, 728 bytes, Stack size 88 bytes, qua_gain.o(i.Qua_gain))
<BR><BR>[Calls]<UL><LI><a href="#[8d93f70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pow2
</UL><BR>[Called By]<UL><LI><a href="#[8cc5228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant
</UL><P><STRONG><a name="[4a55154]"></a>ReadCameraParam</STRONG> (ARM, 172 bytes, Stack size 16 bytes, LibIPCamera.o(i.ReadCameraParam))
<BR><BR>[Calls]<UL><LI><a href="#[4e4ddd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ReadFlashMemory
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4e4dd60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;InitDefaultParam
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4e4dc6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledSetFactoryDefault
<LI><a href="#[4e4dbf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState_PoweredOn
<LI><a href="#[4a55bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask
</UL><BR>[Called By]<UL><LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[4e4ddd8]"></a>ReadFlashMemory</STRONG> (ARM, 200 bytes, Stack size 16 bytes, CameraConfig.o(i.ReadFlashMemory))
<BR><BR>[Calls]<UL><LI><a href="#[7338f78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyGetTotalSize
<LI><a href="#[4e4c9d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyRead
<LI><a href="#[4eaa6a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetConfigCheckSum
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
</UL><BR>[Called By]<UL><LI><a href="#[4a55154]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReadCameraParam
</UL><P><STRONG><a name="[4a54e98]"></a>Read_FlashFile</STRONG> (ARM, 332 bytes, Stack size 40 bytes, flash_file.o(i.Read_FlashFile))
<BR><BR>[Calls]<UL><LI><a href="#[4e4c9d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyRead
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[7242958]"></a>Read_GPIO7</STRONG> (ARM, 32 bytes, Stack size 0 bytes, vp_usb.o(i.Read_GPIO7))
<BR>[Called By]<UL><LI><a href="#[72f2778]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SDRAM_USB_Transfer
<LI><a href="#[49f86dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBExceptionHandle
<LI><a href="#[72ed2e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[7242e18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckUSB
</UL><P><STRONG><a name="[4deec54]"></a>RebootOnConnectionOver</STRONG> (ARM, 36 bytes, Stack size 8 bytes, System.o(i.RebootOnConnectionOver))
<BR><BR>[Calls]<UL><LI><a href="#[4e4c718]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetKeepAliveMode
<LI><a href="#[4e4c794]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetSendDataOverFun
</UL><BR>[Called By]<UL><LI><a href="#[4e4b258]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_Reboot
<LI><a href="#[4e4b66c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMac
<LI><a href="#[4e4b9a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMediaFormat
<LI><a href="#[4e4ab64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUPnP
<LI><a href="#[4e4ac4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetVNet
<LI><a href="#[4e4b1dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SetFactoryDefault
</UL><P><STRONG><a name="[4eabab8]"></a>RebuildConfigParam_Auth</STRONG> (ARM, 208 bytes, Stack size 32 bytes, User.o(i.RebuildConfigParam_Auth))
<BR><BR>[Calls]<UL><LI><a href="#[56424b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetAuthUserList
<LI><a href="#[4def554]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpMyStrncpy
</UL><BR>[Called By]<UL><LI><a href="#[4eab9d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlDelUser
<LI><a href="#[4eabc90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetUser
</UL><P><STRONG><a name="[4e4d8b4]"></a>RegisterSubCmd</STRONG> (ARM, 16 bytes, Stack size 0 bytes, LibIPCamera.o(i.RegisterSubCmd))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d7c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpRegisterEmbedFunEx
</UL><BR>[Called By]<UL><LI><a href="#[4e4c630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RegisterUrls
<LI><a href="#[4a549dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;er_register_ns_cgi
</UL><P><STRONG><a name="[4e4c630]"></a>RegisterUrls</STRONG> (ARM, 1532 bytes, Stack size 8 bytes, LibIPCamera.o(i.RegisterUrls))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d7c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpRegisterEmbedFunEx
<LI><a href="#[4e4d8b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;RegisterSubCmd
<LI><a href="#[4e4a90c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;RegisterWebFiles
</UL><BR>[Called By]<UL><LI><a href="#[4a5496c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ServerStart
</UL><P><STRONG><a name="[4e4a90c]"></a>RegisterWebFiles</STRONG> (ARM, 52 bytes, Stack size 8 bytes, web_files.o(i.RegisterWebFiles))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d7c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpRegisterEmbedFunEx
</UL><BR>[Called By]<UL><LI><a href="#[4e4c630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RegisterUrls
</UL><P><STRONG><a name="[8d879fc]"></a>Reorder_lsf</STRONG> (ARM, 80 bytes, Stack size 8 bytes, reorder.o(i.Reorder_lsf))
<BR>[Called By]<UL><LI><a href="#[8cd6d44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;D_plsf_3
<LI><a href="#[8cd6c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;D_plsf_5
<LI><a href="#[8dbdce8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Q_plsf_3
<LI><a href="#[8dff564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Q_plsf_5
<LI><a href="#[8cd6f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec
<LI><a href="#[8cc55a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_enc
</UL><P><STRONG><a name="[4e4db78]"></a>ResetCameraParam</STRONG> (ARM, 332 bytes, Stack size 48 bytes, LibIPCamera.o(i.ResetCameraParam))
<BR><BR>[Calls]<UL><LI><a href="#[4e4db00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;InitNetInterface
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4e4da90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetNullIP
<LI><a href="#[4e4da1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAuthSetUser
<LI><a href="#[4e4d9a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpEnableUserCheck
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4e4d928]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsEnableUserCheck
</UL><BR>[Called By]<UL><LI><a href="#[4a5496c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ServerStart
</UL><P><STRONG><a name="[4e4a6c0]"></a>ResetOtherThread</STRONG> (ARM, 464 bytes, Stack size 40 bytes, LibIPCamera.o(i.ResetOtherThread))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4e4a738]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MailInfoInit
<LI><a href="#[4e4a648]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_mailmem_size
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4e4a5d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mail_mem_init
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4e4a4f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
<LI><a href="#[4e4a484]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CreateMsgQueue
<LI><a href="#[4e4a328]">&gt&gt</a>&nbsp;&nbsp;&nbsp;VirtualComInit
</UL><BR>[Called By]<UL><LI><a href="#[4a5496c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ServerStart
</UL><P><STRONG><a name="[49f85ec]"></a>Reset_Int_ISR_IPCam_Board</STRONG> (ARM, 360 bytes, Stack size 24 bytes, IpcamReset.o(i.Reset_Int_ISR_IPCam_Board))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[49f8754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gpio_dsr_handle
</UL><P><STRONG><a name="[49f87c8]"></a>Reset_Int_ISR_MP4EVB_Board</STRONG> (ARM, 4 bytes, Stack size 0 bytes, IpcamReset.o(i.Reset_Int_ISR_MP4EVB_Board))
<BR>[Called By]<UL><LI><a href="#[49f8848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GpioOtherInterruptPinManage
</UL><P><STRONG><a name="[577472c]"></a>ResolveHost</STRONG> (ARM, 84 bytes, Stack size 16 bytes, Ntp.o(i.ResolveHost))
<BR><BR>[Calls]<UL><LI><a href="#[511937c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[7686d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Process
<LI><a href="#[5887994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Process
<LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
</UL><P><STRONG><a name="[5537a68]"></a>ReturnTypeBegin</STRONG> (ARM, 164 bytes, Stack size 32 bytes, Register.o(i.ReturnTypeBegin))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[5537cac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpCreateXML
<LI><a href="#[5537b50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetString
<LI><a href="#[5537bc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteXML
</UL><BR>[Called By]<UL><LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
<LI><a href="#[5537074]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SubCmdRun
</UL><P><STRONG><a name="[55376b8]"></a>ReturnTypeEnd</STRONG> (ARM, 492 bytes, Stack size 56 bytes, Register.o(i.ReturnTypeEnd))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[5537984]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DumpJsVar
<LI><a href="#[4dee308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBodyString
<LI><a href="#[553772c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DumpJsObj
<LI><a href="#[5537648]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDumpXML
<LI><a href="#[5537bc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteXML
<LI><a href="#[4e4c6a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
</UL><BR>[Called By]<UL><LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
<LI><a href="#[5537074]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SubCmdRun
</UL><P><STRONG><a name="[5923f30]"></a>RtspServerStart</STRONG> (ARM, 164 bytes, Stack size 16 bytes, RtspServer.o(i.RtspServerStart))
<BR><BR>[Calls]<UL><LI><a href="#[80b0ff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log_init
<LI><a href="#[81078c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtspBufInit
<LI><a href="#[8107854]">&gt&gt</a>&nbsp;&nbsp;&nbsp;access_log_init
<LI><a href="#[7f5f844]">&gt&gt</a>&nbsp;&nbsp;&nbsp;oss_init
<LI><a href="#[780fe0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;v4l_init
<LI><a href="#[81077e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mpeg4_init
<LI><a href="#[808c404]">&gt&gt</a>&nbsp;&nbsp;&nbsp;live_init
<LI><a href="#[7f3e4d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read_config_file
<LI><a href="#[8031b60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;event_loop
</UL><BR>[Called By]<UL><LI><a href="#[5927be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_start
</UL><P><STRONG><a name="[59246fc]"></a>RtspThreadRelease</STRONG> (ARM, 20 bytes, Stack size 8 bytes, rtspserver.o(i.RtspThreadRelease))
<BR><BR>[Calls]<UL><LI><a href="#[5924688]">&gt&gt</a>&nbsp;&nbsp;&nbsp;exit_event_loop
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[56dbe20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_CloseCamera
</UL><P><STRONG><a name="[5924774]"></a>RtspThreadRun</STRONG> (ARM, 100 bytes, Stack size 24 bytes, rtspserver.o(i.RtspThreadRun))
<BR><BR>[Calls]<UL><LI><a href="#[5927c58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_config
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
</UL><BR>[Called By]<UL><LI><a href="#[56dc278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_OpenCamera
</UL><P><STRONG><a name="[77ac064]"></a>RunEmbedFun</STRONG> (ARM, 144 bytes, Stack size 24 bytes, HttpServer.o(i.RunEmbedFun))
<BR><BR>[Calls]<UL><LI><a href="#[59b4b0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CompareEmbedPatten
<LI><a href="#[59af71c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;auth_authorize
</UL><BR>[Called By]<UL><LI><a href="#[77ac148]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_header_end
</UL><P><STRONG><a name="[571649c]"></a>SELECT_MSG_Final</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Msg.o(i.SELECT_MSG_Final))
<BR><BR>[Calls]<UL><LI><a href="#[57167b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjFinal
</UL><BR>[Address Reference Count : 1]<UL><LI> SSelect.o(i.SelectThread)
</UL><P><STRONG><a name="[5716514]"></a>SELECT_MSG_Init</STRONG> (ARM, 152 bytes, Stack size 40 bytes, Msg.o(i.SELECT_MSG_Init))
<BR><BR>[Calls]<UL><LI><a href="#[5716828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjInit
</UL><BR>[Address Reference Count : 1]<UL><LI> SSelect.o(i.SelectThread)
</UL><P><STRONG><a name="[582cfcc]"></a>SELECT_MSG_Process</STRONG> (ARM, 80 bytes, Stack size 8 bytes, Msg.o(i.SELECT_MSG_Process))
<BR><BR>[Calls]<UL><LI><a href="#[5716430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetMsg
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Address Reference Count : 1]<UL><LI> Msg.o(i.SELECT_MSG_Init)
</UL><P><STRONG><a name="[9b267cc]"></a>SM_AddFreeBlock</STRONG> (ARM, 124 bytes, Stack size 16 bytes, sm_l2p.o(i.SM_AddFreeBlock))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[7648eb4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_L2PTable_Init
<LI><a href="#[9b26244]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mark_block_data
<LI><a href="#[9b26334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data
<LI><a href="#[9b262b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data_2K
</UL><P><STRONG><a name="[56dc360]"></a>SaveJpeg</STRONG> (ARM, 180 bytes, Stack size 32 bytes, CameraCtl.o(i.SaveJpeg))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[5456e80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerAck
</UL><BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
</UL><P><STRONG><a name="[4e4a410]"></a>SelectThread</STRONG> (ARM, 1368 bytes, Stack size 136 bytes, SSelect.o(i.SelectThread))
<BR><BR>[Calls]<UL><LI><a href="#[5536bc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpCreateList
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5716828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjInit
<LI><a href="#[5536b50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAppendNode
<LI><a href="#[57167b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjFinal
<LI><a href="#[5716430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetMsg
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4bba3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4c30a1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_yield
<LI><a href="#[57163bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteNode
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[5536a60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteList
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.ResetOtherThread)
</UL><P><STRONG><a name="[4eab4bc]"></a>SendCameraMsg</STRONG> (ARM, 64 bytes, Stack size 16 bytes, CameraCtl.o(i.SendCameraMsg))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[56dc448]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[558f900]">&gt&gt</a>&nbsp;&nbsp;&nbsp;iothread_EventInterrupt
</UL><BR>[Called By]<UL><LI><a href="#[4e4bee0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetLogo
<LI><a href="#[4e4baa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMotionDetect
<LI><a href="#[56dc3d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetCameraInitState
<LI><a href="#[4eab0f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetBrightness
<LI><a href="#[4eab1e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetFramerate
<LI><a href="#[4eaaf0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetMicVolume
<LI><a href="#[4eab350]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetQuality
<LI><a href="#[4eab530]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetResolution
<LI><a href="#[4eab000]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetSpeakerVolume
</UL><P><STRONG><a name="[56dc448]"></a>SendMsg</STRONG> (ARM, 64 bytes, Stack size 16 bytes, Msg.o(i.SendMsg))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_wait
<LI><a href="#[582d124]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PushMsgNode
<LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><BR>[Called By]<UL><LI><a href="#[5716588]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AddSelectFD
<LI><a href="#[57165f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InsertCustomProcess
<LI><a href="#[4eab4bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendCameraMsg
</UL><P><STRONG><a name="[82a14f0]"></a>SeperatorDescription</STRONG> (ARM, 112 bytes, Stack size 0 bytes, C_MultiPart.o(i.SeperatorDescription))
<BR>[Address Reference Count : 1]<UL><LI> C_MultiPart.o(i.httpParseDescription)
</UL><P><STRONG><a name="[82a1380]"></a>SeperatorSinglePart</STRONG> (ARM, 84 bytes, Stack size 0 bytes, C_MultiPart.o(i.SeperatorSinglePart))
<BR>[Address Reference Count : 1]<UL><LI> C_MultiPart.o(i.httpParseSinglePart)
</UL><P><STRONG><a name="[4a5496c]"></a>ServerStart</STRONG> (ARM, 388 bytes, Stack size 32 bytes, LibIPCamera.o(i.ServerStart))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4e4a0ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_init
<LI><a href="#[4e4a074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetFlashCapability
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4e4a000]">&gt&gt</a>&nbsp;&nbsp;&nbsp;InitResetGPIO
<LI><a href="#[4e4db78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ResetCameraParam
<LI><a href="#[4e4c630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;RegisterUrls
<LI><a href="#[4e49f88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetAuthPrompt
<LI><a href="#[4e4a6c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ResetOtherThread
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
<LI><a href="#[4a0359c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_self
<LI><a href="#[4c30798]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_set_priority
<LI><a href="#[4e49e2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpdStartEx
</UL><BR>[Called By]<UL><LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[56dc3d0]"></a>SetCameraInitState</STRONG> (ARM, 108 bytes, Stack size 8 bytes, CameraCtl.o(i.SetCameraInitState))
<BR><BR>[Calls]<UL><LI><a href="#[4eab4bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendCameraMsg
</UL><BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
</UL><P><STRONG><a name="[4e4a1d0]"></a>SetCheckedTime</STRONG> (ARM, 164 bytes, Stack size 64 bytes, Register.o(i.SetCheckedTime))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[553a690]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[55373f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetSystemTimeZone
<LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[544d544]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gmtime_r
<LI><a href="#[558e5e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetDateTime
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4bfc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetTime
<LI><a href="#[5775c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPDataToTime
<LI><a href="#[4e4a2b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;OnHttpInit
</UL><P><STRONG><a name="[56dbc48]"></a>SetExtraHeader</STRONG> (ARM, 72 bytes, Stack size 16 bytes, HttpServer.o(i.SetExtraHeader))
<BR><BR>[Calls]<UL><LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[785f888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_New
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Called By]<UL><LI><a href="#[4e4c5bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendJpeg
</UL><P><STRONG><a name="[4dee770]"></a>SetIP</STRONG> (ARM, 572 bytes, Stack size 704 bytes, System.o(i.SetIP))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d254]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIP2String
<LI><a href="#[4a5583c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DownInterface
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a557c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;build_bootp_record
<LI><a href="#[4a55754]">&gt&gt</a>&nbsp;&nbsp;&nbsp;show_bootp
<LI><a href="#[4a556e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_net
<LI><a href="#[4cecd90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_dns_res_init
<LI><a href="#[4d0cfac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_loopback_interface
<LI><a href="#[4d0cebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_all_network_interfaces
<LI><a href="#[4dee848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetRandomIP
<LI><a href="#[4def22c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetPubIPInfo
<LI><a href="#[4dee7dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;OnSetIP
</UL><BR>[Called By]<UL><LI><a href="#[58d2ac0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_set_ip_addr
</UL><P><STRONG><a name="[4e4da90]"></a>SetNullIP</STRONG> (ARM, 212 bytes, Stack size 672 bytes, System.o(i.SetNullIP))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d254]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIP2String
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4a5583c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DownInterface
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a557c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;build_bootp_record
<LI><a href="#[4a55754]">&gt&gt</a>&nbsp;&nbsp;&nbsp;show_bootp
<LI><a href="#[4a556e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_net
<LI><a href="#[4d0cfac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_loopback_interface
</UL><BR>[Called By]<UL><LI><a href="#[4e4db78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetCameraParam
</UL><P><STRONG><a name="[5504a00]"></a>SetRGBRawData</STRONG> (ARM, 84 bytes, Stack size 16 bytes, vp_jpeg.o(i.SetRGBRawData))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[537ed60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegdecGetYSize
<LI><a href="#[537ece8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegdecGetUVSize
</UL><BR>[Called By]<UL><LI><a href="#[550490c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;decodeJPEGPrimaryImage
</UL><P><STRONG><a name="[4dee848]"></a>SetRandomIP</STRONG> (ARM, 212 bytes, Stack size 672 bytes, System.o(i.SetRandomIP))
<BR><BR>[Calls]<UL><LI><a href="#[4def1bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetRandomIP
<LI><a href="#[4e4d254]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIP2String
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4a5583c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DownInterface
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a557c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;build_bootp_record
<LI><a href="#[4a55754]">&gt&gt</a>&nbsp;&nbsp;&nbsp;show_bootp
<LI><a href="#[4a556e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_net
<LI><a href="#[4d0cfac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_loopback_interface
</UL><BR>[Called By]<UL><LI><a href="#[4dee770]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetIP
</UL><P><STRONG><a name="[562be84]"></a>SetRunTimeState</STRONG> (ARM, 56 bytes, Stack size 16 bytes, Status.o(i.SetRunTimeState))
<BR><BR>[Calls]<UL><LI><a href="#[562be10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetPrivilege
</UL><BR>[Called By]<UL><LI><a href="#[4e4c458]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetStatus
<LI><a href="#[56dcec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillCameraData
<LI><a href="#[4fc24d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_report
</UL><P><STRONG><a name="[4dee9b0]"></a>SetWlan</STRONG> (ARM, 68 bytes, Stack size 8 bytes, System.o(i.SetWlan))
<BR><BR>[Calls]<UL><LI><a href="#[4a5583c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DownInterface
<LI><a href="#[4dee934]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wsp_set_network_managed
<LI><a href="#[4dee8b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wsp_set_network_adhoc
</UL><BR>[Called By]<UL><LI><a href="#[4e4b7c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetWlan
<LI><a href="#[5927be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_start
<LI><a href="#[71ed1a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbWlanRequest
</UL><P><STRONG><a name="[4e4cab8]"></a>SetWlanHostSleepCfg</STRONG> (ARM, 232 bytes, Stack size 88 bytes, wlan0.o(i.SetWlanHostSleepCfg))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4def9d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetIPAddress
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[734d334]"></a>SetWlanHostWakeUpCfg</STRONG> (ARM, 208 bytes, Stack size 80 bytes, wlan0.o(i.SetWlanHostWakeUpCfg))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[4e4cb30]"></a>SetWlanPSMode</STRONG> (ARM, 184 bytes, Stack size 80 bytes, wlan0.o(i.SetWlanPSMode))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[5504ec4]"></a>SetYUVRawData</STRONG> (ARM, 176 bytes, Stack size 40 bytes, vp_jpeg.o(i.SetYUVRawData))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5504e50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufEncJpegNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[54566ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;encodeJPEGwithThumbnailImage
</UL><P><STRONG><a name="[592426c]"></a>Set_Swap_FD_Func</STRONG> (ARM, 16 bytes, Stack size 0 bytes, rtsp.o(i.Set_Swap_FD_Func))
<BR>[Called By]<UL><LI><a href="#[5927be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_start
</UL><P><STRONG><a name="[8cc62e8]"></a>Set_zero</STRONG> (ARM, 48 bytes, Stack size 0 bytes, set_zero.o(i.Set_zero))
<BR>[Called By]<UL><LI><a href="#[8cd70c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Bgn_scd_init
<LI><a href="#[8cd7908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Bgn_scd_reset
<LI><a href="#[8cd71b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cb_gain_average_init
<LI><a href="#[8cd7bc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cb_gain_average_reset
<LI><a href="#[886f0ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_reset
<LI><a href="#[886ed64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Filter_init
<LI><a href="#[886f034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Filter_reset
<LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
<LI><a href="#[8886a98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_reset
<LI><a href="#[8cd6f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec
<LI><a href="#[8cd7820]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec_reset
<LI><a href="#[8cc5f54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_enc_reset
<LI><a href="#[8cc5a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant_init
<LI><a href="#[8cc6120]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant_reset
<LI><a href="#[8cc5988]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ton_stab_init
<LI><a href="#[8cc6038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ton_stab_reset
</UL><P><STRONG><a name="[7ecff90]"></a>Speech_Decode_Frame</STRONG> (ARM, 188 bytes, Stack size 240 bytes, sp_dec.o(i.Speech_Decode_Frame))
<BR><BR>[Calls]<UL><LI><a href="#[885c870]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Bits2prm
<LI><a href="#[886ec7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
<LI><a href="#[886ec0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Post_Filter
<LI><a href="#[886eb98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Post_Process
</UL><BR>[Called By]<UL><LI><a href="#[755fd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;amrDecode
</UL><P><STRONG><a name="[7ed02ec]"></a>Speech_Decode_Frame_init</STRONG> (ARM, 260 bytes, Stack size 24 bytes, sp_dec.o(i.Speech_Decode_Frame_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[886eddc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_init
<LI><a href="#[886ed64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Post_Filter_init
<LI><a href="#[886ecec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Post_Process_init
<LI><a href="#[886ef44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_exit
<LI><a href="#[886eecc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Post_Filter_exit
<LI><a href="#[886ee54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Post_Process_exit
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[886f0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_reset
<LI><a href="#[886f034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Post_Filter_reset
<LI><a href="#[886efbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Post_Process_reset
</UL><BR>[Called By]<UL><LI><a href="#[755f2c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;amrInitDecode
</UL><P><STRONG><a name="[7ed0008]"></a>Speech_Decode_Frame_reset</STRONG> (ARM, 56 bytes, Stack size 8 bytes, sp_dec.o(i.Speech_Decode_Frame_reset))
<BR><BR>[Calls]<UL><LI><a href="#[886f0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_reset
<LI><a href="#[886f034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Post_Filter_reset
<LI><a href="#[886efbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Post_Process_reset
</UL><BR>[Called By]<UL><LI><a href="#[755fd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;amrDecode
</UL><P><STRONG><a name="[7e89da4]"></a>Speech_Encode_Frame</STRONG> (ARM, 188 bytes, Stack size 472 bytes, sp_enc.o(i.Speech_Encode_Frame))
<BR><BR>[Calls]<UL><LI><a href="#[88867d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pre_Process
<LI><a href="#[88866f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cod_amr
<LI><a href="#[8886680]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Prm2bits
</UL><BR>[Called By]<UL><LI><a href="#[755e3b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;amrEncode
</UL><P><STRONG><a name="[7e89ff8]"></a>Speech_Encode_Frame_init</STRONG> (ARM, 216 bytes, Stack size 24 bytes, sp_enc.o(i.Speech_Encode_Frame_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[8886934]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pre_Process_init
<LI><a href="#[88868c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cod_amr_init
<LI><a href="#[8886a20]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pre_Process_exit
<LI><a href="#[88869ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cod_amr_exit
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8886b0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pre_Process_reset
<LI><a href="#[8886a98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cod_amr_reset
</UL><BR>[Called By]<UL><LI><a href="#[755f33c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;amrInitEncode
</UL><P><STRONG><a name="[7e89c48]"></a>Speech_Encode_Frame_reset</STRONG> (ARM, 40 bytes, Stack size 8 bytes, sp_enc.o(i.Speech_Encode_Frame_reset))
<BR><BR>[Calls]<UL><LI><a href="#[8886b0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pre_Process_reset
<LI><a href="#[8886a98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cod_amr_reset
</UL><BR>[Called By]<UL><LI><a href="#[755e3b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;amrEncode
</UL><P><STRONG><a name="[881ebb4]"></a>SuspendTvp5150</STRONG> (ARM, 272 bytes, Stack size 8 bytes, dsp_init.o(i.SuspendTvp5150))
<BR><BR>[Calls]<UL><LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
</UL><BR>[Called By]<UL><LI><a href="#[7e91c10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV9650
</UL><P><STRONG><a name="[8dac4f4]"></a>Syn_filt</STRONG> (ARM, 712 bytes, Stack size 28 bytes, syn_filt.o(i.Syn_filt))
<BR>[Called By]<UL><LI><a href="#[8cd6f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec
<LI><a href="#[8cc5374]">&lt&lt</a>&nbsp;&nbsp;&nbsp;subframePreProc
</UL><P><STRONG><a name="[56dc2f0]"></a>TryGetMsg</STRONG> (ARM, 80 bytes, Stack size 16 bytes, Msg.o(i.TryGetMsg))
<BR><BR>[Calls]<UL><LI><a href="#[4c2cfec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_trywait
<LI><a href="#[582d194]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PopMsgNode
<LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
</UL><P><STRONG><a name="[73652b0]"></a>TwoWire_Write_Data</STRONG> (ARM, 1924 bytes, Stack size 40 bytes, W99702_WM8978.o(i.TwoWire_Write_Data))
<BR><BR>[Calls]<UL><LI><a href="#[789fb80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;I2CRDWRBegin
<LI><a href="#[78a4ea0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[78a4e30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;reset_gpio
<LI><a href="#[789fb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;I2CRDWREnd
</UL><BR>[Called By]<UL><LI><a href="#[789fa98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WM8978_ADC_Setup
<LI><a href="#[7364f54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WM8978_Bypass_Disable
<LI><a href="#[7364fd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WM8978_Bypass_Enable
<LI><a href="#[755f604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WM8978_DAC_Setup
<LI><a href="#[755f67c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WM8978_Init
<LI><a href="#[755f590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WM8978_R1_Init
<LI><a href="#[78a3bf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WM_Set_ADC_Volume
<LI><a href="#[78a2ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WM_Set_DAC_Volume
<LI><a href="#[755f8d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audioHeadphoneDetectionLevel
<LI><a href="#[755f858]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audioSetDacVolume
<LI><a href="#[755f7dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audioSetHeadphoneVolume
<LI><a href="#[755f760]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audioSetSpeakerVolume
<LI><a href="#[736504c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978SelectInputPath
<LI><a href="#[7365144]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978SelectOutputPath
<LI><a href="#[73655f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StopRecord
</UL><P><STRONG><a name="[5887584]"></a>URLCGI_HTTPC_Init</STRONG> (ARM, 100 bytes, Stack size 16 bytes, HttpClient.o(i.URLCGI_HTTPC_Init))
<BR><BR>[Calls]<UL><LI><a href="#[5887924]">&gt&gt</a>&nbsp;&nbsp;&nbsp;HTTPC_Init
<LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4c2c128]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_init
</UL><BR>[Address Reference Count : 1]<UL><LI> HttpClient.o(i.Http_SendHttpRequest)
</UL><P><STRONG><a name="[49f86dc]"></a>USBExceptionHandle</STRONG> (ARM, 96 bytes, Stack size 8 bytes, vp_usb.o(i.USBExceptionHandle))
<BR><BR>[Calls]<UL><LI><a href="#[7242958]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Read_GPIO7
<LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
</UL><BR>[Called By]<UL><LI><a href="#[49f8754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gpio_dsr_handle
</UL><P><STRONG><a name="[72ed274]"></a>USBHandler</STRONG> (ARM, 544 bytes, Stack size 32 bytes, vp_usb.o(i.USBHandler))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[72f2d78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USB_ISR_Dev_Des
<LI><a href="#[72f2d00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USB_All_Flag_Clear
<LI><a href="#[72f2c8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USB_Cmd_Parsing
<LI><a href="#[72f2c18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USB_ISR_Str_Des
<LI><a href="#[72f2ba0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USB_ISR_Vendor_Cmd
<LI><a href="#[72f2b2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Vender_Data_Out
<LI><a href="#[72f2ab8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USB_ISR_CtlIn
<LI><a href="#[72f2a40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USB_ISR_Reset_End
<LI><a href="#[4c2ef7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_acknowledge
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_usb.o(i.USB_Int_Init)
</UL><P><STRONG><a name="[71ec91c]"></a>USBInitForVCom</STRONG> (ARM, 68 bytes, Stack size 8 bytes, vp_usb.o(i.USBInitForVCom))
<BR><BR>[Calls]<UL><LI><a href="#[72ed18c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USB_Int_Init
<LI><a href="#[72ed2e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USB_Init
</UL><BR>[Called By]<UL><LI><a href="#[4e4a328]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VirtualComInit
</UL><P><STRONG><a name="[71ed618]"></a>USBRead</STRONG> (ARM, 112 bytes, Stack size 24 bytes, vp_usb.o(i.USBRead))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[72f1f1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usbread
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71ecd2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FTPRequest
<LI><a href="#[71ecb5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;authRequest
<LI><a href="#[71ece7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;firmwareRequst
<LI><a href="#[71ecbcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;imageRequest
<LI><a href="#[71eca78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;logonRequest
<LI><a href="#[71ecd9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailRequest
<LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
<LI><a href="#[71ecf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;systemRequest
<LI><a href="#[71ed214]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbCustomRequest
<LI><a href="#[71eccb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbIPRequest
<LI><a href="#[71ed1a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbWlanRequest
<LI><a href="#[71ed684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_setPPP
</UL><P><STRONG><a name="[71ec8a0]"></a>USBRegiesterException</STRONG> (ARM, 20 bytes, Stack size 0 bytes, vp_usb.o(i.USBRegiesterException))
<BR>[Called By]<UL><LI><a href="#[4e4a328]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VirtualComInit
</UL><P><STRONG><a name="[71ed5a4]"></a>USBResetForVCom</STRONG> (ARM, 76 bytes, Stack size 8 bytes, vp_usb.o(i.USBResetForVCom))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
</UL><BR>[Called By]<UL><LI><a href="#[71ecd2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FTPRequest
<LI><a href="#[71ecb5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;authRequest
<LI><a href="#[71ece7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;firmwareRequst
<LI><a href="#[71ecbcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;imageRequest
<LI><a href="#[71eca78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;logonRequest
<LI><a href="#[71ecd9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailRequest
<LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
<LI><a href="#[71ecf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;systemRequest
<LI><a href="#[71ed214]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbCustomRequest
<LI><a href="#[71eccb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbIPRequest
<LI><a href="#[71ed1a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbWlanRequest
<LI><a href="#[71ed684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_setPPP
</UL><P><STRONG><a name="[71ecfd8]"></a>USBWrite</STRONG> (ARM, 208 bytes, Stack size 40 bytes, vp_usb.o(i.USBWrite))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[72f2778]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SDRAM_USB_Transfer
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71f3fe8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBWrite_Again
<LI><a href="#[71ed048]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcomDump
</UL><P><STRONG><a name="[72ed2e4]"></a>USB_Init</STRONG> (ARM, 268 bytes, Stack size 24 bytes, vp_usb.o(i.USB_Init))
<BR><BR>[Calls]<UL><LI><a href="#[72f303c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USB_Setup_Endpoint
<LI><a href="#[7242958]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Read_GPIO7
<LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4c2d3fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_init
</UL><BR>[Called By]<UL><LI><a href="#[71ec91c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBInitForVCom
</UL><P><STRONG><a name="[72ed18c]"></a>USB_Int_Init</STRONG> (ARM, 100 bytes, Stack size 16 bytes, vp_usb.o(i.USB_Int_Init))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4c2fadc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_create
<LI><a href="#[4c2f8d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_attach
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[71ec91c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBInitForVCom
</UL><P><STRONG><a name="[5774410]"></a>UnpackNTP</STRONG> (ARM, 568 bytes, Stack size 40 bytes, Ntp.o(i.UnpackNTP))
<BR><BR>[Calls]<UL><LI><a href="#[5774564]">&gt&gt</a>&nbsp;&nbsp;&nbsp;current_time
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4f74974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dflt
<LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><BR>[Called By]<UL><LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
</UL><P><STRONG><a name="[7d7a6a4]"></a>VPEPacketRotationSetBufferAddr</STRONG> (ARM, 1020 bytes, Stack size 28 bytes, vpe.o(i.VPEPacketRotationSetBufferAddr))
<BR>[Called By]<UL><LI><a href="#[7d7a630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeRotationInit
</UL><P><STRONG><a name="[4a54f0c]"></a>VideoPhoneInit</STRONG> (ARM, 196 bytes, Stack size 8 bytes, videophone.o(i.VideoPhoneInit))
<BR><BR>[Calls]<UL><LI><a href="#[4a55508]">&gt&gt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInitClock
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4d843c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufInit
<LI><a href="#[4d84354]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegInit
<LI><a href="#[4d842e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdInit
<LI><a href="#[4d84278]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vvpeInit
<LI><a href="#[4d84208]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vgfxInit
<LI><a href="#[4d84198]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmInit
<LI><a href="#[4d84128]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4Init
<LI><a href="#[4d840b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;iothread_Init
<LI><a href="#[4d84040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptInitThread
<LI><a href="#[4d83fd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauInit
<LI><a href="#[4d83f64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vinfoInit
</UL><BR>[Called By]<UL><LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[4a55508]"></a>VideoPhoneInitClock</STRONG> (ARM, 308 bytes, Stack size 48 bytes, videophone.o(i.VideoPhoneInitClock))
<BR><BR>[Calls]<UL><LI><a href="#[4d8466c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sysFlushCache
<LI><a href="#[4d845f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sysDisableCache
<LI><a href="#[4d84584]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sysEnableCache
<LI><a href="#[4d84510]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pllEvalPLLCON
<LI><a href="#[4d844a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_set_clk
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
</UL><BR>[Called By]<UL><LI><a href="#[4a54f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInit
<LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[4e4a328]"></a>VirtualComInit</STRONG> (ARM, 88 bytes, Stack size 24 bytes, vp_com.o(i.VirtualComInit))
<BR><BR>[Calls]<UL><LI><a href="#[71ec91c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBInitForVCom
<LI><a href="#[71ec8a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBRegiesterException
<LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
</UL><BR>[Called By]<UL><LI><a href="#[4e4a6c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetOtherThread
</UL><P><STRONG><a name="[56dbe20]"></a>W99702_CloseCamera</STRONG> (ARM, 32 bytes, Stack size 8 bytes, W99702Camera.o(i.W99702_CloseCamera))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[59246fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;RtspThreadRelease
</UL><BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
</UL><P><STRONG><a name="[7f8b6fc]"></a>W99702_GetBrightness</STRONG> (ARM, 24 bytes, Stack size 0 bytes, W99702Camera.o(i.W99702_GetBrightness))
<BR>[Called By]<UL><LI><a href="#[56dbf8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetImageBrightness
</UL><P><STRONG><a name="[7f8b7f4]"></a>W99702_GetFramerate</STRONG> (ARM, 24 bytes, Stack size 0 bytes, W99702Camera.o(i.W99702_GetFramerate))
<BR>[Called By]<UL><LI><a href="#[56dc00c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetFramerate
</UL><P><STRONG><a name="[7f8b778]"></a>W99702_GetImageQuality</STRONG> (ARM, 24 bytes, Stack size 0 bytes, W99702Camera.o(i.W99702_GetImageQuality))
<BR>[Called By]<UL><LI><a href="#[56dc084]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetImageQuality
<LI><a href="#[56dc100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetImageResolution
</UL><P><STRONG><a name="[56dc180]"></a>W99702_GetImageResolution</STRONG> (ARM, 164 bytes, Stack size 0 bytes, W99702Camera.o(i.W99702_GetImageResolution))
<BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
<LI><a href="#[56dc084]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetImageQuality
<LI><a href="#[56dc100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetImageResolution
</UL><P><STRONG><a name="[7f8b608]"></a>W99702_GetMicVolume</STRONG> (ARM, 24 bytes, Stack size 0 bytes, W99702Camera.o(i.W99702_GetMicVolume))
<BR>[Called By]<UL><LI><a href="#[56dbe98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetMicVolume
</UL><P><STRONG><a name="[56dc200]"></a>W99702_GetOneImage</STRONG> (ARM, 220 bytes, Stack size 24 bytes, W99702Camera.o(i.W99702_GetOneImage))
<BR><BR>[Calls]<UL><LI><a href="#[558f9cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;iothread_EventRead
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
</UL><P><STRONG><a name="[7f8b680]"></a>W99702_GetSpeakerVolume</STRONG> (ARM, 24 bytes, Stack size 0 bytes, W99702Camera.o(i.W99702_GetSpeakerVolume))
<BR>[Called By]<UL><LI><a href="#[56dbf10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetSpeakerVolume
</UL><P><STRONG><a name="[56dc278]"></a>W99702_OpenCamera</STRONG> (ARM, 136 bytes, Stack size 16 bytes, W99702Camera.o(i.W99702_OpenCamera))
<BR><BR>[Calls]<UL><LI><a href="#[558e9ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoBitRate
<LI><a href="#[558f058]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetLocalVideoSource
<LI><a href="#[558ed80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetFrame
<LI><a href="#[558ed08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoFormat
<LI><a href="#[558e840]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetAudioType
<LI><a href="#[558f6ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702EnableMP4Encoder
<LI><a href="#[558f630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702EnableAudioEncoder
<LI><a href="#[558e660]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetJPEG
<LI><a href="#[4db5030]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_change_enable
<LI><a href="#[5924774]">&gt&gt</a>&nbsp;&nbsp;&nbsp;RtspThreadRun
</UL><BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
</UL><P><STRONG><a name="[56dc00c]"></a>W99702_SetFramerate</STRONG> (ARM, 72 bytes, Stack size 16 bytes, W99702Camera.o(i.W99702_SetFramerate))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7f8b7f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99702_GetFramerate
<LI><a href="#[558e1a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoFramerate
</UL><BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
</UL><P><STRONG><a name="[56dbf8c]"></a>W99702_SetImageBrightness</STRONG> (ARM, 64 bytes, Stack size 16 bytes, W99702Camera.o(i.W99702_SetImageBrightness))
<BR><BR>[Calls]<UL><LI><a href="#[7f8b6fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99702_GetBrightness
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[558dd4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoContrastBright
</UL><BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
</UL><P><STRONG><a name="[56dc084]"></a>W99702_SetImageQuality</STRONG> (ARM, 84 bytes, Stack size 24 bytes, W99702Camera.o(i.W99702_SetImageQuality))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7f8b778]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99702_GetImageQuality
<LI><a href="#[56dc180]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99702_GetImageResolution
<LI><a href="#[7f8b86c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__W99702_SetImageQuality
</UL><BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
</UL><P><STRONG><a name="[56dc100]"></a>W99702_SetImageResolution</STRONG> (ARM, 164 bytes, Stack size 32 bytes, W99702Camera.o(i.W99702_SetImageResolution))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[56dc180]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99702_GetImageResolution
<LI><a href="#[558e660]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetJPEG
<LI><a href="#[558f6ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702EnableMP4Encoder
<LI><a href="#[558f058]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetLocalVideoSource
<LI><a href="#[7f8b778]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99702_GetImageQuality
<LI><a href="#[7f8b86c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__W99702_SetImageQuality
</UL><BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
</UL><P><STRONG><a name="[56dbe98]"></a>W99702_SetMicVolume</STRONG> (ARM, 64 bytes, Stack size 16 bytes, W99702Camera.o(i.W99702_SetMicVolume))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7f8b608]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99702_GetMicVolume
<LI><a href="#[558de50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetAudioRecordVolume
</UL><BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
</UL><P><STRONG><a name="[56dbf10]"></a>W99702_SetSpeakerVolume</STRONG> (ARM, 64 bytes, Stack size 16 bytes, W99702Camera.o(i.W99702_SetSpeakerVolume))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7f8b680]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99702_GetSpeakerVolume
<LI><a href="#[558ded0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetAudioPlayVolume
</UL><BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
</UL><P><STRONG><a name="[4defdb8]"></a>W99802Reboot</STRONG> (ARM, 252 bytes, Stack size 16 bytes, System.o(i.W99802Reboot))
<BR><BR>[Calls]<UL><LI><a href="#[4defd48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyLock
<LI><a href="#[4defcd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyFlash
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4e4b428]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetHttp
<LI><a href="#[4eaa894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlReboot
<LI><a href="#[4df0110]">&lt&lt</a>&nbsp;&nbsp;&nbsp;onHttpReboot_Safe
</UL><P><STRONG><a name="[7c2ab68]"></a>WB_Interrupt_Shell</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wb_aic.o(i.WB_Interrupt_Shell))
<BR>[Address Reference Count : 1]<UL><LI> wb_aic.o(.data)
</UL><P><STRONG><a name="[789fa98]"></a>WM8978_ADC_Setup</STRONG> (ARM, 124 bytes, Stack size 8 bytes, W99702_WM8978.o(i.WM8978_ADC_Setup))
<BR><BR>[Calls]<UL><LI><a href="#[73652b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;TwoWire_Write_Data
<LI><a href="#[78a3bf4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WM_Set_ADC_Volume
<LI><a href="#[736504c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wm8978SelectInputPath
</UL><BR>[Called By]<UL><LI><a href="#[7365758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartRecord
</UL><P><STRONG><a name="[7364f54]"></a>WM8978_Bypass_Disable</STRONG> (ARM, 32 bytes, Stack size 8 bytes, W99702_WM8978.o(i.WM8978_Bypass_Disable))
<BR><BR>[Calls]<UL><LI><a href="#[73652b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;TwoWire_Write_Data
</UL><BR>[Called By]<UL><LI><a href="#[4a55cd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audioBypassDisable
</UL><P><STRONG><a name="[7364fd0]"></a>WM8978_Bypass_Enable</STRONG> (ARM, 96 bytes, Stack size 8 bytes, W99702_WM8978.o(i.WM8978_Bypass_Enable))
<BR><BR>[Calls]<UL><LI><a href="#[73652b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;TwoWire_Write_Data
<LI><a href="#[7365144]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wm8978SelectOutputPath
<LI><a href="#[736504c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wm8978SelectInputPath
</UL><BR>[Called By]<UL><LI><a href="#[4a55dc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audioBypassEnable
</UL><P><STRONG><a name="[755f604]"></a>WM8978_DAC_Setup</STRONG> (ARM, 272 bytes, Stack size 8 bytes, W99702_WM8978.o(i.WM8978_DAC_Setup))
<BR><BR>[Calls]<UL><LI><a href="#[73652b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;TwoWire_Write_Data
<LI><a href="#[7365144]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wm8978SelectOutputPath
</UL><BR>[Called By]<UL><LI><a href="#[755f954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_WM8978_test
<LI><a href="#[7365a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartPlay
</UL><P><STRONG><a name="[755f67c]"></a>WM8978_Init</STRONG> (ARM, 140 bytes, Stack size 16 bytes, W99702_WM8978.o(i.WM8978_Init))
<BR><BR>[Calls]<UL><LI><a href="#[73652b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;TwoWire_Write_Data
</UL><BR>[Called By]<UL><LI><a href="#[755f954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_WM8978_test
</UL><P><STRONG><a name="[755f590]"></a>WM8978_R1_Init</STRONG> (ARM, 84 bytes, Stack size 8 bytes, W99702_WM8978.o(i.WM8978_R1_Init))
<BR><BR>[Calls]<UL><LI><a href="#[73652b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;TwoWire_Write_Data
</UL><BR>[Called By]<UL><LI><a href="#[755f954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_WM8978_test
</UL><P><STRONG><a name="[71ee3ac]"></a>WRGetProductVersion</STRONG> (ARM, 96 bytes, Stack size 40 bytes, Version.o(i.WRGetProductVersion))
<BR><BR>[Calls]<UL><LI><a href="#[5672c0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WRGetProductVersionNum
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
</UL><BR>[Called By]<UL><LI><a href="#[4e4c370]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetVer
<LI><a href="#[71ee424]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrrequestStatusLenth
<LI><a href="#[71ee330]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrrequestStatusStru
</UL><P><STRONG><a name="[5672c0c]"></a>WRGetProductVersionNum</STRONG> (ARM, 128 bytes, Stack size 24 bytes, Version.o(i.WRGetProductVersionNum))
<BR><BR>[Calls]<UL><LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[4dee704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strtol
</UL><BR>[Called By]<UL><LI><a href="#[4e4af7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_GetFirmware
<LI><a href="#[71ee3ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WRGetProductVersion
</UL><P><STRONG><a name="[4def390]"></a>WebCameraLog</STRONG> (ARM, 288 bytes, Stack size 40 bytes, WebCameraLog.o(i.WebCameraLog))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[56aaca8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[4def6b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetClientAddr
<LI><a href="#[56aa630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetClientMac
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4bc10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChBrightness
<LI><a href="#[4e4bd00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChCompressRatio
<LI><a href="#[4e4bc88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChFramerate
<LI><a href="#[4e4bb1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChMicVolume
<LI><a href="#[4e4bd7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChResolution
<LI><a href="#[4e4bb94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChSpeakerVolume
<LI><a href="#[4e4c0b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_DelUser
<LI><a href="#[4e4b8b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetCamera
<LI><a href="#[4e4b428]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetHttp
<LI><a href="#[4e4b340]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetIP
<LI><a href="#[4e4bee0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetLogo
<LI><a href="#[4e4b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMail
<LI><a href="#[4e4baa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMotionDetect
<LI><a href="#[4e4ada8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetName
<LI><a href="#[4e4bfc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetTime
<LI><a href="#[4e4c128]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUser
<LI><a href="#[4e4c03c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUserCheck
<LI><a href="#[4e4ac4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetVNet
<LI><a href="#[4e4b7c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetWlan
<LI><a href="#[4e49ea0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;OnRequestBegin
</UL><P><STRONG><a name="[4def72c]"></a>WebCameraSIGTERM</STRONG> (ARM, 4 bytes, Stack size 0 bytes, System.o(i.WebCameraSIGTERM))
<BR>[Called By]<UL><LI><a href="#[4eaa894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlReboot
</UL><P><STRONG><a name="[7700190]"></a>WirelessTest_Test_Entry</STRONG> (ARM, 684 bytes, Stack size 112 bytes, TestNetServer.o(i.WirelessTest_Test_Entry))
<BR><BR>[Calls]<UL><LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[508d088]">&gt&gt</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[7700448]">&gt&gt</a>&nbsp;&nbsp;&nbsp;client_io_time_is_expired
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7700364]">&gt&gt</a>&nbsp;&nbsp;&nbsp;client_uninit
<LI><a href="#[4bba3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[770020c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;do_client
<LI><a href="#[4e4d48c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;accept_client
<LI><a href="#[77003d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;client_init
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Address Reference Count : 1]<UL><LI> TestNetServer.o(i.TestNet_ThreadInit)
</UL><P><STRONG><a name="[4e4dce8]"></a>WriteFlashMemory</STRONG> (ARM, 12 bytes, Stack size 0 bytes, CameraConfig.o(i.WriteFlashMemory))
<BR><BR>[Calls]<UL><LI><a href="#[4eaa630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__WriteFlashMemory
</UL><BR>[Called By]<UL><LI><a href="#[4e4c288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetDDNS
<LI><a href="#[4e4b428]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetHttp
<LI><a href="#[4e4b340]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetIP
<LI><a href="#[4e4bee0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetLogo
<LI><a href="#[4e4b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMail
<LI><a href="#[4e4baa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMotionDetect
<LI><a href="#[4e4ada8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetName
<LI><a href="#[4e4aa7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetPPP
<LI><a href="#[4e4bfc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetTime
<LI><a href="#[4e4ab64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUPnP
<LI><a href="#[4e4ac4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetVNet
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
<LI><a href="#[4a55154]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReadCameraParam
<LI><a href="#[4eab9d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlDelUser
<LI><a href="#[4eab0f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetBrightness
<LI><a href="#[4eab1e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetFramerate
<LI><a href="#[4eaab50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetIP
<LI><a href="#[4dee5bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetMac
<LI><a href="#[4eaae1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetMediaFormat
<LI><a href="#[4eaaf0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetMicVolume
<LI><a href="#[4eab350]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetQuality
<LI><a href="#[4eab530]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetResolution
<LI><a href="#[4eab000]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetSpeakerVolume
<LI><a href="#[4eabc90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetUser
<LI><a href="#[4eab808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetUserCheck
<LI><a href="#[4eaaae0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetWlan
<LI><a href="#[4e31d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_ResetFlag_FactoryDefault
<LI><a href="#[71ed684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_setPPP
</UL><P><STRONG><a name="[59c92f8]"></a>__CreateXML</STRONG> (ARM, 204 bytes, Stack size 16 bytes, C_String.o(i.__CreateXML))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[59cd30c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[5536bc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpCreateList
<LI><a href="#[5536a60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteList
<LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[59c920c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufXMLDecRef
</UL><BR>[Called By]<UL><LI><a href="#[59cb84c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__InsertXML
<LI><a href="#[5537cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpCreateXML
<LI><a href="#[5537560]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpCreateXMLText
</UL><P><STRONG><a name="[5355b9c]"></a>__NoPrintf</STRONG> (ARM, 4 bytes, Stack size 0 bytes, vp_bitrate_control.o(i.__NoPrintf), UNUSED)
<P><STRONG><a name="[755fcd0]"></a>__NoPrintf</STRONG> (ARM, 4 bytes, Stack size 0 bytes, vp_bitrate_control.o(i.__NoPrintf), UNUSED)
<P><STRONG><a name="[54adac4]"></a>__NoPrintf</STRONG> (ARM, 4 bytes, Stack size 0 bytes, vp_bitrate_control.o(i.__NoPrintf), UNUSED)
<P><STRONG><a name="[550468c]"></a>__NoPrintf</STRONG> (ARM, 4 bytes, Stack size 0 bytes, vp_bitrate_control.o(i.__NoPrintf), UNUSED)
<P><STRONG><a name="[4db4fc0]"></a>__NoPrintf</STRONG> (ARM, 4 bytes, Stack size 0 bytes, vp_bitrate_control.o(i.__NoPrintf))
<BR>[Called By]<UL><LI><a href="#[755ff5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauDecode
<LI><a href="#[545a790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_vcptSensorInit
<LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
<LI><a href="#[755fa3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartPlay
<LI><a href="#[75620ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnRecord
<LI><a href="#[4d84040]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptInitThread
<LI><a href="#[54573a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStart
<LI><a href="#[55046dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegGetEncBuffer
<LI><a href="#[5355c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmFillLCMBuffer
<LI><a href="#[542284c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4DecRef
<LI><a href="#[4d84128]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4Init
<LI><a href="#[54ad494]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decDecRef
<LI><a href="#[54224dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decErrorCallback
<LI><a href="#[54acefc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decPrepare
<LI><a href="#[54ad2b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decStart
<LI><a href="#[5422558]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decWaitCallback
<LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[54ad57c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encDecRef
<LI><a href="#[5422b3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encDoneCallback
<LI><a href="#[5422ac0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encErrorCallback
<LI><a href="#[4db6c38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_linkupdate
</UL><P><STRONG><a name="[5457998]"></a>__NoPrintf</STRONG> (ARM, 4 bytes, Stack size 0 bytes, vp_bitrate_control.o(i.__NoPrintf), UNUSED)
<P><STRONG><a name="[7f8b86c]"></a>__W99702_SetImageQuality</STRONG> (ARM, 236 bytes, Stack size 72 bytes, W99702Camera.o(i.__W99702_SetImageQuality))
<BR><BR>[Calls]<UL><LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[558e0b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetJPEGQuality
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[558e9ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoBitRate
</UL><BR>[Called By]<UL><LI><a href="#[56dc084]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetImageQuality
<LI><a href="#[56dc100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetImageResolution
</UL><P><STRONG><a name="[4eaa630]"></a>__WriteFlashMemory</STRONG> (ARM, 220 bytes, Stack size 24 bytes, CameraConfig.o(i.__WriteFlashMemory))
<BR><BR>[Calls]<UL><LI><a href="#[4eaa6a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetConfigCheckSum
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[7338f78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyGetTotalSize
<LI><a href="#[71ece0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyWrite
<LI><a href="#[4defcd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyFlash
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4b1dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SetFactoryDefault
<LI><a href="#[4e4b15c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_UpdateFactoryDefault
<LI><a href="#[4e4dce8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4eaa4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetDefaultMac
<LI><a href="#[4eaa7a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetFactoryDefault
</UL><P><STRONG><a name="[54578ac]"></a>__capSetIRQHandler</STRONG> (ARM, 44 bytes, Stack size 16 bytes, vp_thread_capture.o(i.__capSetIRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[5457834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capSetIRQHandler
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[54572bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptSetWindow
<LI><a href="#[54573a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStart
<LI><a href="#[5457754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStop
</UL><P><STRONG><a name="[750a528]"></a>Cyg_CList_T<Cyg_Thread>::Cyg_CList_T<Cyg_Thread>()</STRONG> (ARM, 40 bytes, Stack size 8 bytes, mlqueue.o(i.__ct__26Cyg_CList_T__t10Cyg_ThreadFv))
<BR><BR>[Calls]<UL><LI><a href="#[49d2820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL><BR>[Address Reference Count : 1]<UL><LI> mlqueue.o(.text)
</UL><P><STRONG><a name="[5025058]"></a>Cyg_IdleThread::~Cyg_IdleThread()</STRONG> (ARM, 40 bytes, Stack size 16 bytes, thread.o(i.__dt__14Cyg_IdleThreadFv))
<BR><BR>[Calls]<UL><LI><a href="#[4c30d78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::~Cyg_Thread()
<LI><a href="#[4c8d848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL><BR>[Address Reference Count : 1]<UL><LI> thread.o(C$$dtor)
</UL><P><STRONG><a name="[73eb0b4]"></a>Cyg_CList_T<Cyg_Thread>::~Cyg_CList_T<Cyg_Thread>()</STRONG> (ARM, 100 bytes, Stack size 8 bytes, sched.o(i.__dt__26Cyg_CList_T__t10Cyg_ThreadFv))
<BR><BR>[Calls]<UL><LI><a href="#[4c8d848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL><BR>[Address Reference Count : 1]<UL><LI> sched.o(C$$dtor)
</UL><P><STRONG><a name="[59c9760]"></a>__hex2char</STRONG> (ARM, 56 bytes, Stack size 0 bytes, C_String.o(i.__hex2char))
<BR>[Called By]<UL><LI><a href="#[4deeb74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpHex2Char
</UL><P><STRONG><a name="[59c97d0]"></a>__ishexchar</STRONG> (ARM, 36 bytes, Stack size 0 bytes, C_String.o(i.__ishexchar))
<BR>[Called By]<UL><LI><a href="#[4deeb74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpHex2Char
</UL><P><STRONG><a name="[5a2ffd4]"></a>__memInit</STRONG> (ARM, 104 bytes, Stack size 24 bytes, vp_audio.o(i.__memInit), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4efdcf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listAttach
</UL><P><STRONG><a name="[81d7c04]"></a>__memInit</STRONG> (ARM, 104 bytes, Stack size 24 bytes, vp_audio.o(i.__memInit), UNUSED)
<P><STRONG><a name="[53fe154]"></a>__memInit</STRONG> (ARM, 104 bytes, Stack size 24 bytes, vp_audio.o(i.__memInit), UNUSED)
<P><STRONG><a name="[755f3b0]"></a>__memInit</STRONG> (ARM, 104 bytes, Stack size 24 bytes, vp_audio.o(i.__memInit))
<BR>[Called By]<UL><LI><a href="#[4d843c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufInit
<LI><a href="#[73184ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpBufInit
<LI><a href="#[81078c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspBufInit
<LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
</UL><P><STRONG><a name="[49dbcf0]"></a>__mgmtInit</STRONG> (ARM, 156 bytes, Stack size 24 bytes, memmgmt.o(i.__mgmtInit))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
</UL><BR>[Called By]<UL><LI><a href="#[4e4a5d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mail_mem_init
<LI><a href="#[56dba70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_mem_init
</UL><P><STRONG><a name="[755ff5c]"></a>__vauDecode</STRONG> (ARM, 424 bytes, Stack size 48 bytes, vp_audio.o(i.__vauDecode))
<BR><BR>[Calls]<UL><LI><a href="#[7560048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauLock
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4c2cdec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_peek
<LI><a href="#[755fe00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listLength
<LI><a href="#[75600b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauUnlock
<LI><a href="#[755fd90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;amrDecode
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[755fd20]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DecodeLAW
<LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[4efdcf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listAttach
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_audio.o(i.vauThread_OnPlay)
</UL><P><STRONG><a name="[53562fc]"></a>__vlcmGetOSDColorWidth</STRONG> (ARM, 72 bytes, Stack size 0 bytes, vp_lcm.o(i.__vlcmGetOSDColorWidth))
<BR>[Called By]<UL><LI><a href="#[5355a38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmGetOSDColorWidth
<LI><a href="#[5356378]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmSetOSDColorMode
</UL><P><STRONG><a name="[54ada4c]"></a>__vmp4encGetBuffer</STRONG> (ARM, 60 bytes, Stack size 8 bytes, vp_mp4.o(i.__vmp4encGetBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[54acc2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4ClearBuffer
<LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[54ad9d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encGetBuffer
</UL><P><STRONG><a name="[4e4d48c]"></a>accept_client</STRONG> (ARM, 288 bytes, Stack size 48 bytes, TestNetServer.o(i.accept_client))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[50a2590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;accept
<LI><a href="#[4ced344]">&gt&gt</a>&nbsp;&nbsp;&nbsp;setsockopt
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[4e4d57c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NetTestThread
<LI><a href="#[7700190]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WirelessTest_Test_Entry
</UL><P><STRONG><a name="[8107854]"></a>access_log_init</STRONG> (ARM, 40 bytes, Stack size 8 bytes, access_log.o(i.access_log_init))
<BR><BR>[Calls]<UL><LI><a href="#[780fd90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;register_config_context
</UL><BR>[Called By]<UL><LI><a href="#[5923f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RtspServerStart
</UL><P><STRONG><a name="[736539c]"></a>adcSetRecordVolume</STRONG> (ARM, 76 bytes, Stack size 16 bytes, W99702_ADDA.o(i.adcSetRecordVolume))
<BR><BR>[Calls]<UL><LI><a href="#[78ba170]">&gt&gt</a>&nbsp;&nbsp;&nbsp;adda_get_sampling_rate
</UL><BR>[Called By]<UL><LI><a href="#[7365490]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audioSetRecordVolume
</UL><P><STRONG><a name="[73656e4]"></a>adcStartRecord</STRONG> (ARM, 296 bytes, Stack size 32 bytes, W99702_ADDA.o(i.adcStartRecord))
<BR><BR>[Calls]<UL><LI><a href="#[78b9cf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;adda_init
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[78b9010]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sysSetInterruptType
<LI><a href="#[4c2fadc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_create
<LI><a href="#[4c2f8d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_attach
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[78ba170]">&gt&gt</a>&nbsp;&nbsp;&nbsp;adda_get_sampling_rate
</UL><BR>[Called By]<UL><LI><a href="#[73657d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audioStartRecord
</UL><P><STRONG><a name="[7365584]"></a>adcStopRecord</STRONG> (ARM, 128 bytes, Stack size 8 bytes, W99702_ADDA.o(i.adcStopRecord))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[4c2f7d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_detach
</UL><BR>[Called By]<UL><LI><a href="#[7365670]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audioStopRecord
</UL><P><STRONG><a name="[78b9100]"></a>adc_rec_isr</STRONG> (ARM, 140 bytes, Stack size 8 bytes, W99702_ADDA.o(i.adc_rec_isr))
<BR>[Address Reference Count : 1]<UL><LI> W99702_ADDA.o(i.adcStartRecord)
</UL><P><STRONG><a name="[7843a24]"></a>add_digest_challenge</STRONG> (ARM, 88 bytes, Stack size 1080 bytes, http-auth.o(i.add_digest_challenge))
<BR><BR>[Calls]<UL><LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[784465c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;create_nonce
<LI><a href="#[78439ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_header_printf
</UL><BR>[Called By]<UL><LI><a href="#[80eb59c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_DESCRIBE
</UL><P><STRONG><a name="[77e75d0]"></a>add_fd_event</STRONG> (ARM, 104 bytes, Stack size 24 bytes, event.o(i.add_fd_event))
<BR><BR>[Calls]<UL><LI><a href="#[80352cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_event
<LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
</UL><BR>[Called By]<UL><LI><a href="#[8031cc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_softqueue_event
<LI><a href="#[77e76b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_udp_endpoint
<LI><a href="#[8180324]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_accept
<LI><a href="#[80eb4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_PLAY
<LI><a href="#[780fcac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_exchanger
<LI><a href="#[8180814]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_listen
</UL><P><STRONG><a name="[80cf404]"></a>add_header</STRONG> (ARM, 108 bytes, Stack size 16 bytes, pmsg.o(i.add_header))
<BR><BR>[Calls]<UL><LI><a href="#[80cf4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_pmsg_string
</UL><BR>[Called By]<UL><LI><a href="#[80cf31c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;copy_headers
<LI><a href="#[80eb59c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_DESCRIBE
<LI><a href="#[80eb4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_PLAY
<LI><a href="#[80eb528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_SETUP
<LI><a href="#[80eb444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_TEARDOWN
<LI><a href="#[8119448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_handle_msg
<LI><a href="#[80ea84c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_interleave_setup
<LI><a href="#[80ea7d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_udp_setup
</UL><P><STRONG><a name="[78439ac]"></a>add_header_printf</STRONG> (ARM, 184 bytes, Stack size 32 bytes, pmsg.o(i.add_header_printf))
<BR><BR>[Calls]<UL><LI><a href="#[4c78f58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[80cf4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_pmsg_string
</UL><BR>[Called By]<UL><LI><a href="#[7843a24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_digest_challenge
</UL><P><STRONG><a name="[778712c]"></a>add_mime_type</STRONG> (ARM, 136 bytes, Stack size 32 bytes, hash.o(i.add_mime_type))
<BR><BR>[Calls]<UL><LI><a href="#[5967258]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_mime_hash_value
<LI><a href="#[59671e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufHASHNew
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
</UL><BR>[Called By]<UL><LI><a href="#[7318080]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_config_files
</UL><P><STRONG><a name="[80cf4e4]"></a>add_pmsg_string</STRONG> (ARM, 80 bytes, Stack size 16 bytes, pmsg.o(i.add_pmsg_string))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Called By]<UL><LI><a href="#[80cf404]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_header
<LI><a href="#[78439ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_header_printf
<LI><a href="#[81800a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_unknown
<LI><a href="#[80eb680]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_create_reply
</UL><P><STRONG><a name="[8031cc0]"></a>add_softqueue_event</STRONG> (ARM, 212 bytes, Stack size 40 bytes, event.o(i.add_softqueue_event))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[582d278]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket_pipe
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[77e75d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_fd_event
<LI><a href="#[80352cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_event
<LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
</UL><BR>[Called By]<UL><LI><a href="#[7f60688]">&lt&lt</a>&nbsp;&nbsp;&nbsp;end_block
</UL><P><STRONG><a name="[77e755c]"></a>add_timer_event</STRONG> (ARM, 112 bytes, Stack size 16 bytes, event.o(i.add_timer_event))
<BR><BR>[Calls]<UL><LI><a href="#[80352cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_event
<LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[80360a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[8031f0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;resched_event
</UL><BR>[Called By]<UL><LI><a href="#[77e76b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_udp_endpoint
</UL><P><STRONG><a name="[8a2c6e8]"></a>aes_decrypt_init</STRONG> (ARM, 60 bytes, Stack size 16 bytes, aes_wrap.o(i.aes_decrypt_init))
<BR><BR>[Calls]<UL><LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[8a2c9a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rijndaelKeySetupDec
</UL><BR>[Called By]<UL><LI><a href="#[9cf688c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;aes_unwrap
</UL><P><STRONG><a name="[9cf688c]"></a>aes_unwrap</STRONG> (ARM, 276 bytes, Stack size 56 bytes, aes_wrap.o(i.aes_unwrap))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[8a2c6e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;aes_decrypt_init
<LI><a href="#[8a2c8c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rijndaelDecrypt
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[9d004c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_decrypt_key_data
<LI><a href="#[9cfb404]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_wpa
</UL><P><STRONG><a name="[8cf34d4]"></a>agc</STRONG> (ARM, 388 bytes, Stack size 24 bytes, agc.o(i.agc))
<BR><BR>[Calls]<UL><LI><a href="#[8d466c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;energy_new
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[8d46244]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Inv_sqrt
</UL><BR>[Called By]<UL><LI><a href="#[886ec0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Filter
</UL><P><STRONG><a name="[8cd6194]"></a>agc2</STRONG> (ARM, 244 bytes, Stack size 24 bytes, agc.o(i.agc2))
<BR><BR>[Calls]<UL><LI><a href="#[8d466c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;energy_new
<LI><a href="#[8d461d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;norm_l
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[8d46244]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Inv_sqrt
</UL><BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cf370c]"></a>agc_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, agc.o(i.agc_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[886eecc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Filter_exit
<LI><a href="#[886ed64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Filter_init
</UL><P><STRONG><a name="[8cf35ac]"></a>agc_init</STRONG> (ARM, 64 bytes, Stack size 8 bytes, agc.o(i.agc_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[886ed64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Filter_init
</UL><P><STRONG><a name="[8cf37f4]"></a>agc_reset</STRONG> (ARM, 24 bytes, Stack size 0 bytes, agc.o(i.agc_reset))
<BR>[Called By]<UL><LI><a href="#[886ed64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Filter_init
<LI><a href="#[886f034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Filter_reset
</UL><P><STRONG><a name="[5007780]"></a>alarm</STRONG> (ARM, 4 bytes, Stack size 0 bytes, main.o(i.alarm))
<BR>[Called By]<UL><LI><a href="#[9be60c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_handle_signal
<LI><a href="#[9be5990]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_process_pending_signals
</UL><P><STRONG><a name="[81dd1fc]"></a>alaw2linear</STRONG> (ARM, 60 bytes, Stack size 0 bytes, g711.o(i.alaw2linear))
<BR>[Address Reference Count : 1]<UL><LI> aulaw_interface.o(i.DecodeLAW)
</UL><P><STRONG><a name="[4f739f0]"></a>align_with_beacon_before_saving_home</STRONG> (ARM, 432 bytes, Stack size 32 bytes, er_rsm_thread_routines.o(i.align_with_beacon_before_saving_home))
<BR><BR>[Calls]<UL><LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
</UL><BR>[Called By]<UL><LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[9baf8c4]"></a>allocate_file_handle</STRONG> (ARM, 132 bytes, Stack size 24 bytes, WBFAT.o(i.allocate_file_handle))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
</UL><BR>[Called By]<UL><LI><a href="#[9b5e8f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_fs_info
</UL><P><STRONG><a name="[7ed018c]"></a>amr2cod</STRONG> (ARM, 1112 bytes, Stack size 48 bytes, codamr.o(i.amr2cod))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[755fd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;amrDecode
</UL><P><STRONG><a name="[755fd90]"></a>amrDecode</STRONG> (ARM, 336 bytes, Stack size 528 bytes, amrapi.o(i.amrDecode))
<BR><BR>[Calls]<UL><LI><a href="#[7ed018c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;amr2cod
<LI><a href="#[7ed0108]">&gt&gt</a>&nbsp;&nbsp;&nbsp;decoder_homing_frame_test_first
<LI><a href="#[7ed0088]">&gt&gt</a>&nbsp;&nbsp;&nbsp;decoder_homing_frame_test
<LI><a href="#[7ed0008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame_reset
<LI><a href="#[7ecff90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame
</UL><BR>[Called By]<UL><LI><a href="#[755ff5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauDecode
</UL><P><STRONG><a name="[755e3b0]"></a>amrEncode</STRONG> (ARM, 220 bytes, Stack size 864 bytes, amrapi.o(i.amrEncode))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[7e89da4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Speech_Encode_Frame
<LI><a href="#[7e89d34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sid_sync
<LI><a href="#[7e89cc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cod2amr
<LI><a href="#[7e89c48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Speech_Encode_Frame_reset
<LI><a href="#[7e89bd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sid_sync_reset
</UL><BR>[Called By]<UL><LI><a href="#[756144c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauRecord_AMR_or_PCM
</UL><P><STRONG><a name="[755f2c8]"></a>amrInitDecode</STRONG> (ARM, 36 bytes, Stack size 8 bytes, amrapi.o(i.amrInitDecode))
<BR><BR>[Calls]<UL><LI><a href="#[7ed02ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Speech_Decode_Frame_init
</UL><BR>[Called By]<UL><LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
</UL><P><STRONG><a name="[755f33c]"></a>amrInitEncode</STRONG> (ARM, 60 bytes, Stack size 8 bytes, amrapi.o(i.amrInitEncode))
<BR><BR>[Calls]<UL><LI><a href="#[7e89ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Speech_Encode_Frame_init
<LI><a href="#[7e89f84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sid_sync_init
</UL><BR>[Called By]<UL><LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
</UL><P><STRONG><a name="[80b0e30]"></a>asctime_r</STRONG> (ARM, 312 bytes, Stack size 24 bytes, Ntp.o(i.asctime_r), UNUSED)
<P><STRONG><a name="[5773ffc]"></a>asctime_r</STRONG> (ARM, 312 bytes, Stack size 24 bytes, Ntp.o(i.asctime_r))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[5773e88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_libc_time_itoa
</UL><BR>[Called By]<UL><LI><a href="#[5775c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPDataToTime
<LI><a href="#[7843b8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;spook_log
</UL><P><STRONG><a name="[558f334]"></a>atoi</STRONG> (ARM, 12 bytes, Stack size 0 bytes, er_ns_cgi.o(i.atoi), UNUSED)
<P><STRONG><a name="[5ad0a20]"></a>atoi</STRONG> (ARM, 12 bytes, Stack size 0 bytes, er_ns_cgi.o(i.atoi), UNUSED)
<P><STRONG><a name="[79b0354]"></a>atoi</STRONG> (ARM, 12 bytes, Stack size 0 bytes, er_ns_cgi.o(i.atoi), UNUSED)
<P><STRONG><a name="[59c9a0c]"></a>atoi</STRONG> (ARM, 12 bytes, Stack size 0 bytes, er_ns_cgi.o(i.atoi), UNUSED)
<P><STRONG><a name="[7a37c60]"></a>atoi</STRONG> (ARM, 12 bytes, Stack size 0 bytes, er_ns_cgi.o(i.atoi), UNUSED)
<P><STRONG><a name="[4fc2130]"></a>atoi</STRONG> (ARM, 12 bytes, Stack size 0 bytes, er_ns_cgi.o(i.atoi))
<BR><BR>[Calls]<UL><LI><a href="#[4dee704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strtol
</UL><BR>[Called By]<UL><LI><a href="#[4fe1448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ControlNAV
<LI><a href="#[4fe1a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drive_rovio_manually
<LI><a href="#[7a3ac64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_max_age
<LI><a href="#[7a37cb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_recv_response
<LI><a href="#[4eaa9f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpString2Long
<LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
<LI><a href="#[7a3abf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_desc
<LI><a href="#[4fe1bd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_tuning_parameters
<LI><a href="#[4fe19f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;test_rovio_hardware
<LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[79b05f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read
</UL><P><STRONG><a name="[4a55cd8]"></a>audioBypassDisable</STRONG> (ARM, 24 bytes, Stack size 0 bytes, W99702_Audio.o(i.audioBypassDisable))
<BR><BR>[Calls]<UL><LI><a href="#[7364f54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WM8978_Bypass_Disable
</UL><BR>[Called By]<UL><LI><a href="#[755f954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_WM8978_test
<LI><a href="#[4a55f20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsAudioLoopbackTestHandler
</UL><P><STRONG><a name="[4a55dc4]"></a>audioBypassEnable</STRONG> (ARM, 24 bytes, Stack size 0 bytes, W99702_Audio.o(i.audioBypassEnable))
<BR><BR>[Calls]<UL><LI><a href="#[7364fd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WM8978_Bypass_Enable
</UL><BR>[Called By]<UL><LI><a href="#[4a55f20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsAudioLoopbackTestHandler
</UL><P><STRONG><a name="[7365c5c]"></a>audioEnable</STRONG> (ARM, 296 bytes, Stack size 16 bytes, W99702_Audio.o(i.audioEnable))
<BR><BR>[Calls]<UL><LI><a href="#[4d32274]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printf
</UL><BR>[Called By]<UL><LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
</UL><P><STRONG><a name="[755f8d0]"></a>audioHeadphoneDetectionLevel</STRONG> (ARM, 104 bytes, Stack size 8 bytes, W99702_WM8978.o(i.audioHeadphoneDetectionLevel))
<BR><BR>[Calls]<UL><LI><a href="#[73652b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;TwoWire_Write_Data
</UL><BR>[Called By]<UL><LI><a href="#[755f954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_WM8978_test
</UL><P><STRONG><a name="[755f6ec]"></a>audioI2SInit</STRONG> (ARM, 188 bytes, Stack size 0 bytes, W99702_WM8978.o(i.audioI2SInit))
<BR>[Called By]<UL><LI><a href="#[755f954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_WM8978_test
</UL><P><STRONG><a name="[789fdc4]"></a>audioPlayCheck</STRONG> (ARM, 80 bytes, Stack size 0 bytes, W99702_WM8978.o(i.audioPlayCheck))
<BR>[Called By]<UL><LI><a href="#[789fd50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iis_play_isr
</UL><P><STRONG><a name="[73650c8]"></a>audioSelectInputPath</STRONG> (ARM, 32 bytes, Stack size 0 bytes, W99702_Audio.o(i.audioSelectInputPath))
<BR><BR>[Calls]<UL><LI><a href="#[736504c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wm8978SelectInputPath
</UL><BR>[Called By]<UL><LI><a href="#[755f954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_WM8978_test
</UL><P><STRONG><a name="[755f858]"></a>audioSetDacVolume</STRONG> (ARM, 100 bytes, Stack size 16 bytes, W99702_WM8978.o(i.audioSetDacVolume))
<BR><BR>[Calls]<UL><LI><a href="#[73652b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;TwoWire_Write_Data
</UL><BR>[Called By]<UL><LI><a href="#[78a2ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WM_Set_DAC_Volume
<LI><a href="#[755f954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_WM8978_test
<LI><a href="#[755edc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartRecord
<LI><a href="#[7365758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartRecord
</UL><P><STRONG><a name="[755f50c]"></a>audioSetHeadphoneSpeakerBalance</STRONG> (ARM, 36 bytes, Stack size 0 bytes, W99702_WM8978.o(i.audioSetHeadphoneSpeakerBalance))
<BR>[Called By]<UL><LI><a href="#[755f954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_WM8978_test
</UL><P><STRONG><a name="[755f7dc]"></a>audioSetHeadphoneVolume</STRONG> (ARM, 100 bytes, Stack size 16 bytes, W99702_WM8978.o(i.audioSetHeadphoneVolume))
<BR><BR>[Calls]<UL><LI><a href="#[73652b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;TwoWire_Write_Data
</UL><BR>[Called By]<UL><LI><a href="#[78a2ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WM_Set_DAC_Volume
<LI><a href="#[755f954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_WM8978_test
<LI><a href="#[73658b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StopPlay
</UL><P><STRONG><a name="[7364e64]"></a>audioSetI2CType</STRONG> (ARM, 16 bytes, Stack size 0 bytes, W99702_Audio.o(i.audioSetI2CType))
<BR>[Called By]<UL><LI><a href="#[755f954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_WM8978_test
</UL><P><STRONG><a name="[7365b70]"></a>audioSetPlayBuff</STRONG> (ARM, 40 bytes, Stack size 0 bytes, W99702_Audio.o(i.audioSetPlayBuff))
<BR>[Called By]<UL><LI><a href="#[755f954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_WM8978_test
</UL><P><STRONG><a name="[4a55e3c]"></a>audioSetPlayVolume</STRONG> (ARM, 24 bytes, Stack size 0 bytes, W99702_Audio.o(i.audioSetPlayVolume))
<BR><BR>[Calls]<UL><LI><a href="#[736550c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wm8978SetPlayVolume
</UL><BR>[Called By]<UL><LI><a href="#[4a55f20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsAudioLoopbackTestHandler
<LI><a href="#[755ec58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauSetPlayVolume
<LI><a href="#[755fa3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartPlay
</UL><P><STRONG><a name="[7365afc]"></a>audioSetRecBuff</STRONG> (ARM, 44 bytes, Stack size 0 bytes, W99702_Audio.o(i.audioSetRecBuff))
<BR>[Called By]<UL><LI><a href="#[755f954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_WM8978_test
</UL><P><STRONG><a name="[7365490]"></a>audioSetRecordVolume</STRONG> (ARM, 32 bytes, Stack size 0 bytes, W99702_Audio.o(i.audioSetRecordVolume))
<BR><BR>[Calls]<UL><LI><a href="#[7365414]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wm8978SetRecordVolume
<LI><a href="#[736539c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;adcSetRecordVolume
</UL><BR>[Called By]<UL><LI><a href="#[755ebe0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauSetRecordVolume
<LI><a href="#[755edc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartRecord
</UL><P><STRONG><a name="[755f760]"></a>audioSetSpeakerVolume</STRONG> (ARM, 100 bytes, Stack size 16 bytes, W99702_WM8978.o(i.audioSetSpeakerVolume))
<BR><BR>[Calls]<UL><LI><a href="#[73652b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;TwoWire_Write_Data
</UL><BR>[Called By]<UL><LI><a href="#[78a2ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WM_Set_DAC_Volume
<LI><a href="#[755f954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_WM8978_test
<LI><a href="#[73658b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StopPlay
</UL><P><STRONG><a name="[7365a88]"></a>audioStartPlay</STRONG> (ARM, 36 bytes, Stack size 0 bytes, W99702_Audio.o(i.audioStartPlay))
<BR><BR>[Calls]<UL><LI><a href="#[7365a14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wm8978StartPlay
<LI><a href="#[73659a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dacStartPlay
</UL><BR>[Called By]<UL><LI><a href="#[755fa3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartPlay
</UL><P><STRONG><a name="[73657d0]"></a>audioStartRecord</STRONG> (ARM, 36 bytes, Stack size 0 bytes, W99702_Audio.o(i.audioStartRecord))
<BR><BR>[Calls]<UL><LI><a href="#[7365758]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wm8978StartRecord
<LI><a href="#[73656e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;adcStartRecord
</UL><BR>[Called By]<UL><LI><a href="#[755edc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartRecord
</UL><P><STRONG><a name="[736592c]"></a>audioStopPlay</STRONG> (ARM, 32 bytes, Stack size 0 bytes, W99702_Audio.o(i.audioStopPlay))
<BR><BR>[Calls]<UL><LI><a href="#[73658b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wm8978StopPlay
<LI><a href="#[7365848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dacStopPlay
</UL><BR>[Called By]<UL><LI><a href="#[755ef18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStopPlay
</UL><P><STRONG><a name="[7365670]"></a>audioStopRecord</STRONG> (ARM, 32 bytes, Stack size 0 bytes, W99702_Audio.o(i.audioStopRecord))
<BR><BR>[Calls]<UL><LI><a href="#[73655f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wm8978StopRecord
<LI><a href="#[7365584]">&gt&gt</a>&nbsp;&nbsp;&nbsp;adcStopRecord
</UL><BR>[Called By]<UL><LI><a href="#[755eea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStopRecord
</UL><P><STRONG><a name="[755f954]"></a>audio_WM8978_test</STRONG> (ARM, 280 bytes, Stack size 32 bytes, vp_audio.o(i.audio_WM8978_test))
<BR><BR>[Calls]<UL><LI><a href="#[7364e64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSetI2CType
<LI><a href="#[755f8d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioHeadphoneDetectionLevel
<LI><a href="#[755f858]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSetDacVolume
<LI><a href="#[755f7dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSetHeadphoneVolume
<LI><a href="#[755f760]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSetSpeakerVolume
<LI><a href="#[755f6ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioI2SInit
<LI><a href="#[755f67c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WM8978_Init
<LI><a href="#[755f604]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WM8978_DAC_Setup
<LI><a href="#[755f590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WM8978_R1_Init
<LI><a href="#[755f50c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSetHeadphoneSpeakerBalance
<LI><a href="#[73650c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSelectInputPath
<LI><a href="#[4a55cd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioBypassDisable
<LI><a href="#[755f494]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audio_get_clk_cfg
<LI><a href="#[755f420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audio_set_clk
<LI><a href="#[7365b70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSetPlayBuff
<LI><a href="#[7365afc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSetRecBuff
<LI><a href="#[755fa3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauStartPlay
</UL><BR>[Called By]<UL><LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
<LI><a href="#[734d3b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702UnlockAndRestorePreviousAudio
</UL><P><STRONG><a name="[7f5f6e0]"></a>audio_ring_input</STRONG> (ARM, 128 bytes, Stack size 24 bytes, audio.o(i.audio_ring_input))
<BR><BR>[Calls]<UL><LI><a href="#[780fc3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_frame
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[8031d38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soft_queue_add
<LI><a href="#[7ff7e40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;unref_frame
</UL><BR>[Called By]<UL><LI><a href="#[7f5fdf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;oss_loop
</UL><P><STRONG><a name="[71ecb5c]"></a>authRequest</STRONG> (ARM, 220 bytes, Stack size 56 bytes, vp_com.o(i.authRequest))
<BR><BR>[Calls]<UL><LI><a href="#[71ed618]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBRead
<LI><a href="#[71ed5a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBResetForVCom
<LI><a href="#[71ee58c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrUserSettingStru
<LI><a href="#[4eabc90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetUser
<LI><a href="#[4eab9d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlDelUser
<LI><a href="#[4eab808]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetUserCheck
<LI><a href="#[71ed6f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;statusReply
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
</UL><P><STRONG><a name="[59af71c]"></a>auth_authorize</STRONG> (ARM, 8 bytes, Stack size 0 bytes, HttpServer.o(i.auth_authorize))
<BR><BR>[Calls]<UL><LI><a href="#[59af808]">&gt&gt</a>&nbsp;&nbsp;&nbsp;auth_required
</UL><BR>[Called By]<UL><LI><a href="#[77ac064]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RunEmbedFun
</UL><P><STRONG><a name="[59af808]"></a>auth_required</STRONG> (ARM, 440 bytes, Stack size 160 bytes, HttpServer.o(i.auth_required))
<BR><BR>[Calls]<UL><LI><a href="#[59b4f90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ParseAuthorization
<LI><a href="#[77ac1c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_r_bad_request
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[59af790]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_r_unauthorized
</UL><BR>[Called By]<UL><LI><a href="#[59af71c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;auth_authorize
<LI><a href="#[5536f7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSendAuthRequired
</UL><P><STRONG><a name="[811952c]"></a>avail_send_buf</STRONG> (ARM, 36 bytes, Stack size 0 bytes, tcp.o(i.avail_send_buf))
<BR>[Called By]<UL><LI><a href="#[77e7378]">&lt&lt</a>&nbsp;&nbsp;&nbsp;interleave_send
<LI><a href="#[81194bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_data
<LI><a href="#[81193d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_send_pmsg
</UL><P><STRONG><a name="[79aff88]"></a>base64_decode</STRONG> (ARM, 336 bytes, Stack size 288 bytes, base64.o(i.base64_decode))
<BR><BR>[Calls]<UL><LI><a href="#[4ced1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memset
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
</UL><BR>[Called By]<UL><LI><a href="#[79b2044]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_blob
</UL><P><STRONG><a name="[59af2e4]"></a>base64decode</STRONG> (ARM, 48 bytes, Stack size 16 bytes, util.o(i.base64decode))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[592459c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DecodeBase64
</UL><BR>[Called By]<UL><LI><a href="#[59b4f90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ParseAuthorization
</UL><P><STRONG><a name="[79b074c]"></a>bf_fclose</STRONG> (ARM, 28 bytes, Stack size 8 bytes, config_file.o(i.bf_fclose))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[79b05f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read
</UL><P><STRONG><a name="[79b06dc]"></a>bf_fgets</STRONG> (ARM, 104 bytes, Stack size 8 bytes, config_file.o(i.bf_fgets))
<BR>[Called By]<UL><LI><a href="#[79b1fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_get_line
</UL><P><STRONG><a name="[79b082c]"></a>bf_fopen</STRONG> (ARM, 100 bytes, Stack size 16 bytes, config_file.o(i.bf_fopen))
<BR><BR>[Calls]<UL><LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
</UL><BR>[Called By]<UL><LI><a href="#[79b05f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read
</UL><P><STRONG><a name="[77ac4e0]"></a>block_request</STRONG> (ARM, 120 bytes, Stack size 4 bytes, queue.o(i.block_request))
<BR><BR>[Calls]<UL><LI><a href="#[77ac810]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dequeue
<LI><a href="#[77ac5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;enqueue
</UL><BR>[Called By]<UL><LI><a href="#[7317b20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;free_request
<LI><a href="#[7317ce4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_requests
</UL><P><STRONG><a name="[81ec348]"></a>boa_perror</STRONG> (ARM, 4 bytes, Stack size 0 bytes, log.o(i.boa_perror))
<BR>[Called By]<UL><LI><a href="#[77ac390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_body
</UL><P><STRONG><a name="[755ef88]"></a>bufAudioNew</STRONG> (ARM, 48 bytes, Stack size 8 bytes, vp_audio.o(i.bufAudioNew))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
</UL><P><STRONG><a name="[54579e8]"></a>bufCptPlanarNew</STRONG> (ARM, 56 bytes, Stack size 8 bytes, vp_thread_capture.o(i.bufCptPlanarNew))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[4d84040]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptInitThread
</UL><P><STRONG><a name="[59af87c]"></a>bufEMBEDFUNDecRef</STRONG> (ARM, 100 bytes, Stack size 8 bytes, HttpServer.o(i.bufEMBEDFUNDecRef))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[73181dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpClearEmbedFun
</UL><P><STRONG><a name="[755f164]"></a>bufEncAudioNew</STRONG> (ARM, 52 bytes, Stack size 8 bytes, vp_audio.o(i.bufEncAudioNew))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[7561350]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauRecord_ALAW_OR_ULAW
<LI><a href="#[756144c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauRecord_AMR_or_PCM
<LI><a href="#[75613d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauRecord_IMA_ADPCM
<LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
</UL><P><STRONG><a name="[550459c]"></a>bufEncJpegDecRef</STRONG> (ARM, 108 bytes, Stack size 8 bytes, vp_jpeg.o(i.bufEncJpegDecRef))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[5504524]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegClearBuffer
<LI><a href="#[5504614]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegFreeEncBuffer
</UL><P><STRONG><a name="[5504e50]"></a>bufEncJpegNew</STRONG> (ARM, 76 bytes, Stack size 8 bytes, vp_jpeg.o(i.bufEncJpegNew))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4db5224]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listDetach
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[5504ec4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetYUVRawData
</UL><P><STRONG><a name="[755e588]"></a>bufEncMsgDecRef</STRONG> (ARM, 76 bytes, Stack size 8 bytes, vp_audio.o(i.bufEncMsgDecRef))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4efdcf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listAttach
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[75654d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauRecordCallback
<LI><a href="#[75620ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnRecord
</UL><P><STRONG><a name="[59671e8]"></a>bufHASHNew</STRONG> (ARM, 88 bytes, Stack size 8 bytes, hash.o(i.bufHASHNew))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[778712c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_mime_type
</UL><P><STRONG><a name="[82a12b8]"></a>bufINNERPARTDecRef</STRONG> (ARM, 100 bytes, Stack size 8 bytes, C_MultiPart.o(i.bufINNERPARTDecRef))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[57e7aa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteSinglePart
<LI><a href="#[57e7b94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseSinglePart
</UL><P><STRONG><a name="[4d843c4]"></a>bufInit</STRONG> (ARM, 412 bytes, Stack size 8 bytes, vp_buffer.o(i.bufInit))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[755f3b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__memInit
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[4a54f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInit
</UL><P><STRONG><a name="[827e37c]"></a>bufLISTDecRef</STRONG> (ARM, 100 bytes, Stack size 8 bytes, C_List.o(i.bufLISTDecRef))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[5536bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpCreateList
<LI><a href="#[5536a60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteList
</UL><P><STRONG><a name="[827e304]"></a>bufLISTNODEDecRef</STRONG> (ARM, 100 bytes, Stack size 8 bytes, C_List.o(i.bufLISTNODEDecRef))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[5536a60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteList
<LI><a href="#[57163bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteNode
</UL><P><STRONG><a name="[827e3f0]"></a>bufLISTNODENew</STRONG> (ARM, 48 bytes, Stack size 8 bytes, C_List.o(i.bufLISTNODENew))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[5536bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpCreateList
<LI><a href="#[59c9028]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpInsertNodeAfter
<LI><a href="#[59c9118]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpInsertNodeBefore
</UL><P><STRONG><a name="[755e49c]"></a>bufLocalPCMNew</STRONG> (ARM, 48 bytes, Stack size 8 bytes, vp_audio.o(i.bufLocalPCMNew))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[75620ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnRecord
</UL><P><STRONG><a name="[54ad728]"></a>bufMP4BitstreamDecRef</STRONG> (ARM, 108 bytes, Stack size 8 bytes, vp_mp4.o(i.bufMP4BitstreamDecRef))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[54acc2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4ClearBuffer
<LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[5422b3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encDoneCallback
<LI><a href="#[5422ac0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encErrorCallback
<LI><a href="#[5456884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encStart
</UL><P><STRONG><a name="[54ad7f4]"></a>bufMP4BitstreamNew</STRONG> (ARM, 56 bytes, Stack size 8 bytes, vp_mp4.o(i.bufMP4BitstreamNew))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[5456884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encStart
</UL><P><STRONG><a name="[59c95a8]"></a>bufNAMESTRINGDecRef</STRONG> (ARM, 100 bytes, Stack size 8 bytes, C_String.o(i.bufNAMESTRINGDecRef))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[59c93e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DeleteNamedString
<LI><a href="#[55370e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteParseString
<LI><a href="#[5537260]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseString
<LI><a href="#[5537b50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSetString
</UL><P><STRONG><a name="[825cc98]"></a>bufNAMESTRINGDecRef</STRONG> (ARM, 100 bytes, Stack size 8 bytes, C_String.o(i.bufNAMESTRINGDecRef), UNUSED)
<P><STRONG><a name="[77ac554]"></a>bufPATHDecRef</STRONG> (ARM, 100 bytes, Stack size 8 bytes, request.o(i.bufPATHDecRef))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[7317b20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;free_request
</UL><P><STRONG><a name="[7ff7ff8]"></a>bufRSFSLOTNew</STRONG> (ARM, 48 bytes, Stack size 8 bytes, frame.o(i.bufRSFSLOTNew))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[7ff806c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_frame_heap
<LI><a href="#[780fcac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_exchanger
</UL><P><STRONG><a name="[81629c8]"></a>bufRSSTREAMNew</STRONG> (ARM, 48 bytes, Stack size 8 bytes, stream.o(i.bufRSSTREAMNew))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[8162a3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_convert_stream
<LI><a href="#[780fe7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_stream
</UL><P><STRONG><a name="[5456968]"></a>bufVideoDecRef</STRONG> (ARM, 100 bytes, Stack size 8 bytes, vp_video.o(i.bufVideoDecRef), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><P><STRONG><a name="[537efa4]"></a>bufVideoDecRef</STRONG> (ARM, 100 bytes, Stack size 8 bytes, vp_video.o(i.bufVideoDecRef))
<BR>[Called By]<UL><LI><a href="#[54592a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnRefresh
<LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
</UL><P><STRONG><a name="[537f018]"></a>bufVideoNew</STRONG> (ARM, 92 bytes, Stack size 8 bytes, vp_video.o(i.bufVideoNew))
<BR>[Called By]<UL><LI><a href="#[54592a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnRefresh
<LI><a href="#[4d842e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdInit
<LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
</UL><P><STRONG><a name="[54569b8]"></a>bufVideoNew</STRONG> (ARM, 92 bytes, Stack size 8 bytes, vp_video.o(i.bufVideoNew), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><P><STRONG><a name="[59c920c]"></a>bufXMLDecRef</STRONG> (ARM, 100 bytes, Stack size 8 bytes, C_String.o(i.bufXMLDecRef))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[59c92f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__CreateXML
<LI><a href="#[5537bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteXML
</UL><P><STRONG><a name="[8d3c758]"></a>build_CN_code</STRONG> (ARM, 152 bytes, Stack size 32 bytes, b_cn_cod.o(i.build_CN_code))
<BR><BR>[Calls]<UL><LI><a href="#[8d3c7cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pseudonoise
</UL><BR>[Called By]<UL><LI><a href="#[8cd6f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec
</UL><P><STRONG><a name="[8cd6db4]"></a>build_CN_param</STRONG> (ARM, 108 bytes, Stack size 12 bytes, b_cn_cod.o(i.build_CN_param))
<BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8a61df0]"></a>Cyg_StdioStream::bytes_available_to_read()</STRONG> (ARM, 76 bytes, Stack size 0 bytes, vfscanf.o(i.bytes_available_to_read__15Cyg_StdioStreamFv))
<BR>[Called By]<UL><LI><a href="#[84c0170]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vfscanf
<LI><a href="#[8a61d68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::set_position(unsigned int, int)
</UL><P><STRONG><a name="[8de353c]"></a>calc_filt_energies</STRONG> (ARM, 556 bytes, Stack size 136 bytes, calc_en.o(i.calc_filt_energies))
<BR><BR>[Calls]<UL><LI><a href="#[8d461d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;norm_l
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[8cc5228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant
</UL><P><STRONG><a name="[8de34c4]"></a>calc_target_energy</STRONG> (ARM, 100 bytes, Stack size 16 bytes, calc_en.o(i.calc_target_energy))
<BR><BR>[Calls]<UL><LI><a href="#[8d461d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;norm_l
</UL><BR>[Called By]<UL><LI><a href="#[8cc5228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant
</UL><P><STRONG><a name="[8e9c31c]"></a>calc_unfilt_energies</STRONG> (ARM, 600 bytes, Stack size 64 bytes, calc_en.o(i.calc_unfilt_energies))
<BR><BR>[Calls]<UL><LI><a href="#[8d461d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;norm_l
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[8d99304]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Log2
<LI><a href="#[8dda47c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_Comp
</UL><BR>[Called By]<UL><LI><a href="#[8de327c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR795_gain_quant
</UL><P><STRONG><a name="[5457678]"></a>capClkRatio</STRONG> (ARM, 32 bytes, Stack size 0 bytes, cap.o(i.capClkRatio))
<BR>[Called By]<UL><LI><a href="#[545a790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_vcptSensorInit
<LI><a href="#[5457754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStop
</UL><P><STRONG><a name="[7d7fdcc]"></a>capColorEffect</STRONG> (ARM, 84 bytes, Stack size 0 bytes, cap.o(i.capColorEffect))
<BR>[Called By]<UL><LI><a href="#[5456c5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capImageTransform
</UL><P><STRONG><a name="[5456c5c]"></a>capImageTransform</STRONG> (ARM, 616 bytes, Stack size 40 bytes, cap.o(i.capImageTransform))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[7d7fdcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capColorEffect
<LI><a href="#[7d7fe40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capPlanarSticker
<LI><a href="#[7d7feb8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capPacketSticker
<LI><a href="#[7d7ff30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capSetPlanarFormat
<LI><a href="#[7d7ffa8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capSetPacketFormat
<LI><a href="#[7d7fd58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capSetDdaFactor
<LI><a href="#[7d80020]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capSetBufferAddr
<LI><a href="#[7d7fcdc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PlanarReSetBufferAddr
<LI><a href="#[7d7fc60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PacketReSetBufferAddr
<LI><a href="#[7d80098]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capOnTheFly
<LI><a href="#[7d80108]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capPlanarOut
<LI><a href="#[7d8017c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capPacketOut
</UL><BR>[Called By]<UL><LI><a href="#[545e690]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vcptEnable
</UL><P><STRONG><a name="[54576e8]"></a>capInit</STRONG> (ARM, 192 bytes, Stack size 32 bytes, cap.o(i.capInit))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4c2fadc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_create
<LI><a href="#[4c2f8d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_attach
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[4c2f7d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_detach
<LI><a href="#[4c2f9cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_delete
</UL><BR>[Called By]<UL><LI><a href="#[545a790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_vcptSensorInit
<LI><a href="#[5457754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStop
</UL><P><STRONG><a name="[5456cd4]"></a>capInitialWaitInt</STRONG> (ARM, 24 bytes, Stack size 0 bytes, cap.o(i.capInitialWaitInt))
<BR>[Called By]<UL><LI><a href="#[545e690]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vcptEnable
</UL><P><STRONG><a name="[7d80268]"></a>capIntHandler</STRONG> (ARM, 92 bytes, Stack size 8 bytes, cap.o(i.capIntHandler))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[4c2ef7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_acknowledge
</UL><BR>[Address Reference Count : 1]<UL><LI> cap.o(i.capInit)
</UL><P><STRONG><a name="[7d801f0]"></a>capIntHandlerDSR</STRONG> (ARM, 64 bytes, Stack size 8 bytes, cap.o(i.capIntHandlerDSR))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
</UL><BR>[Address Reference Count : 1]<UL><LI> cap.o(i.capInit)
</UL><P><STRONG><a name="[7d80098]"></a>capOnTheFly</STRONG> (ARM, 64 bytes, Stack size 0 bytes, cap.o(i.capOnTheFly))
<BR>[Called By]<UL><LI><a href="#[5456c5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capImageTransform
</UL><P><STRONG><a name="[7d8017c]"></a>capPacketOut</STRONG> (ARM, 32 bytes, Stack size 0 bytes, cap.o(i.capPacketOut))
<BR>[Called By]<UL><LI><a href="#[5456c5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capImageTransform
</UL><P><STRONG><a name="[7d7feb8]"></a>capPacketSticker</STRONG> (ARM, 32 bytes, Stack size 0 bytes, cap.o(i.capPacketSticker))
<BR>[Called By]<UL><LI><a href="#[5456c5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capImageTransform
</UL><P><STRONG><a name="[7d80108]"></a>capPlanarOut</STRONG> (ARM, 32 bytes, Stack size 0 bytes, cap.o(i.capPlanarOut))
<BR>[Called By]<UL><LI><a href="#[5456c5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capImageTransform
</UL><P><STRONG><a name="[7d7fe40]"></a>capPlanarSticker</STRONG> (ARM, 32 bytes, Stack size 0 bytes, cap.o(i.capPlanarSticker))
<BR>[Called By]<UL><LI><a href="#[5456c5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capImageTransform
</UL><P><STRONG><a name="[7d80020]"></a>capSetBufferAddr</STRONG> (ARM, 128 bytes, Stack size 0 bytes, cap.o(i.capSetBufferAddr))
<BR>[Called By]<UL><LI><a href="#[5456c5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capImageTransform
</UL><P><STRONG><a name="[7d7fd58]"></a>capSetDdaFactor</STRONG> (ARM, 1856 bytes, Stack size 176 bytes, lcd.o(i.capSetDdaFactor))
<BR><BR>[Calls]<UL><LI><a href="#[87ac34c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lcd
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[87ac3b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;factor
<LI><a href="#[87ac25c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;maxlcd
<LI><a href="#[87ac2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capSinglePipePolyPhaseFilter
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[5456c5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capImageTransform
</UL><P><STRONG><a name="[5457834]"></a>capSetIRQHandler</STRONG> (ARM, 12 bytes, Stack size 0 bytes, cap.o(i.capSetIRQHandler))
<BR>[Called By]<UL><LI><a href="#[54578ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__capSetIRQHandler
</UL><P><STRONG><a name="[7d7ffa8]"></a>capSetPacketFormat</STRONG> (ARM, 304 bytes, Stack size 0 bytes, cap.o(i.capSetPacketFormat))
<BR>[Called By]<UL><LI><a href="#[5456c5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capImageTransform
</UL><P><STRONG><a name="[7d7ff30]"></a>capSetPlanarFormat</STRONG> (ARM, 232 bytes, Stack size 0 bytes, cap.o(i.capSetPlanarFormat))
<BR>[Called By]<UL><LI><a href="#[5456c5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capImageTransform
</UL><P><STRONG><a name="[87ac2c8]"></a>capSinglePipePolyPhaseFilter</STRONG> (ARM, 1064 bytes, Stack size 104 bytes, lcd.o(i.capSinglePipePolyPhaseFilter))
<BR><BR>[Calls]<UL><LI><a href="#[87ac34c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lcd
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[87ac3b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;factor
<LI><a href="#[87ac420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;maxlcd_2
</UL><BR>[Called By]<UL><LI><a href="#[7d7fd58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capSetDdaFactor
</UL><P><STRONG><a name="[5ad0ae4]"></a>capture_and_email_picture</STRONG> (ARM, 80 bytes, Stack size 8 bytes, er_shared_routines.o(i.capture_and_email_picture))
<BR><BR>[Calls]<UL><LI><a href="#[5456f70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerNotify
<LI><a href="#[5456ef8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerWait
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[57b6f30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DO_TestSendMailFile
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[5c077ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;play_waypoint_action
<LI><a href="#[4fe16b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;store_image_capture_action
</UL><P><STRONG><a name="[8cc5298]"></a>cbsearch</STRONG> (ARM, 720 bytes, Stack size 48 bytes, cbsearch.o(i.cbsearch))
<BR><BR>[Calls]<UL><LI><a href="#[8d586d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;code_2i40_9bits
<LI><a href="#[8d58658]">&gt&gt</a>&nbsp;&nbsp;&nbsp;code_2i40_11bits
<LI><a href="#[8d585e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;code_3i40_14bits
<LI><a href="#[8d58568]">&gt&gt</a>&nbsp;&nbsp;&nbsp;code_4i40_17bits
<LI><a href="#[8d584f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;code_8i40_31bits
<LI><a href="#[8d58478]">&gt&gt</a>&nbsp;&nbsp;&nbsp;code_10i40_35bits
</UL><BR>[Called By]<UL><LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
</UL><P><STRONG><a name="[7f5f758]"></a>check_audio_ring</STRONG> (ARM, 4 bytes, Stack size 0 bytes, audio.o(i.check_audio_ring))
<BR><BR>[Calls]<UL><LI><a href="#[7ff7ce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;check_frame_heap
</UL><BR>[Called By]<UL><LI><a href="#[7f5fdf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;oss_loop
</UL><P><STRONG><a name="[7843c6c]"></a>check_basic_response</STRONG> (ARM, 336 bytes, Stack size 536 bytes, http-auth.o(i.check_basic_response))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7843bfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;unbase64
<LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
</UL><BR>[Called By]<UL><LI><a href="#[7843b10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_digest_response
</UL><P><STRONG><a name="[7843b10]"></a>check_digest_response</STRONG> (ARM, 756 bytes, Stack size 1264 bytes, http-auth.o(i.check_digest_response))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[7843aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_header
<LI><a href="#[743b184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[7843c6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;check_basic_response
<LI><a href="#[784499c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;parse_auth_header
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[784492c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;md5_hash
<LI><a href="#[4def4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[78448dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gettimeofday
</UL><BR>[Called By]<UL><LI><a href="#[80eb59c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_DESCRIBE
</UL><P><STRONG><a name="[7ff7ce8]"></a>check_frame_heap</STRONG> (ARM, 64 bytes, Stack size 8 bytes, frame.o(i.check_frame_heap))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[7f5f758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_audio_ring
</UL><P><STRONG><a name="[8d736e4]"></a>check_gp_clipping</STRONG> (ARM, 68 bytes, Stack size 0 bytes, ton_stab.o(i.check_gp_clipping))
<BR>[Called By]<UL><LI><a href="#[8cc5308]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cl_ltp
</UL><P><STRONG><a name="[4f73218]"></a>check_incoming_calls</STRONG> (ARM, 116 bytes, Stack size 32 bytes, er_ns_debug_socket.o(i.check_incoming_calls))
<BR><BR>[Calls]<UL><LI><a href="#[50a2590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;accept
<LI><a href="#[5a94228]">&gt&gt</a>&nbsp;&nbsp;&nbsp;create_debug_socket
</UL><BR>[Called By]<UL><LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
</UL><P><STRONG><a name="[8cc5538]"></a>check_lsp</STRONG> (ARM, 256 bytes, Stack size 12 bytes, ton_stab.o(i.check_lsp))
<BR>[Called By]<UL><LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
</UL><P><STRONG><a name="[9b263ac]"></a>check_page_mark</STRONG> (ARM, 300 bytes, Stack size 40 bytes, sm_l2p.o(i.check_page_mark))
<BR><BR>[Calls]<UL><LI><a href="#[760df70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read_2K
<LI><a href="#[760e314]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM2Buffer
</UL><BR>[Called By]<UL><LI><a href="#[9b26334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data
<LI><a href="#[9b262b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data_2K
</UL><P><STRONG><a name="[7ddf9a0]"></a>check_region_deviation</STRONG> (ARM, 448 bytes, Stack size 64 bytes, cmp_img.o(i.check_region_deviation))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
</UL><BR>[Called By]<UL><LI><a href="#[5456468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;compare_image
</UL><P><STRONG><a name="[7ddfa1c]"></a>checkdiff</STRONG> (ARM, 52 bytes, Stack size 8 bytes, cmp_img.o(i.checkdiff))
<BR>[Called By]<UL><LI><a href="#[5456468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;compare_image
</UL><P><STRONG><a name="[8cc5308]"></a>cl_ltp</STRONG> (ARM, 508 bytes, Stack size 88 bytes, cl_ltp.o(i.cl_ltp))
<BR><BR>[Calls]<UL><LI><a href="#[8d737c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pitch_fr
<LI><a href="#[8cc50c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pred_lt_3or6
<LI><a href="#[8cc5054]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Convolve
<LI><a href="#[8d7375c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;G_pitch
<LI><a href="#[8d736e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;check_gp_clipping
<LI><a href="#[8d73670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;q_gain_pitch
</UL><BR>[Called By]<UL><LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
</UL><P><STRONG><a name="[8cc5d90]"></a>cl_ltp_exit</STRONG> (ARM, 44 bytes, Stack size 8 bytes, cl_ltp.o(i.cl_ltp_exit))
<BR><BR>[Calls]<UL><LI><a href="#[8d738ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pitch_fr_exit
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[88869ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_exit
</UL><P><STRONG><a name="[8cc5b54]"></a>cl_ltp_init</STRONG> (ARM, 148 bytes, Stack size 16 bytes, cl_ltp.o(i.cl_ltp_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[8d73838]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pitch_fr_init
<LI><a href="#[8d738ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pitch_fr_exit
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8d73920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pitch_fr_reset
</UL><BR>[Called By]<UL><LI><a href="#[88868c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_init
</UL><P><STRONG><a name="[8cc6194]"></a>cl_ltp_reset</STRONG> (ARM, 32 bytes, Stack size 8 bytes, cl_ltp.o(i.cl_ltp_reset))
<BR><BR>[Calls]<UL><LI><a href="#[8d73920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pitch_fr_reset
</UL><BR>[Called By]<UL><LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
<LI><a href="#[8886a98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_reset
</UL><P><STRONG><a name="[4f73dbc]"></a>clamp_angle</STRONG> (ARM, 140 bytes, Stack size 24 bytes, er_rsm_thread_routines.o(i.clamp_angle))
<BR><BR>[Calls]<UL><LI><a href="#[4f74828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[4f741d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[4f73c68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[4f73d50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[4f74894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_d2f
</UL><BR>[Called By]<UL><LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f73f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_waypoint
<LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[821d13c]"></a>clean_pathname</STRONG> (ARM, 140 bytes, Stack size 0 bytes, util.o(i.clean_pathname))
<BR>[Called By]<UL><LI><a href="#[77ac0d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;translate_uri
</UL><P><STRONG><a name="[77003d8]"></a>client_init</STRONG> (ARM, 44 bytes, Stack size 8 bytes, TestNetServer.o(i.client_init))
<BR><BR>[Calls]<UL><LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[77005c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;client_init_for_write
</UL><BR>[Called By]<UL><LI><a href="#[7700190]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WirelessTest_Test_Entry
</UL><P><STRONG><a name="[77005c0]"></a>client_init_for_write</STRONG> (ARM, 88 bytes, Stack size 16 bytes, TestNetServer.o(i.client_init_for_write))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rand
</UL><BR>[Called By]<UL><LI><a href="#[77003d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;client_init
<LI><a href="#[770027c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_client_read
</UL><P><STRONG><a name="[7700448]"></a>client_io_time_is_expired</STRONG> (ARM, 40 bytes, Stack size 8 bytes, TestNetServer.o(i.client_io_time_is_expired))
<BR><BR>[Calls]<UL><LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
</UL><BR>[Called By]<UL><LI><a href="#[7700190]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WirelessTest_Test_Entry
</UL><P><STRONG><a name="[7700364]"></a>client_uninit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, TestNetServer.o(i.client_uninit))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[7700190]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WirelessTest_Test_Entry
<LI><a href="#[770027c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_client_read
<LI><a href="#[77002f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_client_write
</UL><P><STRONG><a name="[7e89cc8]"></a>cod2amr</STRONG> (ARM, 392 bytes, Stack size 56 bytes, codamr.o(i.cod2amr))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[755e3b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;amrEncode
</UL><P><STRONG><a name="[88866f0]"></a>cod_amr</STRONG> (ARM, 2312 bytes, Stack size 1352 bytes, cod_amr.o(i.cod_amr))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[8cc57c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vad1
<LI><a href="#[8cc5754]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tx_dtx_handler
<LI><a href="#[8cc56ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lpc
<LI><a href="#[8cc5684]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lsp
<LI><a href="#[8cc5614]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dtx_buffer
<LI><a href="#[8cc55a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dtx_enc
<LI><a href="#[8cc62e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Set_zero
<LI><a href="#[8cc6208]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lsp_reset
<LI><a href="#[8cc6194]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cl_ltp_reset
<LI><a href="#[8cc5538]">&gt&gt</a>&nbsp;&nbsp;&nbsp;check_lsp
<LI><a href="#[8cc54cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pre_big
<LI><a href="#[8cc5460]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ol_ltp
<LI><a href="#[8cc53e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vad_pitch_detection
<LI><a href="#[8cc5374]">&gt&gt</a>&nbsp;&nbsp;&nbsp;subframePreProc
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[8cc5308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cl_ltp
<LI><a href="#[8cc5298]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cbsearch
<LI><a href="#[8cc5228]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gainQuant
<LI><a href="#[8cc51b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;update_gp_clipping
<LI><a href="#[8cc5138]">&gt&gt</a>&nbsp;&nbsp;&nbsp;subframePostProc
<LI><a href="#[8cc50c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pred_lt_3or6
<LI><a href="#[8cc5054]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Convolve
</UL><BR>[Called By]<UL><LI><a href="#[7e89da4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Encode_Frame
</UL><P><STRONG><a name="[88869ac]"></a>cod_amr_exit</STRONG> (ARM, 156 bytes, Stack size 8 bytes, cod_amr.o(i.cod_amr_exit))
<BR><BR>[Calls]<UL><LI><a href="#[8cc5ee4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lpc_exit
<LI><a href="#[8cc5e74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lsp_exit
<LI><a href="#[8cc5e00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gainQuant_exit
<LI><a href="#[8cc5d90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cl_ltp_exit
<LI><a href="#[8cc5d1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;p_ol_wgh_exit
<LI><a href="#[8cc5ca8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ton_stab_exit
<LI><a href="#[8cc5c38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vad1_exit
<LI><a href="#[8cc5bc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dtx_enc_exit
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[7e89ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Encode_Frame_init
<LI><a href="#[88868c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_init
</UL><P><STRONG><a name="[88868c0]"></a>cod_amr_init</STRONG> (ARM, 328 bytes, Stack size 24 bytes, cod_amr.o(i.cod_amr_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[8cc5b54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cl_ltp_init
<LI><a href="#[8cc5ae4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lsp_init
<LI><a href="#[8cc5a70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gainQuant_init
<LI><a href="#[8cc59fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;p_ol_wgh_init
<LI><a href="#[8cc5988]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ton_stab_init
<LI><a href="#[8cc5918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vad1_init
<LI><a href="#[8cc58a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dtx_enc_init
<LI><a href="#[8cc5834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lpc_init
<LI><a href="#[88869ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cod_amr_exit
<LI><a href="#[8886a98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cod_amr_reset
</UL><BR>[Called By]<UL><LI><a href="#[7e89ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Encode_Frame_init
</UL><P><STRONG><a name="[8886a98]"></a>cod_amr_reset</STRONG> (ARM, 348 bytes, Stack size 16 bytes, cod_amr.o(i.cod_amr_reset))
<BR><BR>[Calls]<UL><LI><a href="#[8cc62e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Set_zero
<LI><a href="#[8cc6278]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lpc_reset
<LI><a href="#[8cc6208]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lsp_reset
<LI><a href="#[8cc6194]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cl_ltp_reset
<LI><a href="#[8cc6120]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gainQuant_reset
<LI><a href="#[8cc60ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;p_ol_wgh_reset
<LI><a href="#[8cc6038]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ton_stab_reset
<LI><a href="#[8cc5fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vad1_reset
<LI><a href="#[8cc5f54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dtx_enc_reset
</UL><BR>[Called By]<UL><LI><a href="#[7e89ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Encode_Frame_init
<LI><a href="#[7e89c48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Speech_Encode_Frame_reset
<LI><a href="#[88868c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_init
</UL><P><STRONG><a name="[8d58478]"></a>code_10i40_35bits</STRONG> (ARM, 856 bytes, Stack size 3480 bytes, c1035pf.o(i.code_10i40_35bits))
<BR><BR>[Calls]<UL><LI><a href="#[8e79620]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cor_h_x
<LI><a href="#[8e8b09c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_sign12k2
<LI><a href="#[8e79544]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cor_h
<LI><a href="#[8e8b024]">&gt&gt</a>&nbsp;&nbsp;&nbsp;search_10and8i40
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Called By]<UL><LI><a href="#[8cc5298]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cbsearch
</UL><P><STRONG><a name="[8d58658]"></a>code_2i40_11bits</STRONG> (ARM, 2636 bytes, Stack size 3680 bytes, c2_11pf.o(i.code_2i40_11bits))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[8d46244]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Inv_sqrt
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Called By]<UL><LI><a href="#[8cc5298]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cbsearch
</UL><P><STRONG><a name="[8d586d0]"></a>code_2i40_9bits</STRONG> (ARM, 2612 bytes, Stack size 3680 bytes, c2_9pf.o(i.code_2i40_9bits))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[8d46244]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Inv_sqrt
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Called By]<UL><LI><a href="#[8cc5298]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cbsearch
</UL><P><STRONG><a name="[8d585e0]"></a>code_3i40_14bits</STRONG> (ARM, 1628 bytes, Stack size 3536 bytes, c3_14pf.o(i.code_3i40_14bits))
<BR><BR>[Calls]<UL><LI><a href="#[8e79620]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cor_h_x
<LI><a href="#[8e795b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_sign
<LI><a href="#[8e79544]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cor_h
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Called By]<UL><LI><a href="#[8cc5298]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cbsearch
</UL><P><STRONG><a name="[8d58568]"></a>code_4i40_17bits</STRONG> (ARM, 1652 bytes, Stack size 3544 bytes, c4_17pf.o(i.code_4i40_17bits))
<BR><BR>[Calls]<UL><LI><a href="#[8e79620]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cor_h_x
<LI><a href="#[8e795b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_sign
<LI><a href="#[8e79544]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cor_h
<LI><a href="#[8e927e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;build_code
</UL><BR>[Called By]<UL><LI><a href="#[8cc5298]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cbsearch
</UL><P><STRONG><a name="[8d584f0]"></a>code_8i40_31bits</STRONG> (ARM, 1040 bytes, Stack size 3480 bytes, c8_31pf.o(i.code_8i40_31bits))
<BR><BR>[Calls]<UL><LI><a href="#[8e8b110]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cor_h_x2
<LI><a href="#[8e8b09c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_sign12k2
<LI><a href="#[8e79544]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cor_h
<LI><a href="#[8e8b024]">&gt&gt</a>&nbsp;&nbsp;&nbsp;search_10and8i40
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Called By]<UL><LI><a href="#[8cc5298]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cbsearch
</UL><P><STRONG><a name="[8e222f0]"></a>comp_corr</STRONG> (ARM, 760 bytes, Stack size 36 bytes, calc_cor.o(i.comp_corr))
<BR>[Called By]<UL><LI><a href="#[8e0e888]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pitch_ol
<LI><a href="#[8e0e814]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pitch_ol_wgh
</UL><P><STRONG><a name="[5456468]"></a>compare_image</STRONG> (ARM, 948 bytes, Stack size 120 bytes, cmp_img.o(i.compare_image))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[7ddf8b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_region_flag
<LI><a href="#[7ddf83c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_region_level
<LI><a href="#[7ddf9a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;check_region_deviation
<LI><a href="#[7ddf758]">&gt&gt</a>&nbsp;&nbsp;&nbsp;merge_region
<LI><a href="#[7ddfa1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;checkdiff
<LI><a href="#[7ddf928]">&gt&gt</a>&nbsp;&nbsp;&nbsp;insert_to_region
<LI><a href="#[7ddf6e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rls_region
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[5459224]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnDetectMotion
</UL><P><STRONG><a name="[8335678]"></a>compute_neighboring_wp_distances</STRONG> (ARM, 384 bytes, Stack size 48 bytes, waypoint-outlier-rejector-using-dist.o(i.compute_neighboring_wp_distances))
<BR><BR>[Calls]<UL><LI><a href="#[4db4f54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fflt
<LI><a href="#[4db4ca4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[8335700]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_distance_between_waypoints
</UL><BR>[Called By]<UL><LI><a href="#[5ad0c70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;reject_outliers_from_dense_waypoints_using_dist
</UL><P><STRONG><a name="[7f3e5cc]"></a>config_frameheap</STRONG> (ARM, 68 bytes, Stack size 8 bytes, RtspServer.o(i.config_frameheap))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[7ff806c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_frame_heap
</UL><BR>[Address Reference Count : 1]<UL><LI> conf_parse.o(.data)
</UL><P><STRONG><a name="[7f3e644]"></a>config_port</STRONG> (ARM, 56 bytes, Stack size 8 bytes, tcp.o(i.config_port))
<BR><BR>[Calls]<UL><LI><a href="#[8180814]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_listen
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
</UL><BR>[Address Reference Count : 1]<UL><LI> conf_parse.o(.data)
</UL><P><STRONG><a name="[77e7304]"></a>config_rtprange</STRONG> (ARM, 116 bytes, Stack size 8 bytes, rtp.o(i.config_rtprange))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[4e4a4f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;exit
</UL><BR>[Address Reference Count : 1]<UL><LI> conf_parse.o(.data)
</UL><P><STRONG><a name="[817fac4]"></a>conn_write</STRONG> (ARM, 364 bytes, Stack size 24 bytes, tcp.o(i.conn_write))
<BR><BR>[Calls]<UL><LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[77e74e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_event_enabled
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4db5138]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_write
<LI><a href="#[817fb34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;drop_conn
</UL><BR>[Address Reference Count : 1]<UL><LI> tcp.o(i.do_accept)
</UL><P><STRONG><a name="[77e7460]"></a>connect_interleaved_endpoint</STRONG> (ARM, 32 bytes, Stack size 0 bytes, rtp.o(i.connect_interleaved_endpoint))
<BR>[Called By]<UL><LI><a href="#[80ea84c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_interleave_setup
</UL><P><STRONG><a name="[808c6e8]"></a>connect_to_stream</STRONG> (ARM, 244 bytes, Stack size 40 bytes, stream.o(i.connect_to_stream))
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[8162ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;format_match
<LI><a href="#[8162a3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_convert_stream
<LI><a href="#[8163f7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_dest
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
</UL><BR>[Called By]<UL><LI><a href="#[89554ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_input
<LI><a href="#[808fcf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_track
</UL><P><STRONG><a name="[77e76b4]"></a>connect_udp_endpoint</STRONG> (ARM, 972 bytes, Stack size 96 bytes, rtp.o(i.connect_udp_endpoint))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[4ced118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bind
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[50a2524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[7317a3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getsockname
<LI><a href="#[4cece7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_ntoa
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[77e75d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_fd_event
<LI><a href="#[77e755c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_timer_event
<LI><a href="#[77e74e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_event_enabled
</UL><BR>[Called By]<UL><LI><a href="#[80ea7d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_udp_setup
</UL><P><STRONG><a name="[4ce77a8]"></a>static Cyg_Clock::convert(unsigned long long, Cyg_Clock::converter*)</STRONG> (ARM, 128 bytes, Stack size 24 bytes, select.o(i.convert__9Cyg_ClockSFUxPQ29Cyg_Clock9converter))
<BR><BR>[Calls]<UL><LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[4ce783c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_timeval_to_ticks
</UL><P><STRONG><a name="[57745d8]"></a>convert_time</STRONG> (ARM, 92 bytes, Stack size 24 bytes, Ntp.o(i.convert_time))
<BR><BR>[Calls]<UL><LI><a href="#[4e4cde8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[4f74974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dflt
<LI><a href="#[4f74668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
</UL><BR>[Called By]<UL><LI><a href="#[5775c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPDataToTime
</UL><P><STRONG><a name="[80cf31c]"></a>copy_headers</STRONG> (ARM, 96 bytes, Stack size 32 bytes, pmsg.o(i.copy_headers))
<BR><BR>[Calls]<UL><LI><a href="#[4def4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[80cf404]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_header
</UL><BR>[Called By]<UL><LI><a href="#[81800a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_unknown
<LI><a href="#[80eb680]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_create_reply
</UL><P><STRONG><a name="[8e79544]"></a>cor_h</STRONG> (ARM, 1228 bytes, Stack size 120 bytes, cor_h.o(i.cor_h))
<BR><BR>[Calls]<UL><LI><a href="#[8d46244]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Inv_sqrt
</UL><BR>[Called By]<UL><LI><a href="#[8d58478]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_10i40_35bits
<LI><a href="#[8d585e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_3i40_14bits
<LI><a href="#[8d58568]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_4i40_17bits
<LI><a href="#[8d584f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_8i40_31bits
</UL><P><STRONG><a name="[8e79620]"></a>cor_h_x</STRONG> (ARM, 40 bytes, Stack size 12 bytes, cor_h.o(i.cor_h_x))
<BR><BR>[Calls]<UL><LI><a href="#[8e8b110]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cor_h_x2
</UL><BR>[Called By]<UL><LI><a href="#[8d58478]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_10i40_35bits
<LI><a href="#[8d585e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_3i40_14bits
<LI><a href="#[8d58568]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_4i40_17bits
</UL><P><STRONG><a name="[8e8b110]"></a>cor_h_x2</STRONG> (ARM, 796 bytes, Stack size 212 bytes, cor_h.o(i.cor_h_x2))
<BR>[Called By]<UL><LI><a href="#[8d584f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_8i40_31bits
<LI><a href="#[8e79620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cor_h_x
</UL><P><STRONG><a name="[7f33430]"></a>correct_data</STRONG> (ARM, 272 bytes, Stack size 12 bytes, ecc.o(i.correct_data))
<BR>[Called By]<UL><LI><a href="#[760e140]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_ECC_Correct
</UL><P><STRONG><a name="[59509ec]"></a>createMail</STRONG> (ARM, 340 bytes, Stack size 80 bytes, libmail.o(i.createMail))
<BR><BR>[Calls]<UL><LI><a href="#[5a67d20]">&gt&gt</a>&nbsp;&nbsp;&nbsp;createMailData
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Called By]<UL><LI><a href="#[5950a5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendMailMsg
</UL><P><STRONG><a name="[5a94228]"></a>create_debug_socket</STRONG> (ARM, 168 bytes, Stack size 32 bytes, er_ns_debug_socket.o(i.create_debug_socket))
<BR><BR>[Calls]<UL><LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4ced118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bind
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[73179d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listen
</UL><BR>[Called By]<UL><LI><a href="#[4f73218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_incoming_calls
</UL><P><STRONG><a name="[4e4d500]"></a>create_listen_socket</STRONG> (ARM, 296 bytes, Stack size 32 bytes, TestNetServer.o(i.create_listen_socket))
<BR><BR>[Calls]<UL><LI><a href="#[4cece7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_ntoa
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4ced344]">&gt&gt</a>&nbsp;&nbsp;&nbsp;setsockopt
<LI><a href="#[4ced118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bind
<LI><a href="#[73179d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listen
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[4e4d57c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NetTestThread
<LI><a href="#[7700938]">&lt&lt</a>&nbsp;&nbsp;&nbsp;TestNet_ThreadInit
</UL><P><STRONG><a name="[5774564]"></a>current_time</STRONG> (ARM, 132 bytes, Stack size 24 bytes, Ntp.o(i.current_time))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
<LI><a href="#[4f74974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dflt
<LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
</UL><BR>[Called By]<UL><LI><a href="#[57744ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MakeClientPacket
<LI><a href="#[5775c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPDataToTime
<LI><a href="#[5774410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;UnpackNTP
</UL><P><STRONG><a name="[8cd6510]"></a>d_gain_code</STRONG> (ARM, 264 bytes, Stack size 56 bytes, d_gain_c.o(i.d_gain_code))
<BR><BR>[Calls]<UL><LI><a href="#[8d93fdc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred
<LI><a href="#[8d93f70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pow2
<LI><a href="#[8d93efc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred_update
</UL><BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cd67d0]"></a>d_gain_pitch</STRONG> (ARM, 36 bytes, Stack size 0 bytes, d_gain_p.o(i.d_gain_pitch))
<BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[73659a0]"></a>dacStartPlay</STRONG> (ARM, 328 bytes, Stack size 48 bytes, W99702_ADDA.o(i.dacStartPlay))
<BR><BR>[Calls]<UL><LI><a href="#[78b9cf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;adda_init
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[78b9010]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sysSetInterruptType
<LI><a href="#[4c2fadc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_create
<LI><a href="#[4c2f8d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_attach
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[78ba170]">&gt&gt</a>&nbsp;&nbsp;&nbsp;adda_get_sampling_rate
</UL><BR>[Called By]<UL><LI><a href="#[7365a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audioStartPlay
</UL><P><STRONG><a name="[7365848]"></a>dacStopPlay</STRONG> (ARM, 124 bytes, Stack size 8 bytes, W99702_ADDA.o(i.dacStopPlay))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[4c2f7d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_detach
</UL><BR>[Called By]<UL><LI><a href="#[736592c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audioStopPlay
<LI><a href="#[78b9170]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dac_play_isr
</UL><P><STRONG><a name="[78b9170]"></a>dac_play_isr</STRONG> (ARM, 168 bytes, Stack size 16 bytes, W99702_ADDA.o(i.dac_play_isr))
<BR><BR>[Calls]<UL><LI><a href="#[7365848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dacStopPlay
</UL><BR>[Address Reference Count : 1]<UL><LI> W99702_ADDA.o(i.dacStartPlay)
</UL><P><STRONG><a name="[8cd66dc]"></a>dec_10i40_35bits</STRONG> (ARM, 212 bytes, Stack size 20 bytes, d1035pf.o(i.dec_10i40_35bits))
<BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cd68b8]"></a>dec_8i40_31bits</STRONG> (ARM, 452 bytes, Stack size 56 bytes, d8_31pf.o(i.dec_8i40_31bits))
<BR><BR>[Calls]<UL><LI><a href="#[8d7d890]">&gt&gt</a>&nbsp;&nbsp;&nbsp;decompress10
</UL><BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[550490c]"></a>decodeJPEGPrimaryImage</STRONG> (ARM, 172 bytes, Stack size 32 bytes, vp_jpeg.o(i.decodeJPEGPrimaryImage))
<BR><BR>[Calls]<UL><LI><a href="#[5504a00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetRGBRawData
<LI><a href="#[5504d5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;jpegInitializeEngine
<LI><a href="#[5504890]">&gt&gt</a>&nbsp;&nbsp;&nbsp;jpegDecSetBasicOption
<LI><a href="#[5504b64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;jpegSetMemoryAddress
<LI><a href="#[5504818]">&gt&gt</a>&nbsp;&nbsp;&nbsp;jpegDecStartProcess
<LI><a href="#[5504988]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegWaitDecoderCom
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[55047a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;jpegDecGetImage
</UL><BR>[Called By]<UL><LI><a href="#[558f88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_Write
</UL><P><STRONG><a name="[8cd6a1c]"></a>decode_2i40_11bits</STRONG> (ARM, 172 bytes, Stack size 12 bytes, d2_11pf.o(i.decode_2i40_11bits))
<BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cd6b04]"></a>decode_2i40_9bits</STRONG> (ARM, 176 bytes, Stack size 12 bytes, d2_9pf.o(i.decode_2i40_9bits))
<BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cd69a4]"></a>decode_3i40_14bits</STRONG> (ARM, 196 bytes, Stack size 16 bytes, d3_14pf.o(i.decode_3i40_14bits))
<BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cd692c]"></a>decode_4i40_17bits</STRONG> (ARM, 236 bytes, Stack size 16 bytes, d4_17pf.o(i.decode_4i40_17bits))
<BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[7ed0088]"></a>decoder_homing_frame_test</STRONG> (ARM, 128 bytes, Stack size 136 bytes, d_homing.o(i.decoder_homing_frame_test))
<BR><BR>[Calls]<UL><LI><a href="#[885c870]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Bits2prm
</UL><BR>[Called By]<UL><LI><a href="#[755fd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;amrDecode
</UL><P><STRONG><a name="[7ed0108]"></a>decoder_homing_frame_test_first</STRONG> (ARM, 128 bytes, Stack size 136 bytes, d_homing.o(i.decoder_homing_frame_test_first))
<BR><BR>[Calls]<UL><LI><a href="#[885c870]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Bits2prm
</UL><BR>[Called By]<UL><LI><a href="#[755fd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;amrDecode
</UL><P><STRONG><a name="[4eab8f0]"></a>del_auth_id</STRONG> (ARM, 160 bytes, Stack size 24 bytes, http-auth.o(i.del_auth_id))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4eab9d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlDelUser
</UL><P><STRONG><a name="[77e7918]"></a>del_rtp_endpoint</STRONG> (ARM, 272 bytes, Stack size 16 bytes, rtp.o(i.del_rtp_endpoint))
<BR><BR>[Calls]<UL><LI><a href="#[77e789c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;interleave_disconnect
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[77e7828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;remove_event
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[808d8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;live_teardown
</UL><P><STRONG><a name="[808c2b4]"></a>del_session</STRONG> (ARM, 84 bytes, Stack size 8 bytes, session.o(i.del_session))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
</UL><BR>[Called By]<UL><LI><a href="#[808d8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;live_teardown
</UL><P><STRONG><a name="[780feec]"></a>deliver_frame</STRONG> (ARM, 168 bytes, Stack size 32 bytes, frame.o(i.deliver_frame))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[895355c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mpeg4_loop
<LI><a href="#[7810048]">&lt&lt</a>&nbsp;&nbsp;&nbsp;v4l_loop
</UL><P><STRONG><a name="[780fb4c]"></a>deliver_frame_to_stream</STRONG> (ARM, 76 bytes, Stack size 16 bytes, stream.o(i.deliver_frame_to_stream))
<BR><BR>[Calls]<UL><LI><a href="#[7ff7dd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ref_frame
<LI><a href="#[7ff7e40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;unref_frame
</UL><BR>[Called By]<UL><LI><a href="#[8163cf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;convert_uyvy_to_rgb24
<LI><a href="#[7810554]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_back_frame
<LI><a href="#[7f5fe68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_back_frame
</UL><BR>[Address Reference Count : 1]<UL><LI> encoder-mpeg4.o(i.end_block)
</UL><P><STRONG><a name="[77ac810]"></a>dequeue</STRONG> (ARM, 64 bytes, Stack size 0 bytes, queue.o(i.dequeue))
<BR>[Called By]<UL><LI><a href="#[77ac4e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;block_request
<LI><a href="#[7317b20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;free_request
<LI><a href="#[77ac8f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_request
<LI><a href="#[7317aac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ready_request
</UL><P><STRONG><a name="[7318254]"></a>die</STRONG> (ARM, 36 bytes, Stack size 8 bytes, boa.o(i.die))
<BR><BR>[Calls]<UL><LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[73181dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpClearEmbedFun
<LI><a href="#[731816c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dump_mime
</UL><BR>[Called By]<UL><LI><a href="#[77ac634]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_sock_request
<LI><a href="#[73180f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpdStartEx3
</UL><P><STRONG><a name="[5caaa8c]"></a>div</STRONG> (ARM, 76 bytes, Stack size 16 bytes, timeutil.o(i.div))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[544d118]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_libc_time_normalize_structtm
</UL><P><STRONG><a name="[770020c]"></a>do_client</STRONG> (ARM, 28 bytes, Stack size 0 bytes, TestNetServer.o(i.do_client))
<BR><BR>[Calls]<UL><LI><a href="#[77002f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;do_client_write
<LI><a href="#[770027c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;do_client_read
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[7700190]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WirelessTest_Test_Entry
</UL><P><STRONG><a name="[770027c]"></a>do_client_read</STRONG> (ARM, 372 bytes, Stack size 24 bytes, TestNetServer.o(i.do_client_read))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[77006ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;my_read
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7700364]">&gt&gt</a>&nbsp;&nbsp;&nbsp;client_uninit
<LI><a href="#[77005c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;client_init_for_write
</UL><BR>[Called By]<UL><LI><a href="#[770020c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_client
</UL><P><STRONG><a name="[77002f0]"></a>do_client_write</STRONG> (ARM, 216 bytes, Stack size 16 bytes, TestNetServer.o(i.do_client_write))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[770063c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;my_write
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7700364]">&gt&gt</a>&nbsp;&nbsp;&nbsp;client_uninit
</UL><BR>[Called By]<UL><LI><a href="#[770020c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_client
</UL><P><STRONG><a name="[7ddf7cc]"></a>do_merge</STRONG> (ARM, 504 bytes, Stack size 32 bytes, cmp_img.o(i.do_merge))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[7ddf758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;merge_region
</UL><P><STRONG><a name="[81192f0]"></a>do_read</STRONG> (ARM, 456 bytes, Stack size 40 bytes, tcp.o(i.do_read))
<BR><BR>[Calls]<UL><LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[77e7828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;remove_event
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[7843bfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;unbase64
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[8180a88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;parse_client_data
<LI><a href="#[817fb34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;drop_conn
</UL><BR>[Address Reference Count : 2]<UL><LI> tcp.o(i.do_accept)
<LI> rtsp.o(i.handle_PLAY)
</UL><P><STRONG><a name="[4f75930]"></a>dprint_to_socket</STRONG> (ARM, 64 bytes, Stack size 16 bytes, er_ns_debug_socket.o(i.dprint_to_socket))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[50a2294]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send
</UL><BR>[Called By]<UL><LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
<LI><a href="#[4f74fa8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_ns_serial_number_and_fw_timestamp
<LI><a href="#[5ad0b64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_path_waypoints_after_clustering
<LI><a href="#[4f77e9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_nav_thread
<LI><a href="#[4f75528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_read_report_packet
<LI><a href="#[5b5d880]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_read_template_packet
<LI><a href="#[4f73f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_waypoint
<LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
<LI><a href="#[4fc22ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_stop_and_save
<LI><a href="#[5c077ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;play_waypoint_action
<LI><a href="#[5ad0bec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;print_labeled_dense_waypoints
<LI><a href="#[4f758b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_beacon_frequency
<LI><a href="#[4f75828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_new_report_flags_and_start_report
<LI><a href="#[4f75a20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_room_nine_spot_fequencies
<LI><a href="#[4f74c30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_spot_frequencies
<LI><a href="#[4f74acc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;try_northstar_recovery
<LI><a href="#[4f749e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_rovio_pose
</UL><P><STRONG><a name="[4f742b4]"></a>drive_forward</STRONG> (ARM, 12 bytes, Stack size 0 bytes, er_rsm_thread_routines.o(i.drive_forward))
<BR><BR>[Calls]<UL><LI><a href="#[4f73a7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;execute_drive_command
</UL><BR>[Called By]<UL><LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[4fe1a70]"></a>drive_rovio_manually</STRONG> (ARM, 1280 bytes, Stack size 48 bytes, er_cgi_thread_routines.o(i.drive_rovio_manually))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4fc2364]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_http_param_string
<LI><a href="#[4fc2130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[4f74058]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_rovio_head_position
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[75c3274]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_get_time
<LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
<LI><a href="#[4fc2044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_stop_playing
<LI><a href="#[4f75c1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_current_rovio_state
<LI><a href="#[4f75ba0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_current_rovio_state
<LI><a href="#[4f73904]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_mcu_cmd
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[4f73890]"></a>drive_to_beacon</STRONG> (ARM, 456 bytes, Stack size 32 bytes, er_rsm_thread_routines.o(i.drive_to_beacon))
<BR><BR>[Calls]<UL><LI><a href="#[75c3274]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_get_time
<LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
</UL><BR>[Called By]<UL><LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[817fb34]"></a>drop_conn</STRONG> (ARM, 284 bytes, Stack size 16 bytes, tcp.o(i.drop_conn))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[811961c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtsp_conn_disconnect
<LI><a href="#[77e7828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;remove_event
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[817fba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ret_rtsp_mem
</UL><BR>[Called By]<UL><LI><a href="#[817fac4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;conn_write
<LI><a href="#[81192f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_read
</UL><P><STRONG><a name="[5457060]"></a>dspGetFrequency</STRONG> (ARM, 20 bytes, Stack size 0 bytes, dsplib.o(i.dspGetFrequency))
<BR>[Called By]<UL><LI><a href="#[54570d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptGetFrequency
</UL><P><STRONG><a name="[7e8fa78]"></a>dspGetFrequency_ov7670</STRONG> (ARM, 44 bytes, Stack size 8 bytes, dsplib.o(i.dspGetFrequency_ov7670))
<BR><BR>[Calls]<UL><LI><a href="#[4e4c8f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cReadI2C
</UL><BR>[Address Reference Count : 2]<UL><LI> dsp_init.o(i.init_OV7670)
<LI> dsp_init.o(i.init_OV9650)
</UL><P><STRONG><a name="[5456a80]"></a>dspInitialization</STRONG> (ARM, 244 bytes, Stack size 24 bytes, dsplib.o(i.dspInitialization))
<BR><BR>[Calls]<UL><LI><a href="#[7e91c80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_ISP_Setting
<LI><a href="#[7e91c10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_OV9650
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[7e91ba0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_OV7670
<LI><a href="#[7e91b2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_PO6030K
</UL><BR>[Called By]<UL><LI><a href="#[545a790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_vcptSensorInit
</UL><P><STRONG><a name="[5457418]"></a>dspSetBrightnessContrast</STRONG> (ARM, 20 bytes, Stack size 0 bytes, dsplib.o(i.dspSetBrightnessContrast))
<BR>[Called By]<UL><LI><a href="#[5457498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptSetContrastBright
</UL><P><STRONG><a name="[7e8fc7c]"></a>dspSetBrightnessContrast_ov7670</STRONG> (ARM, 100 bytes, Stack size 0 bytes, dsplib.o(i.dspSetBrightnessContrast_ov7670))
<BR><BR>[Calls]<UL><LI><a href="#[4e4c884]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cWriteI2C
</UL><BR>[Address Reference Count : 2]<UL><LI> dsp_init.o(i.init_OV7670)
<LI> dsp_init.o(i.init_OV9650)
</UL><P><STRONG><a name="[7e8fbf8]"></a>dspSetBrightnessContrast_ov7725</STRONG> (ARM, 100 bytes, Stack size 0 bytes, dsplib.o(i.dspSetBrightnessContrast_ov7725))
<BR><BR>[Calls]<UL><LI><a href="#[4e4c884]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cWriteI2C
</UL><BR>[Address Reference Count : 1]<UL><LI> dsp_init.o(i.init_OV7670)
</UL><P><STRONG><a name="[7e8fd00]"></a>dspSetBrightnessContrast_ov9650</STRONG> (ARM, 244 bytes, Stack size 8 bytes, dsplib.o(i.dspSetBrightnessContrast_ov9650))
<BR><BR>[Calls]<UL><LI><a href="#[4e4c884]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cWriteI2C
</UL><BR>[Address Reference Count : 2]<UL><LI> dsp_init.o(i.init_OV7670)
<LI> dsp_init.o(i.init_OV9650)
</UL><P><STRONG><a name="[7e8fb70]"></a>dspSetBrightnessContrast_po6030k</STRONG> (ARM, 100 bytes, Stack size 0 bytes, dsplib.o(i.dspSetBrightnessContrast_po6030k))
<BR><BR>[Calls]<UL><LI><a href="#[4e4c884]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cWriteI2C
</UL><BR>[Address Reference Count : 1]<UL><LI> dsp_init.o(i.init_PO6030K)
</UL><P><STRONG><a name="[5457514]"></a>dspSetFrequency</STRONG> (ARM, 20 bytes, Stack size 0 bytes, dsplib.o(i.dspSetFrequency))
<BR>[Called By]<UL><LI><a href="#[5457588]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptSetFrequency
</UL><P><STRONG><a name="[7e8faf4]"></a>dspSetFrequency_ov7670</STRONG> (ARM, 104 bytes, Stack size 8 bytes, dsplib.o(i.dspSetFrequency_ov7670))
<BR><BR>[Calls]<UL><LI><a href="#[4e4c8f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cReadI2C
<LI><a href="#[4e4c884]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cWriteI2C
</UL><BR>[Address Reference Count : 2]<UL><LI> dsp_init.o(i.init_OV7670)
<LI> dsp_init.o(i.init_OV9650)
</UL><P><STRONG><a name="[5456af8]"></a>dspSetSensorInit</STRONG> (ARM, 16 bytes, Stack size 0 bytes, dsplib.o(i.dspSetSensorInit))
<BR>[Called By]<UL><LI><a href="#[545a790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_vcptSensorInit
</UL><P><STRONG><a name="[5457330]"></a>dspSetVideoSource</STRONG> (ARM, 12 bytes, Stack size 0 bytes, dsplib.o(i.dspSetVideoSource))
<BR>[Called By]<UL><LI><a href="#[734d438]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptLeavePowerSaving
<LI><a href="#[54573a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStart
</UL><P><STRONG><a name="[8cc5614]"></a>dtx_buffer</STRONG> (ARM, 176 bytes, Stack size 24 bytes, dtx_enc.o(i.dtx_buffer))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[8d99304]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Log2
</UL><BR>[Called By]<UL><LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
</UL><P><STRONG><a name="[8cd6f00]"></a>dtx_dec</STRONG> (ARM, 2144 bytes, Stack size 376 bytes, dtx_dec.o(i.dtx_dec))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[8cd6e94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lsf_lsp
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[8d87988]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Init_D_plsf_3
<LI><a href="#[8cd6d44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;D_plsf_3
<LI><a href="#[8cc62e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Set_zero
<LI><a href="#[8d3c7cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pseudonoise
<LI><a href="#[8dac63c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lsp_lsf
<LI><a href="#[8d879fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Reorder_lsf
<LI><a href="#[8dac5d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lsp_Az
<LI><a href="#[8dac564]">&gt&gt</a>&nbsp;&nbsp;&nbsp;A_Refl
<LI><a href="#[8d99304]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Log2
<LI><a href="#[8d93f70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pow2
<LI><a href="#[8d3c758]">&gt&gt</a>&nbsp;&nbsp;&nbsp;build_CN_code
<LI><a href="#[8dac4f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Syn_filt
</UL><BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cd603c]"></a>dtx_dec_activity_update</STRONG> (ARM, 232 bytes, Stack size 24 bytes, dtx_dec.o(i.dtx_dec_activity_update))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[8d99304]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Log2
</UL><BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cd7400]"></a>dtx_dec_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, dtx_dec.o(i.dtx_dec_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[886ef44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_exit
</UL><P><STRONG><a name="[8cd6fe0]"></a>dtx_dec_init</STRONG> (ARM, 64 bytes, Stack size 16 bytes, dtx_dec.o(i.dtx_dec_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[8cd7820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dtx_dec_reset
</UL><BR>[Called By]<UL><LI><a href="#[886eddc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_init
</UL><P><STRONG><a name="[8cd7820]"></a>dtx_dec_reset</STRONG> (ARM, 260 bytes, Stack size 24 bytes, dtx_dec.o(i.dtx_dec_reset))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[8cc62e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Set_zero
</UL><BR>[Called By]<UL><LI><a href="#[886f0ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_reset
<LI><a href="#[8cd6fe0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec_init
</UL><P><STRONG><a name="[8cc55a8]"></a>dtx_enc</STRONG> (ARM, 540 bytes, Stack size 136 bytes, dtx_enc.o(i.dtx_enc))
<BR><BR>[Calls]<UL><LI><a href="#[8dac63c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lsp_lsf
<LI><a href="#[8d879fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Reorder_lsf
<LI><a href="#[8cd6e94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lsf_lsp
<LI><a href="#[8dbdce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Q_plsf_3
</UL><BR>[Called By]<UL><LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
</UL><P><STRONG><a name="[8cc5bc4]"></a>dtx_enc_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, dtx_enc.o(i.dtx_enc_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[88869ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_exit
</UL><P><STRONG><a name="[8cc58a4]"></a>dtx_enc_init</STRONG> (ARM, 64 bytes, Stack size 16 bytes, dtx_enc.o(i.dtx_enc_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[8cc5f54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dtx_enc_reset
</UL><BR>[Called By]<UL><LI><a href="#[88868c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_init
</UL><P><STRONG><a name="[8cc5f54]"></a>dtx_enc_reset</STRONG> (ARM, 128 bytes, Stack size 16 bytes, dtx_enc.o(i.dtx_enc_reset))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[8cc62e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Set_zero
</UL><BR>[Called By]<UL><LI><a href="#[8886a98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_reset
<LI><a href="#[8cc58a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_enc_init
</UL><P><STRONG><a name="[731816c]"></a>dump_mime</STRONG> (ARM, 152 bytes, Stack size 32 bytes, hash.o(i.dump_mime))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[7318254]">&lt&lt</a>&nbsp;&nbsp;&nbsp;die
</UL><P><STRONG><a name="[8ac5fc0]"></a>eap_get_config</STRONG> (ARM, 20 bytes, Stack size 0 bytes, eap.o(i.eap_get_config))
<BR>[Called By]<UL><LI><a href="#[8ac5ec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_buildIdentity
<LI><a href="#[8ac79dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_buildNak
<LI><a href="#[8ac6464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_build_expanded_nak
<LI><a href="#[8aaed90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_request
<LI><a href="#[8ac8d0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_GET_METHOD_Enter
</UL><P><STRONG><a name="[847a7a8]"></a>eap_get_eapKeyData</STRONG> (ARM, 36 bytes, Stack size 0 bytes, eap.o(i.eap_get_eapKeyData))
<BR>[Called By]<UL><LI><a href="#[9cf65d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_get_key
</UL><P><STRONG><a name="[8479e98]"></a>eap_get_eapRespData</STRONG> (ARM, 48 bytes, Stack size 0 bytes, eap.o(i.eap_get_eapRespData))
<BR>[Called By]<UL><LI><a href="#[83eda04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_txSuppRsp
</UL><P><STRONG><a name="[9c5c8fc]"></a>eap_get_name</STRONG> (ARM, 60 bytes, Stack size 0 bytes, eap_methods.o(i.eap_get_name))
<BR>[Called By]<UL><LI><a href="#[9c67af0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_eap
</UL><P><STRONG><a name="[9c5c970]"></a>eap_get_type</STRONG> (ARM, 84 bytes, Stack size 16 bytes, eap_methods.o(i.eap_get_type))
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
</UL><BR>[Called By]<UL><LI><a href="#[9c67b6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_eap
</UL><P><STRONG><a name="[847a068]"></a>eap_invalidate_cached_session</STRONG> (ARM, 16 bytes, Stack size 0 bytes, eap.o(i.eap_invalidate_cached_session))
<BR><BR>[Calls]<UL><LI><a href="#[8aae438]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_deinit_prev_method
</UL><BR>[Called By]<UL><LI><a href="#[7968d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_invalidate_cached_session
</UL><P><STRONG><a name="[847a820]"></a>eap_key_available</STRONG> (ARM, 12 bytes, Stack size 0 bytes, eap.o(i.eap_key_available))
<BR>[Called By]<UL><LI><a href="#[9cf65d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_get_key
<LI><a href="#[83ed78c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_SUCCESS_Enter
</UL><P><STRONG><a name="[847a724]"></a>eap_notify_lower_layer_success</STRONG> (ARM, 112 bytes, Stack size 8 bytes, eap.o(i.eap_notify_lower_layer_success))
<BR><BR>[Calls]<UL><LI><a href="#[8aab858]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_get_bool
<LI><a href="#[8aae6b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_set_bool
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
</UL><BR>[Called By]<UL><LI><a href="#[9cf6dc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_lower_layer_success
</UL><P><STRONG><a name="[847a4d8]"></a>eap_notify_success</STRONG> (ARM, 24 bytes, Stack size 0 bytes, eap.o(i.eap_notify_success))
<BR>[Called By]<UL><LI><a href="#[9cf664c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_cached
<LI><a href="#[796999c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_eap_success
</UL><P><STRONG><a name="[83c2a14]"></a>eap_peer_get_methods</STRONG> (ARM, 44 bytes, Stack size 0 bytes, eap_methods.o(i.eap_peer_get_methods))
<BR>[Called By]<UL><LI><a href="#[8ac79dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_buildNak
</UL><P><STRONG><a name="[7967964]"></a>eap_peer_register_methods</STRONG> (ARM, 8 bytes, Stack size 0 bytes, eap_methods.o(i.eap_peer_register_methods))
<BR>[Called By]<UL><LI><a href="#[5007624]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
</UL><P><STRONG><a name="[7967c40]"></a>eap_peer_unregister_methods</STRONG> (ARM, 60 bytes, Stack size 8 bytes, eap_methods.o(i.eap_peer_unregister_methods))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[50074b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deinit
</UL><P><STRONG><a name="[847a274]"></a>eap_register_scard_ctx</STRONG> (ARM, 12 bytes, Stack size 0 bytes, eap.o(i.eap_register_scard_ctx))
<BR>[Called By]<UL><LI><a href="#[796704c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_register_scard_ctx
</UL><P><STRONG><a name="[847a460]"></a>eap_set_fast_reauth</STRONG> (ARM, 8 bytes, Stack size 0 bytes, eap.o(i.eap_set_fast_reauth))
<BR>[Called By]<UL><LI><a href="#[7969820]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_config
</UL><P><STRONG><a name="[847a36c]"></a>eap_set_force_disabled</STRONG> (ARM, 8 bytes, Stack size 0 bytes, eap.o(i.eap_set_force_disabled))
<BR>[Called By]<UL><LI><a href="#[7969820]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_config
</UL><P><STRONG><a name="[847a3e8]"></a>eap_set_workaround</STRONG> (ARM, 8 bytes, Stack size 0 bytes, eap.o(i.eap_set_workaround))
<BR>[Called By]<UL><LI><a href="#[7969820]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_config
</UL><P><STRONG><a name="[8479f10]"></a>eap_sm_abort</STRONG> (ARM, 68 bytes, Stack size 16 bytes, eap.o(i.eap_sm_abort))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8aae6b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_set_bool
</UL><BR>[Called By]<UL><LI><a href="#[8479f84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_deinit
<LI><a href="#[83f20a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_Step
</UL><P><STRONG><a name="[8ac5ec8]"></a>eap_sm_buildIdentity</STRONG> (ARM, 316 bytes, Stack size 32 bytes, eap.o(i.eap_sm_buildIdentity))
<BR><BR>[Calls]<UL><LI><a href="#[8ac5fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_get_config
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7968b60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_ascii
<LI><a href="#[8ac5f44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_sm_request_identity
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[8aaeb34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__bswap_16
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[8ac8d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_IDENTITY_Enter
</UL><P><STRONG><a name="[8479f84]"></a>eap_sm_deinit</STRONG> (ARM, 52 bytes, Stack size 8 bytes, eap.o(i.eap_sm_deinit))
<BR><BR>[Calls]<UL><LI><a href="#[8aae438]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_deinit_prev_method
<LI><a href="#[8479f10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_sm_abort
<LI><a href="#[8ac5de8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tls_deinit
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[7966f60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_deinit
</UL><P><STRONG><a name="[8310874]"></a>eap_sm_get_eap_methods</STRONG> (ARM, 60 bytes, Stack size 0 bytes, eap_methods.o(i.eap_sm_get_eap_methods))
<BR>[Called By]<UL><LI><a href="#[8ac8d0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_GET_METHOD_Enter
<LI><a href="#[83108f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scard_init
</UL><P><STRONG><a name="[8479ff8]"></a>eap_sm_init</STRONG> (ARM, 160 bytes, Stack size 40 bytes, eap.o(i.eap_sm_init))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[8ac5e58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tls_init
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[7966d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_init
</UL><P><STRONG><a name="[8ac5f44]"></a>eap_sm_request_identity</STRONG> (ARM, 16 bytes, Stack size 0 bytes, eap.o(i.eap_sm_request_identity))
<BR><BR>[Calls]<UL><LI><a href="#[8aaed90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_sm_request
</UL><BR>[Called By]<UL><LI><a href="#[8ac5ec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_buildIdentity
</UL><P><STRONG><a name="[847a640]"></a>eap_sm_step</STRONG> (ARM, 52 bytes, Stack size 16 bytes, eap.o(i.eap_sm_step))
<BR><BR>[Calls]<UL><LI><a href="#[8aae1c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
</UL><BR>[Called By]<UL><LI><a href="#[847a6b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_step
</UL><P><STRONG><a name="[7af41bc]"></a>eapol_on_drv_recv</STRONG> (ARM, 60 bytes, Stack size 24 bytes, l2_packet_none.o(i.eapol_on_drv_recv))
<BR><BR>[Calls]<UL><LI><a href="#[796840c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fix_size_write
</UL><BR>[Called By]<UL><LI><a href="#[5183d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ether_input
</UL><P><STRONG><a name="[9c8aa80]"></a>eapol_sm_configure</STRONG> (ARM, 48 bytes, Stack size 0 bytes, eapol_sm.o(i.eapol_sm_configure))
<BR>[Called By]<UL><LI><a href="#[9c8aaf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_init
</UL><P><STRONG><a name="[7966f60]"></a>eapol_sm_deinit</STRONG> (ARM, 88 bytes, Stack size 8 bytes, eapol_sm.o(i.eapol_sm_deinit))
<BR><BR>[Calls]<UL><LI><a href="#[7969720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[8479f84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_sm_deinit
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[7968578]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_deinit
<LI><a href="#[796ef34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
</UL><P><STRONG><a name="[9cf65d4]"></a>eapol_sm_get_key</STRONG> (ARM, 104 bytes, Stack size 24 bytes, eapol_sm.o(i.eapol_sm_get_key))
<BR><BR>[Calls]<UL><LI><a href="#[847a820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_key_available
<LI><a href="#[847a7a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_get_eapKeyData
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[83ed500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_processKey
<LI><a href="#[9c8bc78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_eapol_cb
<LI><a href="#[9cfbebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_pmk
</UL><P><STRONG><a name="[7966d88]"></a>eapol_sm_init</STRONG> (ARM, 232 bytes, Stack size 32 bytes, eapol_sm.o(i.eapol_sm_init))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[8479ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_sm_init
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[847a6b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_step
<LI><a href="#[79696a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
</UL><BR>[Called By]<UL><LI><a href="#[9c8aaf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_init
<LI><a href="#[796f2b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_eapol
</UL><P><STRONG><a name="[7968d48]"></a>eapol_sm_invalidate_cached_session</STRONG> (ARM, 16 bytes, Stack size 0 bytes, eapol_sm.o(i.eapol_sm_invalidate_cached_session))
<BR><BR>[Calls]<UL><LI><a href="#[847a068]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_invalidate_cached_session
</UL><BR>[Called By]<UL><LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[79686f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configuration
<LI><a href="#[8311f84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_config
</UL><P><STRONG><a name="[9cf664c]"></a>eapol_sm_notify_cached</STRONG> (ARM, 32 bytes, Stack size 0 bytes, eapol_sm.o(i.eapol_sm_notify_cached))
<BR><BR>[Calls]<UL><LI><a href="#[847a4d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_notify_success
</UL><BR>[Called By]<UL><LI><a href="#[9cfbebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_pmk
</UL><P><STRONG><a name="[7969820]"></a>eapol_sm_notify_config</STRONG> (ARM, 96 bytes, Stack size 16 bytes, eapol_sm.o(i.eapol_sm_notify_config))
<BR><BR>[Calls]<UL><LI><a href="#[847a460]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_set_fast_reauth
<LI><a href="#[847a3e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_set_workaround
<LI><a href="#[847a36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_set_force_disabled
</UL><BR>[Called By]<UL><LI><a href="#[9c8aaf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_init
<LI><a href="#[7968388]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deauthenticate
<LI><a href="#[7968a64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_disassociate
<LI><a href="#[7969a1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_initiate_eapol
<LI><a href="#[79686f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configuration
</UL><P><STRONG><a name="[796991c]"></a>eapol_sm_notify_eap_fail</STRONG> (ARM, 52 bytes, Stack size 16 bytes, eapol_sm.o(i.eapol_sm_notify_eap_fail))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[847a6b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_step
</UL><BR>[Called By]<UL><LI><a href="#[7969a1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_initiate_eapol
</UL><P><STRONG><a name="[796999c]"></a>eapol_sm_notify_eap_success</STRONG> (ARM, 64 bytes, Stack size 16 bytes, eapol_sm.o(i.eapol_sm_notify_eap_success))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[847a4d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_notify_success
<LI><a href="#[847a6b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_step
</UL><BR>[Called By]<UL><LI><a href="#[8312d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[7969a1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_initiate_eapol
<LI><a href="#[9cfb280]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_key_neg_complete
<LI><a href="#[79689e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_mark_disassoc
<LI><a href="#[79686f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configuration
</UL><P><STRONG><a name="[9cf6dc0]"></a>eapol_sm_notify_lower_layer_success</STRONG> (ARM, 16 bytes, Stack size 0 bytes, eapol_sm.o(i.eapol_sm_notify_lower_layer_success))
<BR><BR>[Calls]<UL><LI><a href="#[847a724]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_notify_lower_layer_success
</UL><BR>[Called By]<UL><LI><a href="#[83ed500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_processKey
<LI><a href="#[796802c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
</UL><P><STRONG><a name="[7968e58]"></a>eapol_sm_notify_pmkid_attempt</STRONG> (ARM, 64 bytes, Stack size 8 bytes, eapol_sm.o(i.eapol_sm_notify_pmkid_attempt))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[831229c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_find_assoc_pmkid
<LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
</UL><P><STRONG><a name="[796989c]"></a>eapol_sm_notify_portControl</STRONG> (ARM, 56 bytes, Stack size 16 bytes, eapol_sm.o(i.eapol_sm_notify_portControl))
<BR><BR>[Calls]<UL><LI><a href="#[83f1b9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_port_control
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[847a6b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_step
</UL><BR>[Called By]<UL><LI><a href="#[7969a1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_initiate_eapol
</UL><P><STRONG><a name="[7968308]"></a>eapol_sm_notify_portEnabled</STRONG> (ARM, 48 bytes, Stack size 16 bytes, eapol_sm.o(i.eapol_sm_notify_portEnabled))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[847a6b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_step
</UL><BR>[Called By]<UL><LI><a href="#[9c8aaf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_init
<LI><a href="#[7968388]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deauthenticate
<LI><a href="#[8312d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[79733ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface2
<LI><a href="#[79689e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_mark_disassoc
</UL><P><STRONG><a name="[7968288]"></a>eapol_sm_notify_portValid</STRONG> (ARM, 48 bytes, Stack size 16 bytes, eapol_sm.o(i.eapol_sm_notify_portValid))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[847a6b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_step
</UL><BR>[Called By]<UL><LI><a href="#[9c8aaf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_init
<LI><a href="#[7968388]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deauthenticate
<LI><a href="#[8312d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[79733ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface2
<LI><a href="#[9cfb280]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_key_neg_complete
<LI><a href="#[79689e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_mark_disassoc
<LI><a href="#[9d0043c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
</UL><P><STRONG><a name="[9cf69f0]"></a>eapol_sm_notify_tx_eapol_key</STRONG> (ARM, 20 bytes, Stack size 0 bytes, eapol_sm.o(i.eapol_sm_notify_tx_eapol_key))
<BR>[Called By]<UL><LI><a href="#[9d00e70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
</UL><P><STRONG><a name="[796704c]"></a>eapol_sm_register_scard_ctx</STRONG> (ARM, 24 bytes, Stack size 0 bytes, eapol_sm.o(i.eapol_sm_register_scard_ctx))
<BR><BR>[Calls]<UL><LI><a href="#[847a274]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_register_scard_ctx
</UL><BR>[Called By]<UL><LI><a href="#[79670cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_scard_ctx
<LI><a href="#[796ef34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
</UL><P><STRONG><a name="[8354880]"></a>eapol_sm_request_reauth</STRONG> (ARM, 24 bytes, Stack size 0 bytes, eapol_sm.o(i.eapol_sm_request_reauth))
<BR><BR>[Calls]<UL><LI><a href="#[83ef9a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_txStart
</UL><BR>[Called By]<UL><LI><a href="#[8354e18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_reauth
</UL><P><STRONG><a name="[79680a0]"></a>eapol_sm_rx_eapol</STRONG> (ARM, 480 bytes, Stack size 32 bytes, eapol_sm.o(i.eapol_sm_rx_eapol))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[83f171c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__bswap_16
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[847a6b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_step
</UL><BR>[Called By]<UL><LI><a href="#[9c8bcf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_receive
<LI><a href="#[7968188]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_rx_eapol
</UL><P><STRONG><a name="[847a6b0]"></a>eapol_sm_step</STRONG> (ARM, 336 bytes, Stack size 32 bytes, eapol_sm.o(i.eapol_sm_step))
<BR><BR>[Calls]<UL><LI><a href="#[83f219c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_Step
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[83f211c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_KEY_RX_KEY_RECEIVE_Enter
<LI><a href="#[83f20a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_Step
<LI><a href="#[847a640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_sm_step
<LI><a href="#[7969720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[79696a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
</UL><BR>[Called By]<UL><LI><a href="#[83ee29c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_port_timers_tick
<LI><a href="#[7966d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_init
<LI><a href="#[796991c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_eap_fail
<LI><a href="#[796999c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_eap_success
<LI><a href="#[83f68ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_pending
<LI><a href="#[796989c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portControl
<LI><a href="#[7968308]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portEnabled
<LI><a href="#[7968288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portValid
<LI><a href="#[79680a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_rx_eapol
<LI><a href="#[83f202c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_step_timeout
</UL><P><STRONG><a name="[8cd65f8]"></a>ec_gain_code</STRONG> (ARM, 108 bytes, Stack size 32 bytes, ec_gains.o(i.ec_gain_code))
<BR><BR>[Calls]<UL><LI><a href="#[8d66ae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gmed_n
<LI><a href="#[8dd3678]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred_average_limited
<LI><a href="#[8d93efc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred_update
</UL><BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cd76c0]"></a>ec_gain_code_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, ec_gains.o(i.ec_gain_code_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[886ef44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_exit
</UL><P><STRONG><a name="[8cd72a0]"></a>ec_gain_code_init</STRONG> (ARM, 100 bytes, Stack size 16 bytes, ec_gains.o(i.ec_gain_code_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[886eddc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_init
</UL><P><STRONG><a name="[8cd79f0]"></a>ec_gain_code_reset</STRONG> (ARM, 68 bytes, Stack size 0 bytes, ec_gains.o(i.ec_gain_code_reset))
<BR>[Called By]<UL><LI><a href="#[886f0ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_reset
</UL><P><STRONG><a name="[8cd6580]"></a>ec_gain_code_update</STRONG> (ARM, 92 bytes, Stack size 0 bytes, ec_gains.o(i.ec_gain_code_update))
<BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cd6844]"></a>ec_gain_pitch</STRONG> (ARM, 64 bytes, Stack size 16 bytes, ec_gains.o(i.ec_gain_pitch))
<BR><BR>[Calls]<UL><LI><a href="#[8d66ae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gmed_n
</UL><BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cd7738]"></a>ec_gain_pitch_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, ec_gains.o(i.ec_gain_pitch_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[886ef44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_exit
</UL><P><STRONG><a name="[8cd7318]"></a>ec_gain_pitch_init</STRONG> (ARM, 104 bytes, Stack size 16 bytes, ec_gains.o(i.ec_gain_pitch_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[886eddc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_init
</UL><P><STRONG><a name="[8cd7a68]"></a>ec_gain_pitch_reset</STRONG> (ARM, 72 bytes, Stack size 0 bytes, ec_gains.o(i.ec_gain_pitch_reset))
<BR>[Called By]<UL><LI><a href="#[886f0ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_reset
</UL><P><STRONG><a name="[8cd6754]"></a>ec_gain_pitch_update</STRONG> (ARM, 104 bytes, Stack size 0 bytes, ec_gains.o(i.ec_gain_pitch_update))
<BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[7969720]"></a>eloop_cancel_timeout</STRONG> (ARM, 132 bytes, Stack size 32 bytes, eloop.o(i.eloop_cancel_timeout))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[7966f60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_deinit
<LI><a href="#[847a6b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_step
<LI><a href="#[83563a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_set_expiration
<LI><a href="#[7968578]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_deinit
<LI><a href="#[839b2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_deinit
<LI><a href="#[84029a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless
<LI><a href="#[839b6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_scan
<LI><a href="#[7966e70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_deinit
<LI><a href="#[7968dd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_auth_timeout
<LI><a href="#[796904c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_scan
<LI><a href="#[8312c08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_michael_mic_failure
<LI><a href="#[9cfb280]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_key_neg_complete
<LI><a href="#[796e534]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_notify_eapol_done
<LI><a href="#[796979c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_auth_timeout
<LI><a href="#[7968ae4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
</UL><P><STRONG><a name="[7967bcc]"></a>eloop_destroy</STRONG> (ARM, 72 bytes, Stack size 16 bytes, eloop.o(i.eloop_destroy))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[9be5484]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_sock_table_destroy
</UL><BR>[Called By]<UL><LI><a href="#[50074b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deinit
</UL><P><STRONG><a name="[7967790]"></a>eloop_init</STRONG> (ARM, 36 bytes, Stack size 16 bytes, eloop.o(i.eloop_init))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
</UL><BR>[Called By]<UL><LI><a href="#[5007624]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
</UL><P><STRONG><a name="[7967398]"></a>eloop_register_read_sock</STRONG> (ARM, 28 bytes, Stack size 8 bytes, eloop.o(i.eloop_register_read_sock))
<BR><BR>[Calls]<UL><LI><a href="#[9be38d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_sock
</UL><BR>[Called By]<UL><LI><a href="#[7967ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_init
<LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
<LI><a href="#[79684f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_init
<LI><a href="#[7967704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_global_ctrl_iface_init
<LI><a href="#[79725a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_register_reconfig
</UL><P><STRONG><a name="[9be3758]"></a>eloop_register_signal</STRONG> (ARM, 136 bytes, Stack size 24 bytes, eloop.o(i.eloop_register_signal))
<BR><BR>[Calls]<UL><LI><a href="#[7404e10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[9be36ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;signal
</UL><BR>[Called By]<UL><LI><a href="#[7967578]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_register_signal_reconfig
<LI><a href="#[79675fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_register_signal_terminate
</UL><P><STRONG><a name="[7967578]"></a>eloop_register_signal_reconfig</STRONG> (ARM, 16 bytes, Stack size 0 bytes, eloop.o(i.eloop_register_signal_reconfig))
<BR><BR>[Calls]<UL><LI><a href="#[9be3758]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_signal
</UL><BR>[Called By]<UL><LI><a href="#[500752c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_run
</UL><P><STRONG><a name="[79675fc]"></a>eloop_register_signal_terminate</STRONG> (ARM, 56 bytes, Stack size 16 bytes, eloop.o(i.eloop_register_signal_terminate))
<BR><BR>[Calls]<UL><LI><a href="#[9be3758]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_signal
</UL><BR>[Called By]<UL><LI><a href="#[500752c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_run
</UL><P><STRONG><a name="[9be38d0]"></a>eloop_register_sock</STRONG> (ARM, 68 bytes, Stack size 32 bytes, eloop.o(i.eloop_register_sock))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[9be6e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_get_sock_table
<LI><a href="#[9be6e18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_sock_table_add_sock
</UL><BR>[Called By]<UL><LI><a href="#[7967398]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_register_read_sock
</UL><P><STRONG><a name="[79696a4]"></a>eloop_register_timeout</STRONG> (ARM, 244 bytes, Stack size 32 bytes, eloop.o(i.eloop_register_timeout))
<BR><BR>[Calls]<UL><LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[7a5ae98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_get_time
</UL><BR>[Called By]<UL><LI><a href="#[83ee29c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_port_timers_tick
<LI><a href="#[7966d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_init
<LI><a href="#[847a6b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_step
<LI><a href="#[83563a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_set_expiration
<LI><a href="#[9c8aaf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_init
<LI><a href="#[836e218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_scan
<LI><a href="#[839b6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_scan
<LI><a href="#[8312c08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_michael_mic_failure
<LI><a href="#[9cfb280]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_key_neg_complete
<LI><a href="#[796979c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_auth_timeout
<LI><a href="#[7968ae4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
</UL><P><STRONG><a name="[7967508]"></a>eloop_run</STRONG> (ARM, 660 bytes, Stack size 64 bytes, eloop.o(i.eloop_run))
<BR><BR>[Calls]<UL><LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7a5ae98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_get_time
<LI><a href="#[9be5a14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_sock_table_set_fds
<LI><a href="#[4bba3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4d0cb38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fputs
<LI><a href="#[9be5990]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_process_pending_signals
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[9be5910]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_sock_table_dispatch
</UL><BR>[Called By]<UL><LI><a href="#[500752c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_run
</UL><P><STRONG><a name="[7967418]"></a>eloop_terminate</STRONG> (ARM, 32 bytes, Stack size 8 bytes, eloop.o(i.eloop_terminate))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[7972630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reconfig
<LI><a href="#[79726ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_terminate
</UL><P><STRONG><a name="[9be37d4]"></a>eloop_unregister_read_sock</STRONG> (ARM, 28 bytes, Stack size 8 bytes, eloop.o(i.eloop_unregister_read_sock))
<BR><BR>[Calls]<UL><LI><a href="#[9be6e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_get_sock_table
<LI><a href="#[9be6978]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_sock_table_remove_sock
</UL><BR>[Called By]<UL><LI><a href="#[7966fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_deinit
<LI><a href="#[839b2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_deinit
<LI><a href="#[796866c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_deinit
<LI><a href="#[7967cc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_global_ctrl_iface_deinit
</UL><P><STRONG><a name="[9be35f4]"></a>eloop_wait_for_read_sock</STRONG> (ARM, 108 bytes, Stack size 40 bytes, eloop.o(i.eloop_wait_for_read_sock))
<BR><BR>[Calls]<UL><LI><a href="#[4bba3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;select
</UL><BR>[Called By]<UL><LI><a href="#[7967680]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_wait
</UL><P><STRONG><a name="[7223588]"></a>emulateTicks</STRONG> (ARM, 56 bytes, Stack size 0 bytes, fmi.o(i.emulateTicks))
<BR>[Called By]<UL><LI><a href="#[760e4ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiCIS_Write
<LI><a href="#[73a83a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiRemoveSD
<LI><a href="#[73a8074]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdAndRsp
<LI><a href="#[73a7ffc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdRspDataIn
<LI><a href="#[73a82bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDCommand
<LI><a href="#[73a80e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDDelayClock
<LI><a href="#[73a7924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_CMD53_MRead
<LI><a href="#[73a78a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_CMD53_MWrite
<LI><a href="#[73a7a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_CMD53_Read
<LI><a href="#[73a799c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_CMD53_Write
<LI><a href="#[73a8330]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDResponse
<LI><a href="#[73a7f88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDResponse2
<LI><a href="#[73a7f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Init
<LI><a href="#[73a7cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Read_in
<LI><a href="#[73a7c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Write_in
<LI><a href="#[760e314]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM2Buffer
<LI><a href="#[760e22c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM2BufferM
<LI><a href="#[760e474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_BlockErase
<LI><a href="#[7648fa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_ReadID
<LI><a href="#[760df70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read_2K
<LI><a href="#[760e1b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read_512
<LI><a href="#[760e560]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Reset
<LI><a href="#[760defc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Write_2K
<LI><a href="#[760e0cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Write_512
</UL><P><STRONG><a name="[5a64c88]"></a>encodeBase64</STRONG> (ARM, 656 bytes, Stack size 56 bytes, libmail.o(i.encodeBase64))
<BR><BR>[Calls]<UL><LI><a href="#[5a683cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;base64BufferSize
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
</UL><BR>[Called By]<UL><LI><a href="#[5a67d20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;createMailData
<LI><a href="#[5a665e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;encodeSubject
<LI><a href="#[5a680ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailLogin
</UL><P><STRONG><a name="[54566ac]"></a>encodeJPEGwithThumbnailImage</STRONG> (ARM, 332 bytes, Stack size 40 bytes, vp_jpeg.o(i.encodeJPEGwithThumbnailImage))
<BR><BR>[Calls]<UL><LI><a href="#[5504ec4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetYUVRawData
<LI><a href="#[5504d5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;jpegInitializeEngine
<LI><a href="#[5504ce0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;jpegEncSetBasicOption
<LI><a href="#[5504c60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;jpegEncSetMemorySWOnTheFly
<LI><a href="#[5504be0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;jpegEncSetMemoryAccessMode
<LI><a href="#[5504b64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;jpegSetMemoryAddress
<LI><a href="#[5504aec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;jpegEncWriteQTable
<LI><a href="#[5504a74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;jpegEncStartProcess
<LI><a href="#[5504dd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegWaitEncoderCom
</UL><BR>[Called By]<UL><LI><a href="#[5459320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnEncodeJPG
</UL><P><STRONG><a name="[77ac5c8]"></a>enqueue</STRONG> (ARM, 36 bytes, Stack size 0 bytes, queue.o(i.enqueue))
<BR>[Called By]<UL><LI><a href="#[77ac4e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;block_request
<LI><a href="#[7317b20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;free_request
<LI><a href="#[77ac634]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_sock_request
<LI><a href="#[7317aac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ready_request
</UL><P><STRONG><a name="[4a039cc]"></a>er_find_thread</STRONG> (ARM, 108 bytes, Stack size 56 bytes, UartTest.o(i.er_find_thread))
<BR><BR>[Calls]<UL><LI><a href="#[4a03958]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_find
<LI><a href="#[4a038e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_get_info
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
</UL><BR>[Called By]<UL><LI><a href="#[4a037f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;er_pause_thread
<LI><a href="#[4a0368c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;er_resume_thread
</UL><P><STRONG><a name="[4a54e1c]"></a>er_init_ns_nav_priority</STRONG> (ARM, 72 bytes, Stack size 24 bytes, er_ns_nav.o(i.er_init_ns_nav_priority))
<BR><BR>[Calls]<UL><LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
</UL><BR>[Called By]<UL><LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[4a037f4]"></a>er_pause_thread</STRONG> (ARM, 24 bytes, Stack size 8 bytes, UartTest.o(i.er_pause_thread))
<BR><BR>[Calls]<UL><LI><a href="#[4a039cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;er_find_thread
<LI><a href="#[4a0377c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_suspend
</UL><BR>[Called By]<UL><LI><a href="#[4a54a54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsUartTestHandler
</UL><P><STRONG><a name="[4a549dc]"></a>er_register_ns_cgi</STRONG> (ARM, 12 bytes, Stack size 0 bytes, er_ns_cgi.o(i.er_register_ns_cgi))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d8b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;RegisterSubCmd
</UL><BR>[Called By]<UL><LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[4a0368c]"></a>er_resume_thread</STRONG> (ARM, 24 bytes, Stack size 8 bytes, UartTest.o(i.er_resume_thread))
<BR><BR>[Calls]<UL><LI><a href="#[4a039cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;er_find_thread
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
</UL><BR>[Called By]<UL><LI><a href="#[4a54a54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsUartTestHandler
</UL><P><STRONG><a name="[81f90cc]"></a>escape_string</STRONG> (ARM, 200 bytes, Stack size 32 bytes, util.o(i.escape_string))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[8218e2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_not_found
<LI><a href="#[59af790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_unauthorized
</UL><P><STRONG><a name="[8031b60]"></a>event_loop</STRONG> (ARM, 1052 bytes, Stack size 64 bytes, event.o(i.event_loop))
<BR><BR>[Calls]<UL><LI><a href="#[8032144]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time_ago
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4bba3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[8031f0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;resched_event
<LI><a href="#[803350c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strip_events
</UL><BR>[Called By]<UL><LI><a href="#[5923f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RtspServerStart
</UL><P><STRONG><a name="[8031aec]"></a>event_swap_fd</STRONG> (ARM, 220 bytes, Stack size 36 bytes, event.o(i.event_swap_fd))
<BR>[Called By]<UL><LI><a href="#[80eb4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_PLAY
</UL><P><STRONG><a name="[780fbc8]"></a>exchange_frame</STRONG> (ARM, 120 bytes, Stack size 16 bytes, frame.o(i.exchange_frame))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[4c2be18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_signal
</UL><BR>[Called By]<UL><LI><a href="#[7810fa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;end_block
<LI><a href="#[7810554]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_back_frame
<LI><a href="#[8954678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mpeg4_encode
</UL><P><STRONG><a name="[4f73a7c]"></a>execute_drive_command</STRONG> (ARM, 96 bytes, Stack size 8 bytes, er_rsm_thread_routines.o(i.execute_drive_command))
<BR><BR>[Calls]<UL><LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
</UL><BR>[Called By]<UL><LI><a href="#[4f742b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drive_forward
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[5c07c4c]"></a>execute_random_maneuver</STRONG> (ARM, 204 bytes, Stack size 16 bytes, er_rsm_thread_routines.o(i.execute_random_maneuver))
<BR><BR>[Calls]<UL><LI><a href="#[75c3274]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_get_time
<LI><a href="#[4e4d338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
</UL><BR>[Called By]<UL><LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f73f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_waypoint
<LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
</UL><P><STRONG><a name="[5c07bc0]"></a>execute_small_sideways_random_maneuver</STRONG> (ARM, 204 bytes, Stack size 24 bytes, er_rsm_thread_routines.o(i.execute_small_sideways_random_maneuver))
<BR><BR>[Calls]<UL><LI><a href="#[75c3274]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_get_time
<LI><a href="#[4e4d338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
</UL><BR>[Called By]<UL><LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
</UL><P><STRONG><a name="[4f73790]"></a>execute_wheel_velocities</STRONG> (ARM, 100 bytes, Stack size 8 bytes, er_rsm_thread_routines.o(i.execute_wheel_velocities))
<BR><BR>[Calls]<UL><LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
<LI><a href="#[5ad09a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_wheel_speed_cmd
</UL><BR>[Called By]<UL><LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[5924688]"></a>exit_event_loop</STRONG> (ARM, 16 bytes, Stack size 0 bytes, event.o(i.exit_event_loop))
<BR>[Called By]<UL><LI><a href="#[59246fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RtspThreadRelease
</UL><P><STRONG><a name="[87ac3b4]"></a>factor</STRONG> (ARM, 96 bytes, Stack size 24 bytes, lcd.o(i.factor))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[7d7fd58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capSetDdaFactor
<LI><a href="#[87ac2c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capSinglePipePolyPhaseFilter
</UL><P><STRONG><a name="[732a970]"></a>ffGetFile</STRONG> (ARM, 104 bytes, Stack size 24 bytes, flash_file.o(i.ffGetFile))
<BR><BR>[Calls]<UL><LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[732a904]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bsearch
</UL><BR>[Called By]<UL><LI><a href="#[77abff4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_get
</UL><P><STRONG><a name="[732a890]"></a>ffGetFilePtr</STRONG> (ARM, 32 bytes, Stack size 0 bytes, flash_file.o(i.ffGetFilePtr))
<BR>[Called By]<UL><LI><a href="#[77abff4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_get
</UL><P><STRONG><a name="[732a81c]"></a>ffGetFileSize</STRONG> (ARM, 28 bytes, Stack size 0 bytes, flash_file.o(i.ffGetFileSize))
<BR>[Called By]<UL><LI><a href="#[77abff4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_get
</UL><P><STRONG><a name="[87ac490]"></a>fin_min</STRONG> (ARM, 68 bytes, Stack size 4 bytes, lcd.o(i.fin_min))
<BR>[Called By]<UL><LI><a href="#[87ac25c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;maxlcd
<LI><a href="#[87ac420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;maxlcd_2
</UL><P><STRONG><a name="[5ad1158]"></a>find_path_between_rooms</STRONG> (ARM, 104 bytes, Stack size 24 bytes, er_cgi_thread_routines.o(i.find_path_between_rooms))
<BR><BR>[Calls]<UL><LI><a href="#[5ad1358]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_find_close_waypoint
</UL><BR>[Called By]<UL><LI><a href="#[5ad10d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_find_connection_between_rooms
</UL><P><STRONG><a name="[71ece7c]"></a>firmwareRequst</STRONG> (ARM, 532 bytes, Stack size 64 bytes, vp_com.o(i.firmwareRequst))
<BR><BR>[Calls]<UL><LI><a href="#[71ed618]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBRead
<LI><a href="#[71ed5a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBResetForVCom
<LI><a href="#[71ee8c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrUnsignedInt
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[71ed6f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;statusReply
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[71ece0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyWrite
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[4defcd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyFlash
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
</UL><P><STRONG><a name="[7966dfc]"></a>fix_size_read</STRONG> (ARM, 92 bytes, Stack size 24 bytes, driver_wext.o(i.fix_size_read))
<BR><BR>[Calls]<UL><LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
</UL><BR>[Called By]<UL><LI><a href="#[844d66c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_receive
<LI><a href="#[8406d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_receive
<LI><a href="#[796facc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reconfig_receiver
</UL><P><STRONG><a name="[796840c]"></a>fix_size_write</STRONG> (ARM, 92 bytes, Stack size 24 bytes, driver_wext.o(i.fix_size_write))
<BR><BR>[Calls]<UL><LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
</UL><BR>[Called By]<UL><LI><a href="#[7af41bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_on_drv_recv
<LI><a href="#[8406c44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_send_oper_ifla
<LI><a href="#[9afb0e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_kernel_driver_wext_send_link_event
<LI><a href="#[7968480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_reconfig
</UL><P><STRONG><a name="[4f750a8]"></a>flush_ns_uart</STRONG> (ARM, 20 bytes, Stack size 0 bytes, er_ns_cmds.o(i.flush_ns_uart))
<BR><BR>[Calls]<UL><LI><a href="#[4a034a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_get_config
</UL><BR>[Called By]<UL><LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
<LI><a href="#[4f77e9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_nav_thread
<LI><a href="#[5b5dbbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_uart_write
<LI><a href="#[5c077ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;play_waypoint_action
<LI><a href="#[4f75290]">&lt&lt</a>&nbsp;&nbsp;&nbsp;reset_northstar_and_get_version
<LI><a href="#[4f74acc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;try_northstar_recovery
</UL><P><STRONG><a name="[7224174]"></a>fmiBuffer2SDM</STRONG> (ARM, 92 bytes, Stack size 8 bytes, sd.o(i.fmiBuffer2SDM))
<BR><BR>[Calls]<UL><LI><a href="#[73a8074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdAndRsp
</UL><BR>[Called By]<UL><LI><a href="#[722434c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FMI_INTHandler
<LI><a href="#[73a7c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Write_in
</UL><P><STRONG><a name="[760e2a0]"></a>fmiBuffer2SMM</STRONG> (ARM, 208 bytes, Stack size 16 bytes, sm.o(i.fmiBuffer2SMM))
<BR>[Called By]<UL><LI><a href="#[760e0cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Write_512
</UL><P><STRONG><a name="[760e4ec]"></a>fmiCIS_Write</STRONG> (ARM, 632 bytes, Stack size 40 bytes, sm.o(i.fmiCIS_Write))
<BR><BR>[Calls]<UL><LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
<LI><a href="#[7223cd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDRAM2Buffer
</UL><BR>[Called By]<UL><LI><a href="#[760e474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_BlockErase
</UL><P><STRONG><a name="[9b265f4]"></a>fmiCheckBlock</STRONG> (ARM, 144 bytes, Stack size 16 bytes, sm_l2p.o(i.fmiCheckBlock))
<BR><BR>[Calls]<UL><LI><a href="#[9b26668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_block_address
<LI><a href="#[760e474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_BlockErase
</UL><BR>[Called By]<UL><LI><a href="#[7648eb4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_L2PTable_Init
</UL><P><STRONG><a name="[7223dbc]"></a>fmiCheckCardState</STRONG> (ARM, 80 bytes, Stack size 0 bytes, fmi.o(i.fmiCheckCardState))
<BR>[Called By]<UL><LI><a href="#[73a8074]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdAndRsp
<LI><a href="#[73a7ffc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdRspDataIn
<LI><a href="#[73a82bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDCommand
<LI><a href="#[73a80e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDDelayClock
<LI><a href="#[73a7924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_CMD53_MRead
<LI><a href="#[73a78a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_CMD53_MWrite
<LI><a href="#[73a7a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_CMD53_Read
<LI><a href="#[73a799c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_CMD53_Write
<LI><a href="#[73a8330]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDResponse
<LI><a href="#[73a7f88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDResponse2
<LI><a href="#[73a7f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Init
<LI><a href="#[73a7cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Read_in
<LI><a href="#[73a7c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Write_in
</UL><P><STRONG><a name="[764908c]"></a>fmiCheckReservedArea</STRONG> (ARM, 216 bytes, Stack size 16 bytes, sm.o(i.fmiCheckReservedArea))
<BR><BR>[Calls]<UL><LI><a href="#[760dbb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiCheckSMAvailable
<LI><a href="#[7648f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Initial
<LI><a href="#[760e314]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM2Buffer
<LI><a href="#[760e058]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM2BufferM_1
</UL><BR>[Called By]<UL><LI><a href="#[52f8480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSMDevice
</UL><P><STRONG><a name="[760dbb4]"></a>fmiCheckSMAvailable</STRONG> (ARM, 92 bytes, Stack size 8 bytes, sm.o(i.fmiCheckSMAvailable))
<BR><BR>[Calls]<UL><LI><a href="#[7648fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_ReadID
</UL><BR>[Called By]<UL><LI><a href="#[764908c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiCheckReservedArea
</UL><P><STRONG><a name="[7223e34]"></a>fmiDelay</STRONG> (ARM, 4 bytes, Stack size 0 bytes, fmi.o(i.fmiDelay))
<BR>[Called By]<UL><LI><a href="#[72238b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitDevice
<LI><a href="#[762f3e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSlowDownSDClock
</UL><P><STRONG><a name="[73a7bec]"></a>fmiGet_SD_info</STRONG> (ARM, 248 bytes, Stack size 32 bytes, sd.o(i.fmiGet_SD_info))
<BR><BR>[Calls]<UL><LI><a href="#[73a82bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCommand
<LI><a href="#[73a7f88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDResponse2
</UL><BR>[Called By]<UL><LI><a href="#[5320e8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSDDevice
</UL><P><STRONG><a name="[7648e40]"></a>fmiGet_SM_info</STRONG> (ARM, 48 bytes, Stack size 0 bytes, sm.o(i.fmiGet_SM_info))
<BR>[Called By]<UL><LI><a href="#[52f8480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSMDevice
</UL><P><STRONG><a name="[722374c]"></a>fmiGetpDisk</STRONG> (ARM, 68 bytes, Stack size 0 bytes, fmi.o(i.fmiGetpDisk))
<BR>[Called By]<UL><LI><a href="#[9b81430]">&lt&lt</a>&nbsp;&nbsp;&nbsp;allocate_drive_number
</UL><P><STRONG><a name="[72238b0]"></a>fmiInitDevice</STRONG> (ARM, 648 bytes, Stack size 40 bytes, fmi.o(i.fmiInitDevice))
<BR><BR>[Calls]<UL><LI><a href="#[7223e34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiDelay
<LI><a href="#[4c2fadc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_create
<LI><a href="#[4c2f8d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_attach
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
<LI><a href="#[4c2ccf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_init
<LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[7223924]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiInstallGPIO
</UL><BR>[Called By]<UL><LI><a href="#[4d31d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_fmi_init
</UL><P><STRONG><a name="[5320e8c]"></a>fmiInitSDDevice</STRONG> (ARM, 744 bytes, Stack size 40 bytes, SDGlue.o(i.fmiInitSDDevice))
<BR><BR>[Calls]<UL><LI><a href="#[722342c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiLock
<LI><a href="#[72233bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiUnLock
<LI><a href="#[73a7f18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSD_Init
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[73a7bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiGet_SD_info
<LI><a href="#[73a7ea4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSelectCard
<LI><a href="#[73a8074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdAndRsp
<LI><a href="#[73a80e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDDelayClock
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[7648cd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsPhysicalDiskConnected
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[4d31d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_fmi_init
</UL><P><STRONG><a name="[52f8480]"></a>fmiInitSMDevice</STRONG> (ARM, 572 bytes, Stack size 40 bytes, SMGlue.o(i.fmiInitSMDevice))
<BR><BR>[Calls]<UL><LI><a href="#[722342c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiLock
<LI><a href="#[764908c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiCheckReservedArea
<LI><a href="#[7648fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_ReadID
<LI><a href="#[72233bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiUnLock
<LI><a href="#[7648f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Initial
<LI><a href="#[7648eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_L2PTable_Init
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[7648e40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiGet_SM_info
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[7648d50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsInstallFileDelCallBack
<LI><a href="#[7648cd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsPhysicalDiskConnected
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[4d31d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_fmi_init
</UL><P><STRONG><a name="[7223924]"></a>fmiInstallGPIO</STRONG> (ARM, 92 bytes, Stack size 24 bytes, fmi.o(i.fmiInstallGPIO))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4c2fadc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_create
<LI><a href="#[4c2f8d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_attach
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
</UL><BR>[Called By]<UL><LI><a href="#[72238b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitDevice
</UL><P><STRONG><a name="[7223a84]"></a>fmiInstallSDIOFunc</STRONG> (ARM, 12 bytes, Stack size 0 bytes, fmi.o(i.fmiInstallSDIOFunc))
<BR>[Called By]<UL><LI><a href="#[53323b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;register_sdiohost
</UL><P><STRONG><a name="[722342c]"></a>fmiLock</STRONG> (ARM, 88 bytes, Stack size 8 bytes, fmi.o(i.fmiLock))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[4a0359c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_self
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
</UL><BR>[Called By]<UL><LI><a href="#[5320e8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSDDevice
<LI><a href="#[52f8480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSMDevice
<LI><a href="#[73a7830]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_BlockRead
<LI><a href="#[73a77b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_BlockWrite
<LI><a href="#[73a7b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_Read
<LI><a href="#[73a7a8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_Write
<LI><a href="#[760e474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_BlockErase
<LI><a href="#[7648f2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Initial
<LI><a href="#[7648eb4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_L2PTable_Init
<LI><a href="#[76492e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read
<LI><a href="#[76491f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Write
<LI><a href="#[763115c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sd_disk_read
<LI><a href="#[76310e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sd_disk_write
<LI><a href="#[764b3d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_disk_read
<LI><a href="#[764b360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_disk_write
</UL><P><STRONG><a name="[73a83a4]"></a>fmiRemoveSD</STRONG> (ARM, 232 bytes, Stack size 24 bytes, sd.o(i.fmiRemoveSD))
<BR><BR>[Calls]<UL><LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
</UL><BR>[Called By]<UL><LI><a href="#[73a8074]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdAndRsp
<LI><a href="#[73a7ffc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdRspDataIn
<LI><a href="#[73a82bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDCommand
<LI><a href="#[73a80e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDDelayClock
<LI><a href="#[73a8330]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDResponse
<LI><a href="#[73a7f88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDResponse2
<LI><a href="#[73a7f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Init
<LI><a href="#[73a7cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Read_in
<LI><a href="#[73a7c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Write_in
</UL><P><STRONG><a name="[73a7d48]"></a>fmiSD2BufferM</STRONG> (ARM, 92 bytes, Stack size 8 bytes, sd.o(i.fmiSD2BufferM))
<BR><BR>[Calls]<UL><LI><a href="#[73a7ffc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdRspDataIn
</UL><BR>[Called By]<UL><LI><a href="#[73a7cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Read_in
</UL><P><STRONG><a name="[73a8074]"></a>fmiSDCmdAndRsp</STRONG> (ARM, 312 bytes, Stack size 40 bytes, sd.o(i.fmiSDCmdAndRsp))
<BR><BR>[Calls]<UL><LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
<LI><a href="#[73a83a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiRemoveSD
<LI><a href="#[7223dbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiCheckCardState
<LI><a href="#[4c30a1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_yield
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[7224174]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiBuffer2SDM
<LI><a href="#[5320e8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSDDevice
<LI><a href="#[73a7830]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_BlockRead
<LI><a href="#[73a77b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_BlockWrite
<LI><a href="#[73a78a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_CMD53_MWrite
<LI><a href="#[73a7a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_CMD53_Read
<LI><a href="#[73a799c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_CMD53_Write
<LI><a href="#[73a7b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_Read
<LI><a href="#[73a7a8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_Write
<LI><a href="#[73a7f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Init
<LI><a href="#[73a7cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Read_in
<LI><a href="#[73a7c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Write_in
<LI><a href="#[73a7ea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSelectCard
</UL><P><STRONG><a name="[73a7ffc]"></a>fmiSDCmdRspDataIn</STRONG> (ARM, 392 bytes, Stack size 40 bytes, sd.o(i.fmiSDCmdRspDataIn))
<BR><BR>[Calls]<UL><LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
<LI><a href="#[73a83a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiRemoveSD
<LI><a href="#[7223dbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiCheckCardState
</UL><BR>[Called By]<UL><LI><a href="#[73a7d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD2BufferM
<LI><a href="#[73a7924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_CMD53_MRead
</UL><P><STRONG><a name="[73a82bc]"></a>fmiSDCommand</STRONG> (ARM, 188 bytes, Stack size 24 bytes, sd.o(i.fmiSDCommand))
<BR><BR>[Calls]<UL><LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
<LI><a href="#[73a83a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiRemoveSD
<LI><a href="#[7223dbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiCheckCardState
</UL><BR>[Called By]<UL><LI><a href="#[73a7bec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiGet_SD_info
<LI><a href="#[722425c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_INTHandler
<LI><a href="#[73a7f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Init
<LI><a href="#[73a7cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Read_in
<LI><a href="#[73a7c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Write_in
<LI><a href="#[73a7ea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSelectCard
<LI><a href="#[763115c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sd_disk_read
</UL><P><STRONG><a name="[73a80e8]"></a>fmiSDDelayClock</STRONG> (ARM, 200 bytes, Stack size 32 bytes, sd.o(i.fmiSDDelayClock))
<BR><BR>[Calls]<UL><LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
<LI><a href="#[73a83a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiRemoveSD
<LI><a href="#[7223dbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiCheckCardState
<LI><a href="#[73a81d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSD_ReadRB
</UL><BR>[Called By]<UL><LI><a href="#[5320e8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSDDevice
<LI><a href="#[73a7cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Read_in
<LI><a href="#[73a7c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Write_in
</UL><P><STRONG><a name="[73a7830]"></a>fmiSDIO_BlockRead</STRONG> (ARM, 492 bytes, Stack size 16 bytes, sd.o(i.fmiSDIO_BlockRead))
<BR><BR>[Calls]<UL><LI><a href="#[722342c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiLock
<LI><a href="#[73a7b74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmi_sdiobit_config
<LI><a href="#[73a8074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdAndRsp
<LI><a href="#[72233bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiUnLock
<LI><a href="#[73a7a14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_CMD53_Read
<LI><a href="#[73a7924]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_CMD53_MRead
</UL><BR>[Called By]<UL><LI><a href="#[5330e94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_read_iomem
</UL><P><STRONG><a name="[73a77b8]"></a>fmiSDIO_BlockWrite</STRONG> (ARM, 496 bytes, Stack size 16 bytes, sd.o(i.fmiSDIO_BlockWrite))
<BR><BR>[Calls]<UL><LI><a href="#[722342c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiLock
<LI><a href="#[73a7b74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmi_sdiobit_config
<LI><a href="#[73a8074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdAndRsp
<LI><a href="#[72233bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiUnLock
<LI><a href="#[73a799c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_CMD53_Write
<LI><a href="#[73a78a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_CMD53_MWrite
</UL><BR>[Called By]<UL><LI><a href="#[5330f08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_write_iomem
</UL><P><STRONG><a name="[73a7924]"></a>fmiSDIO_CMD53_MRead</STRONG> (ARM, 472 bytes, Stack size 40 bytes, sd.o(i.fmiSDIO_CMD53_MRead))
<BR><BR>[Calls]<UL><LI><a href="#[73a7ffc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdRspDataIn
<LI><a href="#[7223be8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDRAM_Write_SDIO
<LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
<LI><a href="#[7223dbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiCheckCardState
</UL><BR>[Called By]<UL><LI><a href="#[73a7830]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_BlockRead
</UL><P><STRONG><a name="[73a78a8]"></a>fmiSDIO_CMD53_MWrite</STRONG> (ARM, 620 bytes, Stack size 40 bytes, sd.o(i.fmiSDIO_CMD53_MWrite))
<BR><BR>[Calls]<UL><LI><a href="#[73a8074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdAndRsp
<LI><a href="#[7223b70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDRAM_Read_SDIO
<LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
<LI><a href="#[7223dbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiCheckCardState
</UL><BR>[Called By]<UL><LI><a href="#[73a77b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_BlockWrite
</UL><P><STRONG><a name="[73a7a14]"></a>fmiSDIO_CMD53_Read</STRONG> (ARM, 332 bytes, Stack size 48 bytes, sd.o(i.fmiSDIO_CMD53_Read))
<BR><BR>[Calls]<UL><LI><a href="#[73a8074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdAndRsp
<LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
<LI><a href="#[7223dbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiCheckCardState
</UL><BR>[Called By]<UL><LI><a href="#[73a7830]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_BlockRead
</UL><P><STRONG><a name="[73a799c]"></a>fmiSDIO_CMD53_Write</STRONG> (ARM, 316 bytes, Stack size 40 bytes, sd.o(i.fmiSDIO_CMD53_Write))
<BR><BR>[Calls]<UL><LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
<LI><a href="#[7223dbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiCheckCardState
<LI><a href="#[73a8074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdAndRsp
</UL><BR>[Called By]<UL><LI><a href="#[73a77b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_BlockWrite
</UL><P><STRONG><a name="[73a7b00]"></a>fmiSDIO_Read</STRONG> (ARM, 124 bytes, Stack size 8 bytes, sd.o(i.fmiSDIO_Read))
<BR><BR>[Calls]<UL><LI><a href="#[722342c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiLock
<LI><a href="#[73a7b74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmi_sdiobit_config
<LI><a href="#[73a8074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdAndRsp
<LI><a href="#[72233bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiUnLock
</UL><BR>[Called By]<UL><LI><a href="#[5330ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_read_ioreg
</UL><P><STRONG><a name="[73a7a8c]"></a>fmiSDIO_Write</STRONG> (ARM, 200 bytes, Stack size 16 bytes, sd.o(i.fmiSDIO_Write))
<BR><BR>[Calls]<UL><LI><a href="#[722342c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiLock
<LI><a href="#[73a7b74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmi_sdiobit_config
<LI><a href="#[73a8074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdAndRsp
<LI><a href="#[72233bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiUnLock
</UL><BR>[Called By]<UL><LI><a href="#[5330f80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_write_ioreg
</UL><P><STRONG><a name="[7223cd4]"></a>fmiSDRAM2Buffer</STRONG> (ARM, 100 bytes, Stack size 0 bytes, fmi.o(i.fmiSDRAM2Buffer))
<BR>[Called By]<UL><LI><a href="#[760e4ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiCIS_Write
</UL><P><STRONG><a name="[72243c0]"></a>fmiSDRAM_Read</STRONG> (ARM, 64 bytes, Stack size 0 bytes, fmi.o(i.fmiSDRAM_Read))
<BR>[Called By]<UL><LI><a href="#[722434c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FMI_INTHandler
<LI><a href="#[73a7c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Write_in
<LI><a href="#[760e0cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Write_512
</UL><P><STRONG><a name="[7223b70]"></a>fmiSDRAM_Read_SDIO</STRONG> (ARM, 60 bytes, Stack size 0 bytes, fmi.o(i.fmiSDRAM_Read_SDIO))
<BR>[Called By]<UL><LI><a href="#[73a78a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_CMD53_MWrite
</UL><P><STRONG><a name="[7223c60]"></a>fmiSDRAM_Write</STRONG> (ARM, 64 bytes, Stack size 0 bytes, fmi.o(i.fmiSDRAM_Write))
<BR>[Called By]<UL><LI><a href="#[73a7cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Read_in
<LI><a href="#[760dfe4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read_1
<LI><a href="#[760e1b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read_512
</UL><P><STRONG><a name="[7223be8]"></a>fmiSDRAM_Write_SDIO</STRONG> (ARM, 60 bytes, Stack size 0 bytes, fmi.o(i.fmiSDRAM_Write_SDIO))
<BR>[Called By]<UL><LI><a href="#[73a7924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_CMD53_MRead
</UL><P><STRONG><a name="[73a8330]"></a>fmiSDResponse</STRONG> (ARM, 416 bytes, Stack size 40 bytes, sd.o(i.fmiSDResponse))
<BR><BR>[Calls]<UL><LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
<LI><a href="#[73a83a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiRemoveSD
<LI><a href="#[7223dbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiCheckCardState
</UL><BR>[Called By]<UL><LI><a href="#[722425c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_INTHandler
<LI><a href="#[73a7f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Init
</UL><P><STRONG><a name="[73a7f88]"></a>fmiSDResponse2</STRONG> (ARM, 612 bytes, Stack size 56 bytes, sd.o(i.fmiSDResponse2))
<BR><BR>[Calls]<UL><LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
<LI><a href="#[73a83a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiRemoveSD
<LI><a href="#[7223dbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiCheckCardState
<LI><a href="#[73ab514]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Swap32
</UL><BR>[Called By]<UL><LI><a href="#[73a7bec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiGet_SD_info
<LI><a href="#[73a7f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_Init
</UL><P><STRONG><a name="[722425c]"></a>fmiSD_INTHandler</STRONG> (ARM, 256 bytes, Stack size 24 bytes, sd.o(i.fmiSD_INTHandler))
<BR><BR>[Calls]<UL><LI><a href="#[73a82bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCommand
<LI><a href="#[73a8330]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDResponse
<LI><a href="#[73a8244]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsDiskWriteComplete
</UL><BR>[Called By]<UL><LI><a href="#[722434c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FMI_INTHandler
</UL><P><STRONG><a name="[7224084]"></a>fmiSD_INTHandlerDsr</STRONG> (ARM, 68 bytes, Stack size 16 bytes, sd.o(i.fmiSD_INTHandlerDsr))
<BR>[Called By]<UL><LI><a href="#[72240fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FMI_INTHandlerDsr
</UL><P><STRONG><a name="[73a7f18]"></a>fmiSD_Init</STRONG> (ARM, 904 bytes, Stack size 56 bytes, sd.o(i.fmiSD_Init))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
<LI><a href="#[73a83a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiRemoveSD
<LI><a href="#[7223dbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiCheckCardState
<LI><a href="#[73a82bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCommand
<LI><a href="#[73a8330]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDResponse
<LI><a href="#[73a8074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdAndRsp
<LI><a href="#[73a7f88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDResponse2
</UL><BR>[Called By]<UL><LI><a href="#[5320e8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSDDevice
<LI><a href="#[762f3e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSlowDownSDClock
</UL><P><STRONG><a name="[73a81d0]"></a>fmiSD_ReadRB</STRONG> (ARM, 32 bytes, Stack size 0 bytes, sd.o(i.fmiSD_ReadRB))
<BR>[Called By]<UL><LI><a href="#[73a80e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDDelayClock
<LI><a href="#[762f3e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSlowDownSDClock
</UL><P><STRONG><a name="[73a7cd4]"></a>fmiSD_Read_in</STRONG> (ARM, 640 bytes, Stack size 40 bytes, sd.o(i.fmiSD_Read_in))
<BR><BR>[Calls]<UL><LI><a href="#[73a8074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdAndRsp
<LI><a href="#[73a80e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDDelayClock
<LI><a href="#[73a7d48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSD2BufferM
<LI><a href="#[7223c60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDRAM_Write
<LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
<LI><a href="#[73a83a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiRemoveSD
<LI><a href="#[7223dbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiCheckCardState
<LI><a href="#[73a82bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCommand
</UL><BR>[Called By]<UL><LI><a href="#[763115c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sd_disk_read
</UL><P><STRONG><a name="[73a7c60]"></a>fmiSD_Write_in</STRONG> (ARM, 1088 bytes, Stack size 40 bytes, sd.o(i.fmiSD_Write_in))
<BR><BR>[Calls]<UL><LI><a href="#[72243c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDRAM_Read
<LI><a href="#[73a8074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdAndRsp
<LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
<LI><a href="#[7223dbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiCheckCardState
<LI><a href="#[73a80e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDDelayClock
<LI><a href="#[7224174]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiBuffer2SDM
<LI><a href="#[73a83a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiRemoveSD
<LI><a href="#[73a82bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCommand
</UL><BR>[Called By]<UL><LI><a href="#[76310e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sd_disk_write
</UL><P><STRONG><a name="[760e314]"></a>fmiSM2Buffer</STRONG> (ARM, 532 bytes, Stack size 32 bytes, sm.o(i.fmiSM2Buffer))
<BR><BR>[Calls]<UL><LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
</UL><BR>[Called By]<UL><LI><a href="#[9b263ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_page_mark
<LI><a href="#[764908c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiCheckReservedArea
</UL><P><STRONG><a name="[760e22c]"></a>fmiSM2BufferM</STRONG> (ARM, 512 bytes, Stack size 32 bytes, sm.o(i.fmiSM2BufferM))
<BR><BR>[Calls]<UL><LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
</UL><BR>[Called By]<UL><LI><a href="#[760e1b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read_512
</UL><P><STRONG><a name="[760e058]"></a>fmiSM2BufferM_1</STRONG> (ARM, 224 bytes, Stack size 0 bytes, sm.o(i.fmiSM2BufferM_1))
<BR>[Called By]<UL><LI><a href="#[764908c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiCheckReservedArea
<LI><a href="#[760dfe4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read_1
</UL><P><STRONG><a name="[7648dd0]"></a>fmiSMDelete</STRONG> (ARM, 188 bytes, Stack size 32 bytes, sm_l2p.o(i.fmiSMDelete))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[9b26244]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mark_block_data
</UL><BR>[Address Reference Count : 1]<UL><LI> SMGlue.o(i.fmiInitSMDevice)
</UL><P><STRONG><a name="[9b266e0]"></a>fmiSMGetMarkData</STRONG> (ARM, 184 bytes, Stack size 24 bytes, sm_l2p.o(i.fmiSMGetMarkData))
<BR><BR>[Calls]<UL><LI><a href="#[760e560]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Reset
</UL><BR>[Called By]<UL><LI><a href="#[9b26334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data
</UL><P><STRONG><a name="[760de08]"></a>fmiSML2PWriteProtect</STRONG> (ARM, 284 bytes, Stack size 32 bytes, sm.o(i.fmiSML2PWriteProtect))
<BR><BR>[Calls]<UL><LI><a href="#[760e560]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Reset
</UL><BR>[Called By]<UL><LI><a href="#[9b26334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data
<LI><a href="#[9b262b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data_2K
</UL><P><STRONG><a name="[760e474]"></a>fmiSM_BlockErase</STRONG> (ARM, 400 bytes, Stack size 40 bytes, sm.o(i.fmiSM_BlockErase))
<BR><BR>[Calls]<UL><LI><a href="#[722342c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiLock
<LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
<LI><a href="#[72233bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiUnLock
<LI><a href="#[760e4ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiCIS_Write
</UL><BR>[Called By]<UL><LI><a href="#[9b265f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiCheckBlock
<LI><a href="#[9b26580]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_free_block
<LI><a href="#[9b26244]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mark_block_data
<LI><a href="#[9b26334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data
<LI><a href="#[9b262b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data_2K
</UL><P><STRONG><a name="[760e140]"></a>fmiSM_ECC_Correct</STRONG> (ARM, 504 bytes, Stack size 24 bytes, ecc.o(i.fmiSM_ECC_Correct))
<BR><BR>[Calls]<UL><LI><a href="#[7f33430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;correct_data
</UL><BR>[Called By]<UL><LI><a href="#[760df70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read_2K
<LI><a href="#[760e1b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read_512
</UL><P><STRONG><a name="[760e3fc]"></a>fmiSM_GetBlockAddr</STRONG> (ARM, 168 bytes, Stack size 0 bytes, sm.o(i.fmiSM_GetBlockAddr))
<BR>[Called By]<UL><LI><a href="#[9b26334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data
<LI><a href="#[9b262b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data_2K
</UL><P><STRONG><a name="[72242d4]"></a>fmiSM_INTHandler</STRONG> (ARM, 60 bytes, Stack size 0 bytes, sm.o(i.fmiSM_INTHandler))
<BR>[Called By]<UL><LI><a href="#[722434c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FMI_INTHandler
</UL><P><STRONG><a name="[7648f2c]"></a>fmiSM_Initial</STRONG> (ARM, 208 bytes, Stack size 8 bytes, sm.o(i.fmiSM_Initial))
<BR><BR>[Calls]<UL><LI><a href="#[722342c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiLock
<LI><a href="#[72233bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiUnLock
</UL><BR>[Called By]<UL><LI><a href="#[764908c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiCheckReservedArea
<LI><a href="#[52f8480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSMDevice
</UL><P><STRONG><a name="[7648eb4]"></a>fmiSM_L2PTable_Init</STRONG> (ARM, 608 bytes, Stack size 40 bytes, sm_l2p.o(i.fmiSM_L2PTable_Init))
<BR><BR>[Calls]<UL><LI><a href="#[722342c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiLock
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[9b26668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_block_address
<LI><a href="#[9b267cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SM_AddFreeBlock
<LI><a href="#[72233bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiUnLock
<LI><a href="#[9b265f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiCheckBlock
</UL><BR>[Called By]<UL><LI><a href="#[52f8480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSMDevice
<LI><a href="#[9b26498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_block_data
<LI><a href="#[9b26244]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mark_block_data
<LI><a href="#[9b26334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data
<LI><a href="#[9b262b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data_2K
</UL><P><STRONG><a name="[76492e0]"></a>fmiSM_Read</STRONG> (ARM, 536 bytes, Stack size 40 bytes, sm_l2p.o(i.fmiSM_Read))
<BR><BR>[Calls]<UL><LI><a href="#[722342c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiLock
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[9b26498]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_block_data
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[72233bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiUnLock
</UL><BR>[Called By]<UL><LI><a href="#[764b3d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_disk_read
</UL><P><STRONG><a name="[7648fa0]"></a>fmiSM_ReadID</STRONG> (ARM, 972 bytes, Stack size 40 bytes, sm.o(i.fmiSM_ReadID))
<BR><BR>[Calls]<UL><LI><a href="#[760e560]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Reset
<LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
</UL><BR>[Called By]<UL><LI><a href="#[760dbb4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiCheckSMAvailable
<LI><a href="#[52f8480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSMDevice
</UL><P><STRONG><a name="[760dfe4]"></a>fmiSM_Read_1</STRONG> (ARM, 284 bytes, Stack size 40 bytes, sm.o(i.fmiSM_Read_1))
<BR><BR>[Calls]<UL><LI><a href="#[760e058]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM2BufferM_1
<LI><a href="#[7223c60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDRAM_Write
</UL><BR>[Called By]<UL><LI><a href="#[9b2650c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_page_data
</UL><P><STRONG><a name="[760df70]"></a>fmiSM_Read_2K</STRONG> (ARM, 540 bytes, Stack size 24 bytes, sm.o(i.fmiSM_Read_2K))
<BR><BR>[Calls]<UL><LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
<LI><a href="#[760e140]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_ECC_Correct
</UL><BR>[Called By]<UL><LI><a href="#[9b263ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_page_mark
<LI><a href="#[9b2650c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_page_data
<LI><a href="#[9b262b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data_2K
<LI><a href="#[9b26420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_page_data
</UL><P><STRONG><a name="[760e1b8]"></a>fmiSM_Read_512</STRONG> (ARM, 552 bytes, Stack size 40 bytes, sm.o(i.fmiSM_Read_512))
<BR><BR>[Calls]<UL><LI><a href="#[760e22c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM2BufferM
<LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
<LI><a href="#[760e140]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_ECC_Correct
<LI><a href="#[7223c60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDRAM_Write
</UL><BR>[Called By]<UL><LI><a href="#[9b26498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_block_data
<LI><a href="#[9b26334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data
</UL><P><STRONG><a name="[760e560]"></a>fmiSM_Reset</STRONG> (ARM, 220 bytes, Stack size 32 bytes, sm.o(i.fmiSM_Reset))
<BR><BR>[Calls]<UL><LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
</UL><BR>[Called By]<UL><LI><a href="#[9b266e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSMGetMarkData
<LI><a href="#[760de08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSML2PWriteProtect
<LI><a href="#[7648fa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_ReadID
<LI><a href="#[760de84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_SetMarkFlag
<LI><a href="#[760dd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_WritePage0
<LI><a href="#[9b26668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_block_address
</UL><P><STRONG><a name="[760de84]"></a>fmiSM_SetMarkFlag</STRONG> (ARM, 288 bytes, Stack size 32 bytes, sm.o(i.fmiSM_SetMarkFlag))
<BR><BR>[Calls]<UL><LI><a href="#[760e560]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Reset
</UL><BR>[Called By]<UL><LI><a href="#[9b26244]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mark_block_data
</UL><P><STRONG><a name="[76491f4]"></a>fmiSM_Write</STRONG> (ARM, 564 bytes, Stack size 40 bytes, sm_l2p.o(i.fmiSM_Write))
<BR><BR>[Calls]<UL><LI><a href="#[722342c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiLock
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[9b262b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;update_block_data_2K
<LI><a href="#[9b26334]">&gt&gt</a>&nbsp;&nbsp;&nbsp;update_block_data
<LI><a href="#[72233bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiUnLock
</UL><BR>[Called By]<UL><LI><a href="#[764b360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_disk_write
</UL><P><STRONG><a name="[760dd90]"></a>fmiSM_WritePage0</STRONG> (ARM, 400 bytes, Stack size 40 bytes, sm.o(i.fmiSM_WritePage0))
<BR><BR>[Calls]<UL><LI><a href="#[760e560]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Reset
</UL><BR>[Called By]<UL><LI><a href="#[9b26334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data
<LI><a href="#[9b262b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data_2K
</UL><P><STRONG><a name="[760defc]"></a>fmiSM_Write_2K</STRONG> (ARM, 448 bytes, Stack size 24 bytes, sm.o(i.fmiSM_Write_2K))
<BR><BR>[Calls]<UL><LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
</UL><BR>[Called By]<UL><LI><a href="#[9b262b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data_2K
<LI><a href="#[9b26420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_page_data
</UL><P><STRONG><a name="[760dd18]"></a>fmiSM_Write_2K_CB</STRONG> (ARM, 296 bytes, Stack size 16 bytes, sm.o(i.fmiSM_Write_2K_CB))
<BR>[Called By]<UL><LI><a href="#[9b262b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data_2K
</UL><P><STRONG><a name="[760e0cc]"></a>fmiSM_Write_512</STRONG> (ARM, 960 bytes, Stack size 56 bytes, sm.o(i.fmiSM_Write_512))
<BR><BR>[Calls]<UL><LI><a href="#[72243c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDRAM_Read
<LI><a href="#[7223588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;emulateTicks
<LI><a href="#[760e2a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiBuffer2SMM
</UL><BR>[Called By]<UL><LI><a href="#[9b26334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data
</UL><P><STRONG><a name="[73a7ea4]"></a>fmiSelectCard</STRONG> (ARM, 484 bytes, Stack size 16 bytes, sd.o(i.fmiSelectCard))
<BR><BR>[Calls]<UL><LI><a href="#[73a8074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCmdAndRsp
<LI><a href="#[73a82bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCommand
</UL><BR>[Called By]<UL><LI><a href="#[5320e8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSDDevice
<LI><a href="#[762f3e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSlowDownSDClock
</UL><P><STRONG><a name="[72237bc]"></a>fmiSetCardDetection</STRONG> (ARM, 336 bytes, Stack size 24 bytes, fmi.o(i.fmiSetCardDetection))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
</UL><BR>[Called By]<UL><LI><a href="#[4d31d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_fmi_init
</UL><P><STRONG><a name="[4a5548c]"></a>fmiSetFMIReferenceClock</STRONG> (ARM, 100 bytes, Stack size 16 bytes, fmi.o(i.fmiSetFMIReferenceClock))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[4d31d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_fmi_init
<LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[7224008]"></a>fmiSetGPIODebounceTick</STRONG> (ARM, 12 bytes, Stack size 0 bytes, fmi.o(i.fmiSetGPIODebounceTick))
<BR>[Called By]<UL><LI><a href="#[4d31d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_fmi_init
</UL><P><STRONG><a name="[4a5540c]"></a>fmiSetSDOutputClockbykHz</STRONG> (ARM, 16 bytes, Stack size 0 bytes, sd.o(i.fmiSetSDOutputClockbykHz))
<BR>[Called By]<UL><LI><a href="#[4d31d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_fmi_init
<LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[762f3e8]"></a>fmiSlowDownSDClock</STRONG> (ARM, 272 bytes, Stack size 16 bytes, SDGlue.o(i.fmiSlowDownSDClock))
<BR><BR>[Calls]<UL><LI><a href="#[7223e34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiDelay
<LI><a href="#[73a7f18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSD_Init
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[73a7ea4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSelectCard
<LI><a href="#[73a81d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSD_ReadRB
</UL><BR>[Called By]<UL><LI><a href="#[763115c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sd_disk_read
<LI><a href="#[76310e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sd_disk_write
</UL><P><STRONG><a name="[72233bc]"></a>fmiUnLock</STRONG> (ARM, 88 bytes, Stack size 8 bytes, fmi.o(i.fmiUnLock))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[4a0359c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_self
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Called By]<UL><LI><a href="#[5320e8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSDDevice
<LI><a href="#[52f8480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSMDevice
<LI><a href="#[73a7830]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_BlockRead
<LI><a href="#[73a77b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_BlockWrite
<LI><a href="#[73a7b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_Read
<LI><a href="#[73a7a8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_Write
<LI><a href="#[760e474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_BlockErase
<LI><a href="#[7648f2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Initial
<LI><a href="#[7648eb4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_L2PTable_Init
<LI><a href="#[76492e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read
<LI><a href="#[76491f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Write
<LI><a href="#[763115c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sd_disk_read
<LI><a href="#[76310e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sd_disk_write
<LI><a href="#[764b3d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_disk_read
<LI><a href="#[764b360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_disk_write
</UL><P><STRONG><a name="[73a7b74]"></a>fmi_sdiobit_config</STRONG> (ARM, 52 bytes, Stack size 0 bytes, sd.o(i.fmi_sdiobit_config))
<BR>[Called By]<UL><LI><a href="#[73a7830]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_BlockRead
<LI><a href="#[73a77b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_BlockWrite
<LI><a href="#[73a7b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_Read
<LI><a href="#[73a7a8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDIO_Write
</UL><P><STRONG><a name="[7f26780]"></a>font11x11engGetMapAddr1</STRONG> (ARM, 60 bytes, Stack size 0 bytes, data_eng_11x11.o(i.font11x11engGetMapAddr1))
<BR>[Address Reference Count : 1]<UL><LI> data_eng_11x11.o(.data)
</UL><P><STRONG><a name="[544d30c]"></a>fontGetSize</STRONG> (ARM, 92 bytes, Stack size 24 bytes, font.o(i.fontGetSize))
<BR><BR>[Calls]<UL><LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[71ed36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7efcfc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fontGetSizeEx
</UL><BR>[Called By]<UL><LI><a href="#[5456a08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoDrawContent
</UL><P><STRONG><a name="[7efcfc4]"></a>fontGetSizeEx</STRONG> (ARM, 204 bytes, Stack size 72 bytes, font.o(i.fontGetSizeEx))
<BR><BR>[Calls]<UL><LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[71ed36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[7efd038]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fontPrintEx
</UL><BR>[Called By]<UL><LI><a href="#[544d30c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fontGetSize
</UL><P><STRONG><a name="[544d37c]"></a>fontPrint</STRONG> (ARM, 96 bytes, Stack size 24 bytes, font.o(i.fontPrint))
<BR><BR>[Calls]<UL><LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[71ed36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7efd038]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fontPrintEx
</UL><BR>[Called By]<UL><LI><a href="#[5456a08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoDrawContent
</UL><P><STRONG><a name="[7efd038]"></a>fontPrintEx</STRONG> (ARM, 556 bytes, Stack size 88 bytes, font.o(i.fontPrintEx))
<BR><BR>[Calls]<UL><LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[71ed36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[7efe334]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fontPrint2
<LI><a href="#[7efe2c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fontPrint1
</UL><BR>[Called By]<UL><LI><a href="#[7efcfc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fontGetSizeEx
<LI><a href="#[544d37c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fontPrint
</UL><P><STRONG><a name="[544d3ec]"></a>fontSetFont</STRONG> (ARM, 88 bytes, Stack size 24 bytes, font.o(i.fontSetFont))
<BR><BR>[Calls]<UL><LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[71ed36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;abort
</UL><BR>[Called By]<UL><LI><a href="#[5456a08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoDrawContent
</UL><P><STRONG><a name="[8162ab4]"></a>format_match</STRONG> (ARM, 56 bytes, Stack size 0 bytes, stream.o(i.format_match))
<BR>[Called By]<UL><LI><a href="#[808c6e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_to_stream
</UL><P><STRONG><a name="[80cf150]"></a>free_pmsg</STRONG> (ARM, 100 bytes, Stack size 8 bytes, pmsg.o(i.free_pmsg))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[80eb528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_SETUP
<LI><a href="#[8180598]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_request
</UL><P><STRONG><a name="[7317b20]"></a>free_request</STRONG> (ARM, 568 bytes, Stack size 40 bytes, request.o(i.free_request))
<BR><BR>[Calls]<UL><LI><a href="#[77ac810]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dequeue
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[77ac554]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufPATHDecRef
<LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[77ac4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;block_request
<LI><a href="#[77adc4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;safe_close
<LI><a href="#[77ac5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;enqueue
</UL><BR>[Called By]<UL><LI><a href="#[7319734]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fdset_update
<LI><a href="#[7317ce4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_requests
</UL><P><STRONG><a name="[71ed3d8]"></a>freshWlanRequest</STRONG> (ARM, 384 bytes, Stack size 2992 bytes, vp_com.o(i.freshWlanRequest))
<BR><BR>[Calls]<UL><LI><a href="#[4eaa824]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlScanAP
<LI><a href="#[71ed84c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrwlanAPArrayLenth
<LI><a href="#[71ed7d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrwlanAPArrayStru
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[71ed36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[71f3fe8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBWrite_Again
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
</UL><P><STRONG><a name="[9b80034]"></a>fsAllocateDisk</STRONG> (ARM, 96 bytes, Stack size 16 bytes, WBFAT_DISK.o(i.fsAllocateDisk))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[9b81430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;allocate_drive_number
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[9b7fdc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_parse_partition
</UL><P><STRONG><a name="[9b7fb54]"></a>fsAllocateSector</STRONG> (ARM, 84 bytes, Stack size 0 bytes, WBFAT_LIB.o(i.fsAllocateSector))
<BR>[Called By]<UL><LI><a href="#[9b6401c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fclose
<LI><a href="#[9b63e60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fset_stat
<LI><a href="#[9b5e968]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_allocate_cluster
<LI><a href="#[9b7fdc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_parse_partition
<LI><a href="#[9b5e9e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_update_first_cluster
<LI><a href="#[9b80d8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_partition_records
<LI><a href="#[88fe6a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_directroy
<LI><a href="#[88fe620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_fat16_root
</UL><P><STRONG><a name="[887aaf0]"></a>fsAsciiNonCaseCompare</STRONG> (ARM, 92 bytes, Stack size 16 bytes, WBFAT_LANGUAGE.o(i.fsAsciiNonCaseCompare))
<BR><BR>[Calls]<UL><LI><a href="#[9baf580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsToUpperCase
</UL><BR>[Called By]<UL><LI><a href="#[889f5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_delete_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
<LI><a href="#[88fe6a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_directroy
<LI><a href="#[88fe620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_fat16_root
</UL><P><STRONG><a name="[9b5e2dc]"></a>fsAsciiToUnicode</STRONG> (ARM, 76 bytes, Stack size 12 bytes, WBFAT_LANGUAGE.o(i.fsAsciiToUnicode))
<BR>[Called By]<UL><LI><a href="#[9b5f45c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_file
<LI><a href="#[889f5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_delete_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
</UL><P><STRONG><a name="[887ac64]"></a>fsAsciiToUpperCase</STRONG> (ARM, 40 bytes, Stack size 0 bytes, WBFAT_LANGUAGE.o(i.fsAsciiToUpperCase))
<BR>[Called By]<UL><LI><a href="#[88a1160]">&lt&lt</a>&nbsp;&nbsp;&nbsp;generate_short_name
</UL><P><STRONG><a name="[765d7b0]"></a>fsCheckDriverPointer</STRONG> (ARM, 40 bytes, Stack size 0 bytes, WBFAT_DISK.o(i.fsCheckDriverPointer))
<BR>[Called By]<UL><LI><a href="#[765d568]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsIORead
<LI><a href="#[765d64c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsIOWrite
<LI><a href="#[7648cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsPhysicalDiskConnected
<LI><a href="#[765d82c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_flush_iow_cache
</UL><P><STRONG><a name="[9baf3ac]"></a>fsCloseFile</STRONG> (ARM, 8 bytes, Stack size 0 bytes, WBFAT.o(i.fsCloseFile))
<BR>[Called By]<UL><LI><a href="#[88a3714]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_mkdir
<LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[889f5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_delete_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
</UL><P><STRONG><a name="[73a8244]"></a>fsDiskWriteComplete</STRONG> (ARM, 4 bytes, Stack size 0 bytes, WBFAT_IO.o(i.fsDiskWriteComplete))
<BR>[Called By]<UL><LI><a href="#[722425c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSD_INTHandler
</UL><P><STRONG><a name="[9baf108]"></a>fsFileSeek</STRONG> (ARM, 20 bytes, Stack size 0 bytes, WBFAT.o(i.fsFileSeek))
<BR>[Called By]<UL><LI><a href="#[88a17f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_dir_empty
<LI><a href="#[88a10e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_free_dir_entry
<LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[889f5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_delete_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
<LI><a href="#[88a1160]">&lt&lt</a>&nbsp;&nbsp;&nbsp;generate_short_name
</UL><P><STRONG><a name="[887aa04]"></a>fsFindLastSlash</STRONG> (ARM, 56 bytes, Stack size 0 bytes, WBFAT_LIB.o(i.fsFindLastSlash))
<BR>[Called By]<UL><LI><a href="#[889f558]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsTruncatePath
</UL><P><STRONG><a name="[5320f78]"></a>fsFixDriveNumber</STRONG> (ARM, 88 bytes, Stack size 0 bytes, WBFAT_DISK.o(i.fsFixDriveNumber))
<BR>[Called By]<UL><LI><a href="#[4d31d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_fmi_init
</UL><P><STRONG><a name="[9b7fae0]"></a>fsFreeSector</STRONG> (ARM, 56 bytes, Stack size 0 bytes, WBFAT_LIB.o(i.fsFreeSector))
<BR>[Called By]<UL><LI><a href="#[9b6401c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fclose
<LI><a href="#[9b63e60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fset_stat
<LI><a href="#[9b5e968]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_allocate_cluster
<LI><a href="#[9b7fdc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_parse_partition
<LI><a href="#[9b5e9e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_update_first_cluster
<LI><a href="#[9b80d8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_partition_records
<LI><a href="#[88fe6a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_directroy
<LI><a href="#[88fe620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_fat16_root
</UL><P><STRONG><a name="[9baee50]"></a>fsGetFilePosition</STRONG> (ARM, 8 bytes, Stack size 0 bytes, WBFAT.o(i.fsGetFilePosition))
<BR>[Called By]<UL><LI><a href="#[88a17f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_dir_empty
<LI><a href="#[889f5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_delete_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
</UL><P><STRONG><a name="[9baf7d0]"></a>fsHandleToDescriptor</STRONG> (ARM, 40 bytes, Stack size 8 bytes, WBFAT.o(i.fsHandleToDescriptor))
<BR><BR>[Calls]<UL><LI><a href="#[801bb84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_slot_index
</UL><BR>[Called By]<UL><LI><a href="#[88a10e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_free_dir_entry
<LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[889f5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_delete_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
<LI><a href="#[88a1160]">&lt&lt</a>&nbsp;&nbsp;&nbsp;generate_short_name
<LI><a href="#[9b5e8f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_fs_info
</UL><P><STRONG><a name="[765d568]"></a>fsIORead</STRONG> (ARM, 176 bytes, Stack size 32 bytes, WBFAT_IO.o(i.fsIORead))
<BR><BR>[Calls]<UL><LI><a href="#[765d7b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsCheckDriverPointer
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[765d82c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_flush_iow_cache
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[9b6401c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fclose
<LI><a href="#[9b640fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fread
<LI><a href="#[9b63e60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fset_stat
<LI><a href="#[9b6408c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fwrite
<LI><a href="#[88f5948]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_out_fat_sector
<LI><a href="#[9b7fdc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_parse_partition
<LI><a href="#[9b5e9e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_update_first_cluster
<LI><a href="#[9b80d8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_partition_records
<LI><a href="#[9b5e8f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_fs_info
<LI><a href="#[88fe6a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_directroy
<LI><a href="#[88fe620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_fat16_root
</UL><P><STRONG><a name="[765d64c]"></a>fsIOWrite</STRONG> (ARM, 356 bytes, Stack size 40 bytes, WBFAT_IO.o(i.fsIOWrite))
<BR><BR>[Calls]<UL><LI><a href="#[765d7b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsCheckDriverPointer
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[765d82c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_flush_iow_cache
</UL><BR>[Called By]<UL><LI><a href="#[9b6401c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fclose
<LI><a href="#[9b640fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fread
<LI><a href="#[9b63e60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fset_stat
<LI><a href="#[9b6408c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fwrite
<LI><a href="#[9b5e968]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_allocate_cluster
<LI><a href="#[9b7fec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_flush_sector_cache
<LI><a href="#[9b5e9e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_update_first_cluster
</UL><P><STRONG><a name="[5320f00]"></a>fsInitFileSystem</STRONG> (ARM, 8 bytes, Stack size 0 bytes, WBFAT.o(i.fsInitFileSystem))
<BR>[Called By]<UL><LI><a href="#[4d31d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_fmi_init
</UL><P><STRONG><a name="[7648d50]"></a>fsInstallFileDelCallBack</STRONG> (ARM, 12 bytes, Stack size 0 bytes, WBFAT_FOP.o(i.fsInstallFileDelCallBack))
<BR>[Called By]<UL><LI><a href="#[52f8480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSMDevice
</UL><P><STRONG><a name="[9b7ffbc]"></a>fsMountLogicalDisk</STRONG> (ARM, 76 bytes, Stack size 0 bytes, WBFAT_DISK.o(i.fsMountLogicalDisk))
<BR>[Called By]<UL><LI><a href="#[9b7fdc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_parse_partition
</UL><P><STRONG><a name="[9baf2c8]"></a>fsOpenFile</STRONG> (ARM, 8 bytes, Stack size 0 bytes, WBFAT.o(i.fsOpenFile))
<BR>[Called By]<UL><LI><a href="#[88a3714]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_mkdir
<LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[889f5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_delete_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
</UL><P><STRONG><a name="[7648cd4]"></a>fsPhysicalDiskConnected</STRONG> (ARM, 320 bytes, Stack size 24 bytes, WBFAT_DISK.o(i.fsPhysicalDiskConnected))
<BR><BR>[Calls]<UL><LI><a href="#[765d7b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsCheckDriverPointer
<LI><a href="#[9b80d8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;parse_partition_records
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[9b7fdc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_parse_partition
</UL><BR>[Called By]<UL><LI><a href="#[5320e8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSDDevice
<LI><a href="#[52f8480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiInitSMDevice
</UL><P><STRONG><a name="[9baf258]"></a>fsReadFile</STRONG> (ARM, 8 bytes, Stack size 0 bytes, WBFAT.o(i.fsReadFile))
<BR>[Called By]<UL><LI><a href="#[88a17f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_dir_empty
<LI><a href="#[88a10e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_free_dir_entry
<LI><a href="#[889f5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_delete_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
</UL><P><STRONG><a name="[9baf580]"></a>fsToUpperCase</STRONG> (ARM, 20 bytes, Stack size 0 bytes, WBFAT_LIB.o(i.fsToUpperCase))
<BR>[Called By]<UL><LI><a href="#[887aaf0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsAsciiNonCaseCompare
<LI><a href="#[9baf664]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsUnicodeNonCaseCompare
</UL><P><STRONG><a name="[889f558]"></a>fsTruncatePath</STRONG> (ARM, 96 bytes, Stack size 16 bytes, WBFAT_LIB.o(i.fsTruncatePath))
<BR><BR>[Calls]<UL><LI><a href="#[887aa04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsFindLastSlash
<LI><a href="#[9b5e264]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeCopyStr
<LI><a href="#[887ad50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeStrLen
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Called By]<UL><LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[889f5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_delete_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
</UL><P><STRONG><a name="[9b5e264]"></a>fsUnicodeCopyStr</STRONG> (ARM, 68 bytes, Stack size 0 bytes, WBFAT_LANGUAGE.o(i.fsUnicodeCopyStr))
<BR>[Called By]<UL><LI><a href="#[9b5f45c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_file
<LI><a href="#[889f558]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsTruncatePath
<LI><a href="#[9b5e1e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsUnicodeWildCardCompare
<LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[889f5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_delete_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
<LI><a href="#[9b5e720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_search_file
</UL><P><STRONG><a name="[9baf664]"></a>fsUnicodeNonCaseCompare</STRONG> (ARM, 224 bytes, Stack size 16 bytes, WBFAT_LANGUAGE.o(i.fsUnicodeNonCaseCompare))
<BR><BR>[Calls]<UL><LI><a href="#[9baf580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsToUpperCase
</UL><BR>[Called By]<UL><LI><a href="#[9b600e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_fileEx
<LI><a href="#[889f5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_delete_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
<LI><a href="#[88fe6a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_directroy
<LI><a href="#[88fe620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_fat16_root
</UL><P><STRONG><a name="[887ad50]"></a>fsUnicodeStrLen</STRONG> (ARM, 52 bytes, Stack size 0 bytes, WBFAT_LANGUAGE.o(i.fsUnicodeStrLen))
<BR>[Called By]<UL><LI><a href="#[889f558]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsTruncatePath
<LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[9b5e444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_ldir_name
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
<LI><a href="#[9b5e720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_search_file
</UL><P><STRONG><a name="[887adc4]"></a>fsUnicodeToAscii</STRONG> (ARM, 104 bytes, Stack size 8 bytes, WBFAT_LANGUAGE.o(i.fsUnicodeToAscii))
<BR>[Called By]<UL><LI><a href="#[9b5e720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_search_file
</UL><P><STRONG><a name="[887abe8]"></a>fsUnicodeToUpperCase</STRONG> (ARM, 60 bytes, Stack size 0 bytes, WBFAT_LANGUAGE.o(i.fsUnicodeToUpperCase))
<BR>[Called By]<UL><LI><a href="#[9b5e1e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsUnicodeWildCardCompare
<LI><a href="#[9b5e720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_search_file
</UL><P><STRONG><a name="[9b5e1e4]"></a>fsUnicodeWildCardCompare</STRONG> (ARM, 328 bytes, Stack size 1056 bytes, WBFAT_LIB.o(i.fsUnicodeWildCardCompare))
<BR><BR>[Calls]<UL><LI><a href="#[88cc0b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_last_dot
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[9b5e264]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeCopyStr
<LI><a href="#[887abe8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeToUpperCase
<LI><a href="#[88cbb28]">&gt&gt</a>&nbsp;&nbsp;&nbsp;unicode_wild_card_comapre
</UL><BR>[Called By]<UL><LI><a href="#[9b5f45c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_file
</UL><P><STRONG><a name="[9baf1e8]"></a>fsWriteFile</STRONG> (ARM, 8 bytes, Stack size 0 bytes, WBFAT.o(i.fsWriteFile))
<BR>[Called By]<UL><LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[889f5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_delete_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
</UL><P><STRONG><a name="[9b5e968]"></a>fs_fat_allocate_cluster</STRONG> (ARM, 528 bytes, Stack size 48 bytes, WBFAT_FOP.o(i.fs_fat_allocate_cluster))
<BR><BR>[Calls]<UL><LI><a href="#[9b5e8f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read_fs_info
<LI><a href="#[9b5ebcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_read_fat_table
<LI><a href="#[9b7fb54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsAllocateSector
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[765d64c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsIOWrite
<LI><a href="#[9b7fae0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsFreeSector
<LI><a href="#[9b5ea60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_write_fat_table
<LI><a href="#[9b5e9e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_update_first_cluster
<LI><a href="#[9b7fec0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_flush_sector_cache
<LI><a href="#[765d82c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_flush_iow_cache
</UL><BR>[Called By]<UL><LI><a href="#[9b63fac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fsizing
<LI><a href="#[9b6408c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fwrite
</UL><P><STRONG><a name="[9b5ead8]"></a>fs_fat_check_in_sec</STRONG> (ARM, 32 bytes, Stack size 0 bytes, WBFAT_SECTOR_CACHE.o(i.fs_fat_check_in_sec))
<BR>[Called By]<UL><LI><a href="#[9b5ebcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_read_fat_table
<LI><a href="#[9b5ea60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_write_fat_table
</UL><P><STRONG><a name="[9b5eb50]"></a>fs_fat_check_out_sec</STRONG> (ARM, 92 bytes, Stack size 24 bytes, WBFAT_SECTOR_CACHE.o(i.fs_fat_check_out_sec))
<BR><BR>[Calls]<UL><LI><a href="#[88f5948]">&gt&gt</a>&nbsp;&nbsp;&nbsp;check_out_fat_sector
<LI><a href="#[9b7fec0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_flush_sector_cache
</UL><BR>[Called By]<UL><LI><a href="#[9b5ebcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_read_fat_table
<LI><a href="#[9b5ea60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_write_fat_table
</UL><P><STRONG><a name="[9b5e6a8]"></a>fs_fat_create_file</STRONG> (ARM, 1008 bytes, Stack size 1160 bytes, WBFAT_LDISK.o(i.fs_fat_create_file))
<BR><BR>[Calls]<UL><LI><a href="#[9b5e264]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeCopyStr
<LI><a href="#[889f558]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsTruncatePath
<LI><a href="#[9baf2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsOpenFile
<LI><a href="#[9baf7d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsHandleToDescriptor
<LI><a href="#[887ad50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeStrLen
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[88a1160]">&gt&gt</a>&nbsp;&nbsp;&nbsp;generate_short_name
<LI><a href="#[88a10e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_free_dir_entry
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[889f3ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_set_sdir_name
<LI><a href="#[88a1074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_sdir_chksum
<LI><a href="#[9baf1e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsWriteFile
<LI><a href="#[88a0ffc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;build_ldir_entry
<LI><a href="#[9b5e5b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_set_dire_mtime
<LI><a href="#[889f370]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_dire_info
<LI><a href="#[9baf108]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsFileSeek
<LI><a href="#[9b5e798]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_sdiv
<LI><a href="#[9b5e808]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_srdv
<LI><a href="#[9baf3ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsCloseFile
<LI><a href="#[765d82c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_flush_iow_cache
</UL><BR>[Called By]<UL><LI><a href="#[9b64168]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fopen
</UL><P><STRONG><a name="[889f5cc]"></a>fs_fat_delete_file</STRONG> (ARM, 728 bytes, Stack size 2160 bytes, WBFAT_LDISK.o(i.fs_fat_delete_file))
<BR><BR>[Calls]<UL><LI><a href="#[9b5e264]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeCopyStr
<LI><a href="#[889f558]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsTruncatePath
<LI><a href="#[9baf2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsOpenFile
<LI><a href="#[9baf7d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsHandleToDescriptor
<LI><a href="#[9baf3ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsCloseFile
<LI><a href="#[9baf108]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsFileSeek
<LI><a href="#[9b5e4c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_next_dir_entry
<LI><a href="#[9b5e354]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_sdir_name
<LI><a href="#[9b5e2dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsAsciiToUnicode
<LI><a href="#[9baf664]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeNonCaseCompare
<LI><a href="#[887aaf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsAsciiNonCaseCompare
<LI><a href="#[9baee50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsGetFilePosition
<LI><a href="#[88a17f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;check_dir_empty
<LI><a href="#[9baf258]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsReadFile
<LI><a href="#[9baf1e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsWriteFile
<LI><a href="#[9b5e878]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_reclaim_clusters
<LI><a href="#[765d82c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_flush_iow_cache
</UL><BR>[Called By]<UL><LI><a href="#[88a3780]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_delfile
<LI><a href="#[88a36a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_rmdir
</UL><P><STRONG><a name="[9b7fec0]"></a>fs_fat_flush_sector_cache</STRONG> (ARM, 368 bytes, Stack size 56 bytes, WBFAT_SECTOR_CACHE.o(i.fs_fat_flush_sector_cache))
<BR><BR>[Calls]<UL><LI><a href="#[765d64c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsIOWrite
<LI><a href="#[765d82c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_flush_iow_cache
</UL><BR>[Called By]<UL><LI><a href="#[9b6401c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fclose
<LI><a href="#[9b64168]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fopen
<LI><a href="#[9b63fac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fsizing
<LI><a href="#[9b5e968]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_allocate_cluster
<LI><a href="#[9b5eb50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_check_out_sec
<LI><a href="#[9b5e878]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_reclaim_clusters
</UL><P><STRONG><a name="[889f370]"></a>fs_fat_get_dire_info</STRONG> (ARM, 196 bytes, Stack size 16 bytes, WBFAT_DIR.o(i.fs_fat_get_dire_info))
<BR><BR>[Calls]<UL><LI><a href="#[9b5e354]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_sdir_name
</UL><BR>[Called By]<UL><LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[88fe6a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_directroy
<LI><a href="#[88fe620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_fat16_root
</UL><P><STRONG><a name="[9b5e444]"></a>fs_fat_get_ldir_name</STRONG> (ARM, 172 bytes, Stack size 40 bytes, WBFAT_DIR.o(i.fs_fat_get_ldir_name))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[887ad50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeStrLen
</UL><BR>[Called By]<UL><LI><a href="#[9b5e4c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_next_dir_entry
<LI><a href="#[88fe6a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_directroy
<LI><a href="#[88fe620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_fat16_root
</UL><P><STRONG><a name="[9b5e4c0]"></a>fs_fat_get_next_dir_entry</STRONG> (ARM, 244 bytes, Stack size 40 bytes, WBFAT_FOP.o(i.fs_fat_get_next_dir_entry))
<BR><BR>[Calls]<UL><LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[9b640fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fread
<LI><a href="#[9b5e444]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_ldir_name
</UL><BR>[Called By]<UL><LI><a href="#[9b5f45c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_file
<LI><a href="#[889f5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_delete_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
<LI><a href="#[88a1160]">&lt&lt</a>&nbsp;&nbsp;&nbsp;generate_short_name
</UL><P><STRONG><a name="[9b5e354]"></a>fs_fat_get_sdir_name</STRONG> (ARM, 152 bytes, Stack size 16 bytes, WBFAT_DIR.o(i.fs_fat_get_sdir_name))
<BR><BR>[Calls]<UL><LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4fc219c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
</UL><BR>[Called By]<UL><LI><a href="#[9b5f45c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_file
<LI><a href="#[889f5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_delete_file
<LI><a href="#[889f370]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_dire_info
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
<LI><a href="#[88a1160]">&lt&lt</a>&nbsp;&nbsp;&nbsp;generate_short_name
<LI><a href="#[88fe6a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_directroy
<LI><a href="#[88fe620]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_fat16_root
</UL><P><STRONG><a name="[9b7fdc4]"></a>fs_fat_parse_partition</STRONG> (ARM, 980 bytes, Stack size 656 bytes, WBFAT_LDISK.o(i.fs_fat_parse_partition))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[9b7fb54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsAllocateSector
<LI><a href="#[765d568]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsIORead
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9b80034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsAllocateDisk
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[9b7ffbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsMountLogicalDisk
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[9b7fae0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsFreeSector
</UL><BR>[Called By]<UL><LI><a href="#[7648cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsPhysicalDiskConnected
<LI><a href="#[9b80d8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_partition_records
</UL><P><STRONG><a name="[9b5e878]"></a>fs_fat_reclaim_clusters</STRONG> (ARM, 184 bytes, Stack size 24 bytes, WBFAT_FOP.o(i.fs_fat_reclaim_clusters))
<BR><BR>[Calls]<UL><LI><a href="#[9b5e8f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read_fs_info
<LI><a href="#[9b5ebcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_read_fat_table
<LI><a href="#[9b5ea60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_write_fat_table
<LI><a href="#[9b7fec0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_flush_sector_cache
</UL><BR>[Called By]<UL><LI><a href="#[9b64168]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fopen
<LI><a href="#[9b63fac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fsizing
<LI><a href="#[889f5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_delete_file
</UL><P><STRONG><a name="[889f2f8]"></a>fs_fat_rename_file</STRONG> (ARM, 1208 bytes, Stack size 2736 bytes, WBFAT_LDISK.o(i.fs_fat_rename_file))
<BR><BR>[Calls]<UL><LI><a href="#[9b5e264]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeCopyStr
<LI><a href="#[889f558]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsTruncatePath
<LI><a href="#[9baf2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsOpenFile
<LI><a href="#[9baf7d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsHandleToDescriptor
<LI><a href="#[9baf664]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeNonCaseCompare
<LI><a href="#[9baf3ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsCloseFile
<LI><a href="#[9baf108]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsFileSeek
<LI><a href="#[9b5e4c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_next_dir_entry
<LI><a href="#[9b5e354]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_sdir_name
<LI><a href="#[9b5e2dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsAsciiToUnicode
<LI><a href="#[887aaf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsAsciiNonCaseCompare
<LI><a href="#[9baee50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsGetFilePosition
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[9baf258]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsReadFile
<LI><a href="#[9baf1e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsWriteFile
<LI><a href="#[887ad50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeStrLen
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[88a1160]">&gt&gt</a>&nbsp;&nbsp;&nbsp;generate_short_name
<LI><a href="#[88a10e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_free_dir_entry
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[889f3ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_set_sdir_name
<LI><a href="#[88a1074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_sdir_chksum
<LI><a href="#[88a0ffc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;build_ldir_entry
<LI><a href="#[9b5e5b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_set_dire_mtime
<LI><a href="#[765d82c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_flush_iow_cache
</UL><BR>[Called By]<UL><LI><a href="#[88a363c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_move
</UL><P><STRONG><a name="[9b5e720]"></a>fs_fat_search_file</STRONG> (ARM, 528 bytes, Stack size 1648 bytes, WBFAT_DIR.o(i.fs_fat_search_file))
<BR><BR>[Calls]<UL><LI><a href="#[9b5e264]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeCopyStr
<LI><a href="#[887abe8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeToUpperCase
<LI><a href="#[887ad50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeStrLen
<LI><a href="#[887adc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeToAscii
<LI><a href="#[889f6b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lname_to_sname
<LI><a href="#[88fe6a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;search_file_in_directroy
<LI><a href="#[88fe620]">&gt&gt</a>&nbsp;&nbsp;&nbsp;search_file_in_fat16_root
</UL><BR>[Called By]<UL><LI><a href="#[9b64168]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fopen
</UL><P><STRONG><a name="[9b5e62c]"></a>fs_fat_set_dire_info</STRONG> (ARM, 328 bytes, Stack size 16 bytes, WBFAT_DIR.o(i.fs_fat_set_dire_info))
<BR><BR>[Calls]<UL><LI><a href="#[889f3ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_set_sdir_name
</UL><BR>[Called By]<UL><LI><a href="#[9b6401c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fclose
<LI><a href="#[9b63e60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fset_stat
</UL><P><STRONG><a name="[9b5e5b0]"></a>fs_fat_set_dire_mtime</STRONG> (ARM, 260 bytes, Stack size 32 bytes, WBFAT_DIR.o(i.fs_fat_set_dire_mtime))
<BR><BR>[Calls]<UL><LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[544d544]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gmtime_r
</UL><BR>[Called By]<UL><LI><a href="#[9b6401c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fclose
<LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
</UL><P><STRONG><a name="[889f3ec]"></a>fs_fat_set_sdir_name</STRONG> (ARM, 132 bytes, Stack size 16 bytes, WBFAT_DIR.o(i.fs_fat_set_sdir_name))
<BR><BR>[Calls]<UL><LI><a href="#[4ced1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memset
</UL><BR>[Called By]<UL><LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
<LI><a href="#[9b5e62c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_set_dire_info
</UL><P><STRONG><a name="[765d82c]"></a>fs_flush_iow_cache</STRONG> (ARM, 100 bytes, Stack size 16 bytes, WBFAT_IO.o(i.fs_flush_iow_cache))
<BR><BR>[Calls]<UL><LI><a href="#[765d7b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsCheckDriverPointer
</UL><BR>[Called By]<UL><LI><a href="#[9b6401c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fclose
<LI><a href="#[88a3714]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_mkdir
<LI><a href="#[765d568]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsIORead
<LI><a href="#[765d64c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsIOWrite
<LI><a href="#[9b5e968]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_allocate_cluster
<LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[889f5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_delete_file
<LI><a href="#[9b7fec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_flush_sector_cache
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
</UL><P><STRONG><a name="[9b5ebcc]"></a>fs_read_fat_table</STRONG> (ARM, 348 bytes, Stack size 32 bytes, WBFAT_FOP.o(i.fs_read_fat_table))
<BR><BR>[Calls]<UL><LI><a href="#[9b5eb50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_check_out_sec
<LI><a href="#[9b5ead8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_check_in_sec
</UL><BR>[Called By]<UL><LI><a href="#[9b64168]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fopen
<LI><a href="#[9b640fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fread
<LI><a href="#[9b63f40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fseek
<LI><a href="#[9b63fac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fsizing
<LI><a href="#[9b6408c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fwrite
<LI><a href="#[9b5e968]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_allocate_cluster
<LI><a href="#[9b5e878]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_reclaim_clusters
<LI><a href="#[88fe6a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;search_file_in_directroy
</UL><P><STRONG><a name="[9b5e9e4]"></a>fs_update_first_cluster</STRONG> (ARM, 172 bytes, Stack size 24 bytes, WBFAT_FOP.o(i.fs_update_first_cluster))
<BR><BR>[Calls]<UL><LI><a href="#[9b7fb54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsAllocateSector
<LI><a href="#[765d568]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsIORead
<LI><a href="#[9b7fae0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsFreeSector
<LI><a href="#[765d64c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsIOWrite
</UL><BR>[Called By]<UL><LI><a href="#[9b64168]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fopen
<LI><a href="#[9b63fac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fsizing
<LI><a href="#[9b5e968]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_allocate_cluster
</UL><P><STRONG><a name="[9b5ea60]"></a>fs_write_fat_table</STRONG> (ARM, 560 bytes, Stack size 48 bytes, WBFAT_FOP.o(i.fs_write_fat_table))
<BR><BR>[Calls]<UL><LI><a href="#[9b5eb50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_check_out_sec
<LI><a href="#[9b5ead8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_check_in_sec
</UL><BR>[Called By]<UL><LI><a href="#[9b63fac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fsizing
<LI><a href="#[9b5e968]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_allocate_cluster
<LI><a href="#[9b5e878]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_reclaim_clusters
</UL><P><STRONG><a name="[8cc5228]"></a>gainQuant</STRONG> (ARM, 900 bytes, Stack size 176 bytes, gain_q.o(i.gainQuant))
<BR><BR>[Calls]<UL><LI><a href="#[8de35b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred_copy
<LI><a href="#[8d93fdc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred
<LI><a href="#[8de353c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;calc_filt_energies
<LI><a href="#[8de34c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;calc_target_energy
<LI><a href="#[8de3448]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MR475_update_unq_pred
<LI><a href="#[8de33d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MR475_gain_quant
<LI><a href="#[8de3364]">&gt&gt</a>&nbsp;&nbsp;&nbsp;G_code
<LI><a href="#[8de32f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;q_gain_code
<LI><a href="#[8de327c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MR795_gain_quant
<LI><a href="#[8de320c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Qua_gain
<LI><a href="#[8d93efc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred_update
</UL><BR>[Called By]<UL><LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
</UL><P><STRONG><a name="[8cc5e00]"></a>gainQuant_exit</STRONG> (ARM, 72 bytes, Stack size 8 bytes, gain_q.o(i.gainQuant_exit))
<BR><BR>[Calls]<UL><LI><a href="#[8cd764c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred_exit
<LI><a href="#[8de369c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gain_adapt_exit
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[88869ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_exit
</UL><P><STRONG><a name="[8cc5a70]"></a>gainQuant_init</STRONG> (ARM, 304 bytes, Stack size 24 bytes, gain_q.o(i.gainQuant_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[8cd722c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred_init
<LI><a href="#[8de3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gain_adapt_init
<LI><a href="#[8cd764c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred_exit
<LI><a href="#[8de369c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gain_adapt_exit
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8cc62e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Set_zero
<LI><a href="#[8cd797c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred_reset
<LI><a href="#[8de3710]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gain_adapt_reset
</UL><BR>[Called By]<UL><LI><a href="#[88868c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_init
</UL><P><STRONG><a name="[8cc6120]"></a>gainQuant_reset</STRONG> (ARM, 96 bytes, Stack size 16 bytes, gain_q.o(i.gainQuant_reset))
<BR><BR>[Calls]<UL><LI><a href="#[8cc62e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Set_zero
<LI><a href="#[8cd797c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred_reset
<LI><a href="#[8de3710]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gain_adapt_reset
</UL><BR>[Called By]<UL><LI><a href="#[8886a98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_reset
</UL><P><STRONG><a name="[8eb2f38]"></a>gain_adapt</STRONG> (ARM, 296 bytes, Stack size 24 bytes, g_adapt.o(i.gain_adapt))
<BR><BR>[Calls]<UL><LI><a href="#[8d66ae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gmed_n
</UL><BR>[Called By]<UL><LI><a href="#[8de327c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR795_gain_quant
</UL><P><STRONG><a name="[8de369c]"></a>gain_adapt_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, g_adapt.o(i.gain_adapt_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[8cc5e00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant_exit
<LI><a href="#[8cc5a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant_init
</UL><P><STRONG><a name="[8de3628]"></a>gain_adapt_init</STRONG> (ARM, 104 bytes, Stack size 16 bytes, g_adapt.o(i.gain_adapt_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[8cc5a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant_init
</UL><P><STRONG><a name="[8de3710]"></a>gain_adapt_reset</STRONG> (ARM, 68 bytes, Stack size 0 bytes, g_adapt.o(i.gain_adapt_reset))
<BR>[Called By]<UL><LI><a href="#[8cc5a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant_init
<LI><a href="#[8cc6120]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant_reset
</UL><P><STRONG><a name="[8d93fdc]"></a>gc_pred</STRONG> (ARM, 552 bytes, Stack size 48 bytes, gc_pred.o(i.gc_pred))
<BR><BR>[Calls]<UL><LI><a href="#[8d99304]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Log2
<LI><a href="#[8dda47c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_Comp
<LI><a href="#[8cdefa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_Extract
<LI><a href="#[8d461d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;norm_l
<LI><a href="#[8dda40c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Log2_norm
</UL><BR>[Called By]<UL><LI><a href="#[8cd666c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Dec_gain
<LI><a href="#[8de33d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR475_gain_quant
<LI><a href="#[8cd6510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;d_gain_code
<LI><a href="#[8cc5228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant
</UL><P><STRONG><a name="[8dd3678]"></a>gc_pred_average_limited</STRONG> (ARM, 164 bytes, Stack size 4 bytes, gc_pred.o(i.gc_pred_average_limited))
<BR>[Called By]<UL><LI><a href="#[8cd65f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ec_gain_code
</UL><P><STRONG><a name="[8de35b4]"></a>gc_pred_copy</STRONG> (ARM, 68 bytes, Stack size 0 bytes, gc_pred.o(i.gc_pred_copy))
<BR>[Called By]<UL><LI><a href="#[8cc5228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant
</UL><P><STRONG><a name="[8cd764c]"></a>gc_pred_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, gc_pred.o(i.gc_pred_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[886ef44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_exit
<LI><a href="#[8cc5e00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant_exit
<LI><a href="#[8cc5a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant_init
</UL><P><STRONG><a name="[8cd722c]"></a>gc_pred_init</STRONG> (ARM, 100 bytes, Stack size 8 bytes, gc_pred.o(i.gc_pred_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[886eddc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_init
<LI><a href="#[8cc5a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant_init
</UL><P><STRONG><a name="[8cd797c]"></a>gc_pred_reset</STRONG> (ARM, 64 bytes, Stack size 0 bytes, gc_pred.o(i.gc_pred_reset))
<BR>[Called By]<UL><LI><a href="#[886f0ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_reset
<LI><a href="#[8cc5a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant_init
<LI><a href="#[8cc6120]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant_reset
</UL><P><STRONG><a name="[8d93efc]"></a>gc_pred_update</STRONG> (ARM, 60 bytes, Stack size 4 bytes, gc_pred.o(i.gc_pred_update))
<BR>[Called By]<UL><LI><a href="#[8cd666c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Dec_gain
<LI><a href="#[8f0f0c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR475_quant_store_results
<LI><a href="#[8de3448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR475_update_unq_pred
<LI><a href="#[8cd6510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;d_gain_code
<LI><a href="#[8cd65f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ec_gain_code
<LI><a href="#[8cc5228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant
</UL><P><STRONG><a name="[57e7cf8]"></a>gcd</STRONG> (ARM, 88 bytes, Stack size 16 bytes, Upload.o(i.gcd))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[57e90dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MPClean
</UL><P><STRONG><a name="[7a37b00]"></a>gena_connect_notify</STRONG> (ARM, 112 bytes, Stack size 32 bytes, upnp.o(i.gena_connect_notify))
<BR><BR>[Calls]<UL><LI><a href="#[50a2590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;accept
</UL><BR>[Called By]<UL><LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[7a37b78]"></a>gena_recv_notify</STRONG> (ARM, 448 bytes, Stack size 40 bytes, upnp.o(i.gena_recv_notify))
<BR><BR>[Calls]<UL><LI><a href="#[50a236c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;recv
<LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[50a2294]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[7a3d390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;XML_Analysis
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
</UL><BR>[Called By]<UL><LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[7a37cb0]"></a>gena_recv_response</STRONG> (ARM, 392 bytes, Stack size 24 bytes, upnp.o(i.gena_recv_response))
<BR><BR>[Calls]<UL><LI><a href="#[50a236c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;recv
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4fc2130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[7a37bf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL><BR>[Called By]<UL><LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[7a37d28]"></a>gena_send_subscribe</STRONG> (ARM, 448 bytes, Stack size 72 bytes, upnp.o(i.gena_send_subscribe))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4cece7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_ntoa
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[50a2524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[50a2294]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send
</UL><BR>[Called By]<UL><LI><a href="#[7a3a280]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_xml
<LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[71ed450]"></a>getIPInfo</STRONG> (ARM, 268 bytes, Stack size 96 bytes, vp_com.o(i.getIPInfo))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4eaabc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlGetIP
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[71edf68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdripSettingStru
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[71f3fe8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBWrite_Again
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
</UL><P><STRONG><a name="[49dbc10]"></a>getMem</STRONG> (ARM, 80 bytes, Stack size 16 bytes, memmgmt.o(i.getMem))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[5950818]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_mail_mem
<LI><a href="#[817fc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_rtsp_mem
</UL><P><STRONG><a name="[9b26668]"></a>get_block_address</STRONG> (ARM, 652 bytes, Stack size 40 bytes, sm_l2p.o(i.get_block_address))
<BR><BR>[Calls]<UL><LI><a href="#[760e560]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Reset
</UL><BR>[Called By]<UL><LI><a href="#[9b265f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiCheckBlock
<LI><a href="#[7648eb4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_L2PTable_Init
</UL><P><STRONG><a name="[9b26498]"></a>get_block_data</STRONG> (ARM, 232 bytes, Stack size 32 bytes, sm_l2p.o(i.get_block_data))
<BR><BR>[Calls]<UL><LI><a href="#[7648eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_L2PTable_Init
<LI><a href="#[760e1b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read_512
<LI><a href="#[9b2650c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_page_data
</UL><BR>[Called By]<UL><LI><a href="#[76492e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read
</UL><P><STRONG><a name="[7a37a24]"></a>get_cmd</STRONG> (ARM, 60 bytes, Stack size 8 bytes, upnp.o(i.get_cmd))
<BR><BR>[Calls]<UL><LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
</UL><BR>[Called By]<UL><LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[4f75c1c]"></a>get_current_rovio_state</STRONG> (ARM, 40 bytes, Stack size 16 bytes, er_ns_nav.o(i.get_current_rovio_state))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4fe1a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drive_rovio_manually
<LI><a href="#[4fc24d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_report
<LI><a href="#[4fc23e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_abort_recording
<LI><a href="#[4fc1fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_pause
<LI><a href="#[4fe163c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_reset_home
<LI><a href="#[4fc20bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_start_play
<LI><a href="#[4fc2458]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_start_recording
<LI><a href="#[4fc2044]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_stop_playing
<LI><a href="#[4fe1c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_store_home
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
<LI><a href="#[4fc1ef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;smc_go_home
<LI><a href="#[4fc1e78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;smc_go_home_and_dock
</UL><P><STRONG><a name="[8335700]"></a>get_distance_between_waypoints</STRONG> (ARM, 92 bytes, Stack size 16 bytes, waypoint-outlier-rejector-using-dist.o(i.get_distance_between_waypoints))
<BR><BR>[Calls]<UL><LI><a href="#[4f73e2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[4db4ca4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[5a878e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[4f74828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[4f74240]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__softfp_sqrt
<LI><a href="#[4f74894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_d2f
</UL><BR>[Called By]<UL><LI><a href="#[8335678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;compute_neighboring_wp_distances
</UL><P><STRONG><a name="[4fe17a4]"></a>get_flash_parameter</STRONG> (ARM, 64 bytes, Stack size 0 bytes, er_cgi_thread_routines.o(i.get_flash_parameter))
<BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[9b26580]"></a>get_free_block</STRONG> (ARM, 104 bytes, Stack size 16 bytes, sm_l2p.o(i.get_free_block))
<BR><BR>[Calls]<UL><LI><a href="#[760e474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_BlockErase
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[9b26334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data
<LI><a href="#[9b262b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data_2K
</UL><P><STRONG><a name="[7843aa0]"></a>get_header</STRONG> (ARM, 80 bytes, Stack size 16 bytes, pmsg.o(i.get_header))
<BR><BR>[Calls]<UL><LI><a href="#[4def4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL><BR>[Called By]<UL><LI><a href="#[7843b10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_digest_response
<LI><a href="#[80eb59c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_DESCRIBE
<LI><a href="#[80eb4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_PLAY
<LI><a href="#[80eb528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_SETUP
<LI><a href="#[80eb444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_TEARDOWN
<LI><a href="#[81800a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_unknown
<LI><a href="#[80eb610]">&lt&lt</a>&nbsp;&nbsp;&nbsp;log_request
<LI><a href="#[8119448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_handle_msg
</UL><P><STRONG><a name="[4fc2364]"></a>get_http_param_string</STRONG> (ARM, 40 bytes, Stack size 16 bytes, er_ns_ipcam_wrapper.o(i.get_http_param_string))
<BR><BR>[Calls]<UL><LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4e4d3a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetString
</UL><BR>[Called By]<UL><LI><a href="#[4fe1a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drive_rovio_manually
<LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
<LI><a href="#[4fe1bd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_tuning_parameters
<LI><a href="#[4fe19f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;test_rovio_hardware
</UL><P><STRONG><a name="[5950818]"></a>get_mail_mem</STRONG> (ARM, 68 bytes, Stack size 16 bytes, libmail.o(i.get_mail_mem))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getMem
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[57b6f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DO_TestSendMailFile
</UL><P><STRONG><a name="[4e4a648]"></a>get_mailmem_size</STRONG> (ARM, 20 bytes, Stack size 0 bytes, libmail.o(i.get_mailmem_size))
<BR>[Called By]<UL><LI><a href="#[4e4a6c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetOtherThread
</UL><P><STRONG><a name="[4f734cc]"></a>get_mcu_report</STRONG> (ARM, 220 bytes, Stack size 48 bytes, er_mcu_cmds.o(i.get_mcu_report))
<BR><BR>[Calls]<UL><LI><a href="#[5a87b9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcu_send_cmd
</UL><BR>[Called By]<UL><LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
</UL><P><STRONG><a name="[4fe1984]"></a>get_mcu_status</STRONG> (ARM, 124 bytes, Stack size 32 bytes, er_mcu_cmds.o(i.get_mcu_status))
<BR><BR>[Calls]<UL><LI><a href="#[5a87b9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcu_send_cmd
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[5967258]"></a>get_mime_hash_value</STRONG> (ARM, 52 bytes, Stack size 8 bytes, hash.o(i.get_mime_hash_value))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[778712c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_mime_type
<LI><a href="#[772e120]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_mime_type
</UL><P><STRONG><a name="[772e120]"></a>get_mime_type</STRONG> (ARM, 168 bytes, Stack size 16 bytes, hash.o(i.get_mime_type))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[743afd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strrchr
<LI><a href="#[5967258]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_mime_hash_value
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
</UL><BR>[Called By]<UL><LI><a href="#[772e194]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_WebFile
<LI><a href="#[81f9414]">&lt&lt</a>&nbsp;&nbsp;&nbsp;print_content_type
</UL><P><STRONG><a name="[780ff60]"></a>get_next_frame</STRONG> (ARM, 128 bytes, Stack size 24 bytes, frame.o(i.get_next_frame))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4c2bf24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_wait
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[895355c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mpeg4_loop
<LI><a href="#[7810048]">&lt&lt</a>&nbsp;&nbsp;&nbsp;v4l_loop
</UL><P><STRONG><a name="[7f3e3f0]"></a>get_next_token</STRONG> (ARM, 32 bytes, Stack size 16 bytes, conf_scan.o(i.get_next_token))
<BR><BR>[Calls]<UL><LI><a href="#[81996ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;yylex
</UL><BR>[Called By]<UL><LI><a href="#[7f3e4d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_config_file
</UL><P><STRONG><a name="[4fe15c4]"></a>get_ns_build_info</STRONG> (ARM, 40 bytes, Stack size 8 bytes, er_cgi_thread_routines.o(i.get_ns_build_info))
<BR><BR>[Calls]<UL><LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[4f74fa8]"></a>get_ns_serial_number_and_fw_timestamp</STRONG> (ARM, 168 bytes, Stack size 24 bytes, er_ns_nav.o(i.get_ns_serial_number_and_fw_timestamp))
<BR><BR>[Calls]<UL><LI><a href="#[4f74f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_get_serial_number
<LI><a href="#[4f75930]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dprint_to_socket
<LI><a href="#[4f74eac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_get_firmware_timestamp
</UL><BR>[Called By]<UL><LI><a href="#[4f77e9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_nav_thread
</UL><P><STRONG><a name="[4fe1730]"></a>get_ns_version</STRONG> (ARM, 60 bytes, Stack size 24 bytes, er_cgi_thread_routines.o(i.get_ns_version))
<BR><BR>[Calls]<UL><LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4fc219c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcat
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[9b2650c]"></a>get_page_data</STRONG> (ARM, 64 bytes, Stack size 8 bytes, sm_l2p.o(i.get_page_data))
<BR><BR>[Calls]<UL><LI><a href="#[760df70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read_2K
<LI><a href="#[760dfe4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read_1
</UL><BR>[Called By]<UL><LI><a href="#[9b26498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_block_data
</UL><P><STRONG><a name="[5ad0b64]"></a>get_path_waypoints_after_clustering</STRONG> (ARM, 480 bytes, Stack size 40 bytes, waypoint-outlier-rejector.o(i.get_path_waypoints_after_clustering))
<BR><BR>[Calls]<UL><LI><a href="#[4f75930]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dprint_to_socket
<LI><a href="#[4db4f54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fflt
<LI><a href="#[4db4ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_frdiv
<LI><a href="#[4db4ca4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[82cae94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ffixu
</UL><BR>[Called By]<UL><LI><a href="#[4fc22ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_stop_and_save
</UL><P><STRONG><a name="[77e7220]"></a>get_pklost_ratio</STRONG> (ARM, 140 bytes, Stack size 40 bytes, session.o(i.get_pklost_ratio))
<BR>[Called By]<UL><LI><a href="#[77e8d74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_rtcp_read
</UL><P><STRONG><a name="[59abd68]"></a>get_potential_next_room_mag</STRONG> (ARM, 12 bytes, Stack size 0 bytes, ns-room-monitor.o(i.get_potential_next_room_mag))
<BR>[Called By]<UL><LI><a href="#[4fc24d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_report
</UL><P><STRONG><a name="[4fc24d0]"></a>get_report</STRONG> (ARM, 424 bytes, Stack size 160 bytes, er_cgi_thread_routines.o(i.get_report))
<BR><BR>[Calls]<UL><LI><a href="#[4f75c1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_current_rovio_state
<LI><a href="#[4f7569c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_get_potential_next_room
<LI><a href="#[59abd68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_potential_next_room_mag
<LI><a href="#[562be84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetRunTimeState
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[562bef8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetWiFiStrength
<LI><a href="#[4f74828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[7317d5c]"></a>get_request</STRONG> (ARM, 4 bytes, Stack size 0 bytes, request.o(i.get_request))
<BR><BR>[Calls]<UL><LI><a href="#[77ac634]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_sock_request
</UL><BR>[Called By]<UL><LI><a href="#[73180f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpdStartEx3
</UL><P><STRONG><a name="[4f74058]"></a>get_rovio_head_position</STRONG> (ARM, 60 bytes, Stack size 0 bytes, er_mcu_cmds.o(i.get_rovio_head_position))
<BR>[Called By]<UL><LI><a href="#[4fe1a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drive_rovio_manually
<LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
<LI><a href="#[4f73718]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_record_waypoint
<LI><a href="#[4f740d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_replay_path_between_rooms
<LI><a href="#[4fc22ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_stop_and_save
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
<LI><a href="#[4fe16b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;store_image_capture_action
</UL><P><STRONG><a name="[4fe1894]"></a>get_rovio_state</STRONG> (ARM, 12 bytes, Stack size 0 bytes, er_cgi_thread_routines.o(i.get_rovio_state))
<BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[817fc18]"></a>get_rtsp_mem</STRONG> (ARM, 52 bytes, Stack size 8 bytes, tcp.o(i.get_rtsp_mem))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getMem
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[8180324]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_accept
</UL><P><STRONG><a name="[56dbae4]"></a>get_rtspmem_size</STRONG> (ARM, 20 bytes, Stack size 0 bytes, tcp.o(i.get_rtspmem_size))
<BR>[Called By]<UL><LI><a href="#[56dec34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Buffer_Assign
</UL><P><STRONG><a name="[56dbbd4]"></a>get_server_size</STRONG> (ARM, 8 bytes, Stack size 0 bytes, frame.o(i.get_server_size))
<BR>[Called By]<UL><LI><a href="#[56dec34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Buffer_Assign
</UL><P><STRONG><a name="[77ac634]"></a>get_sock_request</STRONG> (ARM, 560 bytes, Stack size 56 bytes, request.o(i.get_sock_request))
<BR><BR>[Calls]<UL><LI><a href="#[50a2590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;accept
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4ced344]">&gt&gt</a>&nbsp;&nbsp;&nbsp;setsockopt
<LI><a href="#[7318254]">&gt&gt</a>&nbsp;&nbsp;&nbsp;die
<LI><a href="#[77ac8f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_request
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[77ac5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;enqueue
</UL><BR>[Called By]<UL><LI><a href="#[7317d5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_request
</UL><P><STRONG><a name="[4fe1b5c]"></a>get_tuning_parameters</STRONG> (ARM, 84 bytes, Stack size 32 bytes, er_cgi_thread_routines.o(i.get_tuning_parameters))
<BR><BR>[Calls]<UL><LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[54d4780]"></a>gfxCloseEnv</STRONG> (ARM, 100 bytes, Stack size 0 bytes, closeenv.o(i.gfxCloseEnv))
<BR>[Called By]<UL><LI><a href="#[537edd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vgfxUnlock
</UL><P><STRONG><a name="[5355708]"></a>gfxFillSolidRect</STRONG> (ARM, 208 bytes, Stack size 24 bytes, solidfill.o(i.gfxFillSolidRect))
<BR><BR>[Calls]<UL><LI><a href="#[537ec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gfxWaitEngineReady
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[53581b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__lcmFillBuffer
<LI><a href="#[537dc3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gfxPutImage
</UL><P><STRONG><a name="[537eec0]"></a>gfxImageFilter</STRONG> (ARM, 208 bytes, Stack size 32 bytes, filter.o(i.gfxImageFilter))
<BR><BR>[Calls]<UL><LI><a href="#[537ec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gfxWaitEngineReady
</UL><BR>[Called By]<UL><LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
</UL><P><STRONG><a name="[5355bec]"></a>gfxMakeColor</STRONG> (ARM, 144 bytes, Stack size 4 bytes, makecolor.o(i.gfxMakeColor))
<BR>[Called By]<UL><LI><a href="#[5355c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmFillLCMBuffer
</UL><P><STRONG><a name="[558f728]"></a>gfxMemcpy</STRONG> (ARM, 124 bytes, Stack size 16 bytes, memcpy.o(i.gfxMemcpy))
<BR><BR>[Calls]<UL><LI><a href="#[537ec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gfxWaitEngineReady
</UL><BR>[Called By]<UL><LI><a href="#[558f798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702WriteOSD
</UL><P><STRONG><a name="[54d4710]"></a>gfxOpenEnv</STRONG> (ARM, 256 bytes, Stack size 8 bytes, openenv.o(i.gfxOpenEnv))
<BR><BR>[Calls]<UL><LI><a href="#[7e47fd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gfxInitGE
</UL><BR>[Called By]<UL><LI><a href="#[54d51f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vgfxAddRef
</UL><P><STRONG><a name="[537dc3c]"></a>gfxPutImage</STRONG> (ARM, 508 bytes, Stack size 48 bytes, putimage.o(i.gfxPutImage))
<BR><BR>[Calls]<UL><LI><a href="#[5355708]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gfxFillSolidRect
<LI><a href="#[537ec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gfxWaitEngineReady
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[5380228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vdRefreshLcm
</UL><P><STRONG><a name="[537dcac]"></a>gfxSetDestSurface</STRONG> (ARM, 96 bytes, Stack size 8 bytes, setdest.o(i.gfxSetDestSurface))
<BR><BR>[Calls]<UL><LI><a href="#[537ec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gfxWaitEngineReady
</UL><BR>[Called By]<UL><LI><a href="#[53581b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__lcmFillBuffer
<LI><a href="#[5380228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vdRefreshLcm
</UL><P><STRONG><a name="[537dd9c]"></a>gfxSetSrcSurface</STRONG> (ARM, 96 bytes, Stack size 8 bytes, setsrc.o(i.gfxSetSrcSurface))
<BR><BR>[Calls]<UL><LI><a href="#[537ec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gfxWaitEngineReady
</UL><BR>[Called By]<UL><LI><a href="#[5380228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vdRefreshLcm
</UL><P><STRONG><a name="[537ec70]"></a>gfxWaitEngineReady</STRONG> (ARM, 40 bytes, Stack size 0 bytes, waitready.o(i.gfxWaitEngineReady))
<BR>[Called By]<UL><LI><a href="#[5355708]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gfxFillSolidRect
<LI><a href="#[537eec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gfxImageFilter
<LI><a href="#[558f728]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gfxMemcpy
<LI><a href="#[537dc3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gfxPutImage
<LI><a href="#[537dcac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gfxSetDestSurface
<LI><a href="#[537dd9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gfxSetSrcSurface
<LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
</UL><P><STRONG><a name="[8d66ae8]"></a>gmed_n</STRONG> (ARM, 208 bytes, Stack size 64 bytes, gmed_n.o(i.gmed_n))
<BR>[Called By]<UL><LI><a href="#[8cd60b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Bgn_scd
<LI><a href="#[8cd6200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Ex_ctrl
<LI><a href="#[8e0e814]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pitch_ol_wgh
<LI><a href="#[8cd65f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ec_gain_code
<LI><a href="#[8cd6844]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ec_gain_pitch
<LI><a href="#[8eb2f38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gain_adapt
</UL><P><STRONG><a name="[821cf7c]"></a>gmtime</STRONG> (ARM, 24 bytes, Stack size 8 bytes, util.o(i.gmtime))
<BR><BR>[Calls]<UL><LI><a href="#[544d544]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gmtime_r
</UL><BR>[Called By]<UL><LI><a href="#[81f92ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_write_rfc822_time
</UL><P><STRONG><a name="[88fdd8c]"></a>gmtime_r</STRONG> (ARM, 400 bytes, Stack size 32 bytes, vp_info.o(i.gmtime_r), UNUSED)
<P><STRONG><a name="[80b0d6c]"></a>gmtime_r</STRONG> (ARM, 400 bytes, Stack size 32 bytes, vp_info.o(i.gmtime_r), UNUSED)
<P><STRONG><a name="[891db80]"></a>gmtime_r</STRONG> (ARM, 400 bytes, Stack size 32 bytes, vp_info.o(i.gmtime_r), UNUSED)
<P><STRONG><a name="[5a64bc8]"></a>gmtime_r</STRONG> (ARM, 400 bytes, Stack size 32 bytes, vp_info.o(i.gmtime_r), UNUSED)
<P><STRONG><a name="[55373a0]"></a>gmtime_r</STRONG> (ARM, 400 bytes, Stack size 32 bytes, vp_info.o(i.gmtime_r), UNUSED)
<P><STRONG><a name="[821ccd8]"></a>gmtime_r</STRONG> (ARM, 400 bytes, Stack size 32 bytes, vp_info.o(i.gmtime_r), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[544e3e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_libc_time_year_is_leap
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><P><STRONG><a name="[544d544]"></a>gmtime_r</STRONG> (ARM, 400 bytes, Stack size 32 bytes, vp_info.o(i.gmtime_r))
<BR>[Called By]<UL><LI><a href="#[55373f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetSystemTimeZone
<LI><a href="#[5775c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPDataToTime
<LI><a href="#[4e4a1d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetCheckedTime
<LI><a href="#[5a66654]">&lt&lt</a>&nbsp;&nbsp;&nbsp;buildTime
<LI><a href="#[9b5e5b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_set_dire_mtime
<LI><a href="#[821cf7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gmtime
<LI><a href="#[80b0f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;localtime_r
<LI><a href="#[5430f94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoBuildDate
<LI><a href="#[5431008]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoBuildTime
<LI><a href="#[811935c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;write_access_log
</UL><P><STRONG><a name="[5774200]"></a>gmtime_r</STRONG> (ARM, 400 bytes, Stack size 32 bytes, vp_info.o(i.gmtime_r), UNUSED)
<P><STRONG><a name="[7223998]"></a>gpio_dsr</STRONG> (ARM, 4 bytes, Stack size 0 bytes, fmi.o(i.gpio_dsr))
<BR><BR>[Calls]<UL><LI><a href="#[49f8754]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gpio_dsr_handle
</UL><BR>[Address Reference Count : 1]<UL><LI> fmi.o(i.fmiInstallGPIO)
</UL><P><STRONG><a name="[49f8754]"></a>gpio_dsr_handle</STRONG> (ARM, 96 bytes, Stack size 8 bytes, lib_patch.o(i.gpio_dsr_handle))
<BR><BR>[Calls]<UL><LI><a href="#[49f86dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBExceptionHandle
<LI><a href="#[49f866c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_usb_irq
<LI><a href="#[49f85ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Reset_Int_ISR_IPCam_Board
<LI><a href="#[49f8578]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_wifi_irq
<LI><a href="#[49f8508]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_mcu_irq
</UL><BR>[Called By]<UL><LI><a href="#[7223998]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gpio_dsr
</UL><P><STRONG><a name="[9c5ca58]"></a>hexstr2bin</STRONG> (ARM, 120 bytes, Stack size 32 bytes, common.o(i.hexstr2bin))
<BR><BR>[Calls]<UL><LI><a href="#[9c0d1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hex2num
</UL><BR>[Called By]<UL><LI><a href="#[9c68154]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_psk
<LI><a href="#[9c63ef8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_string
<LI><a href="#[8402700]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless_custom
<LI><a href="#[839b4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_scan_results
</UL><P><STRONG><a name="[4e4d668]"></a>hi_uart_log_read</STRONG> (ARM, 80 bytes, Stack size 4 bytes, LibIPCamera.o(i.hi_uart_log_read))
<BR>[Called By]<UL><LI><a href="#[860bb6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_serial_DSR
<LI><a href="#[860c8bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_serial_getc
</UL><P><STRONG><a name="[4bba2f4]"></a>hi_uart_log_stop</STRONG> (ARM, 16 bytes, Stack size 0 bytes, LibIPCamera.o(i.hi_uart_log_stop))
<BR>[Called By]<UL><LI><a href="#[4bba444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hi_uart_read
</UL><P><STRONG><a name="[4e4d5f0]"></a>hi_uart_log_write</STRONG> (ARM, 80 bytes, Stack size 4 bytes, LibIPCamera.o(i.hi_uart_log_write))
<BR>[Called By]<UL><LI><a href="#[860c934]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_serial_putc
</UL><P><STRONG><a name="[4bba444]"></a>hi_uart_read</STRONG> (ARM, 252 bytes, Stack size 80 bytes, uart_wrapper.o(i.hi_uart_read))
<BR><BR>[Calls]<UL><LI><a href="#[4bba590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;open
<LI><a href="#[4bba3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[4bba2f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hi_uart_log_stop
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[4f2b04c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_mcuRecv
</UL><P><STRONG><a name="[4bba5fc]"></a>hi_uart_write</STRONG> (ARM, 64 bytes, Stack size 16 bytes, uart_wrapper.o(i.hi_uart_write))
<BR><BR>[Calls]<UL><LI><a href="#[4bba590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;open
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[4f2afdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_mcuSend
</UL><P><STRONG><a name="[9cf67ac]"></a>hmac_md5</STRONG> (ARM, 40 bytes, Stack size 32 bytes, md5.o(i.hmac_md5))
<BR><BR>[Calls]<UL><LI><a href="#[89f6708]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hmac_md5_vector
</UL><BR>[Called By]<UL><LI><a href="#[83ed500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_processKey
<LI><a href="#[9cfc2bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_mic
</UL><P><STRONG><a name="[89f6708]"></a>hmac_md5_vector</STRONG> (ARM, 344 bytes, Stack size 168 bytes, md5.o(i.hmac_md5_vector))
<BR><BR>[Calls]<UL><LI><a href="#[89f677c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;md5_vector
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[9cf67ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hmac_md5
</UL><P><STRONG><a name="[9cf673c]"></a>hmac_sha1</STRONG> (ARM, 40 bytes, Stack size 32 bytes, sha1.o(i.hmac_sha1))
<BR><BR>[Calls]<UL><LI><a href="#[8354974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hmac_sha1_vector
</UL><BR>[Called By]<UL><LI><a href="#[8a10de4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1_f
<LI><a href="#[9cfc2bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_mic
</UL><P><STRONG><a name="[8354974]"></a>hmac_sha1_vector</STRONG> (ARM, 348 bytes, Stack size 176 bytes, sha1.o(i.hmac_sha1_vector))
<BR><BR>[Calls]<UL><LI><a href="#[8a100ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sha1_vector
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[9cf673c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hmac_sha1
<LI><a href="#[8a10de4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1_f
<LI><a href="#[9cf6560]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_add
<LI><a href="#[9cf681c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sha1_prf
</UL><P><STRONG><a name="[8e2218c]"></a>hp_max</STRONG> (ARM, 392 bytes, Stack size 24 bytes, hp_max.o(i.hp_max))
<BR><BR>[Calls]<UL><LI><a href="#[8d461d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;norm_l
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[8e0e888]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pitch_ol
<LI><a href="#[8e0e814]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pitch_ol_wgh
</UL><P><STRONG><a name="[4e49d40]"></a>httpAddBody</STRONG> (ARM, 176 bytes, Stack size 16 bytes, HttpServer.o(i.httpAddBody))
<BR><BR>[Calls]<UL><LI><a href="#[7404e10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[56dcec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillCameraData
<LI><a href="#[57e87cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillFirmwareData
<LI><a href="#[4e4ff50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillTestSpeedData
<LI><a href="#[58896dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillURLCGIData
<LI><a href="#[4e4c5bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendJpeg
<LI><a href="#[772e630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_WebFile_AddData
<LI><a href="#[4dee308]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpAddBodyString
<LI><a href="#[5927468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelSendData
</UL><P><STRONG><a name="[4dee308]"></a>httpAddBodyString</STRONG> (ARM, 40 bytes, Stack size 16 bytes, HttpServer.o(i.httpAddBodyString))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4e49d40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBody
</UL><BR>[Called By]<UL><LI><a href="#[553772c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DumpJsObj
<LI><a href="#[5537984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DumpJsVar
<LI><a href="#[55379f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Dump_HttpAdd
<LI><a href="#[56dcec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillCameraData
<LI><a href="#[58896dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillURLCGIData
<LI><a href="#[553b324]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTN
<LI><a href="#[7318604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_DumpCGI
<LI><a href="#[5536f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_PostDataGet
<LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[4e4a820]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendDesc
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
<LI><a href="#[55376b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReturnTypeEnd
<LI><a href="#[4dd31bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;onHttpReboot
</UL><P><STRONG><a name="[5536b50]"></a>httpAppendNode</STRONG> (ARM, 8 bytes, Stack size 0 bytes, C_List.o(i.httpAppendNode))
<BR><BR>[Calls]<UL><LI><a href="#[59c9118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpInsertNodeBefore
</UL><BR>[Called By]<UL><LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
<LI><a href="#[582d124]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PushMsgNode
<LI><a href="#[4e4a410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SelectThread
<LI><a href="#[5537260]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseString
<LI><a href="#[5537b50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSetString
<LI><a href="#[59c9c44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSplitString
</UL><P><STRONG><a name="[5537c38]"></a>httpAppendXML</STRONG> (ARM, 32 bytes, Stack size 0 bytes, C_String.o(i.httpAppendXML))
<BR><BR>[Calls]<UL><LI><a href="#[59cb84c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__InsertXML
</UL><BR>[Called By]<UL><LI><a href="#[4e4d1e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
<LI><a href="#[5537d20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AppendXMLArray
</UL><P><STRONG><a name="[4eab960]"></a>httpAuthDelUser</STRONG> (ARM, 68 bytes, Stack size 16 bytes, HttpServer.o(i.httpAuthDelUser))
<BR><BR>[Calls]<UL><LI><a href="#[59c9368]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDelDictParam
</UL><BR>[Called By]<UL><LI><a href="#[4e4da1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpAuthSetUser
<LI><a href="#[4eab9d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlDelUser
</UL><P><STRONG><a name="[4eabc1c]"></a>httpAuthGetUser</STRONG> (ARM, 176 bytes, Stack size 40 bytes, HttpServer.o(i.httpAuthGetUser))
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4def554]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpMyStrncpy
</UL><BR>[Called By]<UL><LI><a href="#[4e4c128]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUser
<LI><a href="#[4eab9d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlDelUser
<LI><a href="#[4eabc90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetUser
</UL><P><STRONG><a name="[4e4da1c]"></a>httpAuthSetUser</STRONG> (ARM, 140 bytes, Stack size 24 bytes, HttpServer.o(i.httpAuthSetUser))
<BR><BR>[Calls]<UL><LI><a href="#[4eab960]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAuthDelUser
<LI><a href="#[57e78cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpCreateDict
<LI><a href="#[5537b50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetString
</UL><BR>[Called By]<UL><LI><a href="#[4e4db78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetCameraParam
<LI><a href="#[4eabc90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetUser
</UL><P><STRONG><a name="[73184ac]"></a>httpBufInit</STRONG> (ARM, 292 bytes, Stack size 8 bytes, http_buffer.o(i.httpBufInit))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[755f3b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__memInit
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[4a54b44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpInitHashMemPool
</UL><P><STRONG><a name="[4deea94]"></a>httpChar2Hex</STRONG> (ARM, 60 bytes, Stack size 0 bytes, C_String.o(i.httpChar2Hex))
<BR>[Called By]<UL><LI><a href="#[4e4a894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ControlMCU
<LI><a href="#[4e4c3e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetLog
<LI><a href="#[4e4b5f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetMac
<LI><a href="#[4a560fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlMCU
<LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
</UL><P><STRONG><a name="[73181dc]"></a>httpClearEmbedFun</STRONG> (ARM, 68 bytes, Stack size 16 bytes, HttpServer.o(i.httpClearEmbedFun))
<BR><BR>[Calls]<UL><LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[59af87c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufEMBEDFUNDecRef
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[7318254]">&lt&lt</a>&nbsp;&nbsp;&nbsp;die
</UL><P><STRONG><a name="[57e78cc]"></a>httpCreateDict</STRONG> (ARM, 4 bytes, Stack size 0 bytes, C_String.o(i.httpCreateDict))
<BR><BR>[Calls]<UL><LI><a href="#[5536bc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpCreateList
</UL><BR>[Called By]<UL><LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[4e4da1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpAuthSetUser
</UL><P><STRONG><a name="[5536bc4]"></a>httpCreateList</STRONG> (ARM, 184 bytes, Stack size 24 bytes, C_List.o(i.httpCreateList))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[827e3f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufLISTNODENew
<LI><a href="#[827e37c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufLISTDecRef
</UL><BR>[Called By]<UL><LI><a href="#[4e4a484]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateMsgQueue
<LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
<LI><a href="#[4e4a410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SelectThread
<LI><a href="#[59c92f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__CreateXML
<LI><a href="#[57e78cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpCreateDict
<LI><a href="#[82a13f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseDescription
<LI><a href="#[825cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseDescriptionLine
<LI><a href="#[5537260]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseString
<LI><a href="#[5536c38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSplitBuffer
<LI><a href="#[59c9c44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSplitString
</UL><P><STRONG><a name="[5537cac]"></a>httpCreateXML</STRONG> (ARM, 8 bytes, Stack size 0 bytes, C_String.o(i.httpCreateXML))
<BR><BR>[Calls]<UL><LI><a href="#[59c92f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__CreateXML
</UL><BR>[Called By]<UL><LI><a href="#[5537d20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AppendXMLArray
<LI><a href="#[5537a68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReturnTypeBegin
</UL><P><STRONG><a name="[5537560]"></a>httpCreateXMLText</STRONG> (ARM, 8 bytes, Stack size 0 bytes, C_String.o(i.httpCreateXMLText))
<BR><BR>[Calls]<UL><LI><a href="#[59c92f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__CreateXML
</UL><BR>[Called By]<UL><LI><a href="#[4e4d1e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AddHttpValue
</UL><P><STRONG><a name="[59c9368]"></a>httpDelDictParam</STRONG> (ARM, 40 bytes, Stack size 8 bytes, C_String.o(i.httpDelDictParam))
<BR><BR>[Calls]<UL><LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[59c93e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DeleteNamedString
<LI><a href="#[57163bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteNode
</UL><BR>[Called By]<UL><LI><a href="#[4eab960]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpAuthDelUser
</UL><P><STRONG><a name="[5537818]"></a>httpDeleteCStyleString</STRONG> (ARM, 12 bytes, Stack size 0 bytes, C_String.o(i.httpDeleteCStyleString))
<BR><BR>[Calls]<UL><LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
</UL><BR>[Called By]<UL><LI><a href="#[553772c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DumpJsObj
<LI><a href="#[5537984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DumpJsVar
</UL><P><STRONG><a name="[82a1474]"></a>httpDeleteDescription</STRONG> (ARM, 60 bytes, Stack size 16 bytes, C_MultiPart.o(i.httpDeleteDescription))
<BR><BR>[Calls]<UL><LI><a href="#[825cb98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteDescriptionLine
<LI><a href="#[5536a60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteList
</UL><BR>[Called By]<UL><LI><a href="#[57e7aa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteSinglePart
<LI><a href="#[82a13f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseDescription
</UL><P><STRONG><a name="[825cb98]"></a>httpDeleteDescriptionLine</STRONG> (ARM, 176 bytes, Stack size 24 bytes, C_MultiPart.o(i.httpDeleteDescriptionLine))
<BR><BR>[Calls]<UL><LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[5536a60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteList
</UL><BR>[Called By]<UL><LI><a href="#[57e7940]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetBoundary
<LI><a href="#[82a1474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteDescription
<LI><a href="#[82a13f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseDescription
</UL><P><STRONG><a name="[57e77e4]"></a>httpDeleteDict</STRONG> (ARM, 52 bytes, Stack size 16 bytes, C_String.o(i.httpDeleteDict))
<BR><BR>[Calls]<UL><LI><a href="#[59c93e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DeleteNamedString
<LI><a href="#[5536a60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteList
</UL><BR>[Called By]<UL><LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[5537bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteXML
</UL><P><STRONG><a name="[5536a60]"></a>httpDeleteList</STRONG> (ARM, 56 bytes, Stack size 16 bytes, C_List.o(i.httpDeleteList))
<BR><BR>[Calls]<UL><LI><a href="#[827e304]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufLISTNODEDecRef
<LI><a href="#[827e37c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufLISTDecRef
</UL><BR>[Called By]<UL><LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
<LI><a href="#[4e4a410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SelectThread
<LI><a href="#[59c92f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__CreateXML
<LI><a href="#[82a1474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteDescription
<LI><a href="#[825cb98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteDescriptionLine
<LI><a href="#[57e77e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteDict
<LI><a href="#[55370e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteParseString
<LI><a href="#[5536ad4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteSplitBuffer
<LI><a href="#[59c9cb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteSplitString
<LI><a href="#[5537bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteXML
<LI><a href="#[82a13f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseDescription
<LI><a href="#[825cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseDescriptionLine
</UL><P><STRONG><a name="[57163bc]"></a>httpDeleteNode</STRONG> (ARM, 60 bytes, Stack size 0 bytes, C_List.o(i.httpDeleteNode))
<BR><BR>[Calls]<UL><LI><a href="#[827e304]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufLISTNODEDecRef
</UL><BR>[Called By]<UL><LI><a href="#[588acf0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AddDDNS
<LI><a href="#[57755a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AddNTP
<LI><a href="#[82a371c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InsertBufferSeg
<LI><a href="#[582d194]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PopMsgNode
<LI><a href="#[4e4a410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SelectThread
<LI><a href="#[5887c20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;URLCGI_DelFD
<LI><a href="#[59cb84c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__InsertXML
<LI><a href="#[59c9368]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDelDictParam
<LI><a href="#[5537bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteXML
<LI><a href="#[5537adc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDetachXML
<LI><a href="#[5537260]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseString
<LI><a href="#[5537b50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSetString
</UL><P><STRONG><a name="[55370e8]"></a>httpDeleteParseString</STRONG> (ARM, 88 bytes, Stack size 16 bytes, C_HttpSupport.o(i.httpDeleteParseString))
<BR><BR>[Calls]<UL><LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[59c95a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufNAMESTRINGDecRef
<LI><a href="#[5536a60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteList
</UL><BR>[Called By]<UL><LI><a href="#[5537164]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DeleteSubCmdRunStruct
<LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
<LI><a href="#[5537074]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SubCmdRun
<LI><a href="#[56dbd30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteQueryList
</UL><P><STRONG><a name="[56dbd30]"></a>httpDeleteQueryList</STRONG> (ARM, 4 bytes, Stack size 0 bytes, C_HttpSupport.o(i.httpDeleteQueryList))
<BR><BR>[Calls]<UL><LI><a href="#[55370e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteParseString
</UL><BR>[Called By]<UL><LI><a href="#[4e4c544]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_GetCameraData
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
</UL><P><STRONG><a name="[57e7aa0]"></a>httpDeleteSinglePart</STRONG> (ARM, 32 bytes, Stack size 8 bytes, C_MultiPart.o(i.httpDeleteSinglePart))
<BR><BR>[Calls]<UL><LI><a href="#[82a1474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteDescription
<LI><a href="#[82a12b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufINNERPARTDecRef
</UL><BR>[Called By]<UL><LI><a href="#[57e7c0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ProcessUpdate
</UL><P><STRONG><a name="[5536ad4]"></a>httpDeleteSplitBuffer</STRONG> (ARM, 140 bytes, Stack size 24 bytes, C_MultiPart.o(i.httpDeleteSplitBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[5536a60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteList
</UL><BR>[Called By]<UL><LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
<LI><a href="#[82a13f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseDescription
<LI><a href="#[825cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseDescriptionLine
<LI><a href="#[57e7b94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseSinglePart
<LI><a href="#[5536c38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSplitBuffer
</UL><P><STRONG><a name="[59c9cb8]"></a>httpDeleteSplitString</STRONG> (ARM, 60 bytes, Stack size 16 bytes, C_String.o(i.httpDeleteSplitString))
<BR><BR>[Calls]<UL><LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[5536a60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteList
</UL><BR>[Called By]<UL><LI><a href="#[5537260]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseString
<LI><a href="#[59c9c44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSplitString
</UL><P><STRONG><a name="[5537bc4]"></a>httpDeleteXML</STRONG> (ARM, 116 bytes, Stack size 16 bytes, C_String.o(i.httpDeleteXML))
<BR><BR>[Calls]<UL><LI><a href="#[57163bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteNode
<LI><a href="#[5537bc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteXML
<LI><a href="#[5536a60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteList
<LI><a href="#[57e77e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteDict
<LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[59c920c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufXMLDecRef
</UL><BR>[Called By]<UL><LI><a href="#[5537d20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AppendXMLArray
<LI><a href="#[5537a68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReturnTypeBegin
<LI><a href="#[55376b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReturnTypeEnd
<LI><a href="#[5537bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDeleteXML
</UL><P><STRONG><a name="[5537adc]"></a>httpDetachXML</STRONG> (ARM, 52 bytes, Stack size 8 bytes, C_String.o(i.httpDetachXML))
<BR><BR>[Calls]<UL><LI><a href="#[57163bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteNode
</UL><BR>[Called By]<UL><LI><a href="#[5537d20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AppendXMLArray
</UL><P><STRONG><a name="[56dbcbc]"></a>httpDisconnect</STRONG> (ARM, 252 bytes, Stack size 32 bytes, HttpServer.o(i.httpDisconnect))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
</UL><BR>[Called By]<UL><LI><a href="#[4e4c4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_DropData
</UL><P><STRONG><a name="[5537648]"></a>httpDumpXML</STRONG> (ARM, 24 bytes, Stack size 0 bytes, C_String.o(i.httpDumpXML))
<BR><BR>[Calls]<UL><LI><a href="#[59caf5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__DumpXML
</UL><BR>[Called By]<UL><LI><a href="#[55376b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReturnTypeEnd
</UL><P><STRONG><a name="[4e4d9a4]"></a>httpEnableUserCheck</STRONG> (ARM, 12 bytes, Stack size 0 bytes, HttpServer.o(i.httpEnableUserCheck))
<BR>[Called By]<UL><LI><a href="#[4e4db78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetCameraParam
<LI><a href="#[4eab808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetUserCheck
</UL><P><STRONG><a name="[5536ff8]"></a>httpGetAuthPrivilege</STRONG> (ARM, 8 bytes, Stack size 0 bytes, HttpServer.o(i.httpGetAuthPrivilege))
<BR>[Called By]<UL><LI><a href="#[562be10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetPrivilege
<LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
<LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[5537074]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SubCmdRun
</UL><P><STRONG><a name="[56424b0]"></a>httpGetAuthUserList</STRONG> (ARM, 8 bytes, Stack size 0 bytes, HttpServer.o(i.httpGetAuthUserList))
<BR>[Called By]<UL><LI><a href="#[4eabba4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;IsMoreThanOneAdmin
<LI><a href="#[4eabab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RebuildConfigParam_Auth
</UL><P><STRONG><a name="[4def474]"></a>httpGetBool</STRONG> (ARM, 40 bytes, Stack size 8 bytes, C_String.o(i.httpGetBool))
<BR><BR>[Calls]<UL><LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[59c98b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpString2Bool
</UL><BR>[Called By]<UL><LI><a href="#[4e4c210]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetMyself
<LI><a href="#[4e4c19c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetUser
<LI><a href="#[4e4c288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetDDNS
<LI><a href="#[4e4b340]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetIP
<LI><a href="#[4e4b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMail
<LI><a href="#[4e4baa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMotionDetect
<LI><a href="#[4e4aa7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetPPP
<LI><a href="#[4e4ab64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUPnP
<LI><a href="#[4e4c03c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUserCheck
<LI><a href="#[4e4ac4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetVNet
<LI><a href="#[5537984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DumpJsVar
<LI><a href="#[4e4c544]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_GetCameraData
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
</UL><P><STRONG><a name="[5537894]"></a>httpGetCStyleString</STRONG> (ARM, 224 bytes, Stack size 32 bytes, C_String.o(i.httpGetCStyleString))
<BR><BR>[Calls]<UL><LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[785f888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_New
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
</UL><BR>[Called By]<UL><LI><a href="#[553772c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DumpJsObj
<LI><a href="#[5537984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DumpJsVar
</UL><P><STRONG><a name="[4def6b4]"></a>httpGetClientAddr</STRONG> (ARM, 8 bytes, Stack size 0 bytes, HttpServer.o(i.httpGetClientAddr))
<BR>[Called By]<UL><LI><a href="#[4e4b2cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetIP
<LI><a href="#[4e4b258]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_Reboot
<LI><a href="#[4e4b428]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetHttp
<LI><a href="#[4e4b340]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetIP
<LI><a href="#[4e49ea0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;OnRequestBegin
<LI><a href="#[4def390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
</UL><P><STRONG><a name="[56aa630]"></a>httpGetClientMac</STRONG> (ARM, 8 bytes, Stack size 0 bytes, HttpServer.o(i.httpGetClientMac))
<BR>[Called By]<UL><LI><a href="#[4e49ea0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;OnRequestBegin
<LI><a href="#[4def390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
</UL><P><STRONG><a name="[5536e88]"></a>httpGetContentLength</STRONG> (ARM, 28 bytes, Stack size 0 bytes, HttpServer.o(i.httpGetContentLength))
<BR><BR>[Calls]<UL><LI><a href="#[4dee704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strtol
</UL><BR>[Called By]<UL><LI><a href="#[5536f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_PostDataGet
<LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
</UL><P><STRONG><a name="[57e79b0]"></a>httpGetContentType</STRONG> (ARM, 8 bytes, Stack size 0 bytes, HttpServer.o(i.httpGetContentType))
<BR>[Called By]<UL><LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
</UL><P><STRONG><a name="[5642438]"></a>httpGetCurrentUser</STRONG> (ARM, 36 bytes, Stack size 16 bytes, HttpServer.o(i.httpGetCurrentUser))
<BR><BR>[Calls]<UL><LI><a href="#[59b4f90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ParseAuthorization
</UL><BR>[Called By]<UL><LI><a href="#[4e4c0b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_DelUser
<LI><a href="#[4e4c128]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUser
</UL><P><STRONG><a name="[59af4c0]"></a>httpGetDocumentBasedPath</STRONG> (ARM, 124 bytes, Stack size 16 bytes, HttpServer.o(i.httpGetDocumentBasedPath))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Called By]<UL><LI><a href="#[77ac0d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;translate_uri
</UL><P><STRONG><a name="[4def404]"></a>httpGetIP</STRONG> (ARM, 40 bytes, Stack size 8 bytes, C_String.o(i.httpGetIP))
<BR><BR>[Calls]<UL><LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[588741c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpString2IP
</UL><BR>[Called By]<UL><LI><a href="#[4e4c288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetDDNS
<LI><a href="#[4e4b340]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetIP
</UL><P><STRONG><a name="[4e4d0fc]"></a>httpGetLong</STRONG> (ARM, 40 bytes, Stack size 8 bytes, C_String.o(i.httpGetLong))
<BR><BR>[Calls]<UL><LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[4eaa9f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpString2Long
</UL><BR>[Called By]<UL><LI><a href="#[4e4bc10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChBrightness
<LI><a href="#[4e4bd00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChCompressRatio
<LI><a href="#[4e4bc88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChFramerate
<LI><a href="#[4e4bb1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChMicVolume
<LI><a href="#[4e4bd7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChResolution
<LI><a href="#[4e4bb94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChSpeakerVolume
<LI><a href="#[4e4a984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_EnableTestNet
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4e4b8b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetCamera
<LI><a href="#[4e4c288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetDDNS
<LI><a href="#[4e4b428]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetHttp
<LI><a href="#[4e4bee0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetLogo
<LI><a href="#[4e4b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMail
<LI><a href="#[4e4b9a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMediaFormat
<LI><a href="#[4e4aa7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetPPP
<LI><a href="#[4e4bfc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetTime
<LI><a href="#[4e4ab64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUPnP
<LI><a href="#[4e4c128]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUser
<LI><a href="#[4e4ac4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetVNet
<LI><a href="#[4e4b7c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetWlan
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
</UL><P><STRONG><a name="[7318590]"></a>httpGetMethod</STRONG> (ARM, 8 bytes, Stack size 0 bytes, HttpServer.o(i.httpGetMethod))
<BR>[Called By]<UL><LI><a href="#[5536d9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_ConnInit
<LI><a href="#[7318604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_DumpCGI
<LI><a href="#[4e4b070]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_Init
<LI><a href="#[4e4ae94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_RtspTunnel
<LI><a href="#[4e4a820]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendDesc
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
<LI><a href="#[4e4c5bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendJpeg
</UL><P><STRONG><a name="[553790c]"></a>httpGetParentXML</STRONG> (ARM, 16 bytes, Stack size 0 bytes, C_String.o(i.httpGetParentXML))
<BR>[Called By]<UL><LI><a href="#[5537984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DumpJsVar
</UL><P><STRONG><a name="[5536d24]"></a>httpGetQueryString</STRONG> (ARM, 8 bytes, Stack size 0 bytes, HttpServer.o(i.httpGetQueryString))
<BR>[Called By]<UL><LI><a href="#[5536d9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_ConnInit
<LI><a href="#[56dbda8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpReadQueryList
</UL><P><STRONG><a name="[4e4d3a4]"></a>httpGetString</STRONG> (ARM, 36 bytes, Stack size 8 bytes, C_String.o(i.httpGetString))
<BR><BR>[Calls]<UL><LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
</UL><BR>[Called By]<UL><LI><a href="#[5537d20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AppendXMLArray
<LI><a href="#[4e4bc10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChBrightness
<LI><a href="#[4e4bd00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChCompressRatio
<LI><a href="#[4e4bc88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChFramerate
<LI><a href="#[4e4bb1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChMicVolume
<LI><a href="#[4e4bd7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChResolution
<LI><a href="#[4e4bb94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChSpeakerVolume
<LI><a href="#[4e4a894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ControlMCU
<LI><a href="#[4fe1448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ControlNAV
<LI><a href="#[4e4c0b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_DelUser
<LI><a href="#[4e4c4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_DropData
<LI><a href="#[4e4b2cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetIP
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4e4c288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetDDNS
<LI><a href="#[4e4b428]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetHttp
<LI><a href="#[4e4b340]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetIP
<LI><a href="#[4e4bee0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetLogo
<LI><a href="#[4e4b66c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMac
<LI><a href="#[4e4b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMail
<LI><a href="#[4e4baa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMotionDetect
<LI><a href="#[4e4ada8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetName
<LI><a href="#[4e4aa7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetPPP
<LI><a href="#[4e4c128]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUser
<LI><a href="#[4e4ac4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetVNet
<LI><a href="#[4e4b7c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetWlan
<LI><a href="#[55372d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateSubCmdRunStruct
<LI><a href="#[553772c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DumpJsObj
<LI><a href="#[57e7940]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetBoundary
<LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
<LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
<LI><a href="#[55374e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendRedirectRequest
<LI><a href="#[5537a68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReturnTypeBegin
<LI><a href="#[55376b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReturnTypeEnd
<LI><a href="#[4fc2364]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_http_param_string
</UL><P><STRONG><a name="[59c9bcc]"></a>httpGetTrimString</STRONG> (ARM, 172 bytes, Stack size 16 bytes, C_String.o(i.httpGetTrimString))
<BR><BR>[Calls]<UL><LI><a href="#[785f888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_New
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[82a3410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateInnerDescription
<LI><a href="#[59c98b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpString2Bool
</UL><P><STRONG><a name="[4e4c964]"></a>httpGetULong</STRONG> (ARM, 40 bytes, Stack size 8 bytes, C_String.o(i.httpGetULong))
<BR><BR>[Calls]<UL><LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[59c9994]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpString2ULong
</UL><BR>[Called By]<UL><LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
</UL><P><STRONG><a name="[59c9b50]"></a>httpGetWebStyleString</STRONG> (ARM, 256 bytes, Stack size 64 bytes, C_String.o(i.httpGetWebStyleString))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[785f888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_New
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
</UL><BR>[Called By]<UL><LI><a href="#[59caf5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__DumpXML
</UL><P><STRONG><a name="[5924520]"></a>httpGetXSessionCookie</STRONG> (ARM, 8 bytes, Stack size 0 bytes, HttpServer.o(i.httpGetXSessionCookie))
<BR>[Called By]<UL><LI><a href="#[4e4ae94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_RtspTunnel
</UL><P><STRONG><a name="[4deeb74]"></a>httpHex2Char</STRONG> (ARM, 132 bytes, Stack size 4 bytes, C_String.o(i.httpHex2Char))
<BR><BR>[Calls]<UL><LI><a href="#[59c97d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__ishexchar
<LI><a href="#[59c9760]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__hex2char
</UL><BR>[Called By]<UL><LI><a href="#[4e4a894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ControlMCU
<LI><a href="#[4a560fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlMCU
<LI><a href="#[4eaaae0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetWlan
</UL><P><STRONG><a name="[4e4d254]"></a>httpIP2String</STRONG> (ARM, 76 bytes, Stack size 24 bytes, C_String.o(i.httpIP2String))
<BR><BR>[Calls]<UL><LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Called By]<UL><LI><a href="#[4e4c2fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetDDNS
<LI><a href="#[4e4b2cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetIP
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[5887760]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Do_DNS
<LI><a href="#[4dee770]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetIP
<LI><a href="#[4e4da90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetNullIP
<LI><a href="#[4dee848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetRandomIP
</UL><P><STRONG><a name="[4a54b44]"></a>httpInitHashMemPool</STRONG> (ARM, 272 bytes, Stack size 16 bytes, boa.o(i.httpInitHashMemPool))
<BR><BR>[Calls]<UL><LI><a href="#[73184ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpBufInit
<LI><a href="#[7318430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Create
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[73183b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Child_Pool_Add
<LI><a href="#[7318338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Implement
<LI><a href="#[73182bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Destroy
</UL><BR>[Called By]<UL><LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[59c9028]"></a>httpInsertNodeAfter</STRONG> (ARM, 116 bytes, Stack size 8 bytes, C_List.o(i.httpInsertNodeAfter))
<BR><BR>[Calls]<UL><LI><a href="#[827e3f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufLISTNODENew
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
</UL><BR>[Called By]<UL><LI><a href="#[82a371c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InsertBufferSeg
<LI><a href="#[82a13f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseDescription
<LI><a href="#[825cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseDescriptionLine
</UL><P><STRONG><a name="[59c9118]"></a>httpInsertNodeBefore</STRONG> (ARM, 116 bytes, Stack size 8 bytes, C_List.o(i.httpInsertNodeBefore))
<BR><BR>[Calls]<UL><LI><a href="#[827e3f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufLISTNODENew
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
</UL><BR>[Called By]<UL><LI><a href="#[5536b50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpAppendNode
</UL><BR>[Address Reference Count : 1]<UL><LI> C_String.o(i.httpAppendXML)
</UL><P><STRONG><a name="[56db9f8]"></a>httpIsDisconnect</STRONG> (ARM, 16 bytes, Stack size 0 bytes, HttpServer.o(i.httpIsDisconnect))
<BR>[Called By]<UL><LI><a href="#[56dcec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillCameraData
</UL><P><STRONG><a name="[4e4d928]"></a>httpIsEnableUserCheck</STRONG> (ARM, 20 bytes, Stack size 0 bytes, HttpServer.o(i.httpIsEnableUserCheck))
<BR>[Called By]<UL><LI><a href="#[4e4c03c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUserCheck
<LI><a href="#[4e4db78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetCameraParam
</UL><P><STRONG><a name="[4def5c8]"></a>httpIsExistParam</STRONG> (ARM, 92 bytes, Stack size 16 bytes, C_String.o(i.httpIsExistParam))
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
</UL><BR>[Called By]<UL><LI><a href="#[4e4a894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ControlMCU
<LI><a href="#[4fe1448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ControlNAV
<LI><a href="#[4e4c4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_DropData
<LI><a href="#[4e4b2cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetIP
<LI><a href="#[4e4b428]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetHttp
<LI><a href="#[4e4b340]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetIP
<LI><a href="#[4e4bee0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetLogo
<LI><a href="#[4e4b66c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMac
<LI><a href="#[4e4b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMail
<LI><a href="#[4e4b9a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMediaFormat
<LI><a href="#[4e4baa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMotionDetect
<LI><a href="#[4e4ada8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetName
<LI><a href="#[4e4aa7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetPPP
<LI><a href="#[4e4bfc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetTime
<LI><a href="#[4e4ab64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUPnP
<LI><a href="#[4e4c128]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUser
<LI><a href="#[4e4ac4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetVNet
<LI><a href="#[4e4b7c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetWlan
<LI><a href="#[57e7b1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetInnerPartName
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
<LI><a href="#[59af808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;auth_required
<LI><a href="#[4fc2364]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_http_param_string
<LI><a href="#[59c9368]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDelDictParam
<LI><a href="#[4def474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetBool
<LI><a href="#[4def404]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetIP
<LI><a href="#[4e4d0fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[4e4d3a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetString
<LI><a href="#[4e4c964]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetULong
<LI><a href="#[5537b50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSetString
</UL><P><STRONG><a name="[55371e0]"></a>httpIsRegisterEmbedFunEx</STRONG> (ARM, 140 bytes, Stack size 24 bytes, HttpServer.o(i.httpIsRegisterEmbedFunEx))
<BR><BR>[Calls]<UL><LI><a href="#[59b5a40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DecorateAccessName
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
</UL><BR>[Called By]<UL><LI><a href="#[55372d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateSubCmdRunStruct
</UL><P><STRONG><a name="[4deeff0]"></a>httpLong2String</STRONG> (ARM, 24 bytes, Stack size 0 bytes, C_String.o(i.httpLong2String))
<BR><BR>[Calls]<UL><LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Called By]<UL><LI><a href="#[4e4cec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AddHttpNum
<LI><a href="#[4e4bc10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChBrightness
<LI><a href="#[4e4bd00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChCompressRatio
<LI><a href="#[4e4bc88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChFramerate
<LI><a href="#[4e4bb1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChMicVolume
<LI><a href="#[4e4bd7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChResolution
<LI><a href="#[4e4bb94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChSpeakerVolume
<LI><a href="#[4e4c2fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetDDNS
<LI><a href="#[4e4b3b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetHttp
<LI><a href="#[4e4b2cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetIP
<LI><a href="#[4e4be6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetLogo
<LI><a href="#[4e4b510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetMail
<LI><a href="#[4e4b92c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetMediaFormat
<LI><a href="#[4e4ba24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetMotionDetect
<LI><a href="#[4e4bf54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetTime
<LI><a href="#[4e4b8b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetCamera
<LI><a href="#[4e4aff4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_UpdateProgress
</UL><P><STRONG><a name="[4def554]"></a>httpMyStrncpy</STRONG> (ARM, 132 bytes, Stack size 16 bytes, C_String.o(i.httpMyStrncpy))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
</UL><BR>[Called By]<UL><LI><a href="#[4e4c288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetDDNS
<LI><a href="#[4e4b340]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetIP
<LI><a href="#[4e4b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMail
<LI><a href="#[4e4ada8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetName
<LI><a href="#[4e4aa7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetPPP
<LI><a href="#[4e4ac4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetVNet
<LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
<LI><a href="#[4eabab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RebuildConfigParam_Auth
<LI><a href="#[4eabc1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpAuthGetUser
<LI><a href="#[4eaaae0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetWlan
<LI><a href="#[71ed684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_setPPP
</UL><P><STRONG><a name="[82a13f8]"></a>httpParseDescription</STRONG> (ARM, 188 bytes, Stack size 32 bytes, C_MultiPart.o(i.httpParseDescription))
<BR><BR>[Calls]<UL><LI><a href="#[5536bc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpCreateList
<LI><a href="#[5536c38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSplitBuffer
<LI><a href="#[5536a60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteList
<LI><a href="#[825cc18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpParseDescriptionLine
<LI><a href="#[59c9028]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpInsertNodeAfter
<LI><a href="#[5536ad4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteSplitBuffer
<LI><a href="#[825cb98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteDescriptionLine
<LI><a href="#[82a1474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteDescription
</UL><BR>[Called By]<UL><LI><a href="#[57e7b94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseSinglePart
</UL><P><STRONG><a name="[825cc18]"></a>httpParseDescriptionLine</STRONG> (ARM, 188 bytes, Stack size 32 bytes, C_MultiPart.o(i.httpParseDescriptionLine))
<BR><BR>[Calls]<UL><LI><a href="#[5536bc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpCreateList
<LI><a href="#[5536c38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSplitBuffer
<LI><a href="#[5536a60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteList
<LI><a href="#[82a3410]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CreateInnerDescription
<LI><a href="#[59c9028]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpInsertNodeAfter
<LI><a href="#[5536ad4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteSplitBuffer
</UL><BR>[Called By]<UL><LI><a href="#[57e7940]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetBoundary
<LI><a href="#[82a13f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseDescription
</UL><P><STRONG><a name="[57e7b94]"></a>httpParseSinglePart</STRONG> (ARM, 252 bytes, Stack size 24 bytes, C_MultiPart.o(i.httpParseSinglePart))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[5536c38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSplitBuffer
<LI><a href="#[82a12b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufINNERPARTDecRef
<LI><a href="#[82a13f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpParseDescription
<LI><a href="#[5536ad4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteSplitBuffer
</UL><BR>[Called By]<UL><LI><a href="#[57e7c0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ProcessUpdate
</UL><P><STRONG><a name="[5537260]"></a>httpParseString</STRONG> (ARM, 388 bytes, Stack size 40 bytes, C_HttpSupport.o(i.httpParseString))
<BR><BR>[Calls]<UL><LI><a href="#[59c9c44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSplitString
<LI><a href="#[5536bc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpCreateList
<LI><a href="#[59c9cb8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteSplitString
<LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[5536b50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAppendNode
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[825e50c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[59c95a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufNAMESTRINGDecRef
<LI><a href="#[57163bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteNode
<LI><a href="#[821cf08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;unescape_uri
<LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
</UL><BR>[Called By]<UL><LI><a href="#[55372d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateSubCmdRunStruct
<LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
<LI><a href="#[5537074]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SubCmdRun
<LI><a href="#[56dbda8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpReadQueryList
</UL><P><STRONG><a name="[56dbda8]"></a>httpReadQueryList</STRONG> (ARM, 24 bytes, Stack size 8 bytes, C_HttpSupport.o(i.httpReadQueryList))
<BR><BR>[Calls]<UL><LI><a href="#[5536d24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetQueryString
<LI><a href="#[5537260]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpParseString
</UL><BR>[Called By]<UL><LI><a href="#[4e4c544]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_GetCameraData
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
</UL><P><STRONG><a name="[4e4d7c4]"></a>httpRegisterEmbedFunEx</STRONG> (ARM, 236 bytes, Stack size 32 bytes, HttpServer.o(i.httpRegisterEmbedFunEx))
<BR><BR>[Calls]<UL><LI><a href="#[59b5a40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DecorateAccessName
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
</UL><BR>[Called By]<UL><LI><a href="#[4e4d8b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RegisterSubCmd
<LI><a href="#[4e4c630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RegisterUrls
<LI><a href="#[4e4a90c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RegisterWebFiles
<LI><a href="#[73180f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpdStartEx3
</UL><P><STRONG><a name="[5536f7c]"></a>httpSendAuthRequired</STRONG> (ARM, 4 bytes, Stack size 0 bytes, HttpServer.o(i.httpSendAuthRequired))
<BR><BR>[Calls]<UL><LI><a href="#[59af808]">&gt&gt</a>&nbsp;&nbsp;&nbsp;auth_required
</UL><BR>[Called By]<UL><LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
<LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[5537074]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SubCmdRun
</UL><P><STRONG><a name="[4e49f88]"></a>httpSetAuthPrompt</STRONG> (ARM, 32 bytes, Stack size 0 bytes, HttpServer.o(i.httpSetAuthPrompt))
<BR>[Called By]<UL><LI><a href="#[4a5496c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ServerStart
</UL><P><STRONG><a name="[4e4c6a4]"></a>httpSetHeader</STRONG> (ARM, 424 bytes, Stack size 96 bytes, HttpServer.o(i.httpSetHeader))
<BR><BR>[Calls]<UL><LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[59af6ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_write
<LI><a href="#[59af634]">&gt&gt</a>&nbsp;&nbsp;&nbsp;print_http_headers
<LI><a href="#[59af5b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;print_content_length
<LI><a href="#[59af540]">&gt&gt</a>&nbsp;&nbsp;&nbsp;print_last_modified
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[58896dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillURLCGIData
<LI><a href="#[7318604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_DumpCGI
<LI><a href="#[4e4c544]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_GetCameraData
<LI><a href="#[4e4af7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_GetFirmware
<LI><a href="#[5536f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_PostDataGet
<LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[4e4ae94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_RtspTunnel
<LI><a href="#[4e4a7ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Send500
<LI><a href="#[4e4a820]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendDesc
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
<LI><a href="#[4e4c5bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendJpeg
<LI><a href="#[55374e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendRedirectRequest
<LI><a href="#[4e4c810]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_TestSpeed
<LI><a href="#[772e194]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_WebFile
<LI><a href="#[55376b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReturnTypeEnd
</UL><P><STRONG><a name="[4e4c718]"></a>httpSetKeepAliveMode</STRONG> (ARM, 32 bytes, Stack size 0 bytes, HttpServer.o(i.httpSetKeepAliveMode))
<BR>[Called By]<UL><LI><a href="#[4e4c544]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_GetCameraData
<LI><a href="#[4e4af7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_GetFirmware
<LI><a href="#[4e4ae94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_RtspTunnel
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
<LI><a href="#[4e4c810]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_TestSpeed
<LI><a href="#[4deec54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RebootOnConnectionOver
</UL><P><STRONG><a name="[5887490]"></a>httpSetNullHeader</STRONG> (ARM, 140 bytes, Stack size 16 bytes, HttpServer.o(i.httpSetNullHeader))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
</UL><P><STRONG><a name="[5536e10]"></a>httpSetPostDataFun</STRONG> (ARM, 12 bytes, Stack size 0 bytes, HttpServer.o(i.httpSetPostDataFun))
<BR>[Called By]<UL><LI><a href="#[5536d9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_ConnInit
<LI><a href="#[5536f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_PostDataGet
<LI><a href="#[4e4b070]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_Init
<LI><a href="#[4e4ae94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_RtspTunnel
</UL><P><STRONG><a name="[5887508]"></a>httpSetRequestOverFun</STRONG> (ARM, 12 bytes, Stack size 0 bytes, HttpServer.o(i.httpSetRequestOverFun))
<BR>[Called By]<UL><LI><a href="#[4e4ae94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_RtspTunnel
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
</UL><P><STRONG><a name="[4e4c794]"></a>httpSetSendDataOverFun</STRONG> (ARM, 12 bytes, Stack size 0 bytes, HttpServer.o(i.httpSetSendDataOverFun))
<BR>[Called By]<UL><LI><a href="#[56dcec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillCameraData
<LI><a href="#[57e87cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillFirmwareData
<LI><a href="#[4e4ff50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillTestSpeedData
<LI><a href="#[58896dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillURLCGIData
<LI><a href="#[4e4c544]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_GetCameraData
<LI><a href="#[4e4af7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_GetFirmware
<LI><a href="#[4e4ae94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_RtspTunnel
<LI><a href="#[4e4aa00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendHttpRequest
<LI><a href="#[4e4c810]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_TestSpeed
<LI><a href="#[772e194]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_WebFile
<LI><a href="#[772e630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_WebFile_AddData
<LI><a href="#[4deec54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RebootOnConnectionOver
<LI><a href="#[4dd31bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;onHttpReboot
</UL><P><STRONG><a name="[5537b50]"></a>httpSetString</STRONG> (ARM, 248 bytes, Stack size 24 bytes, C_String.o(i.httpSetString))
<BR><BR>[Calls]<UL><LI><a href="#[4def5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsExistParam
<LI><a href="#[5536b50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAppendNode
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[59cd30c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[59c95a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufNAMESTRINGDecRef
<LI><a href="#[57163bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteNode
<LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
</UL><BR>[Called By]<UL><LI><a href="#[5537d20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AppendXMLArray
<LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
<LI><a href="#[57e7c0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ProcessUpdate
<LI><a href="#[5537a68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReturnTypeBegin
<LI><a href="#[4e4da1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpAuthSetUser
</UL><P><STRONG><a name="[5536c38]"></a>httpSplitBuffer</STRONG> (ARM, 244 bytes, Stack size 56 bytes, C_MultiPart.o(i.httpSplitBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[5536bc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpCreateList
<LI><a href="#[82a371c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;InsertBufferSeg
<LI><a href="#[5536ad4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteSplitBuffer
</UL><BR>[Called By]<UL><LI><a href="#[5536cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_CommonCmdRun
<LI><a href="#[82a13f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseDescription
<LI><a href="#[825cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseDescriptionLine
<LI><a href="#[57e7b94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseSinglePart
</UL><P><STRONG><a name="[59c9c44]"></a>httpSplitString</STRONG> (ARM, 208 bytes, Stack size 40 bytes, C_String.o(i.httpSplitString))
<BR><BR>[Calls]<UL><LI><a href="#[5536bc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpCreateList
<LI><a href="#[5536b50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAppendNode
<LI><a href="#[59c9cb8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteSplitString
<LI><a href="#[785f888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_New
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[5537260]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseString
</UL><P><STRONG><a name="[59c98b4]"></a>httpString2Bool</STRONG> (ARM, 156 bytes, Stack size 16 bytes, C_String.o(i.httpString2Bool))
<BR><BR>[Calls]<UL><LI><a href="#[59c9bcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetTrimString
<LI><a href="#[4def4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
</UL><BR>[Called By]<UL><LI><a href="#[4def474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetBool
</UL><P><STRONG><a name="[588741c]"></a>httpString2IP</STRONG> (ARM, 140 bytes, Stack size 32 bytes, C_String.o(i.httpString2IP))
<BR><BR>[Calls]<UL><LI><a href="#[4dee704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
</UL><BR>[Called By]<UL><LI><a href="#[588a7e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CkIP_Response_dnsomatic
<LI><a href="#[588a864]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CkIP_Response_dyndns
<LI><a href="#[4def404]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetIP
</UL><P><STRONG><a name="[4eaa9f0]"></a>httpString2Long</STRONG> (ARM, 76 bytes, Stack size 8 bytes, C_String.o(i.httpString2Long))
<BR><BR>[Calls]<UL><LI><a href="#[4dee704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[4fc2130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;atoi
</UL><BR>[Called By]<UL><LI><a href="#[4e4baa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMotionDetect
<LI><a href="#[4e4d0fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetLong
<LI><a href="#[4eaaae0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetWlan
</UL><P><STRONG><a name="[59c9994]"></a>httpString2ULong</STRONG> (ARM, 76 bytes, Stack size 8 bytes, C_String.o(i.httpString2ULong))
<BR><BR>[Calls]<UL><LI><a href="#[59c9928]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strtoul
</UL><BR>[Called By]<UL><LI><a href="#[4e4c964]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetULong
</UL><P><STRONG><a name="[5923ec0]"></a>httpSwapFD</STRONG> (ARM, 112 bytes, Stack size 16 bytes, HttpServer.o(i.httpSwapFD))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[5927468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelSendData
</UL><P><STRONG><a name="[4e49e2c]"></a>httpdStartEx</STRONG> (ARM, 68 bytes, Stack size 32 bytes, boa.o(i.httpdStartEx))
<BR><BR>[Calls]<UL><LI><a href="#[7317c70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpdStartEx2
</UL><BR>[Called By]<UL><LI><a href="#[4a5496c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ServerStart
</UL><P><STRONG><a name="[7317c70]"></a>httpdStartEx2</STRONG> (ARM, 68 bytes, Stack size 32 bytes, boa.o(i.httpdStartEx2))
<BR><BR>[Calls]<UL><LI><a href="#[73180f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpdStartEx3
</UL><BR>[Called By]<UL><LI><a href="#[4e49e2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpdStartEx
</UL><P><STRONG><a name="[73180f8]"></a>httpdStartEx3</STRONG> (ARM, 924 bytes, Stack size 216 bytes, boa.o(i.httpdStartEx3))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d7c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpRegisterEmbedFunEx
<LI><a href="#[7318080]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read_config_files
<LI><a href="#[73197a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[7318254]">&gt&gt</a>&nbsp;&nbsp;&nbsp;die
<LI><a href="#[7319734]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fdset_update
<LI><a href="#[4bba3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7317d5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_request
<LI><a href="#[4c30a1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_yield
<LI><a href="#[7317ce4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;process_requests
</UL><BR>[Called By]<UL><LI><a href="#[7317c70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpdStartEx2
</UL><P><STRONG><a name="[9c5cac8]"></a>hwaddr_aton</STRONG> (ARM, 108 bytes, Stack size 24 bytes, common.o(i.hwaddr_aton))
<BR><BR>[Calls]<UL><LI><a href="#[9c0d1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hex2num
</UL><BR>[Called By]<UL><LI><a href="#[9c6824c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_bssid
</UL><P><STRONG><a name="[759f4ac]"></a>i2cGetSerialBusCtrl</STRONG> (ARM, 20 bytes, Stack size 0 bytes, i2clib.o(i.i2cGetSerialBusCtrl))
<BR>[Called By]<UL><LI><a href="#[7e91ba0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV7670
<LI><a href="#[7e91c10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV9650
<LI><a href="#[7e91b2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_PO6030K
</UL><P><STRONG><a name="[759f77c]"></a>i2cInitSerialBus</STRONG> (ARM, 76 bytes, Stack size 8 bytes, i2clib.o(i.i2cInitSerialBus))
<BR><BR>[Calls]<UL><LI><a href="#[759f610]">&gt&gt</a>&nbsp;&nbsp;&nbsp;initSerialBus
<LI><a href="#[759f5a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2c_delay
<LI><a href="#[759f524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Check_FastI2C_Status
</UL><BR>[Called By]<UL><LI><a href="#[881ead0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CAM_SuspendTV
<LI><a href="#[7e91c80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_ISP_Setting
<LI><a href="#[7e91ba0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV7670
<LI><a href="#[7e91c10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV9650
<LI><a href="#[7e91b2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_PO6030K
</UL><P><STRONG><a name="[4e4c8f4]"></a>i2cReadI2C</STRONG> (ARM, 8 bytes, Stack size 0 bytes, i2clib.o(i.i2cReadI2C))
<BR><BR>[Calls]<UL><LI><a href="#[759f2d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DSP_ReadI2C
</UL><BR>[Called By]<UL><LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[7e8fa78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dspGetFrequency_ov7670
<LI><a href="#[7e8faf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dspSetFrequency_ov7670
<LI><a href="#[7e91ba0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV7670
<LI><a href="#[7e91c10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV9650
<LI><a href="#[7e91b2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_PO6030K
</UL><P><STRONG><a name="[759f08c]"></a>i2cReadI2C_16b</STRONG> (ARM, 8 bytes, Stack size 0 bytes, i2clib.o(i.i2cReadI2C_16b))
<BR><BR>[Calls]<UL><LI><a href="#[759f018]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DSP_ReadI2C_16b
</UL><BR>[Called By]<UL><LI><a href="#[545da20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptSetSourceRotate
</UL><P><STRONG><a name="[759f430]"></a>i2cSetDeviceSlaveAddr</STRONG> (ARM, 12 bytes, Stack size 0 bytes, i2clib.o(i.i2cSetDeviceSlaveAddr))
<BR>[Called By]<UL><LI><a href="#[881ead0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CAM_SuspendTV
<LI><a href="#[7e91ba0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV7670
<LI><a href="#[7e91c10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV9650
<LI><a href="#[7e91b2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_PO6030K
</UL><P><STRONG><a name="[4e4c884]"></a>i2cWriteI2C</STRONG> (ARM, 12 bytes, Stack size 0 bytes, i2clib.o(i.i2cWriteI2C))
<BR><BR>[Calls]<UL><LI><a href="#[759f348]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DSP_WriteI2C
</UL><BR>[Called By]<UL><LI><a href="#[881ead0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CAM_SuspendTV
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[7e8fc7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dspSetBrightnessContrast_ov7670
<LI><a href="#[7e8fbf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dspSetBrightnessContrast_ov7725
<LI><a href="#[7e8fd00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dspSetBrightnessContrast_ov9650
<LI><a href="#[7e8fb70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dspSetBrightnessContrast_po6030k
<LI><a href="#[7e8faf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dspSetFrequency_ov7670
<LI><a href="#[7e91ba0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV7670
<LI><a href="#[7e91c10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV9650
<LI><a href="#[7e91b2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_PO6030K
</UL><P><STRONG><a name="[759f178]"></a>i2cWriteI2C_16b</STRONG> (ARM, 16 bytes, Stack size 0 bytes, i2clib.o(i.i2cWriteI2C_16b))
<BR><BR>[Calls]<UL><LI><a href="#[759f100]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DSP_WriteI2C_16b
</UL><BR>[Called By]<UL><LI><a href="#[545da20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptSetSourceRotate
</UL><P><STRONG><a name="[759f5a0]"></a>i2c_delay</STRONG> (ARM, 36 bytes, Stack size 0 bytes, Dsp_i2c.o(i.i2c_delay))
<BR>[Called By]<UL><LI><a href="#[7e28938]">&lt&lt</a>&nbsp;&nbsp;&nbsp;I1B_fromI2C
<LI><a href="#[7e288c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;I1B_fromI2C_16b
<LI><a href="#[7e28a1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;O1B2I2C_wACK
<LI><a href="#[7e28b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;OstartI2C
<LI><a href="#[7e28a90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;OstopI2C
<LI><a href="#[759f77c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;i2cInitSerialBus
<LI><a href="#[759f610]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initSerialBus
</UL><P><STRONG><a name="[4eaba44]"></a>ictlAuthUser</STRONG> (ARM, 268 bytes, Stack size 32 bytes, configinterface.o(i.ictlAuthUser))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71eca78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;logonRequest
</UL><P><STRONG><a name="[4a560fc]"></a>ictlCtrlMCU</STRONG> (ARM, 324 bytes, Stack size 304 bytes, configinterface.o(i.ictlCtrlMCU))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4deeb74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpHex2Char
<LI><a href="#[4eaa53c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcuSendCommand
<LI><a href="#[4deea94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpChar2Hex
</UL><BR>[Called By]<UL><LI><a href="#[4e4a894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ControlMCU
<LI><a href="#[4a5616c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MCUCmdHandler
</UL><P><STRONG><a name="[4fc2540]"></a>ictlCtrlNAV</STRONG> (ARM, 1328 bytes, Stack size 264 bytes, er_ns_cgi.o(i.ictlCtrlNAV))
<BR><BR>[Calls]<UL><LI><a href="#[4fc24d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_report
<LI><a href="#[4fc2458]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_start_recording
<LI><a href="#[4fc23e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_abort_recording
<LI><a href="#[4fc2364]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_http_param_string
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4fc22ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_stop_and_save
<LI><a href="#[4fc227c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_delete
<LI><a href="#[4fc2208]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_get_list
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4fc219c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[4fc2130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[4fc20bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_start_play
<LI><a href="#[4fc2044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_stop_playing
<LI><a href="#[4fc1fd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_pause
<LI><a href="#[4fc1f64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_rename
<LI><a href="#[4fc1ef4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;smc_go_home
<LI><a href="#[4fc1e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;smc_go_home_and_dock
<LI><a href="#[4fe1c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_store_home
<LI><a href="#[4fe1bd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_tuning_parameters
<LI><a href="#[4fe1b5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_tuning_parameters
<LI><a href="#[4fe1aec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;smc_reset
<LI><a href="#[4fe1a70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;drive_rovio_manually
<LI><a href="#[4fe19f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;test_rovio_hardware
<LI><a href="#[4fe1984]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_mcu_status
<LI><a href="#[4fe1908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_delete_all_paths
<LI><a href="#[4fe1894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_rovio_state
<LI><a href="#[4fe181c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_flash_parameter
<LI><a href="#[4fe17a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_flash_parameter
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4fe1730]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_ns_version
<LI><a href="#[4fe16b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;store_image_capture_action
<LI><a href="#[4fe163c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_reset_home
<LI><a href="#[4fe15c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_ns_build_info
<LI><a href="#[4fe153c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;toggle_weak_ns_signal_resistance
<LI><a href="#[4fe14c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_restore_to_default
</UL><BR>[Called By]<UL><LI><a href="#[4fe1448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ControlNAV
</UL><P><STRONG><a name="[4eab9d4]"></a>ictlDelUser</STRONG> (ARM, 188 bytes, Stack size 16 bytes, configinterface.o(i.ictlDelUser))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4eabc1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAuthGetUser
<LI><a href="#[4eabba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;IsMoreThanOneAdmin
<LI><a href="#[4eab960]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAuthDelUser
<LI><a href="#[4eab8f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;del_auth_id
<LI><a href="#[4eabab8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;RebuildConfigParam_Auth
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4c0b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_DelUser
<LI><a href="#[71ecb5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;authRequest
</UL><P><STRONG><a name="[4eaac30]"></a>ictlEnableMotionDetect</STRONG> (ARM, 92 bytes, Stack size 24 bytes, configinterface.o(i.ictlEnableMotionDetect))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71ecbcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;imageRequest
</UL><P><STRONG><a name="[4eab16c]"></a>ictlGetFraemrate</STRONG> (ARM, 88 bytes, Stack size 16 bytes, configinterface.o(i.ictlGetFraemrate))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
</UL><P><STRONG><a name="[4eab25c]"></a>ictlGetFramerateCapalibity</STRONG> (ARM, 100 bytes, Stack size 16 bytes, configinterface.o(i.ictlGetFramerateCapalibity))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
</UL><P><STRONG><a name="[4eaabc0]"></a>ictlGetIP</STRONG> (ARM, 248 bytes, Stack size 64 bytes, configinterface.o(i.ictlGetIP))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4def4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4def22c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetPubIPInfo
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71ed450]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getIPInfo
<LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
</UL><P><STRONG><a name="[4dee54c]"></a>ictlGetMac</STRONG> (ARM, 216 bytes, Stack size 48 bytes, configinterface.o(i.ictlGetMac))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4b5f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetMac
<LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
</UL><P><STRONG><a name="[4eaada4]"></a>ictlGetMediaFoamat</STRONG> (ARM, 104 bytes, Stack size 16 bytes, configinterface.o(i.ictlGetMediaFoamat))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
</UL><P><STRONG><a name="[4eabd00]"></a>ictlGetMyself</STRONG> (ARM, 148 bytes, Stack size 24 bytes, configinterface.o(i.ictlGetMyself))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4c210]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetMyself
</UL><P><STRONG><a name="[4eab2dc]"></a>ictlGetQuality</STRONG> (ARM, 88 bytes, Stack size 16 bytes, configinterface.o(i.ictlGetQuality))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
</UL><P><STRONG><a name="[4eab3c4]"></a>ictlGetQualityCapability</STRONG> (ARM, 100 bytes, Stack size 16 bytes, configinterface.o(i.ictlGetQualityCapability))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
</UL><P><STRONG><a name="[4eab444]"></a>ictlGetResolution</STRONG> (ARM, 76 bytes, Stack size 16 bytes, configinterface.o(i.ictlGetResolution))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
</UL><P><STRONG><a name="[4eab880]"></a>ictlGetUser</STRONG> (ARM, 188 bytes, Stack size 40 bytes, configinterface.o(i.ictlGetUser))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4c19c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetUser
<LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
</UL><P><STRONG><a name="[4eab6a4]"></a>ictlGetUserCheck</STRONG> (ARM, 76 bytes, Stack size 16 bytes, configinterface.o(i.ictlGetUserCheck))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
</UL><P><STRONG><a name="[4eaa904]"></a>ictlGetWlan</STRONG> (ARM, 512 bytes, Stack size 56 bytes, configinterface.o(i.ictlGetWlan))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
</UL><P><STRONG><a name="[4eaacac]"></a>ictlIsMotionDetectEnabled</STRONG> (ARM, 148 bytes, Stack size 24 bytes, configinterface.o(i.ictlIsMotionDetectEnabled))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
</UL><P><STRONG><a name="[4eaa894]"></a>ictlReboot</STRONG> (ARM, 52 bytes, Stack size 8 bytes, configinterface.o(i.ictlReboot))
<BR><BR>[Calls]<UL><LI><a href="#[4def72c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WebCameraSIGTERM
<LI><a href="#[4defdb8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99802Reboot
</UL><BR>[Called By]<UL><LI><a href="#[71ecef0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rebootRequst
<LI><a href="#[71ed12c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;restoreRequst
<LI><a href="#[71ecf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;systemRequest
</UL><P><STRONG><a name="[4eaa824]"></a>ictlScanAP</STRONG> (ARM, 932 bytes, Stack size 120 bytes, configinterface.o(i.ictlScanAP))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[4e4b6e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ScanWlan
<LI><a href="#[71ed3d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;freshWlanRequest
</UL><P><STRONG><a name="[4eab0f4]"></a>ictlSetBrightness</STRONG> (ARM, 112 bytes, Stack size 16 bytes, configinterface.o(i.ictlSetBrightness))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4eab4bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendCameraMsg
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4bc10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChBrightness
</UL><P><STRONG><a name="[4eaa4c4]"></a>ictlSetDefaultMac</STRONG> (ARM, 132 bytes, Stack size 16 bytes, configinterface.o(i.ictlSetDefaultMac))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4e4dd60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;InitDefaultParam
<LI><a href="#[4eaa630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__WriteFlashMemory
<LI><a href="#[4eaa6a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetConfigCheckSum
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71ecf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;systemRequest
</UL><P><STRONG><a name="[4eaa7a8]"></a>ictlSetFactoryDefault</STRONG> (ARM, 84 bytes, Stack size 8 bytes, configinterface.o(i.ictlSetFactoryDefault))
<BR><BR>[Calls]<UL><LI><a href="#[4eaa720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ERSP_rovio_libns_restore_defaults
<LI><a href="#[4eaa6a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetConfigCheckSum
<LI><a href="#[4eaa630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__WriteFlashMemory
</UL><BR>[Called By]<UL><LI><a href="#[71ed12c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;restoreRequst
</UL><P><STRONG><a name="[4eab1e4]"></a>ictlSetFramerate</STRONG> (ARM, 112 bytes, Stack size 16 bytes, configinterface.o(i.ictlSetFramerate))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4eab4bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendCameraMsg
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4bc88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChFramerate
<LI><a href="#[71ecbcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;imageRequest
</UL><P><STRONG><a name="[4eaab50]"></a>ictlSetIP</STRONG> (ARM, 308 bytes, Stack size 40 bytes, configinterface.o(i.ictlSetIP))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4def4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71eccb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbIPRequest
</UL><P><STRONG><a name="[4dee5bc]"></a>ictlSetMac</STRONG> (ARM, 100 bytes, Stack size 16 bytes, configinterface.o(i.ictlSetMac))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4b66c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMac
<LI><a href="#[71ecf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;systemRequest
</UL><P><STRONG><a name="[4eaae1c]"></a>ictlSetMediaFormat</STRONG> (ARM, 128 bytes, Stack size 24 bytes, configinterface.o(i.ictlSetMediaFormat))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4b9a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetMediaFormat
<LI><a href="#[71ecf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;systemRequest
</UL><P><STRONG><a name="[4eaaf0c]"></a>ictlSetMicVolume</STRONG> (ARM, 112 bytes, Stack size 16 bytes, configinterface.o(i.ictlSetMicVolume))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4eab4bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendCameraMsg
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4bb1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChMicVolume
</UL><P><STRONG><a name="[4eab350]"></a>ictlSetQuality</STRONG> (ARM, 136 bytes, Stack size 16 bytes, configinterface.o(i.ictlSetQuality))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4eab4bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendCameraMsg
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4bd00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChCompressRatio
<LI><a href="#[71ecbcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;imageRequest
</UL><P><STRONG><a name="[4eab530]"></a>ictlSetResolution</STRONG> (ARM, 112 bytes, Stack size 16 bytes, configinterface.o(i.ictlSetResolution))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4eab4bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendCameraMsg
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4bd7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChResolution
<LI><a href="#[71ecbcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;imageRequest
</UL><P><STRONG><a name="[4eab000]"></a>ictlSetSpeakerVolume</STRONG> (ARM, 112 bytes, Stack size 16 bytes, configinterface.o(i.ictlSetSpeakerVolume))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4eab4bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendCameraMsg
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4bb94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_ChSpeakerVolume
</UL><P><STRONG><a name="[4eabc90]"></a>ictlSetUser</STRONG> (ARM, 240 bytes, Stack size 24 bytes, configinterface.o(i.ictlSetUser))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4eabc1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAuthGetUser
<LI><a href="#[4eabba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;IsMoreThanOneAdmin
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4e4da1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAuthSetUser
<LI><a href="#[4eabb34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_auth_id
<LI><a href="#[4eabab8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;RebuildConfigParam_Auth
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4c128]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUser
<LI><a href="#[71ecb5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;authRequest
</UL><P><STRONG><a name="[4eab808]"></a>ictlSetUserCheck</STRONG> (ARM, 128 bytes, Stack size 16 bytes, configinterface.o(i.ictlSetUserCheck))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4e4d9a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpEnableUserCheck
<LI><a href="#[4eab794]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_auth_enable
<LI><a href="#[4eab71c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_auth_disable
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4c03c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUserCheck
<LI><a href="#[71ecb5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;authRequest
</UL><P><STRONG><a name="[4eaaae0]"></a>ictlSetWlan</STRONG> (ARM, 1388 bytes, Stack size 80 bytes, configinterface.o(i.ictlSetWlan))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4def4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[4eaa9f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpString2Long
<LI><a href="#[4eaa974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetWlanOperationMode
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4def554]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpMyStrncpy
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4deeb74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpHex2Char
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4b7c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetWlan
<LI><a href="#[71ed1a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbWlanRequest
</UL><P><STRONG><a name="[789fd50]"></a>iis_play_isr</STRONG> (ARM, 112 bytes, Stack size 16 bytes, W99702_WM8978.o(i.iis_play_isr))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[789fdc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioPlayCheck
<LI><a href="#[4c2ef7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_acknowledge
</UL><BR>[Address Reference Count : 1]<UL><LI> W99702_WM8978.o(i.wm8978StartPlay)
</UL><P><STRONG><a name="[789fcd8]"></a>iis_play_isr_dsr</STRONG> (ARM, 100 bytes, Stack size 16 bytes, W99702_WM8978.o(i.iis_play_isr_dsr))
<BR><BR>[Calls]<UL><LI><a href="#[4c2ef7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_acknowledge
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
</UL><BR>[Address Reference Count : 1]<UL><LI> W99702_WM8978.o(i.wm8978StartPlay)
</UL><P><STRONG><a name="[789fc68]"></a>iis_rec_isr</STRONG> (ARM, 92 bytes, Stack size 8 bytes, W99702_WM8978.o(i.iis_rec_isr))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[4c2ef7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_acknowledge
</UL><BR>[Address Reference Count : 1]<UL><LI> W99702_WM8978.o(i.wm8978StartRecord)
</UL><P><STRONG><a name="[789fbf4]"></a>iis_rec_isr_dsr</STRONG> (ARM, 92 bytes, Stack size 8 bytes, W99702_WM8978.o(i.iis_rec_isr_dsr))
<BR><BR>[Calls]<UL><LI><a href="#[4c2ef7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_acknowledge
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
</UL><BR>[Address Reference Count : 1]<UL><LI> W99702_WM8978.o(i.wm8978StartRecord)
</UL><P><STRONG><a name="[755e338]"></a>imaadpcmBlockEnc</STRONG> (ARM, 56 bytes, Stack size 24 bytes, api.o(i.imaadpcmBlockEnc))
<BR><BR>[Calls]<UL><LI><a href="#[7dcd968]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ImaBlockMashI
</UL><BR>[Called By]<UL><LI><a href="#[75613d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauRecord_IMA_ADPCM
</UL><P><STRONG><a name="[755f254]"></a>imaadpcmInit</STRONG> (ARM, 96 bytes, Stack size 24 bytes, api.o(i.imaadpcmInit))
<BR><BR>[Calls]<UL><LI><a href="#[7dcda50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;initImaTable
<LI><a href="#[7dcd9dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ImaSamplesIn
</UL><BR>[Called By]<UL><LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
</UL><P><STRONG><a name="[755f1d8]"></a>imaadpcmSamplePerBlock</STRONG> (ARM, 12 bytes, Stack size 0 bytes, api.o(i.imaadpcmSamplePerBlock))
<BR>[Called By]<UL><LI><a href="#[75613d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauRecord_IMA_ADPCM
<LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
</UL><P><STRONG><a name="[71ecbcc]"></a>imageRequest</STRONG> (ARM, 280 bytes, Stack size 56 bytes, vp_com.o(i.imageRequest))
<BR><BR>[Calls]<UL><LI><a href="#[71ed618]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBRead
<LI><a href="#[71ed5a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBResetForVCom
<LI><a href="#[71ee23c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrimageSettingStru
<LI><a href="#[4eab530]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetResolution
<LI><a href="#[4eab1e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetFramerate
<LI><a href="#[4eab350]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetQuality
<LI><a href="#[4eaac30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlEnableMotionDetect
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[71ed6f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;statusReply
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
</UL><P><STRONG><a name="[9c0a498]"></a>inc_byte_array</STRONG> (ARM, 36 bytes, Stack size 0 bytes, common.o(i.inc_byte_array))
<BR>[Called By]<UL><LI><a href="#[9cf6ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_key_request
</UL><P><STRONG><a name="[7dcda50]"></a>initImaTable</STRONG> (ARM, 96 bytes, Stack size 0 bytes, ima_rw.o(i.initImaTable))
<BR>[Called By]<UL><LI><a href="#[755f254]">&lt&lt</a>&nbsp;&nbsp;&nbsp;imaadpcmInit
</UL><P><STRONG><a name="[71ecaec]"></a>initRequest</STRONG> (ARM, 1064 bytes, Stack size 1712 bytes, vp_com.o(i.initRequest))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4eaabc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlGetIP
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4eab25c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlGetFramerateCapalibity
<LI><a href="#[4eab16c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlGetFraemrate
<LI><a href="#[4eab3c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlGetQualityCapability
<LI><a href="#[4eab2dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlGetQuality
<LI><a href="#[4eaacac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlIsMotionDetectEnabled
<LI><a href="#[4eab444]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlGetResolution
<LI><a href="#[4eab880]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlGetUser
<LI><a href="#[4eab6a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlGetUserCheck
<LI><a href="#[4eaada4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlGetMediaFoamat
<LI><a href="#[4dee54c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlGetMac
<LI><a href="#[4deea94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpChar2Hex
<LI><a href="#[4eaa904]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlGetWlan
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[71edc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrinitialInfoLenth
<LI><a href="#[71edb98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrinitialInfoStru
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[71f3fe8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBWrite_Again
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
</UL><P><STRONG><a name="[759f610]"></a>initSerialBus</STRONG> (ARM, 108 bytes, Stack size 8 bytes, Dsp_i2c.o(i.initSerialBus))
<BR><BR>[Calls]<UL><LI><a href="#[759f5a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2c_delay
</UL><BR>[Called By]<UL><LI><a href="#[759f77c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;i2cInitSerialBus
</UL><P><STRONG><a name="[7e91c80]"></a>init_ISP_Setting</STRONG> (ARM, 132 bytes, Stack size 8 bytes, dsp_init.o(i.init_ISP_Setting))
<BR><BR>[Calls]<UL><LI><a href="#[75cd75c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sysCacheState
<LI><a href="#[759f77c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cInitSerialBus
</UL><BR>[Called By]<UL><LI><a href="#[5456a80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dspInitialization
</UL><P><STRONG><a name="[7e916ec]"></a>init_ISP_Wnd</STRONG> (ARM, 1072 bytes, Stack size 40 bytes, dsp_init.o(i.init_ISP_Wnd))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[7e91ba0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV7670
<LI><a href="#[7e91c10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV9650
<LI><a href="#[7e91b2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_PO6030K
</UL><P><STRONG><a name="[7e91ba0]"></a>init_OV7670</STRONG> (ARM, 1000 bytes, Stack size 40 bytes, dsp_init.o(i.init_OV7670))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[759f430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cSetDeviceSlaveAddr
<LI><a href="#[881ea58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CAM_SensorPowerOn
<LI><a href="#[759f4ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cGetSerialBusCtrl
<LI><a href="#[759f77c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cInitSerialBus
<LI><a href="#[4e4c8f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cReadI2C
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[7e91b2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_PO6030K
<LI><a href="#[4e4c884]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cWriteI2C
<LI><a href="#[7e916ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_ISP_Wnd
</UL><BR>[Called By]<UL><LI><a href="#[5456a80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dspInitialization
</UL><P><STRONG><a name="[7e91c10]"></a>init_OV9650</STRONG> (ARM, 908 bytes, Stack size 56 bytes, dsp_init.o(i.init_OV9650))
<BR><BR>[Calls]<UL><LI><a href="#[759f430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cSetDeviceSlaveAddr
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[881ebb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SuspendTvp5150
<LI><a href="#[881ead0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CAM_SuspendTV
<LI><a href="#[881ea58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CAM_SensorPowerOn
<LI><a href="#[88207dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sensor_SetZoom
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[881eb44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CAM_SetZoom
<LI><a href="#[759f4ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cGetSerialBusCtrl
<LI><a href="#[759f77c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cInitSerialBus
<LI><a href="#[4e4c8f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cReadI2C
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4e4c884]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cWriteI2C
<LI><a href="#[7e916ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_ISP_Wnd
</UL><BR>[Called By]<UL><LI><a href="#[5456a80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dspInitialization
</UL><P><STRONG><a name="[7e91b2c]"></a>init_PO6030K</STRONG> (ARM, 444 bytes, Stack size 24 bytes, dsp_init.o(i.init_PO6030K))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[759f430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cSetDeviceSlaveAddr
<LI><a href="#[881ea58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CAM_SensorPowerOn
<LI><a href="#[759f4ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cGetSerialBusCtrl
<LI><a href="#[759f77c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cInitSerialBus
<LI><a href="#[4e4c8f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cReadI2C
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[4e4c884]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cWriteI2C
<LI><a href="#[7e916ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_ISP_Wnd
</UL><BR>[Called By]<UL><LI><a href="#[5456a80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dspInitialization
<LI><a href="#[7e91ba0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV7670
</UL><P><STRONG><a name="[7ff806c]"></a>init_frame_heap</STRONG> (ARM, 212 bytes, Stack size 40 bytes, frame.o(i.init_frame_heap))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7ff7ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufRSFSLOTNew
<LI><a href="#[77e7990]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtspBufIsValid
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[7f3e5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;config_frameheap
</UL><P><STRONG><a name="[77abff4]"></a>init_get</STRONG> (ARM, 432 bytes, Stack size 24 bytes, get.o(i.init_get))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[732a970]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ffGetFile
<LI><a href="#[785f888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_New
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[8218e2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_r_not_found
<LI><a href="#[732a81c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ffGetFileSize
<LI><a href="#[732a890]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ffGetFilePtr
<LI><a href="#[77ac1c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_r_bad_request
<LI><a href="#[81f91b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_r_request_ok_param
<LI><a href="#[81f9234]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_r_request_ok
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[77ac148]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_header_end
<LI><a href="#[81ec3b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;write_body
</UL><P><STRONG><a name="[5924094]"></a>init_get_audio</STRONG> (ARM, 12 bytes, Stack size 0 bytes, input-oss.o(i.init_get_audio))
<BR>[Called By]<UL><LI><a href="#[5927be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_start
</UL><P><STRONG><a name="[5924108]"></a>init_get_video</STRONG> (ARM, 12 bytes, Stack size 0 bytes, input-v4l.o(i.init_get_video))
<BR>[Called By]<UL><LI><a href="#[5927be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_start
</UL><P><STRONG><a name="[4f731a0]"></a>init_state_machine</STRONG> (ARM, 56 bytes, Stack size 16 bytes, er_ns_nav.o(i.init_state_machine))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4f75ba0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_current_rovio_state
</UL><BR>[Called By]<UL><LI><a href="#[4f77e9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_nav_thread
</UL><P><STRONG><a name="[59244b0]"></a>init_upnp</STRONG> (ARM, 180 bytes, Stack size 32 bytes, upnp.o(i.init_upnp))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
</UL><BR>[Called By]<UL><LI><a href="#[5927be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_start
</UL><P><STRONG><a name="[59242e4]"></a>init_wbdevice</STRONG> (ARM, 12 bytes, Stack size 0 bytes, RtspServer.o(i.init_wbdevice))
<BR>[Called By]<UL><LI><a href="#[5927be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_start
</UL><P><STRONG><a name="[852f918]"></a>Cyg_Mempool_Variable_Implementation::insert_free_block(Cyg_Mempool_Variable_Implementation::memdq*)</STRONG> (ARM, 196 bytes, Stack size 0 bytes, memvar.o(i.insert_free_block__35Cyg_Mempool_Variable_ImplementationFPQ235Cyg_Mempool_Variable_Implementation5memdq))
<BR>[Called By]<UL><LI><a href="#[852f9e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::resize_alloc(unsigned char*, int, int*)
<LI><a href="#[5cef788]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::free(unsigned char*, int)
</UL><P><STRONG><a name="[7ddf928]"></a>insert_to_region</STRONG> (ARM, 464 bytes, Stack size 40 bytes, cmp_img.o(i.insert_to_region))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[5456468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;compare_image
</UL><P><STRONG><a name="[77e789c]"></a>interleave_disconnect</STRONG> (ARM, 20 bytes, Stack size 0 bytes, rtsp.o(i.interleave_disconnect))
<BR>[Called By]<UL><LI><a href="#[77e7918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;del_rtp_endpoint
</UL><P><STRONG><a name="[77e7378]"></a>interleave_send</STRONG> (ARM, 296 bytes, Stack size 40 bytes, rtsp.o(i.interleave_send))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[811952c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;avail_send_buf
<LI><a href="#[81194bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_data
</UL><BR>[Called By]<UL><LI><a href="#[77e73ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_rtp_packet
</UL><P><STRONG><a name="[558f900]"></a>iothread_EventInterrupt</STRONG> (ARM, 40 bytes, Stack size 8 bytes, vp_interfaces.o(i.iothread_EventInterrupt))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[755e24c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;iothread_EventNotify
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4eab4bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendCameraMsg
</UL><P><STRONG><a name="[755e24c]"></a>iothread_EventNotify</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_interfaces.o(i.iothread_EventNotify))
<BR><BR>[Calls]<UL><LI><a href="#[75b4e58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_cond_broadcast
</UL><BR>[Called By]<UL><LI><a href="#[7560bc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauRecord_AttachBuffer
<LI><a href="#[558f900]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_EventInterrupt
<LI><a href="#[5459224]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnDetectMotion
<LI><a href="#[5459a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_StartEncode
<LI><a href="#[545654c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegSendEncBuffer
<LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[5456810]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encWaitOK
</UL><P><STRONG><a name="[558f9cc]"></a>iothread_EventRead</STRONG> (ARM, 344 bytes, Stack size 40 bytes, vp_interfaces.o(i.iothread_EventRead))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[54ad9d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4encGetBuffer
<LI><a href="#[4db5224]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listDetach
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[55046dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegGetEncBuffer
<LI><a href="#[7560048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauLock
<LI><a href="#[755ffcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauGetEncBuffer_Local
<LI><a href="#[75600b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauUnlock
<LI><a href="#[537f1f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdGetSettings
<LI><a href="#[537f184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdLock
<LI><a href="#[537f264]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdUnlock
<LI><a href="#[75ee858]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_cond_wait
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[56dc200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_GetOneImage
<LI><a href="#[5926d0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspGetBackAudio
<LI><a href="#[5926d84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspGetBackVideo
</UL><P><STRONG><a name="[4d840b4]"></a>iothread_Init</STRONG> (ARM, 92 bytes, Stack size 16 bytes, vp_interfaces.o(i.iothread_Init))
<BR><BR>[Calls]<UL><LI><a href="#[4e4a0ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_init
<LI><a href="#[75eec78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_cond_init
<LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
</UL><BR>[Called By]<UL><LI><a href="#[4a54f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInit
</UL><P><STRONG><a name="[558f88c]"></a>iothread_Write</STRONG> (ARM, 400 bytes, Stack size 32 bytes, vp_interfaces.o(i.iothread_Write))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[5456730]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegLock
<LI><a href="#[537dfe4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4decGetBuffer
<LI><a href="#[5504f38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegDecSetHW
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[54564dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegUnlock
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[54acefc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4decPrepare
<LI><a href="#[7560124]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauGetEncBuffer_Remote
<LI><a href="#[755fc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauDecode
<LI><a href="#[550490c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;decodeJPEGPrimaryImage
<LI><a href="#[537e0d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdUpdateRemote
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4af08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_GetAudio
</UL><P><STRONG><a name="[5b5d9e8]"></a>is_checksum_correct</STRONG> (ARM, 36 bytes, Stack size 12 bytes, er_ns_cmds.o(i.is_checksum_correct))
<BR><BR>[Calls]<UL><LI><a href="#[5b5da60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_set_checksum
</UL><BR>[Called By]<UL><LI><a href="#[4f74eac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_get_firmware_timestamp
<LI><a href="#[4f74f2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_get_serial_number
<LI><a href="#[4f75034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_get_version
<LI><a href="#[5b5d974]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_read_header
<LI><a href="#[5b5d880]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_read_template_packet
</UL><P><STRONG><a name="[4f74328]"></a>is_rovio_docked</STRONG> (ARM, 20 bytes, Stack size 0 bytes, er_mcu_cmds.o(i.is_rovio_docked))
<BR>[Called By]<UL><LI><a href="#[4fc20bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_start_play
<LI><a href="#[4fe1c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_store_home
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
<LI><a href="#[4f73b70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_mcu_cmd_with_obstacle_avoidance
<LI><a href="#[4fc1e78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;smc_go_home_and_dock
</UL><P><STRONG><a name="[4f7439c]"></a>is_rovio_low_on_battery</STRONG> (ARM, 24 bytes, Stack size 0 bytes, er_mcu_cmds.o(i.is_rovio_low_on_battery))
<BR>[Called By]<UL><LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[55047a4]"></a>jpegDecGetImage</STRONG> (ARM, 236 bytes, Stack size 16 bytes, jpeglib.o(i.jpegDecGetImage))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[550490c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;decodeJPEGPrimaryImage
</UL><P><STRONG><a name="[5504890]"></a>jpegDecSetBasicOption</STRONG> (ARM, 240 bytes, Stack size 8 bytes, jpeglib.o(i.jpegDecSetBasicOption))
<BR>[Called By]<UL><LI><a href="#[550490c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;decodeJPEGPrimaryImage
</UL><P><STRONG><a name="[5504818]"></a>jpegDecStartProcess</STRONG> (ARM, 48 bytes, Stack size 0 bytes, jpeglib.o(i.jpegDecStartProcess))
<BR>[Called By]<UL><LI><a href="#[550490c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;decodeJPEGPrimaryImage
</UL><P><STRONG><a name="[5504ce0]"></a>jpegEncSetBasicOption</STRONG> (ARM, 496 bytes, Stack size 48 bytes, jpeglib.o(i.jpegEncSetBasicOption))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[54566ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;encodeJPEGwithThumbnailImage
</UL><P><STRONG><a name="[5504be0]"></a>jpegEncSetMemoryAccessMode</STRONG> (ARM, 32 bytes, Stack size 0 bytes, jpeglib.o(i.jpegEncSetMemoryAccessMode))
<BR>[Called By]<UL><LI><a href="#[54566ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;encodeJPEGwithThumbnailImage
</UL><P><STRONG><a name="[5504c60]"></a>jpegEncSetMemorySWOnTheFly</STRONG> (ARM, 76 bytes, Stack size 0 bytes, jpeglib.o(i.jpegEncSetMemorySWOnTheFly))
<BR>[Called By]<UL><LI><a href="#[54566ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;encodeJPEGwithThumbnailImage
</UL><P><STRONG><a name="[5504a74]"></a>jpegEncStartProcess</STRONG> (ARM, 56 bytes, Stack size 0 bytes, jpeglib.o(i.jpegEncStartProcess))
<BR>[Called By]<UL><LI><a href="#[54566ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;encodeJPEGwithThumbnailImage
</UL><P><STRONG><a name="[5504aec]"></a>jpegEncWriteQTable</STRONG> (ARM, 104 bytes, Stack size 20 bytes, jpeglib.o(i.jpegEncWriteQTable))
<BR>[Called By]<UL><LI><a href="#[54566ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;encodeJPEGwithThumbnailImage
</UL><P><STRONG><a name="[5504d5c]"></a>jpegInitializeEngine</STRONG> (ARM, 184 bytes, Stack size 0 bytes, jpeglib.o(i.jpegInitializeEngine))
<BR>[Called By]<UL><LI><a href="#[550490c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;decodeJPEGPrimaryImage
<LI><a href="#[54566ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;encodeJPEGwithThumbnailImage
<LI><a href="#[558f5b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableJPEGEncoder
</UL><P><STRONG><a name="[550510c]"></a>jpegIntHandler</STRONG> (ARM, 172 bytes, Stack size 16 bytes, jpeglib.o(i.jpegIntHandler))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[4c2ef7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_acknowledge
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_jpeg.o(i.vjpegInit)
</UL><P><STRONG><a name="[5505180]"></a>jpegIntHandler_DSR</STRONG> (ARM, 148 bytes, Stack size 8 bytes, jpeglib.o(i.jpegIntHandler_DSR))
<BR><BR>[Calls]<UL><LI><a href="#[4c2ef7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_acknowledge
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_jpeg.o(i.vjpegInit)
</UL><P><STRONG><a name="[5505094]"></a>jpegSetIRQHandler</STRONG> (ARM, 80 bytes, Stack size 0 bytes, jpeglib.o(i.jpegSetIRQHandler))
<BR>[Called By]<UL><LI><a href="#[4d84354]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegInit
</UL><P><STRONG><a name="[5504b64]"></a>jpegSetMemoryAddress</STRONG> (ARM, 60 bytes, Stack size 8 bytes, jpeglib.o(i.jpegSetMemoryAddress))
<BR>[Called By]<UL><LI><a href="#[550490c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;decodeJPEGPrimaryImage
<LI><a href="#[54566ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;encodeJPEGwithThumbnailImage
</UL><P><STRONG><a name="[7966fd4]"></a>l2_packet_deinit</STRONG> (ARM, 48 bytes, Stack size 8 bytes, l2_packet_none.o(i.l2_packet_deinit))
<BR><BR>[Calls]<UL><LI><a href="#[9be37d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_unregister_read_sock
<LI><a href="#[9add0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pipe_destroy
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[7968578]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_deinit
<LI><a href="#[796ef34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
<LI><a href="#[8312a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_interface_status
</UL><P><STRONG><a name="[7967f30]"></a>l2_packet_get_own_addr</STRONG> (ARM, 32 bytes, Stack size 8 bytes, l2_packet_none.o(i.l2_packet_get_own_addr))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[7967fac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_driver_init
</UL><P><STRONG><a name="[7967ebc]"></a>l2_packet_init</STRONG> (ARM, 288 bytes, Stack size 32 bytes, l2_packet_none.o(i.l2_packet_init))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[75ee8cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pipe_create
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4d0cb38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fputs
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[7967398]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_read_sock
</UL><BR>[Called By]<UL><LI><a href="#[9c8aaf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_init
<LI><a href="#[7967fac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_driver_init
</UL><P><STRONG><a name="[83107f4]"></a>l2_packet_notify_auth_start</STRONG> (ARM, 4 bytes, Stack size 0 bytes, l2_packet_none.o(i.l2_packet_notify_auth_start))
<BR>[Called By]<UL><LI><a href="#[8312d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
</UL><P><STRONG><a name="[7966b34]"></a>l2_packet_send</STRONG> (ARM, 188 bytes, Stack size 80 bytes, l2_packet_none.o(i.l2_packet_send))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
</UL><BR>[Called By]<UL><LI><a href="#[9c8bbfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_eapol_send
<LI><a href="#[796d588]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_ether_send
</UL><P><STRONG><a name="[87ac34c]"></a>lcd</STRONG> (ARM, 56 bytes, Stack size 8 bytes, lcd.o(i.lcd))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[87ac34c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lcd
</UL><BR>[Called By]<UL><LI><a href="#[7d7fd58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capSetDdaFactor
<LI><a href="#[87ac2c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capSinglePipePolyPhaseFilter
<LI><a href="#[87ac34c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;lcd
</UL><P><STRONG><a name="[4f292a8]"></a>ledClearError</STRONG> (ARM, 68 bytes, Stack size 16 bytes, PeriodTask_LED.o(i.ledClearError))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[727d158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledUpdateStatus
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4f2b04c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_mcuRecv
</UL><P><STRONG><a name="[4e49db0]"></a>ledClearFactoryDefault</STRONG> (ARM, 48 bytes, Stack size 8 bytes, PeriodTask_LED.o(i.ledClearFactoryDefault))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[727d158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledUpdateStatus
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e31d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_ResetFlag_FactoryDefault
</UL><P><STRONG><a name="[4a54f80]"></a>ledError</STRONG> (ARM, 64 bytes, Stack size 16 bytes, PeriodTask_LED.o(i.ledError))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[727d158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledUpdateStatus
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4f2a058]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_mcuSendCommand_Error
<LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[755fa3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartPlay
<LI><a href="#[755edc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartRecord
<LI><a href="#[54573a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStart
</UL><P><STRONG><a name="[4a5600c]"></a>ledGetResult</STRONG> (ARM, 68 bytes, Stack size 16 bytes, PeriodTask_LED.o(i.ledGetResult))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4a56080]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsOnboardTestHandler
</UL><P><STRONG><a name="[4a551c8]"></a>ledInit</STRONG> (ARM, 124 bytes, Stack size 8 bytes, PeriodTask_LED.o(i.ledInit))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4e4a0ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_init
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a55bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask
</UL><BR>[Called By]<UL><LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[4e4dc6c]"></a>ledSetFactoryDefault</STRONG> (ARM, 48 bytes, Stack size 8 bytes, PeriodTask_LED.o(i.ledSetFactoryDefault))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[727d158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledUpdateStatus
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4a55154]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReadCameraParam
</UL><P><STRONG><a name="[72cf544]"></a>ledSetLowBattery</STRONG> (ARM, 64 bytes, Stack size 16 bytes, PeriodTask_LED.o(i.ledSetLowBattery))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[727d158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledUpdateStatus
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[72cfa18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckBattery
</UL><P><STRONG><a name="[727b338]"></a>ledSetNetwork</STRONG> (ARM, 60 bytes, Stack size 16 bytes, PeriodTask_LED.o(i.ledSetNetwork))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[727d158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledUpdateStatus
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[8019944]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_Active
<LI><a href="#[801a2d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_NoActive
<LI><a href="#[8019be0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_TryConnectOver
<LI><a href="#[5927be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_start
<LI><a href="#[58d2bac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_connected_callback
<LI><a href="#[58d2c28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_connecting_callback
</UL><P><STRONG><a name="[727b638]"></a>ledShowState_Booting</STRONG> (ARM, 12 bytes, Stack size 0 bytes, PeriodTask_LED.o(i.ledShowState_Booting))
<BR><BR>[Calls]<UL><LI><a href="#[727eb44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState
</UL><BR>[Called By]<UL><LI><a href="#[727d158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledUpdateStatus
</UL><P><STRONG><a name="[727b5b4]"></a>ledShowState_Booting_LowBattery</STRONG> (ARM, 12 bytes, Stack size 0 bytes, PeriodTask_LED.o(i.ledShowState_Booting_LowBattery))
<BR><BR>[Calls]<UL><LI><a href="#[727eb44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState
</UL><BR>[Called By]<UL><LI><a href="#[727d158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledUpdateStatus
</UL><P><STRONG><a name="[727b6b4]"></a>ledShowState_Connecting</STRONG> (ARM, 12 bytes, Stack size 0 bytes, PeriodTask_LED.o(i.ledShowState_Connecting))
<BR><BR>[Calls]<UL><LI><a href="#[727eb44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState
</UL><BR>[Called By]<UL><LI><a href="#[727d158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledUpdateStatus
</UL><P><STRONG><a name="[727b3ac]"></a>ledShowState_Error</STRONG> (ARM, 212 bytes, Stack size 536 bytes, PeriodTask_LED.o(i.ledShowState_Error))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[727eb44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[727d158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledUpdateStatus
</UL><P><STRONG><a name="[727b4ac]"></a>ledShowState_NetworkReady_LowBattery</STRONG> (ARM, 12 bytes, Stack size 0 bytes, PeriodTask_LED.o(i.ledShowState_NetworkReady_LowBattery))
<BR><BR>[Calls]<UL><LI><a href="#[727eb44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState
</UL><BR>[Called By]<UL><LI><a href="#[727d158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledUpdateStatus
</UL><P><STRONG><a name="[4e4dbf0]"></a>ledShowState_PoweredOn</STRONG> (ARM, 12 bytes, Stack size 0 bytes, PeriodTask_LED.o(i.ledShowState_PoweredOn))
<BR><BR>[Calls]<UL><LI><a href="#[727eb44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState
</UL><BR>[Called By]<UL><LI><a href="#[4a55154]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReadCameraParam
</UL><P><STRONG><a name="[727b7b0]"></a>ledShowState_Ready</STRONG> (ARM, 12 bytes, Stack size 0 bytes, PeriodTask_LED.o(i.ledShowState_Ready))
<BR><BR>[Calls]<UL><LI><a href="#[727eb44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState
</UL><BR>[Called By]<UL><LI><a href="#[727d158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledUpdateStatus
</UL><P><STRONG><a name="[727b9a4]"></a>ledShowState_SetDefault</STRONG> (ARM, 12 bytes, Stack size 0 bytes, PeriodTask_LED.o(i.ledShowState_SetDefault))
<BR><BR>[Calls]<UL><LI><a href="#[727eb44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState
</UL><BR>[Called By]<UL><LI><a href="#[727d158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledUpdateStatus
</UL><P><STRONG><a name="[727b928]"></a>ledShowState_Streaming</STRONG> (ARM, 12 bytes, Stack size 0 bytes, PeriodTask_LED.o(i.ledShowState_Streaming))
<BR><BR>[Calls]<UL><LI><a href="#[727eb44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState
</UL><BR>[Called By]<UL><LI><a href="#[727d158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledUpdateStatus
</UL><P><STRONG><a name="[727b828]"></a>ledShowState_Streaming_LowBattery</STRONG> (ARM, 12 bytes, Stack size 0 bytes, PeriodTask_LED.o(i.ledShowState_Streaming_LowBattery))
<BR><BR>[Calls]<UL><LI><a href="#[727eb44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState
</UL><BR>[Called By]<UL><LI><a href="#[727d158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledUpdateStatus
</UL><P><STRONG><a name="[727b424]"></a>ledShowState_TryConnect_LowBattery</STRONG> (ARM, 12 bytes, Stack size 0 bytes, PeriodTask_LED.o(i.ledShowState_TryConnect_LowBattery))
<BR><BR>[Calls]<UL><LI><a href="#[727eb44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState
</UL><BR>[Called By]<UL><LI><a href="#[727d158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledUpdateStatus
</UL><P><STRONG><a name="[727b2c8]"></a>ledSuspend</STRONG> (ARM, 24 bytes, Stack size 8 bytes, PeriodTask_LED.o(i.ledSuspend))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
</UL><BR>[Called By]<UL><LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[727b258]"></a>ledWakeup</STRONG> (ARM, 8 bytes, Stack size 0 bytes, PeriodTask_LED.o(i.ledWakeup))
<BR><BR>[Calls]<UL><LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[81dd2dc]"></a>linear2alaw</STRONG> (ARM, 100 bytes, Stack size 16 bytes, g711.o(i.linear2alaw))
<BR><BR>[Calls]<UL><LI><a href="#[89ab654]">&gt&gt</a>&nbsp;&nbsp;&nbsp;search
</UL><BR>[Address Reference Count : 1]<UL><LI> aulaw_interface.o(i.EncodeLAW)
</UL><P><STRONG><a name="[81dd26c]"></a>linear2ulaw</STRONG> (ARM, 76 bytes, Stack size 16 bytes, g711.o(i.linear2ulaw))
<BR><BR>[Calls]<UL><LI><a href="#[89ab654]">&gt&gt</a>&nbsp;&nbsp;&nbsp;search
</UL><BR>[Address Reference Count : 1]<UL><LI> aulaw_interface.o(i.EncodeLAW)
</UL><P><STRONG><a name="[4efdcf8]"></a>listAttach</STRONG> (ARM, 28 bytes, Stack size 0 bytes, PeriodTask.o(i.listAttach))
<BR>[Called By]<UL><LI><a href="#[785f7c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[7318338]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Implement
<LI><a href="#[5a2ffd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__memInit
<LI><a href="#[755ff5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauDecode
<LI><a href="#[7560bc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauRecord_AttachBuffer
<LI><a href="#[755e588]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufEncMsgDecRef
<LI><a href="#[4a55bec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdAddTask
<LI><a href="#[4eff19c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdRun
<LI><a href="#[7566420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauPlayCallback
<LI><a href="#[75620ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnRecord
<LI><a href="#[54565c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegAddEncBuffer
<LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[5422b3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encDoneCallback
</UL><P><STRONG><a name="[54ad664]"></a>listAttach</STRONG> (ARM, 28 bytes, Stack size 0 bytes, PeriodTask.o(i.listAttach), UNUSED)
<P><STRONG><a name="[5504754]"></a>listAttach</STRONG> (ARM, 28 bytes, Stack size 0 bytes, PeriodTask.o(i.listAttach), UNUSED)
<P><STRONG><a name="[785fa50]"></a>listAttach</STRONG> (ARM, 28 bytes, Stack size 0 bytes, PeriodTask.o(i.listAttach), UNUSED)
<P><STRONG><a name="[755fc80]"></a>listAttach</STRONG> (ARM, 28 bytes, Stack size 0 bytes, PeriodTask.o(i.listAttach), UNUSED)
<P><STRONG><a name="[558f97c]"></a>listDetach</STRONG> (ARM, 32 bytes, Stack size 0 bytes, vp_bitrate_control.o(i.listDetach), UNUSED)
<P><STRONG><a name="[54ad7a4]"></a>listDetach</STRONG> (ARM, 32 bytes, Stack size 0 bytes, vp_bitrate_control.o(i.listDetach), UNUSED)
<P><STRONG><a name="[4efdca8]"></a>listDetach</STRONG> (ARM, 32 bytes, Stack size 0 bytes, vp_bitrate_control.o(i.listDetach), UNUSED)
<P><STRONG><a name="[55044d4]"></a>listDetach</STRONG> (ARM, 32 bytes, Stack size 0 bytes, vp_bitrate_control.o(i.listDetach), UNUSED)
<P><STRONG><a name="[4db5224]"></a>listDetach</STRONG> (ARM, 32 bytes, Stack size 0 bytes, vp_bitrate_control.o(i.listDetach))
<BR>[Called By]<UL><LI><a href="#[785f7c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[785f888]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_New
<LI><a href="#[5504e50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufEncJpegNew
<LI><a href="#[558f9cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_EventRead
<LI><a href="#[4a548fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdDelTask
<LI><a href="#[4eff19c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdRun
<LI><a href="#[7566420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauPlayCallback
<LI><a href="#[75620ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnRecord
<LI><a href="#[5504524]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegClearBuffer
<LI><a href="#[54acc2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4ClearBuffer
<LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[4db5ef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_linkrefresh
<LI><a href="#[558f630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableAudioEncoder
<LI><a href="#[558f798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702WriteOSD
</UL><P><STRONG><a name="[785f838]"></a>listDetach</STRONG> (ARM, 32 bytes, Stack size 0 bytes, vp_bitrate_control.o(i.listDetach), UNUSED)
<P><STRONG><a name="[755e8c8]"></a>listDetach</STRONG> (ARM, 32 bytes, Stack size 0 bytes, vp_bitrate_control.o(i.listDetach), UNUSED)
<P><STRONG><a name="[4efdbe8]"></a>listGetNext</STRONG> (ARM, 20 bytes, Stack size 0 bytes, vp_bitrate_control.o(i.listGetNext), UNUSED)
<P><STRONG><a name="[785f980]"></a>listGetNext</STRONG> (ARM, 20 bytes, Stack size 0 bytes, vp_bitrate_control.o(i.listGetNext), UNUSED)
<P><STRONG><a name="[4db5294]"></a>listGetNext</STRONG> (ARM, 20 bytes, Stack size 0 bytes, vp_bitrate_control.o(i.listGetNext))
<BR>[Called By]<UL><LI><a href="#[785f7c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[785f888]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_New
<LI><a href="#[4eff19c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdRun
<LI><a href="#[4db5ef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_linkrefresh
<LI><a href="#[4db5ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_linkstat
<LI><a href="#[4db6c38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_linkupdate
</UL><P><STRONG><a name="[755fe00]"></a>listLength</STRONG> (ARM, 32 bytes, Stack size 0 bytes, vp_audio.o(i.listLength))
<BR>[Called By]<UL><LI><a href="#[755ff5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauDecode
</UL><P><STRONG><a name="[808c404]"></a>live_init</STRONG> (ARM, 40 bytes, Stack size 8 bytes, live.o(i.live_init))
<BR><BR>[Calls]<UL><LI><a href="#[780fd90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;register_config_context
</UL><BR>[Called By]<UL><LI><a href="#[5923f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RtspServerStart
</UL><P><STRONG><a name="[889f6b8]"></a>lname_to_sname</STRONG> (ARM, 236 bytes, Stack size 24 bytes, WBFAT_LDISK.o(i.lname_to_sname))
<BR><BR>[Calls]<UL><LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[5b5dad8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv10
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4fc219c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
</UL><BR>[Called By]<UL><LI><a href="#[9b5e720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_search_file
<LI><a href="#[88a1160]">&lt&lt</a>&nbsp;&nbsp;&nbsp;generate_short_name
</UL><P><STRONG><a name="[874a664]"></a>localtime</STRONG> (ARM, 844 bytes, Stack size 24 bytes, pppd.o(i.localtime))
<BR><BR>[Calls]<UL><LI><a href="#[544d118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_libc_time_normalize_structtm
</UL><BR>[Called By]<UL><LI><a href="#[874a6d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_vfmtmsg
</UL><P><STRONG><a name="[80b0f00]"></a>localtime_r</STRONG> (ARM, 88 bytes, Stack size 8 bytes, log.o(i.localtime_r))
<BR><BR>[Calls]<UL><LI><a href="#[544d544]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gmtime_r
<LI><a href="#[544d118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_libc_time_normalize_structtm
</UL><BR>[Called By]<UL><LI><a href="#[7843b8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;spook_log
</UL><P><STRONG><a name="[71eca78]"></a>logonRequest</STRONG> (ARM, 236 bytes, Stack size 32 bytes, vp_com.o(i.logonRequest))
<BR><BR>[Calls]<UL><LI><a href="#[71ed618]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBRead
<LI><a href="#[71ed5a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBResetForVCom
<LI><a href="#[71ee4a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrlogonReqStru
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4eaba44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlAuthUser
<LI><a href="#[71ed6f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;statusReply
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
</UL><P><STRONG><a name="[4f74500]"></a>look_for_mag_maximum</STRONG> (ARM, 296 bytes, Stack size 16 bytes, er_ns_nav.o(i.look_for_mag_maximum))
<BR><BR>[Calls]<UL><LI><a href="#[4f75ba0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_current_rovio_state
<LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
</UL><BR>[Called By]<UL><LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[8cc56ec]"></a>lpc</STRONG> (ARM, 264 bytes, Stack size 96 bytes, lpc.o(i.lpc))
<BR><BR>[Calls]<UL><LI><a href="#[8e06738]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Autocorr
<LI><a href="#[8e066c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Lag_window
<LI><a href="#[8e06658]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Levinson
</UL><BR>[Called By]<UL><LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
</UL><P><STRONG><a name="[8cc5ee4]"></a>lpc_exit</STRONG> (ARM, 44 bytes, Stack size 8 bytes, lpc.o(i.lpc_exit))
<BR><BR>[Calls]<UL><LI><a href="#[8e0681c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Levinson_exit
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[88869ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_exit
</UL><P><STRONG><a name="[8cc5834]"></a>lpc_init</STRONG> (ARM, 132 bytes, Stack size 16 bytes, lpc.o(i.lpc_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[8e067a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Levinson_init
<LI><a href="#[8e0681c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Levinson_exit
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8e06890]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Levinson_reset
</UL><BR>[Called By]<UL><LI><a href="#[88868c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_init
</UL><P><STRONG><a name="[8cc6278]"></a>lpc_reset</STRONG> (ARM, 32 bytes, Stack size 8 bytes, lpc.o(i.lpc_reset))
<BR><BR>[Calls]<UL><LI><a href="#[8e06890]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Levinson_reset
</UL><BR>[Called By]<UL><LI><a href="#[8886a98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_reset
</UL><P><STRONG><a name="[8cc5684]"></a>lsp</STRONG> (ARM, 328 bytes, Stack size 128 bytes, lsp.o(i.lsp))
<BR><BR>[Calls]<UL><LI><a href="#[8dff5d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Az_lsp
<LI><a href="#[8def85c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Int_lpc_1and3_2
<LI><a href="#[8dff564]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Q_plsf_5
<LI><a href="#[8cd6bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Int_lpc_1and3
<LI><a href="#[8def7e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Int_lpc_1to3_2
<LI><a href="#[8dbdce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Q_plsf_3
<LI><a href="#[8cd6cd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Int_lpc_1to3
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
</UL><P><STRONG><a name="[8cd6e28]"></a>lsp_avg</STRONG> (ARM, 92 bytes, Stack size 24 bytes, lsp_avg.o(i.lsp_avg))
<BR><BR>[Calls]<UL><LI><a href="#[8d54e30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_msu
</UL><BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cd7474]"></a>lsp_avg_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, lsp_avg.o(i.lsp_avg_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[886ef44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_exit
</UL><P><STRONG><a name="[8cd713c]"></a>lsp_avg_init</STRONG> (ARM, 72 bytes, Stack size 16 bytes, lsp_avg.o(i.lsp_avg_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[886eddc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_init
</UL><P><STRONG><a name="[8cd7b54]"></a>lsp_avg_reset</STRONG> (ARM, 36 bytes, Stack size 8 bytes, lsp_avg.o(i.lsp_avg_reset))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[886f0ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_reset
</UL><P><STRONG><a name="[8cc5e74]"></a>lsp_exit</STRONG> (ARM, 48 bytes, Stack size 8 bytes, lsp.o(i.lsp_exit))
<BR><BR>[Calls]<UL><LI><a href="#[8dff640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Q_plsf_exit
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[88869ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_exit
</UL><P><STRONG><a name="[8cc5ae4]"></a>lsp_init</STRONG> (ARM, 100 bytes, Stack size 16 bytes, lsp.o(i.lsp_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[8dff6b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Q_plsf_init
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[8dff720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Q_plsf_reset
</UL><BR>[Called By]<UL><LI><a href="#[88868c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_init
</UL><P><STRONG><a name="[8cc6208]"></a>lsp_reset</STRONG> (ARM, 60 bytes, Stack size 8 bytes, lsp.o(i.lsp_reset))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[8dff720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Q_plsf_reset
</UL><BR>[Called By]<UL><LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
<LI><a href="#[8886a98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_reset
</UL><P><STRONG><a name="[5a64cfc]"></a>mailError</STRONG> (ARM, 128 bytes, Stack size 32 bytes, libmail.o(i.mailError))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[5a64d6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mailTalk
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
</UL><BR>[Called By]<UL><LI><a href="#[5950b40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pushMail
</UL><P><STRONG><a name="[71ecd9c]"></a>mailRequest</STRONG> (ARM, 108 bytes, Stack size 64 bytes, vp_com.o(i.mailRequest))
<BR><BR>[Calls]<UL><LI><a href="#[71ed618]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBRead
<LI><a href="#[71ed5a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBResetForVCom
<LI><a href="#[71ee148]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdremailSettingStru
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[71ed6f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;statusReply
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
</UL><P><STRONG><a name="[5a64d6c]"></a>mailTalk</STRONG> (ARM, 52 bytes, Stack size 8 bytes, libmail.o(i.mailTalk))
<BR><BR>[Calls]<UL><LI><a href="#[5a688b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mailPost
<LI><a href="#[5a68848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mailAck
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[5a64cfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailError
<LI><a href="#[5a680ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailLogin
<LI><a href="#[5950b40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pushMail
</UL><P><STRONG><a name="[4e4a5d4]"></a>mail_mem_init</STRONG> (ARM, 28 bytes, Stack size 8 bytes, libmail.o(i.mail_mem_init))
<BR><BR>[Calls]<UL><LI><a href="#[49dbcf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__mgmtInit
</UL><BR>[Called By]<UL><LI><a href="#[4e4a6c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ResetOtherThread
</UL><P><STRONG><a name="[4a55678]"></a>main</STRONG> (ARM, 372 bytes, Stack size 24 bytes, CameraTest.o(i.main))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4a55508]">&gt&gt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInitClock
<LI><a href="#[4a5548c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSetFMIReferenceClock
<LI><a href="#[4a5540c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSetSDOutputClockbykHz
<LI><a href="#[4a55388]">&gt&gt</a>&nbsp;&nbsp;&nbsp;uart_init_setting_block_mode
<LI><a href="#[4a5531c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdInit
<LI><a href="#[4a552a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyInitDevice
<LI><a href="#[4a551c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledInit
<LI><a href="#[4a55154]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ReadCameraParam
<LI><a href="#[4a55a10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_start
<LI><a href="#[4a550e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcuInit
<LI><a href="#[4a5506c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask_CheckBattery
<LI><a href="#[4a54ff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;IsWirelessConfigDone
<LI><a href="#[4a54f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledError
<LI><a href="#[4a54f0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInit
<LI><a href="#[4a54e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Read_FlashFile
<LI><a href="#[4a54e1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;er_init_ns_nav_priority
<LI><a href="#[4a54da0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;force_net_dev_linked
<LI><a href="#[4a54d2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_do_net_init
<LI><a href="#[4a54cb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_init
<LI><a href="#[4a54c34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask_CheckSuspend
<LI><a href="#[4a54bbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask_CheckUSB
<LI><a href="#[4a54b44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpInitHashMemPool
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a54acc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;registerCustomCmd
<LI><a href="#[4a549dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;er_register_ns_cgi
<LI><a href="#[4a5496c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ServerStart
</UL><BR>[Called By]<UL><LI><a href="#[8a905bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_libc_invoke_main
</UL><P><STRONG><a name="[9b26244]"></a>mark_block_data</STRONG> (ARM, 424 bytes, Stack size 40 bytes, sm_l2p.o(i.mark_block_data))
<BR><BR>[Calls]<UL><LI><a href="#[7648eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_L2PTable_Init
<LI><a href="#[760e474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_BlockErase
<LI><a href="#[9b267cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SM_AddFreeBlock
<LI><a href="#[760de84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_SetMarkFlag
</UL><BR>[Called By]<UL><LI><a href="#[7648dd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSMDelete
</UL><P><STRONG><a name="[83355e8]"></a>mark_waypoints_as_good_and_bad_using_dist</STRONG> (ARM, 620 bytes, Stack size 40 bytes, waypoint-outlier-rejector-using-dist.o(i.mark_waypoints_as_good_and_bad_using_dist))
<BR><BR>[Calls]<UL><LI><a href="#[4f74828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[4f741d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[5a878e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[4db4ca4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[833557c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ffltu
<LI><a href="#[4db4ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_frdiv
<LI><a href="#[8335510]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[4f74240]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__softfp_sqrt
<LI><a href="#[4f74894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[4f73e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fcmpge
</UL><BR>[Called By]<UL><LI><a href="#[5ad0c70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;reject_outliers_from_dense_waypoints_using_dist
</UL><P><STRONG><a name="[839b94c]"></a>marvell_get_subioctl_no</STRONG> (ARM, 156 bytes, Stack size 16 bytes, driver_marvell.o(i.marvell_get_subioctl_no))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[839b8cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell_init_ioctl_numbers
</UL><P><STRONG><a name="[839b8cc]"></a>marvell_init_ioctl_numbers</STRONG> (ARM, 208 bytes, Stack size 40 bytes, driver_marvell.o(i.marvell_init_ioctl_numbers))
<BR><BR>[Calls]<UL><LI><a href="#[836c178]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_private_info
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[839b94c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;marvell_get_subioctl_no
</UL><BR>[Called By]<UL><LI><a href="#[836e42c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_init
</UL><P><STRONG><a name="[87ac25c]"></a>maxlcd</STRONG> (ARM, 268 bytes, Stack size 56 bytes, lcd.o(i.maxlcd))
<BR><BR>[Calls]<UL><LI><a href="#[87ac490]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fin_min
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[7d7fd58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capSetDdaFactor
</UL><P><STRONG><a name="[87ac420]"></a>maxlcd_2</STRONG> (ARM, 176 bytes, Stack size 32 bytes, lcd.o(i.maxlcd_2))
<BR><BR>[Calls]<UL><LI><a href="#[87ac490]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fin_min
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[87ac2c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capSinglePipePolyPhaseFilter
</UL><P><STRONG><a name="[5859b00]"></a>mc_rx_socket</STRONG> (ARM, 784 bytes, Stack size 216 bytes, mcrxtest.o(i.mc_rx_socket))
<BR><BR>[Calls]<UL><LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[4ced344]">&gt&gt</a>&nbsp;&nbsp;&nbsp;setsockopt
<LI><a href="#[4ced118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bind
<LI><a href="#[4bba3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5859bc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetDevInterface
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[5859ca8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CreateAndSendPackage
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4cecf64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;recvfrom
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[4e49f14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MctestThread
</UL><P><STRONG><a name="[7f76498]"></a>mc_tx_socket</STRONG> (ARM, 192 bytes, Stack size 48 bytes, mctxtest.o(i.mc_tx_socket))
<BR><BR>[Calls]<UL><LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4ced344]">&gt&gt</a>&nbsp;&nbsp;&nbsp;setsockopt
<LI><a href="#[4cecfd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sendto
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[5859c38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MCTxTest
</UL><P><STRONG><a name="[4f29474]"></a>mcuGetBattery</STRONG> (ARM, 148 bytes, Stack size 24 bytes, MCU.o(i.mcuGetBattery))
<BR><BR>[Calls]<UL><LI><a href="#[4f2a8e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;max_n
<LI><a href="#[4f294e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcuGetReport
</UL><BR>[Called By]<UL><LI><a href="#[4eab5a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetWebCamStateString
<LI><a href="#[72cfa18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckBattery
</UL><P><STRONG><a name="[4e4cba4]"></a>mcuGetErrorStatus</STRONG> (ARM, 48 bytes, Stack size 0 bytes, MCU.o(i.mcuGetErrorStatus))
<BR>[Called By]<UL><LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
</UL><P><STRONG><a name="[4f294e8]"></a>mcuGetReport</STRONG> (ARM, 156 bytes, Stack size 72 bytes, MCU.o(i.mcuGetReport))
<BR><BR>[Calls]<UL><LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[4eaa53c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcuSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[4f29474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuGetBattery
</UL><P><STRONG><a name="[4a550e8]"></a>mcuInit</STRONG> (ARM, 72 bytes, Stack size 8 bytes, MCU.o(i.mcuInit))
<BR><BR>[Calls]<UL><LI><a href="#[4e4a0ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_init
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
</UL><BR>[Called By]<UL><LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[4f2964c]"></a>mcuLock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, MCU.o(i.mcuLock))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
</UL><BR>[Called By]<UL><LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[4f2979c]"></a>mcuReportError</STRONG> (ARM, 48 bytes, Stack size 0 bytes, MCU.o(i.mcuReportError))
<BR>[Called By]<UL><LI><a href="#[4f2b04c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_mcuRecv
<LI><a href="#[4f2afdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_mcuSend
<LI><a href="#[4f2a058]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_mcuSendCommand_Error
</UL><P><STRONG><a name="[4eaa53c]"></a>mcuSendCommand</STRONG> (ARM, 124 bytes, Stack size 32 bytes, MCU.o(i.mcuSendCommand))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4f2b04c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_mcuRecv
<LI><a href="#[4a548fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdDelTask
<LI><a href="#[4f2afdc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_mcuSend
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4a560fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlMCU
<LI><a href="#[4f294e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuGetReport
<LI><a href="#[4f29404]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuSuspend
<LI><a href="#[5a87b9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcu_send_cmd
</UL><P><STRONG><a name="[4f2955c]"></a>mcuSendCommand_NoResponse</STRONG> (ARM, 164 bytes, Stack size 32 bytes, MCU.o(i.mcuSendCommand_NoResponse))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4f2b04c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_mcuRecv
<LI><a href="#[4a548fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdDelTask
<LI><a href="#[4f2afdc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_mcuSend
<LI><a href="#[4a55bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[5a87b9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcu_send_cmd
</UL><P><STRONG><a name="[4f29404]"></a>mcuSuspend</STRONG> (ARM, 52 bytes, Stack size 32 bytes, MCU.o(i.mcuSuspend))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4eaa53c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcuSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[4f295dc]"></a>mcuUnlock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, MCU.o(i.mcuUnlock))
<BR><BR>[Calls]<UL><LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[4f29394]"></a>mcuWakeup</STRONG> (ARM, 84 bytes, Stack size 16 bytes, MCU.o(i.mcuWakeup))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[5a87b9c]"></a>mcu_send_cmd</STRONG> (ARM, 284 bytes, Stack size 56 bytes, er_mcu_cmds.o(i.mcu_send_cmd))
<BR><BR>[Calls]<UL><LI><a href="#[4eaa53c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcuSendCommand
<LI><a href="#[4f2955c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcuSendCommand_NoResponse
</UL><BR>[Called By]<UL><LI><a href="#[4f734cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_mcu_report
<LI><a href="#[4fe1984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_mcu_status
<LI><a href="#[4f74a58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
<LI><a href="#[4f73904]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_mcu_cmd
<LI><a href="#[4f73b70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_mcu_cmd_with_obstacle_avoidance
<LI><a href="#[5a87b28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_wheel_cmd
</UL><P><STRONG><a name="[89f677c]"></a>md5_vector</STRONG> (ARM, 240 bytes, Stack size 112 bytes, md5.o(i.md5_vector))
<BR><BR>[Calls]<UL><LI><a href="#[89f7018]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MD5Update
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[89f6fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MD5Transform
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[8ac906c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_parseEapReq
<LI><a href="#[89f6708]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hmac_md5_vector
</UL><P><STRONG><a name="[827e464]"></a>memNew</STRONG> (ARM, 52 bytes, Stack size 0 bytes, vp_lcm.o(i.memNew), UNUSED)
<P><STRONG><a name="[59c9620]"></a>memNew</STRONG> (ARM, 52 bytes, Stack size 0 bytes, vp_lcm.o(i.memNew), UNUSED)
<P><STRONG><a name="[816288c]"></a>memNew</STRONG> (ARM, 52 bytes, Stack size 0 bytes, vp_lcm.o(i.memNew), UNUSED)
<P><STRONG><a name="[755fe70]"></a>memNew</STRONG> (ARM, 52 bytes, Stack size 0 bytes, vp_lcm.o(i.memNew), UNUSED)
<P><STRONG><a name="[59af9ec]"></a>memNew</STRONG> (ARM, 52 bytes, Stack size 0 bytes, vp_lcm.o(i.memNew), UNUSED)
<P><STRONG><a name="[5456e30]"></a>memNew</STRONG> (ARM, 52 bytes, Stack size 0 bytes, vp_lcm.o(i.memNew), UNUSED)
<P><STRONG><a name="[7ff7f28]"></a>memNew</STRONG> (ARM, 52 bytes, Stack size 0 bytes, vp_lcm.o(i.memNew), UNUSED)
<P><STRONG><a name="[535654c]"></a>memNew</STRONG> (ARM, 52 bytes, Stack size 0 bytes, vp_lcm.o(i.memNew))
<BR>[Called By]<UL><LI><a href="#[82a3410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateInnerDescription
<LI><a href="#[82a371c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InsertBufferSeg
<LI><a href="#[59c92f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__CreateXML
<LI><a href="#[755ff5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauDecode
<LI><a href="#[755ef88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufAudioNew
<LI><a href="#[54579e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufCptPlanarNew
<LI><a href="#[755f164]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufEncAudioNew
<LI><a href="#[827e3f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufLISTNODENew
<LI><a href="#[755e49c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufLocalPCMNew
<LI><a href="#[54ad7f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufMP4BitstreamNew
<LI><a href="#[7ff7ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufRSFSLOTNew
<LI><a href="#[81629c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bufRSSTREAMNew
<LI><a href="#[5536bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpCreateList
<LI><a href="#[59af4c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetDocumentBasedPath
<LI><a href="#[57e7b94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseSinglePart
<LI><a href="#[4e4d7c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpRegisterEmbedFunEx
<LI><a href="#[5537b50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSetString
<LI><a href="#[7ff806c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_frame_heap
<LI><a href="#[8163f7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_dest
<LI><a href="#[780fcac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_exchanger
<LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
<LI><a href="#[75654d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauRecordCallback
<LI><a href="#[545b2b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcpt_DownscaledForDetectMotion_InDsr
<LI><a href="#[4d84198]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmInit
<LI><a href="#[4d84128]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4Init
</UL><P><STRONG><a name="[82a1330]"></a>memNew</STRONG> (ARM, 52 bytes, Stack size 0 bytes, vp_lcm.o(i.memNew), UNUSED)
<P><STRONG><a name="[54adb14]"></a>memNew</STRONG> (ARM, 52 bytes, Stack size 0 bytes, vp_lcm.o(i.memNew), UNUSED)
<P><STRONG><a name="[5456dc4]"></a>memNum</STRONG> (ARM, 32 bytes, Stack size 0 bytes, vp_thread_capture.o(i.memNum))
<BR>[Called By]<UL><LI><a href="#[5459a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_StartEncode
</UL><P><STRONG><a name="[7ddf758]"></a>merge_region</STRONG> (ARM, 140 bytes, Stack size 16 bytes, cmp_img.o(i.merge_region))
<BR><BR>[Calls]<UL><LI><a href="#[7ddf7cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;do_merge
</UL><BR>[Called By]<UL><LI><a href="#[5456468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;compare_image
</UL><P><STRONG><a name="[7ff7bf8]"></a>meter_init</STRONG> (ARM, 68 bytes, Stack size 0 bytes, frame.o(i.meter_init))
<BR>[Called By]<UL><LI><a href="#[7f5f7d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_audio_ring
</UL><P><STRONG><a name="[544d628]"></a>mktime</STRONG> (ARM, 332 bytes, Stack size 24 bytes, vp_info.o(i.mktime))
<BR><BR>[Calls]<UL><LI><a href="#[544d118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_libc_time_normalize_structtm
<LI><a href="#[544e3e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_libc_time_year_is_leap
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[55373f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetSystemTimeZone
<LI><a href="#[544d694]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoSetTime
</UL><P><STRONG><a name="[5537350]"></a>mktime</STRONG> (ARM, 332 bytes, Stack size 24 bytes, vp_info.o(i.mktime), UNUSED)
<P><STRONG><a name="[7a5add8]"></a>mktime</STRONG> (ARM, 332 bytes, Stack size 24 bytes, vp_info.o(i.mktime), UNUSED)
<P><STRONG><a name="[5c07b40]"></a>move_rovio_towards_target</STRONG> (ARM, 216 bytes, Stack size 16 bytes, er_rsm_thread_routines.o(i.move_rovio_towards_target))
<BR><BR>[Calls]<UL><LI><a href="#[4f74828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[4f73bfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[4f74894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[4db4e7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[4f73b70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_mcu_cmd_with_obstacle_avoidance
</UL><BR>[Called By]<UL><LI><a href="#[4f73f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_waypoint
<LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
</UL><P><STRONG><a name="[7da81a0]"></a>mp4AlignHeaderBits</STRONG> (ARM, 60 bytes, Stack size 8 bytes, mp4bits.o(i.mp4AlignHeaderBits))
<BR><BR>[Calls]<UL><LI><a href="#[87ca19c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4PutHeaderBits
</UL><BR>[Called By]<UL><LI><a href="#[54ad6b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetEncoder
</UL><P><STRONG><a name="[7da7a1c]"></a>mp4DecodeH263ShortHead</STRONG> (ARM, 184 bytes, Stack size 8 bytes, mp4hdr.o(i.mp4DecodeH263ShortHead))
<BR><BR>[Calls]<UL><LI><a href="#[87ca4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4GetHeaderBit
</UL><BR>[Called By]<UL><LI><a href="#[54ad1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetDecoder
</UL><P><STRONG><a name="[7da79a0]"></a>mp4DecodeMP4Bitstream</STRONG> (ARM, 184 bytes, Stack size 40 bytes, mp4hdr.o(i.mp4DecodeMP4Bitstream))
<BR><BR>[Calls]<UL><LI><a href="#[87ca3ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4NextHeaderStartCode
<LI><a href="#[87ca37c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4GetVOS
<LI><a href="#[87ca28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4GetVisualObject
<LI><a href="#[87ca4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4GetHeaderBit
<LI><a href="#[87cadf4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4GetVOL
</UL><BR>[Called By]<UL><LI><a href="#[54ad1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetDecoder
</UL><P><STRONG><a name="[7dc01ac]"></a>mp4ForceUpdateIntra</STRONG> (ARM, 28 bytes, Stack size 0 bytes, mp4encfc.o(i.mp4ForceUpdateIntra))
<BR>[Called By]<UL><LI><a href="#[87d91f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4EncCompleteISR
</UL><P><STRONG><a name="[87ca214]"></a>mp4GetDefineVOPCE</STRONG> (ARM, 156 bytes, Stack size 8 bytes, mp4hdr.o(i.mp4GetDefineVOPCE))
<BR><BR>[Calls]<UL><LI><a href="#[87ca4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4GetHeaderBit
</UL><BR>[Called By]<UL><LI><a href="#[87cadf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4GetVOL
</UL><P><STRONG><a name="[54acb3c]"></a>mp4GetEncBitStreamLength</STRONG> (ARM, 12 bytes, Stack size 0 bytes, mp4encfc.o(i.mp4GetEncBitStreamLength))
<BR>[Called By]<UL><LI><a href="#[5422b3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encDoneCallback
</UL><P><STRONG><a name="[87ca4e0]"></a>mp4GetHeaderBit</STRONG> (ARM, 276 bytes, Stack size 8 bytes, mp4bits.o(i.mp4GetHeaderBit))
<BR>[Called By]<UL><LI><a href="#[7da7a1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4DecodeH263ShortHead
<LI><a href="#[7da79a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4DecodeMP4Bitstream
<LI><a href="#[87ca214]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4GetDefineVOPCE
<LI><a href="#[87ca554]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4GetUserData
<LI><a href="#[87cadf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4GetVOL
<LI><a href="#[87ca37c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4GetVOS
<LI><a href="#[87ca28c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4GetVisualObject
<LI><a href="#[87ca3ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4NextHeaderStartCode
</UL><P><STRONG><a name="[87ca554]"></a>mp4GetUserData</STRONG> (ARM, 68 bytes, Stack size 8 bytes, mp4hdr.o(i.mp4GetUserData))
<BR><BR>[Calls]<UL><LI><a href="#[87ca4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4GetHeaderBit
<LI><a href="#[87ca468]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4NextHeaderBits
<LI><a href="#[87ca3ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4NextHeaderStartCode
</UL><BR>[Called By]<UL><LI><a href="#[87cadf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4GetVOL
<LI><a href="#[87ca37c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4GetVOS
<LI><a href="#[87ca28c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4GetVisualObject
</UL><P><STRONG><a name="[87ca37c]"></a>mp4GetVOS</STRONG> (ARM, 40 bytes, Stack size 8 bytes, mp4hdr.o(i.mp4GetVOS))
<BR><BR>[Calls]<UL><LI><a href="#[87ca4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4GetHeaderBit
<LI><a href="#[87ca554]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4GetUserData
</UL><BR>[Called By]<UL><LI><a href="#[7da79a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4DecodeMP4Bitstream
</UL><P><STRONG><a name="[87ca28c]"></a>mp4GetVisualObject</STRONG> (ARM, 160 bytes, Stack size 16 bytes, mp4hdr.o(i.mp4GetVisualObject))
<BR><BR>[Calls]<UL><LI><a href="#[87ca4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4GetHeaderBit
<LI><a href="#[87ca554]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4GetUserData
</UL><BR>[Called By]<UL><LI><a href="#[7da79a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4DecodeMP4Bitstream
</UL><P><STRONG><a name="[7da7848]"></a>mp4Handler</STRONG> (ARM, 164 bytes, Stack size 16 bytes, MP4ISR.o(i.mp4Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[7da812c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4ResetEncoder
<LI><a href="#[87d91f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4EncCompleteISR
<LI><a href="#[87d9178]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4DecCompleteISR
<LI><a href="#[4c2ef7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_acknowledge
</UL><BR>[Address Reference Count : 1]<UL><LI> mp4codec.o(i.mp4InstallISR)
</UL><P><STRONG><a name="[7da78b8]"></a>mp4HandlerDSR</STRONG> (ARM, 160 bytes, Stack size 16 bytes, MP4ISR.o(i.mp4HandlerDSR))
<BR><BR>[Calls]<UL><LI><a href="#[4c2ef7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_acknowledge
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
</UL><BR>[Address Reference Count : 1]<UL><LI> mp4codec.o(i.mp4InstallISR)
</UL><P><STRONG><a name="[7da8044]"></a>mp4InitDecDMA</STRONG> (ARM, 44 bytes, Stack size 0 bytes, mp4decfc.o(i.mp4InitDecDMA))
<BR>[Called By]<UL><LI><a href="#[54ad1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetDecoder
<LI><a href="#[54ad6b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetEncoder
</UL><P><STRONG><a name="[7da792c]"></a>mp4InitDecoder</STRONG> (ARM, 232 bytes, Stack size 152 bytes, mp4decfc.o(i.mp4InitDecoder))
<BR><BR>[Calls]<UL><LI><a href="#[7db4a08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4SetVOLheader4Dec
<LI><a href="#[7db4a80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4SetVOPDecSize
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[7db4af8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4SetDecQuantmatrix
</UL><BR>[Called By]<UL><LI><a href="#[54ad1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetDecoder
</UL><P><STRONG><a name="[7da7a98]"></a>mp4InitDecoderBuffer</STRONG> (ARM, 36 bytes, Stack size 0 bytes, mp4bits.o(i.mp4InitDecoderBuffer))
<BR>[Called By]<UL><LI><a href="#[54ad1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetDecoder
</UL><P><STRONG><a name="[7da80b8]"></a>mp4InitEncDMA</STRONG> (ARM, 44 bytes, Stack size 0 bytes, mp4encfc.o(i.mp4InitEncDMA))
<BR>[Called By]<UL><LI><a href="#[54ad1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetDecoder
<LI><a href="#[54ad6b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetEncoder
</UL><P><STRONG><a name="[7da7fd0]"></a>mp4InitEncoder</STRONG> (ARM, 172 bytes, Stack size 8 bytes, mp4encfc.o(i.mp4InitEncoder))
<BR><BR>[Calls]<UL><LI><a href="#[7da7f58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4InitVOLHeader
<LI><a href="#[7dc02a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4InitVOPHeader
<LI><a href="#[7dc0318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4SetVOPsize
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[54ad6b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetEncoder
</UL><P><STRONG><a name="[7da8300]"></a>mp4InitEncoderBuffer</STRONG> (ARM, 28 bytes, Stack size 0 bytes, mp4bits.o(i.mp4InitEncoderBuffer))
<BR>[Called By]<UL><LI><a href="#[54ad6b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetEncoder
</UL><P><STRONG><a name="[7da7c08]"></a>mp4InitIvtmn8</STRONG> (ARM, 208 bytes, Stack size 32 bytes, ivtmn8.o(i.mp4InitIvtmn8))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[54ad6b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetEncoder
</UL><P><STRONG><a name="[7da7f58]"></a>mp4InitVOLHeader</STRONG> (ARM, 96 bytes, Stack size 4 bytes, mp4encfc.o(i.mp4InitVOLHeader))
<BR>[Called By]<UL><LI><a href="#[7da7fd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4InitEncoder
<LI><a href="#[54ad6b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetEncoder
</UL><P><STRONG><a name="[7dc02a0]"></a>mp4InitVOPHeader</STRONG> (ARM, 60 bytes, Stack size 0 bytes, mp4encfc.o(i.mp4InitVOPHeader))
<BR>[Called By]<UL><LI><a href="#[7da7fd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4InitEncoder
</UL><P><STRONG><a name="[54ad86c]"></a>mp4InstallCallBackFunction</STRONG> (ARM, 20 bytes, Stack size 0 bytes, mp4codec.o(i.mp4InstallCallBackFunction))
<BR>[Called By]<UL><LI><a href="#[54ad508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decAddRef
<LI><a href="#[54ad494]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decDecRef
<LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[54ad57c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encDecRef
</UL><P><STRONG><a name="[54ad5f0]"></a>mp4InstallISR</STRONG> (ARM, 92 bytes, Stack size 24 bytes, mp4codec.o(i.mp4InstallISR))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4c2fadc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_create
<LI><a href="#[4c2f8d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_attach
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[54ad2b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decStart
<LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
</UL><P><STRONG><a name="[87d897c]"></a>mp4Ivtmn8Update</STRONG> (ARM, 516 bytes, Stack size 48 bytes, ivtmn8.o(i.mp4Ivtmn8Update))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[821cda8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
</UL><BR>[Called By]<UL><LI><a href="#[87d91f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4EncCompleteISR
</UL><P><STRONG><a name="[87ca468]"></a>mp4NextHeaderBits</STRONG> (ARM, 88 bytes, Stack size 8 bytes, mp4bits.o(i.mp4NextHeaderBits))
<BR>[Called By]<UL><LI><a href="#[87ca554]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4GetUserData
<LI><a href="#[87ca3ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4NextHeaderStartCode
</UL><P><STRONG><a name="[87ca3ec]"></a>mp4NextHeaderStartCode</STRONG> (ARM, 116 bytes, Stack size 16 bytes, mp4bits.o(i.mp4NextHeaderStartCode))
<BR><BR>[Calls]<UL><LI><a href="#[87ca4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4GetHeaderBit
<LI><a href="#[87ca468]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4NextHeaderBits
</UL><BR>[Called By]<UL><LI><a href="#[7da79a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4DecodeMP4Bitstream
<LI><a href="#[87ca554]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4GetUserData
</UL><P><STRONG><a name="[87ca19c]"></a>mp4PutHeaderBits</STRONG> (ARM, 140 bytes, Stack size 12 bytes, mp4bits.o(i.mp4PutHeaderBits))
<BR>[Called By]<UL><LI><a href="#[7da81a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4AlignHeaderBits
<LI><a href="#[7da8218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4PutVOL
<LI><a href="#[7da8288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4PutVideoObject
</UL><P><STRONG><a name="[7da8218]"></a>mp4PutVOL</STRONG> (ARM, 488 bytes, Stack size 32 bytes, mp4hdr.o(i.mp4PutVOL))
<BR><BR>[Calls]<UL><LI><a href="#[87ca19c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4PutHeaderBits
</UL><BR>[Called By]<UL><LI><a href="#[54ad6b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetEncoder
</UL><P><STRONG><a name="[7da8288]"></a>mp4PutVideoObject</STRONG> (ARM, 36 bytes, Stack size 8 bytes, mp4hdr.o(i.mp4PutVideoObject))
<BR><BR>[Calls]<UL><LI><a href="#[87ca19c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4PutHeaderBits
</UL><BR>[Called By]<UL><LI><a href="#[54ad6b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetEncoder
</UL><P><STRONG><a name="[54aca54]"></a>mp4ResetDecoder</STRONG> (ARM, 20 bytes, Stack size 0 bytes, mp4decfc.o(i.mp4ResetDecoder))
<BR>[Called By]<UL><LI><a href="#[87d9178]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4DecCompleteISR
<LI><a href="#[54ad1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetDecoder
<LI><a href="#[5422558]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decWaitCallback
</UL><P><STRONG><a name="[7da812c]"></a>mp4ResetEncoder</STRONG> (ARM, 20 bytes, Stack size 0 bytes, mp4encfc.o(i.mp4ResetEncoder))
<BR>[Called By]<UL><LI><a href="#[87d91f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4EncCompleteISR
<LI><a href="#[7da7848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4Handler
<LI><a href="#[54ad6b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetEncoder
</UL><P><STRONG><a name="[54ad238]"></a>mp4ResumeDecoder</STRONG> (ARM, 20 bytes, Stack size 0 bytes, mp4decfc.o(i.mp4ResumeDecoder))
<BR>[Called By]<UL><LI><a href="#[54224dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decErrorCallback
<LI><a href="#[54ad2b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decStart
</UL><P><STRONG><a name="[54ad0d8]"></a>mp4SetDecBufferAddr</STRONG> (ARM, 112 bytes, Stack size 0 bytes, mp4decfc.o(i.mp4SetDecBufferAddr))
<BR>[Called By]<UL><LI><a href="#[54ad2b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decStart
</UL><P><STRONG><a name="[7db4af8]"></a>mp4SetDecQuantmatrix</STRONG> (ARM, 52 bytes, Stack size 0 bytes, mp4decfc.o(i.mp4SetDecQuantmatrix))
<BR>[Called By]<UL><LI><a href="#[7da792c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4InitDecoder
</UL><P><STRONG><a name="[54ad1c4]"></a>mp4SetDecoder</STRONG> (ARM, 232 bytes, Stack size 16 bytes, mp4codec.o(i.mp4SetDecoder))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
<LI><a href="#[7da80b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4InitEncDMA
<LI><a href="#[7da8044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4InitDecDMA
<LI><a href="#[54aca54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4ResetDecoder
<LI><a href="#[7da7a98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4InitDecoderBuffer
<LI><a href="#[7da7a1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4DecodeH263ShortHead
<LI><a href="#[7da79a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4DecodeMP4Bitstream
<LI><a href="#[7da792c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4InitDecoder
</UL><BR>[Called By]<UL><LI><a href="#[54ad2b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decStart
</UL><P><STRONG><a name="[7da7edc]"></a>mp4SetEncQuantmatrix</STRONG> (ARM, 52 bytes, Stack size 0 bytes, mp4encfc.o(i.mp4SetEncQuantmatrix))
<BR>[Called By]<UL><LI><a href="#[54ad6b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetEncoder
</UL><P><STRONG><a name="[54ad6b4]"></a>mp4SetEncoder</STRONG> (ARM, 340 bytes, Stack size 16 bytes, mp4codec.o(i.mp4SetEncoder))
<BR><BR>[Calls]<UL><LI><a href="#[7da8300]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4InitEncoderBuffer
<LI><a href="#[7da8288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4PutVideoObject
<LI><a href="#[7da8218]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4PutVOL
<LI><a href="#[7da81a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4AlignHeaderBits
<LI><a href="#[7da812c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4ResetEncoder
<LI><a href="#[7da80b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4InitEncDMA
<LI><a href="#[7da8044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4InitDecDMA
<LI><a href="#[7da7fd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4InitEncoder
<LI><a href="#[7da7f58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4InitVOLHeader
<LI><a href="#[7da7edc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4SetEncQuantmatrix
<LI><a href="#[7da7e60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4SetVOPTimeIncrement
<LI><a href="#[7da7c08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4InitIvtmn8
<LI><a href="#[7da837c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4ValidateParams
</UL><BR>[Called By]<UL><LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
</UL><P><STRONG><a name="[54ace08]"></a>mp4SetEncoderBitrate</STRONG> (ARM, 96 bytes, Stack size 24 bytes, mp4codec.o(i.mp4SetEncoderBitrate))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[54ace84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encSetBitrate
</UL><P><STRONG><a name="[54ad058]"></a>mp4SetNewDecBitStreamAddr</STRONG> (ARM, 16 bytes, Stack size 0 bytes, mp4decfc.o(i.mp4SetNewDecBitStreamAddr))
<BR>[Called By]<UL><LI><a href="#[54ad2b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decStart
</UL><P><STRONG><a name="[54ad398]"></a>mp4SetNewEncBitStreamAddr</STRONG> (ARM, 12 bytes, Stack size 0 bytes, mp4encfc.o(i.mp4SetNewEncBitStreamAddr))
<BR>[Called By]<UL><LI><a href="#[5456884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encStart
</UL><P><STRONG><a name="[54ad418]"></a>mp4SetNewYUVEncoderAddr</STRONG> (ARM, 80 bytes, Stack size 0 bytes, mp4encfc.o(i.mp4SetNewYUVEncoderAddr))
<BR>[Called By]<UL><LI><a href="#[5456884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encStart
</UL><P><STRONG><a name="[7db4a08]"></a>mp4SetVOLheader4Dec</STRONG> (ARM, 80 bytes, Stack size 4 bytes, mp4decfc.o(i.mp4SetVOLheader4Dec))
<BR>[Called By]<UL><LI><a href="#[7da792c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4InitDecoder
</UL><P><STRONG><a name="[7db4a80]"></a>mp4SetVOPDecSize</STRONG> (ARM, 84 bytes, Stack size 0 bytes, mp4decfc.o(i.mp4SetVOPDecSize))
<BR>[Called By]<UL><LI><a href="#[7da792c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4InitDecoder
</UL><P><STRONG><a name="[7da7e60]"></a>mp4SetVOPTimeIncrement</STRONG> (ARM, 48 bytes, Stack size 0 bytes, mp4encfc.o(i.mp4SetVOPTimeIncrement))
<BR>[Called By]<UL><LI><a href="#[54ad6b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetEncoder
</UL><P><STRONG><a name="[7dc0318]"></a>mp4SetVOPsize</STRONG> (ARM, 88 bytes, Stack size 0 bytes, mp4encfc.o(i.mp4SetVOPsize))
<BR>[Called By]<UL><LI><a href="#[7da7fd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4InitEncoder
</UL><P><STRONG><a name="[54acfe4]"></a>mp4StartDecoder</STRONG> (ARM, 36 bytes, Stack size 0 bytes, mp4decfc.o(i.mp4StartDecoder))
<BR>[Called By]<UL><LI><a href="#[54ad2b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decStart
</UL><P><STRONG><a name="[54ad324]"></a>mp4StartEncoder</STRONG> (ARM, 36 bytes, Stack size 0 bytes, mp4encfc.o(i.mp4StartEncoder))
<BR>[Called By]<UL><LI><a href="#[5456884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encStart
</UL><P><STRONG><a name="[7da837c]"></a>mp4ValidateParams</STRONG> (ARM, 60 bytes, Stack size 0 bytes, mp4codec.o(i.mp4ValidateParams))
<BR>[Called By]<UL><LI><a href="#[54ad6b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4SetEncoder
</UL><P><STRONG><a name="[81077e4]"></a>mpeg4_init</STRONG> (ARM, 40 bytes, Stack size 8 bytes, encoder-mpeg4.o(i.mpeg4_init))
<BR><BR>[Calls]<UL><LI><a href="#[780fd90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;register_config_context
</UL><BR>[Called By]<UL><LI><a href="#[5923f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RtspServerStart
</UL><P><STRONG><a name="[8d54ba4]"></a>mult_r</STRONG> (ARM, 76 bytes, Stack size 0 bytes, basicop2.o(i.mult_r))
<BR>[Called By]<UL><LI><a href="#[8e4c448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;noise_estimate_update
</UL><P><STRONG><a name="[77006ac]"></a>my_read</STRONG> (ARM, 16 bytes, Stack size 0 bytes, TestNetServer.o(i.my_read))
<BR><BR>[Calls]<UL><LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
</UL><BR>[Called By]<UL><LI><a href="#[770027c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_client_read
</UL><P><STRONG><a name="[770063c]"></a>my_write</STRONG> (ARM, 16 bytes, Stack size 0 bytes, TestNetServer.o(i.my_write))
<BR><BR>[Calls]<UL><LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
</UL><BR>[Called By]<UL><LI><a href="#[77002f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_client_write
</UL><P><STRONG><a name="[71ed4c0]"></a>netstatRequest</STRONG> (ARM, 172 bytes, Stack size 32 bytes, vp_com.o(i.netstatRequest))
<BR><BR>[Calls]<UL><LI><a href="#[4deed40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wsp_get_config_state
<LI><a href="#[71ee8c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrUnsignedInt
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[71f3fe8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBWrite_Again
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
</UL><P><STRONG><a name="[7f5f7d0]"></a>new_audio_ring</STRONG> (ARM, 128 bytes, Stack size 32 bytes, audio.o(i.new_audio_ring))
<BR><BR>[Calls]<UL><LI><a href="#[7ff7bf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;meter_init
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
</UL><BR>[Called By]<UL><LI><a href="#[7f60688]">&lt&lt</a>&nbsp;&nbsp;&nbsp;end_block
</UL><P><STRONG><a name="[8162a3c]"></a>new_convert_stream</STRONG> (ARM, 128 bytes, Stack size 24 bytes, stream.o(i.new_convert_stream))
<BR><BR>[Calls]<UL><LI><a href="#[81629c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufRSSTREAMNew
<LI><a href="#[77e7990]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtspBufIsValid
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[8163f7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_dest
</UL><BR>[Called By]<UL><LI><a href="#[808c6e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_to_stream
</UL><P><STRONG><a name="[780fcac]"></a>new_exchanger</STRONG> (ARM, 412 bytes, Stack size 72 bytes, frame.o(i.new_exchanger))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[77e7990]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtspBufIsValid
<LI><a href="#[7ff7ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufRSFSLOTNew
<LI><a href="#[582d278]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket_pipe
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[77e75d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_fd_event
<LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4c2c128]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_init
</UL><BR>[Called By]<UL><LI><a href="#[7810fa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;end_block
<LI><a href="#[8953fa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;end_block
</UL><P><STRONG><a name="[780fc3c]"></a>new_frame</STRONG> (ARM, 132 bytes, Stack size 16 bytes, frame.o(i.new_frame))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[7f5f6e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_ring_input
<LI><a href="#[8163cf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;convert_uyvy_to_rgb24
<LI><a href="#[7810fa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;end_block
<LI><a href="#[7810554]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_back_frame
<LI><a href="#[895355c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mpeg4_loop
</UL><P><STRONG><a name="[80cf23c]"></a>new_pmsg</STRONG> (ARM, 132 bytes, Stack size 16 bytes, pmsg.o(i.new_pmsg))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[77e7990]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtspBufIsValid
</UL><BR>[Called By]<UL><LI><a href="#[8180598]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_request
<LI><a href="#[81800a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_unknown
<LI><a href="#[80eb680]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_create_reply
</UL><P><STRONG><a name="[77ac8f0]"></a>new_request</STRONG> (ARM, 172 bytes, Stack size 8 bytes, request.o(i.new_request))
<BR><BR>[Calls]<UL><LI><a href="#[77ac810]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dequeue
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
</UL><BR>[Called By]<UL><LI><a href="#[77ac634]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_sock_request
</UL><P><STRONG><a name="[77e7a84]"></a>new_rtp_endpoint</STRONG> (ARM, 356 bytes, Stack size 16 bytes, rtp.o(i.new_rtp_endpoint))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[77e7990]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtspBufIsValid
<LI><a href="#[784377c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;random_bytes
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[77e9688]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
</UL><BR>[Called By]<UL><LI><a href="#[808da04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;live_setup
</UL><P><STRONG><a name="[813cb84]"></a>new_rtp_media</STRONG> (ARM, 200 bytes, Stack size 32 bytes, session.o(i.new_rtp_media))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[77e7990]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtspBufIsValid
</UL><BR>[Called By]<UL><LI><a href="#[808c5e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_rtp_media_h263_stream
<LI><a href="#[808c4ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_rtp_media_jpeg_stream
<LI><a href="#[808c56c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_rtp_media_mpeg4
<LI><a href="#[808c664]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_rtp_media_rawaudio_stream
</UL><P><STRONG><a name="[808c5e4]"></a>new_rtp_media_h263_stream</STRONG> (ARM, 112 bytes, Stack size 16 bytes, rtp-h263.o(i.new_rtp_media_h263_stream))
<BR><BR>[Calls]<UL><LI><a href="#[813cb84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_rtp_media
</UL><BR>[Called By]<UL><LI><a href="#[808fcf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_track
</UL><P><STRONG><a name="[808c4ec]"></a>new_rtp_media_jpeg_stream</STRONG> (ARM, 128 bytes, Stack size 16 bytes, rtp-jpeg.o(i.new_rtp_media_jpeg_stream))
<BR><BR>[Calls]<UL><LI><a href="#[813cb84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_rtp_media
</UL><BR>[Called By]<UL><LI><a href="#[808fcf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_track
</UL><P><STRONG><a name="[808c56c]"></a>new_rtp_media_mpeg4</STRONG> (ARM, 120 bytes, Stack size 16 bytes, rtp-mpeg4.o(i.new_rtp_media_mpeg4))
<BR><BR>[Calls]<UL><LI><a href="#[813cb84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_rtp_media
</UL><BR>[Called By]<UL><LI><a href="#[808fcf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_track
</UL><P><STRONG><a name="[808c664]"></a>new_rtp_media_rawaudio_stream</STRONG> (ARM, 180 bytes, Stack size 32 bytes, rtp-rawaudio.o(i.new_rtp_media_rawaudio_stream))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[813cb84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_rtp_media
</UL><BR>[Called By]<UL><LI><a href="#[808fcf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_track
</UL><P><STRONG><a name="[808c474]"></a>new_rtsp_location</STRONG> (ARM, 244 bytes, Stack size 40 bytes, rtsp.o(i.new_rtsp_location))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[77e7990]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtspBufIsValid
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Called By]<UL><LI><a href="#[808fc88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_path
</UL><P><STRONG><a name="[808c394]"></a>new_session</STRONG> (ARM, 120 bytes, Stack size 16 bytes, session.o(i.new_session))
<BR><BR>[Calls]<UL><LI><a href="#[813d274]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
</UL><BR>[Called By]<UL><LI><a href="#[808df88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;live_open
</UL><P><STRONG><a name="[8031f80]"></a>new_soft_queue</STRONG> (ARM, 108 bytes, Stack size 24 bytes, event.o(i.new_soft_queue))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4c2c128]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_init
<LI><a href="#[80357e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_to_list
</UL><BR>[Called By]<UL><LI><a href="#[7f60688]">&lt&lt</a>&nbsp;&nbsp;&nbsp;end_block
</UL><P><STRONG><a name="[780fe7c]"></a>new_stream</STRONG> (ARM, 104 bytes, Stack size 24 bytes, stream.o(i.new_stream))
<BR><BR>[Calls]<UL><LI><a href="#[81629c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufRSSTREAMNew
<LI><a href="#[77e7990]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtspBufIsValid
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Called By]<UL><LI><a href="#[7813964]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_output
<LI><a href="#[7f61cf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_output
<LI><a href="#[895549c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_output
</UL><P><STRONG><a name="[8d461d8]"></a>norm_l</STRONG> (ARM, 76 bytes, Stack size 0 bytes, basicop2.o(i.norm_l))
<BR>[Called By]<UL><LI><a href="#[8dac564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;A_Refl
<LI><a href="#[8de3364]">&lt&lt</a>&nbsp;&nbsp;&nbsp;G_code
<LI><a href="#[8d7375c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;G_pitch
<LI><a href="#[8cd6194]">&lt&lt</a>&nbsp;&nbsp;&nbsp;agc2
<LI><a href="#[8de353c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;calc_filt_energies
<LI><a href="#[8de34c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;calc_target_energy
<LI><a href="#[8e9c31c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;calc_unfilt_energies
<LI><a href="#[8d93fdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gc_pred
<LI><a href="#[8e2218c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hp_max
<LI><a href="#[8cd626c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sqrt_l_exp
</UL><P><STRONG><a name="[734d524]"></a>nsSuspend</STRONG> (ARM, 40 bytes, Stack size 8 bytes, NSII.o(i.nsSuspend))
<BR><BR>[Calls]<UL><LI><a href="#[4f73014]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ERSP_rovio_libns_thread_suspend
</UL><BR>[Called By]<UL><LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[734d4b4]"></a>nsWakeup</STRONG> (ARM, 32 bytes, Stack size 0 bytes, NSII.o(i.nsWakeup))
<BR><BR>[Calls]<UL><LI><a href="#[4f72f90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ERSP_rovio_libns_thread_resume
</UL><BR>[Called By]<UL><LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[4f74eac]"></a>ns_get_firmware_timestamp</STRONG> (ARM, 240 bytes, Stack size 80 bytes, er_ns_cmds.o(i.ns_get_firmware_timestamp))
<BR><BR>[Calls]<UL><LI><a href="#[5b5da60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_set_checksum
<LI><a href="#[5b5dbbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_uart_write
<LI><a href="#[5b5db48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_uart_read
<LI><a href="#[5b5d9e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;is_checksum_correct
</UL><BR>[Called By]<UL><LI><a href="#[4f74fa8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_ns_serial_number_and_fw_timestamp
</UL><P><STRONG><a name="[4f74f2c]"></a>ns_get_serial_number</STRONG> (ARM, 224 bytes, Stack size 40 bytes, er_ns_cmds.o(i.ns_get_serial_number))
<BR><BR>[Calls]<UL><LI><a href="#[5b5da60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_set_checksum
<LI><a href="#[5b5dbbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_uart_write
<LI><a href="#[5b5db48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_uart_read
<LI><a href="#[5b5d9e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;is_checksum_correct
</UL><BR>[Called By]<UL><LI><a href="#[4f74fa8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_ns_serial_number_and_fw_timestamp
</UL><P><STRONG><a name="[4f75034]"></a>ns_get_version</STRONG> (ARM, 136 bytes, Stack size 24 bytes, er_ns_cmds.o(i.ns_get_version))
<BR><BR>[Calls]<UL><LI><a href="#[5b5da60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_set_checksum
<LI><a href="#[5b5dbbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_uart_write
<LI><a href="#[5b5db48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_uart_read
<LI><a href="#[5b5d9e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;is_checksum_correct
</UL><BR>[Called By]<UL><LI><a href="#[4f75290]">&lt&lt</a>&nbsp;&nbsp;&nbsp;reset_northstar_and_get_version
<LI><a href="#[4f74acc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;try_northstar_recovery
</UL><P><STRONG><a name="[4f75214]"></a>ns_port_read_blocking</STRONG> (ARM, 40 bytes, Stack size 16 bytes, er_ns_cmds.o(i.ns_port_read_blocking))
<BR><BR>[Calls]<UL><LI><a href="#[4bba670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_set_config
</UL><BR>[Called By]<UL><LI><a href="#[4f77e9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_nav_thread
<LI><a href="#[4f75290]">&lt&lt</a>&nbsp;&nbsp;&nbsp;reset_northstar_and_get_version
</UL><P><STRONG><a name="[4f7511c]"></a>ns_port_set_baud_rate_19200</STRONG> (ARM, 56 bytes, Stack size 16 bytes, er_ns_cmds.o(i.ns_port_set_baud_rate_19200))
<BR><BR>[Calls]<UL><LI><a href="#[4bba670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_set_config
</UL><BR>[Called By]<UL><LI><a href="#[4f75290]">&lt&lt</a>&nbsp;&nbsp;&nbsp;reset_northstar_and_get_version
</UL><P><STRONG><a name="[4f74bbc]"></a>ns_preset_freq</STRONG> (ARM, 100 bytes, Stack size 32 bytes, er_ns_cmds.o(i.ns_preset_freq))
<BR><BR>[Calls]<UL><LI><a href="#[4f759a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_set_spot_freq
</UL><BR>[Called By]<UL><LI><a href="#[4f74c30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_spot_frequencies
</UL><P><STRONG><a name="[5b5d974]"></a>ns_read_header</STRONG> (ARM, 72 bytes, Stack size 8 bytes, er_ns_cmds.o(i.ns_read_header))
<BR><BR>[Calls]<UL><LI><a href="#[5b5db48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_uart_read
<LI><a href="#[5b5d9e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;is_checksum_correct
</UL><BR>[Called By]<UL><LI><a href="#[4f74b48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_set_nsamples
<LI><a href="#[4f75624]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_set_report_flags
<LI><a href="#[4f759a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_set_spot_freq
</UL><P><STRONG><a name="[4f75528]"></a>ns_read_report_packet</STRONG> (ARM, 320 bytes, Stack size 88 bytes, er_ns_cmds.o(i.ns_read_report_packet))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[5b5d880]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_read_template_packet
<LI><a href="#[4f75930]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dprint_to_socket
</UL><BR>[Called By]<UL><LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
<LI><a href="#[4f74e30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;select_correct_freq_set
<LI><a href="#[4f75828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_new_report_flags_and_start_report
</UL><P><STRONG><a name="[5b5d880]"></a>ns_read_template_packet</STRONG> (ARM, 348 bytes, Stack size 40 bytes, er_ns_cmds.o(i.ns_read_template_packet))
<BR><BR>[Calls]<UL><LI><a href="#[5b5db48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_uart_read
<LI><a href="#[5b5d9e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;is_checksum_correct
<LI><a href="#[4f75930]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dprint_to_socket
</UL><BR>[Called By]<UL><LI><a href="#[4f75528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_read_report_packet
</UL><P><STRONG><a name="[4f73310]"></a>ns_rm_monitor_clear_approaching_room_switch_region</STRONG> (ARM, 16 bytes, Stack size 0 bytes, ns-room-monitor.o(i.ns_rm_monitor_clear_approaching_room_switch_region))
<BR>[Called By]<UL><LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
</UL><P><STRONG><a name="[4f733a8]"></a>ns_rm_monitor_get_approaching_room_switch_region</STRONG> (ARM, 12 bytes, Stack size 0 bytes, ns-room-monitor.o(i.ns_rm_monitor_get_approaching_room_switch_region))
<BR>[Called By]<UL><LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
</UL><P><STRONG><a name="[4f75728]"></a>ns_rm_monitor_get_cur_room</STRONG> (ARM, 12 bytes, Stack size 0 bytes, ns-room-monitor.o(i.ns_rm_monitor_get_cur_room))
<BR>[Called By]<UL><LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
<LI><a href="#[4f75828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_new_report_flags_and_start_report
<LI><a href="#[4f754a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;swap_curr_and_potential_next_room
<LI><a href="#[4f749e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_rovio_pose
</UL><P><STRONG><a name="[4f73440]"></a>ns_rm_monitor_get_expecting_report_end</STRONG> (ARM, 12 bytes, Stack size 0 bytes, ns-room-monitor.o(i.ns_rm_monitor_get_expecting_report_end))
<BR>[Called By]<UL><LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
</UL><P><STRONG><a name="[4f757a8]"></a>ns_rm_monitor_get_next_room</STRONG> (ARM, 12 bytes, Stack size 0 bytes, ns-room-monitor.o(i.ns_rm_monitor_get_next_room))
<BR>[Called By]<UL><LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
<LI><a href="#[4f75828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_new_report_flags_and_start_report
<LI><a href="#[4f754a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;swap_curr_and_potential_next_room
</UL><P><STRONG><a name="[4f7569c]"></a>ns_rm_monitor_get_potential_next_room</STRONG> (ARM, 12 bytes, Stack size 0 bytes, ns-room-monitor.o(i.ns_rm_monitor_get_potential_next_room))
<BR>[Called By]<UL><LI><a href="#[4fc24d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_report
<LI><a href="#[4f75828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_new_report_flags_and_start_report
<LI><a href="#[4f754a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;swap_curr_and_potential_next_room
</UL><P><STRONG><a name="[4f75428]"></a>ns_rm_monitor_init</STRONG> (ARM, 72 bytes, Stack size 0 bytes, ns-room-monitor.o(i.ns_rm_monitor_init))
<BR>[Called By]<UL><LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
<LI><a href="#[4f77e9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_nav_thread
<LI><a href="#[4f754a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;swap_curr_and_potential_next_room
</UL><P><STRONG><a name="[59ac294]"></a>ns_rm_monitor_is_any_room_visible</STRONG> (ARM, 20 bytes, Stack size 0 bytes, ns-room-monitor.o(i.ns_rm_monitor_is_any_room_visible))
<BR>[Called By]<UL><LI><a href="#[4f73294]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_update
</UL><P><STRONG><a name="[59ac31c]"></a>ns_rm_monitor_is_room_visible</STRONG> (ARM, 40 bytes, Stack size 0 bytes, ns-room-monitor.o(i.ns_rm_monitor_is_room_visible))
<BR>[Called By]<UL><LI><a href="#[4f73294]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_update
</UL><P><STRONG><a name="[4f75314]"></a>ns_rm_monitor_request_room_switch</STRONG> (ARM, 56 bytes, Stack size 0 bytes, ns-room-monitor.o(i.ns_rm_monitor_request_room_switch))
<BR>[Called By]<UL><LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
<LI><a href="#[4f740d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_replay_path_between_rooms
<LI><a href="#[5ad0f60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_setup_homing_path
<LI><a href="#[4fc2458]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_start_recording
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
<LI><a href="#[4f754a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;swap_curr_and_potential_next_room
</UL><P><STRONG><a name="[4f7539c]"></a>ns_rm_monitor_set_potential_next_room</STRONG> (ARM, 12 bytes, Stack size 0 bytes, ns-room-monitor.o(i.ns_rm_monitor_set_potential_next_room))
<BR>[Called By]<UL><LI><a href="#[4f754a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;swap_curr_and_potential_next_room
</UL><P><STRONG><a name="[4f73294]"></a>ns_rm_monitor_update</STRONG> (ARM, 504 bytes, Stack size 48 bytes, ns-room-monitor.o(i.ns_rm_monitor_update))
<BR><BR>[Calls]<UL><LI><a href="#[59ac294]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_is_any_room_visible
<LI><a href="#[59aef68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_room_not_visible
<LI><a href="#[59ac31c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_is_room_visible
</UL><BR>[Called By]<UL><LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
</UL><P><STRONG><a name="[4f7519c]"></a>ns_set_baud_rate</STRONG> (ARM, 72 bytes, Stack size 16 bytes, er_ns_cmds.o(i.ns_set_baud_rate))
<BR><BR>[Calls]<UL><LI><a href="#[5b5da60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_set_checksum
<LI><a href="#[5b5dbbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_uart_write
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
</UL><BR>[Called By]<UL><LI><a href="#[4f75290]">&lt&lt</a>&nbsp;&nbsp;&nbsp;reset_northstar_and_get_version
</UL><P><STRONG><a name="[4f74b48]"></a>ns_set_nsamples</STRONG> (ARM, 84 bytes, Stack size 16 bytes, er_ns_cmds.o(i.ns_set_nsamples))
<BR><BR>[Calls]<UL><LI><a href="#[5b5da60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_set_checksum
<LI><a href="#[5b5dbbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_uart_write
<LI><a href="#[5b5d974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_read_header
</UL><BR>[Called By]<UL><LI><a href="#[4f74c30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_spot_frequencies
</UL><P><STRONG><a name="[4f75624]"></a>ns_set_report_flags</STRONG> (ARM, 152 bytes, Stack size 24 bytes, er_ns_cmds.o(i.ns_set_report_flags))
<BR><BR>[Calls]<UL><LI><a href="#[5b5da60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_set_checksum
<LI><a href="#[5b5dbbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_uart_write
<LI><a href="#[5b5d974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_read_header
</UL><BR>[Called By]<UL><LI><a href="#[4f74e30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;select_correct_freq_set
<LI><a href="#[4f75828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_new_report_flags_and_start_report
</UL><P><STRONG><a name="[4f759a8]"></a>ns_set_spot_freq</STRONG> (ARM, 84 bytes, Stack size 16 bytes, er_ns_cmds.o(i.ns_set_spot_freq))
<BR><BR>[Calls]<UL><LI><a href="#[5b5da60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_set_checksum
<LI><a href="#[5b5dbbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_uart_write
<LI><a href="#[5b5d974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_read_header
</UL><BR>[Called By]<UL><LI><a href="#[4f74bbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_preset_freq
<LI><a href="#[4f74da8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_set_spotfreq_to_check_ac_freq
<LI><a href="#[4f758b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_beacon_frequency
<LI><a href="#[4f75a20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_room_nine_spot_fequencies
</UL><P><STRONG><a name="[4f74da8]"></a>ns_set_spotfreq_to_check_ac_freq</STRONG> (ARM, 144 bytes, Stack size 40 bytes, er_ns_cmds.o(i.ns_set_spotfreq_to_check_ac_freq))
<BR><BR>[Calls]<UL><LI><a href="#[4f759a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_set_spot_freq
</UL><BR>[Called By]<UL><LI><a href="#[4f74e30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;select_correct_freq_set
</UL><P><STRONG><a name="[4f755a4]"></a>ns_start_continuous_report</STRONG> (ARM, 64 bytes, Stack size 16 bytes, er_ns_cmds.o(i.ns_start_continuous_report))
<BR><BR>[Calls]<UL><LI><a href="#[5b5da60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_set_checksum
<LI><a href="#[5b5dbbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_uart_write
</UL><BR>[Called By]<UL><LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
<LI><a href="#[4f74e30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;select_correct_freq_set
<LI><a href="#[4f75828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_new_report_flags_and_start_report
</UL><P><STRONG><a name="[4f74d34]"></a>ns_stop_report</STRONG> (ARM, 64 bytes, Stack size 16 bytes, er_ns_cmds.o(i.ns_stop_report))
<BR><BR>[Calls]<UL><LI><a href="#[5b5da60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_set_checksum
<LI><a href="#[5b5dbbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_uart_write
</UL><BR>[Called By]<UL><LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
<LI><a href="#[4f74e30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;select_correct_freq_set
</UL><P><STRONG><a name="[5b5db48]"></a>ns_uart_read</STRONG> (ARM, 108 bytes, Stack size 32 bytes, er_ns_cmds.o(i.ns_uart_read))
<BR><BR>[Calls]<UL><LI><a href="#[5b5dad8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv10
<LI><a href="#[4bf48a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_read
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
</UL><BR>[Called By]<UL><LI><a href="#[4f74eac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_get_firmware_timestamp
<LI><a href="#[4f74f2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_get_serial_number
<LI><a href="#[4f75034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_get_version
<LI><a href="#[5b5d974]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_read_header
<LI><a href="#[5b5d880]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_read_template_packet
</UL><P><STRONG><a name="[5b5dbbc]"></a>ns_uart_write</STRONG> (ARM, 40 bytes, Stack size 16 bytes, er_ns_cmds.o(i.ns_uart_write))
<BR><BR>[Calls]<UL><LI><a href="#[4f750a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;flush_ns_uart
<LI><a href="#[4bf4918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_write
</UL><BR>[Called By]<UL><LI><a href="#[4f74eac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_get_firmware_timestamp
<LI><a href="#[4f74f2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_get_serial_number
<LI><a href="#[4f75034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_get_version
<LI><a href="#[4f7519c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_set_baud_rate
<LI><a href="#[4f74b48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_set_nsamples
<LI><a href="#[4f75624]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_set_report_flags
<LI><a href="#[4f759a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_set_spot_freq
<LI><a href="#[4f755a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_start_continuous_report
<LI><a href="#[4f74d34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_stop_report
</UL><P><STRONG><a name="[5ad0fdc]"></a>ns_usi_read_wrapper</STRONG> (ARM, 4 bytes, Stack size 0 bytes, er_ns_ipcam_wrapper.o(i.ns_usi_read_wrapper))
<BR><BR>[Calls]<UL><LI><a href="#[4e4c9d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyRead
</UL><BR>[Called By]<UL><LI><a href="#[5ad10d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_find_connection_between_rooms
<LI><a href="#[4f72ea0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_init_path_module
<LI><a href="#[4fc20bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_start_play
</UL><P><STRONG><a name="[5ad0e68]"></a>ns_usi_write_wrapper</STRONG> (ARM, 24 bytes, Stack size 8 bytes, er_ns_ipcam_wrapper.o(i.ns_usi_write_wrapper))
<BR><BR>[Calls]<UL><LI><a href="#[71ece0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyWrite
<LI><a href="#[4defcd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyFlash
</UL><BR>[Called By]<UL><LI><a href="#[4fc227c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_delete
<LI><a href="#[4fe1908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_delete_all_paths
<LI><a href="#[4fc1f64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_rename
<LI><a href="#[4fe163c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_reset_home
<LI><a href="#[4fe14c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_restore_to_default
<LI><a href="#[4fc22ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_stop_and_save
<LI><a href="#[4f74cac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;save_freq_table_selector_to_flash
<LI><a href="#[4f73978]">&lt&lt</a>&nbsp;&nbsp;&nbsp;save_home_position
<LI><a href="#[4fe181c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_flash_parameter
<LI><a href="#[4fe1bd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_tuning_parameters
<LI><a href="#[4fe19f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;test_rovio_hardware
</UL><P><STRONG><a name="[4fc23e0]"></a>nsp_abort_recording</STRONG> (ARM, 48 bytes, Stack size 8 bytes, er_shared_routines.o(i.nsp_abort_recording))
<BR><BR>[Calls]<UL><LI><a href="#[4f75c1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_current_rovio_state
<LI><a href="#[4f75ba0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_current_rovio_state
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[4fc227c]"></a>nsp_delete</STRONG> (ARM, 128 bytes, Stack size 16 bytes, er_cgi_thread_routines.o(i.nsp_delete))
<BR><BR>[Calls]<UL><LI><a href="#[5ad1254]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_find_path
<LI><a href="#[5ad0e68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_usi_write_wrapper
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[4fe1908]"></a>nsp_delete_all_paths</STRONG> (ARM, 132 bytes, Stack size 32 bytes, er_cgi_thread_routines.o(i.nsp_delete_all_paths))
<BR><BR>[Calls]<UL><LI><a href="#[5ad0e68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_usi_write_wrapper
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
<LI><a href="#[4fe14c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_restore_to_default
</UL><P><STRONG><a name="[5ad1358]"></a>nsp_find_close_waypoint</STRONG> (ARM, 104 bytes, Stack size 24 bytes, er_cgi_thread_routines.o(i.nsp_find_close_waypoint))
<BR>[Called By]<UL><LI><a href="#[5ad1158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_path_between_rooms
<LI><a href="#[4fc20bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_start_play
</UL><P><STRONG><a name="[5ad12c8]"></a>nsp_find_closest_waypoint_or_with_action</STRONG> (ARM, 204 bytes, Stack size 28 bytes, er_cgi_thread_routines.o(i.nsp_find_closest_waypoint_or_with_action))
<BR>[Called By]<UL><LI><a href="#[4fc20bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_start_play
</UL><P><STRONG><a name="[5ad10d0]"></a>nsp_find_connection_between_rooms</STRONG> (ARM, 192 bytes, Stack size 56 bytes, er_cgi_thread_routines.o(i.nsp_find_connection_between_rooms))
<BR><BR>[Calls]<UL><LI><a href="#[5ad0fdc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_usi_read_wrapper
<LI><a href="#[5ad1158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_path_between_rooms
</UL><BR>[Called By]<UL><LI><a href="#[5ad0f60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_setup_homing_path
</UL><P><STRONG><a name="[5ad11d4]"></a>nsp_find_first_empty_path</STRONG> (ARM, 68 bytes, Stack size 4 bytes, er_cgi_thread_routines.o(i.nsp_find_first_empty_path))
<BR>[Called By]<UL><LI><a href="#[4fc2458]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_start_recording
<LI><a href="#[4fc22ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_stop_and_save
</UL><P><STRONG><a name="[5ad1254]"></a>nsp_find_path</STRONG> (ARM, 92 bytes, Stack size 24 bytes, er_cgi_thread_routines.o(i.nsp_find_path))
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
</UL><BR>[Called By]<UL><LI><a href="#[4fc227c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_delete
<LI><a href="#[4fc1f64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_rename
<LI><a href="#[4fc20bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_start_play
</UL><P><STRONG><a name="[4f74158]"></a>nsp_follow_max_mag_spot</STRONG> (ARM, 2120 bytes, Stack size 64 bytes, er_rsm_thread_routines.o(i.nsp_follow_max_mag_spot))
<BR><BR>[Calls]<UL><LI><a href="#[75c3274]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_get_time
<LI><a href="#[4f75314]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_request_room_switch
<LI><a href="#[4f74974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dflt
<LI><a href="#[4f74900]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__softfp_atan2
<LI><a href="#[4f73c68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[4f74894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[4f73dbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;clamp_angle
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[54acac8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_divtest
<LI><a href="#[4f74828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[4f73e2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[4db4f54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fflt
<LI><a href="#[4db4ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_frdiv
<LI><a href="#[4f74240]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__softfp_sqrt
<LI><a href="#[4f73f7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[4f73d50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[4f741d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[4f73bfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[4e4cde8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[4f73904]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_mcu_cmd
<LI><a href="#[4f74668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[4db4ca4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[4f73b70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_mcu_cmd_with_obstacle_avoidance
<LI><a href="#[5c07c4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;execute_random_maneuver
<LI><a href="#[5c07bc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;execute_small_sideways_random_maneuver
</UL><BR>[Called By]<UL><LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[4f73f04]"></a>nsp_follow_waypoint</STRONG> (ARM, 900 bytes, Stack size 56 bytes, er_rsm_thread_routines.o(i.nsp_follow_waypoint))
<BR><BR>[Calls]<UL><LI><a href="#[4f75930]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dprint_to_socket
<LI><a href="#[75c3274]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_get_time
<LI><a href="#[4f74974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dflt
<LI><a href="#[4f74900]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__softfp_atan2
<LI><a href="#[4f74894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[4f73e2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[4f73dbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;clamp_angle
<LI><a href="#[4f74828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[4f73c68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[4f741d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[4f73d50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[4f73b70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_mcu_cmd_with_obstacle_avoidance
<LI><a href="#[4f74240]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__softfp_sqrt
<LI><a href="#[4f73e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fcmpge
<LI><a href="#[5c07c4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;execute_random_maneuver
<LI><a href="#[5c07b40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;move_rovio_towards_target
</UL><BR>[Called By]<UL><LI><a href="#[4f740d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_replay_path_between_rooms
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[4fc2208]"></a>nsp_get_list</STRONG> (ARM, 112 bytes, Stack size 20 bytes, er_cgi_thread_routines.o(i.nsp_get_list))
<BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[4f72ea0]"></a>nsp_init_path_module</STRONG> (ARM, 460 bytes, Stack size 56 bytes, er_rsm_thread_routines.o(i.nsp_init_path_module))
<BR><BR>[Calls]<UL><LI><a href="#[5ad0fdc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_usi_read_wrapper
<LI><a href="#[5c07acc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Get64KSafeSpace
<LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
</UL><BR>[Called By]<UL><LI><a href="#[4f77e9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_nav_thread
</UL><P><STRONG><a name="[4fc1fd4]"></a>nsp_pause</STRONG> (ARM, 128 bytes, Stack size 8 bytes, er_cgi_thread_routines.o(i.nsp_pause))
<BR><BR>[Calls]<UL><LI><a href="#[4f75c1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_current_rovio_state
<LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[4f735c0]"></a>nsp_play_current_path</STRONG> (ARM, 1576 bytes, Stack size 128 bytes, er_rsm_thread_routines.o(i.nsp_play_current_path))
<BR><BR>[Calls]<UL><LI><a href="#[4f74058]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_rovio_head_position
<LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
<LI><a href="#[4f75314]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_request_room_switch
<LI><a href="#[5c07c4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;execute_random_maneuver
<LI><a href="#[4f73e2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[4f73dbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;clamp_angle
<LI><a href="#[4f74828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4f75930]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dprint_to_socket
<LI><a href="#[4f73cd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rotate_rovio_by_angle
<LI><a href="#[5c077ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;play_waypoint_action
<LI><a href="#[5c078dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;start_nav_to_waypoint
<LI><a href="#[4f74974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dflt
<LI><a href="#[4f74240]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__softfp_sqrt
<LI><a href="#[5c07868]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wp_on_target
<LI><a href="#[4f74900]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__softfp_atan2
<LI><a href="#[4f74894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[4f73c68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[4f741d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[4f73d50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[4f73b70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_mcu_cmd_with_obstacle_avoidance
<LI><a href="#[4f73f7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[5c07b40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;move_rovio_towards_target
</UL><BR>[Called By]<UL><LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[4f73718]"></a>nsp_record_waypoint</STRONG> (ARM, 136 bytes, Stack size 8 bytes, er_rsm_thread_routines.o(i.nsp_record_waypoint))
<BR><BR>[Calls]<UL><LI><a href="#[4f74058]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_rovio_head_position
<LI><a href="#[5ad0d04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;store_dense_waypoint
</UL><BR>[Called By]<UL><LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[4fc1f64]"></a>nsp_rename</STRONG> (ARM, 156 bytes, Stack size 24 bytes, er_cgi_thread_routines.o(i.nsp_rename))
<BR><BR>[Calls]<UL><LI><a href="#[5ad1254]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_find_path
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[5ad0e68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_usi_write_wrapper
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[4f740d4]"></a>nsp_replay_path_between_rooms</STRONG> (ARM, 500 bytes, Stack size 48 bytes, er_rsm_thread_routines.o(i.nsp_replay_path_between_rooms))
<BR><BR>[Calls]<UL><LI><a href="#[4f74058]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_rovio_head_position
<LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
<LI><a href="#[4f75314]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_request_room_switch
<LI><a href="#[4f74974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dflt
<LI><a href="#[4f74240]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__softfp_sqrt
<LI><a href="#[4f74894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[4f73f7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[4f73f04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_follow_waypoint
</UL><BR>[Called By]<UL><LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[4fe163c]"></a>nsp_reset_home</STRONG> (ARM, 120 bytes, Stack size 8 bytes, er_cgi_thread_routines.o(i.nsp_reset_home))
<BR><BR>[Calls]<UL><LI><a href="#[4f75c1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_current_rovio_state
<LI><a href="#[5ad0e68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_usi_write_wrapper
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
<LI><a href="#[4fe14c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_restore_to_default
</UL><P><STRONG><a name="[4fe14c0]"></a>nsp_restore_to_default</STRONG> (ARM, 188 bytes, Stack size 16 bytes, er_cgi_thread_routines.o(i.nsp_restore_to_default))
<BR><BR>[Calls]<UL><LI><a href="#[4fe1908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_delete_all_paths
<LI><a href="#[5ad0e68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_usi_write_wrapper
<LI><a href="#[4fe163c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_reset_home
<LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
</UL><BR>[Called By]<UL><LI><a href="#[4eaa720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ERSP_rovio_libns_restore_defaults
<LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[5b5da60]"></a>nsp_set_checksum</STRONG> (ARM, 52 bytes, Stack size 0 bytes, er_ns_cmds.o(i.nsp_set_checksum))
<BR>[Called By]<UL><LI><a href="#[5b5d9e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;is_checksum_correct
<LI><a href="#[4f74eac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_get_firmware_timestamp
<LI><a href="#[4f74f2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_get_serial_number
<LI><a href="#[4f75034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_get_version
<LI><a href="#[4f7519c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_set_baud_rate
<LI><a href="#[4f74b48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_set_nsamples
<LI><a href="#[4f75624]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_set_report_flags
<LI><a href="#[4f759a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_set_spot_freq
<LI><a href="#[4f755a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_start_continuous_report
<LI><a href="#[4f74d34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_stop_report
</UL><P><STRONG><a name="[5ad0f60]"></a>nsp_setup_homing_path</STRONG> (ARM, 224 bytes, Stack size 24 bytes, er_cgi_thread_routines.o(i.nsp_setup_homing_path))
<BR><BR>[Calls]<UL><LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
<LI><a href="#[5ad10d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_find_connection_between_rooms
<LI><a href="#[4f75ba0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_current_rovio_state
<LI><a href="#[4f75314]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_request_room_switch
</UL><BR>[Called By]<UL><LI><a href="#[4fc1ef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;smc_go_home
<LI><a href="#[4fc1e78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;smc_go_home_and_dock
</UL><P><STRONG><a name="[4fc20bc]"></a>nsp_start_play</STRONG> (ARM, 620 bytes, Stack size 56 bytes, er_cgi_thread_routines.o(i.nsp_start_play))
<BR><BR>[Calls]<UL><LI><a href="#[4f75c1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_current_rovio_state
<LI><a href="#[4fc2044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_stop_playing
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[5ad1254]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_find_path
<LI><a href="#[5ad0fdc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_usi_read_wrapper
<LI><a href="#[4f75ba0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_current_rovio_state
<LI><a href="#[5ad12c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_find_closest_waypoint_or_with_action
<LI><a href="#[5ad1358]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_find_close_waypoint
<LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
<LI><a href="#[4f74328]">&gt&gt</a>&nbsp;&nbsp;&nbsp;is_rovio_docked
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[4fc2458]"></a>nsp_start_recording</STRONG> (ARM, 204 bytes, Stack size 24 bytes, er_cgi_thread_routines.o(i.nsp_start_recording))
<BR><BR>[Calls]<UL><LI><a href="#[4f75c1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_current_rovio_state
<LI><a href="#[5ad11d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_find_first_empty_path
<LI><a href="#[4f75ba0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_current_rovio_state
<LI><a href="#[4f75314]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_request_room_switch
<LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[4fc22ec]"></a>nsp_stop_and_save</STRONG> (ARM, 508 bytes, Stack size 120 bytes, er_cgi_thread_routines.o(i.nsp_stop_and_save))
<BR><BR>[Calls]<UL><LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4f75ba0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_current_rovio_state
<LI><a href="#[4f74058]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_rovio_head_position
<LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[5ad0d04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;store_dense_waypoint
<LI><a href="#[5ad0c70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;reject_outliers_from_dense_waypoints_using_dist
<LI><a href="#[5ad0bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;print_labeled_dense_waypoints
<LI><a href="#[5ad0b64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_path_waypoints_after_clustering
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[5ad11d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_find_first_empty_path
<LI><a href="#[5ad0e68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_usi_write_wrapper
<LI><a href="#[4f75930]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dprint_to_socket
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[4fc2044]"></a>nsp_stop_playing</STRONG> (ARM, 64 bytes, Stack size 8 bytes, er_shared_routines.o(i.nsp_stop_playing))
<BR><BR>[Calls]<UL><LI><a href="#[4f75c1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_current_rovio_state
<LI><a href="#[4f75ba0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_current_rovio_state
<LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
</UL><BR>[Called By]<UL><LI><a href="#[4fe1a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drive_rovio_manually
<LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
<LI><a href="#[4fc20bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_start_play
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[4fe1c54]"></a>nsp_store_home</STRONG> (ARM, 156 bytes, Stack size 8 bytes, er_cgi_thread_routines.o(i.nsp_store_home))
<BR><BR>[Calls]<UL><LI><a href="#[4f75c1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_current_rovio_state
<LI><a href="#[4f74328]">&gt&gt</a>&nbsp;&nbsp;&nbsp;is_rovio_docked
<LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
<LI><a href="#[4f75ba0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_current_rovio_state
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[8cc5460]"></a>ol_ltp</STRONG> (ARM, 256 bytes, Stack size 48 bytes, ol_ltp.o(i.ol_ltp))
<BR><BR>[Calls]<UL><LI><a href="#[8e0e888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pitch_ol
<LI><a href="#[8e0e814]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pitch_ol_wgh
</UL><BR>[Called By]<UL><LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
</UL><P><STRONG><a name="[4f72f1c]"></a>open_ns_port</STRONG> (ARM, 128 bytes, Stack size 24 bytes, er_ns_cmds.o(i.open_ns_port))
<BR><BR>[Calls]<UL><LI><a href="#[4bba6e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_lookup
<LI><a href="#[4bba670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_set_config
</UL><BR>[Called By]<UL><LI><a href="#[4f77e9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_nav_thread
</UL><P><STRONG><a name="[4f73af8]"></a>orient_to_beacon</STRONG> (ARM, 196 bytes, Stack size 16 bytes, er_rsm_thread_routines.o(i.orient_to_beacon))
<BR><BR>[Calls]<UL><LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
<LI><a href="#[4f75ba0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_current_rovio_state
</UL><BR>[Called By]<UL><LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[7967324]"></a>os_daemonize</STRONG> (ARM, 8 bytes, Stack size 0 bytes, os_ecos.o(i.os_daemonize))
<BR>[Called By]<UL><LI><a href="#[7972984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_daemon
</UL><P><STRONG><a name="[7967b50]"></a>os_daemonize_terminate</STRONG> (ARM, 4 bytes, Stack size 0 bytes, os_ecos.o(i.os_daemonize_terminate))
<BR>[Called By]<UL><LI><a href="#[50074b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deinit
</UL><P><STRONG><a name="[7a5ad64]"></a>os_get_random</STRONG> (ARM, 48 bytes, Stack size 16 bytes, os_ecos.o(i.os_get_random))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rand
</UL><BR>[Called By]<UL><LI><a href="#[79684f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_init
<LI><a href="#[7967704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_global_ctrl_iface_init
<LI><a href="#[9d003b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4
</UL><P><STRONG><a name="[7a5ae98]"></a>os_get_time</STRONG> (ARM, 96 bytes, Stack size 16 bytes, os_ecos.o(i.os_get_time))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[79696a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
<LI><a href="#[7967508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_run
<LI><a href="#[9cf6560]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_add
<LI><a href="#[8354e90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_expire
<LI><a href="#[83563a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_set_expiration
<LI><a href="#[9c0a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_debug_print_timestamp
<LI><a href="#[8312c08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_michael_mic_failure
</UL><P><STRONG><a name="[79b07bc]"></a>os_malloc</STRONG> (ARM, 36 bytes, Stack size 8 bytes, os_ecos.o(i.os_malloc))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
</UL><BR>[Called By]<UL><LI><a href="#[8a2c6e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;aes_decrypt_init
<LI><a href="#[79aff88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;base64_decode
<LI><a href="#[79b082c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bf_fopen
<LI><a href="#[8ac5ec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_buildIdentity
<LI><a href="#[8ac79dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_buildNak
<LI><a href="#[8ac6464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_build_expanded_nak
<LI><a href="#[8ac6f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_processNotify
<LI><a href="#[8aaed90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_request
<LI><a href="#[79680a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_rx_eapol
<LI><a href="#[79696a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
<LI><a href="#[7967508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_run
<LI><a href="#[79b03a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;os_strdup
<LI><a href="#[500769c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[8ac8e04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_NOTIFICATION_Enter
<LI><a href="#[8ac8b20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_SEND_RESPONSE_Enter
<LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
<LI><a href="#[796d5fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_alloc_eapol
<LI><a href="#[9c68154]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_psk
<LI><a href="#[9c63ef8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_string
<LI><a href="#[9c681d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_bssid
<LI><a href="#[9c682c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_int
<LI><a href="#[9c62f9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_string_ascii
<LI><a href="#[836e42c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_init
<LI><a href="#[836e4a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_key
<LI><a href="#[84029a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless
<LI><a href="#[8402700]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless_custom
<LI><a href="#[839b4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_scan_results
<LI><a href="#[7969aa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[796802c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
<LI><a href="#[79694b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_rsn_ie
<LI><a href="#[796952c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_wpa_ie
<LI><a href="#[7969434]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie
<LI><a href="#[79691c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie_default
<LI><a href="#[9d004c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_decrypt_key_data
<LI><a href="#[7968204]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_scan_results
</UL><P><STRONG><a name="[5007438]"></a>os_program_deinit</STRONG> (ARM, 4 bytes, Stack size 0 bytes, os_ecos.o(i.os_program_deinit))
<BR>[Called By]<UL><LI><a href="#[4a55a8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_main
</UL><P><STRONG><a name="[500770c]"></a>os_program_init</STRONG> (ARM, 8 bytes, Stack size 0 bytes, os_ecos.o(i.os_program_init))
<BR>[Called By]<UL><LI><a href="#[4a55a8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_main
</UL><P><STRONG><a name="[79672b0]"></a>os_rel2abs_path</STRONG> (ARM, 4 bytes, Stack size 0 bytes, os_ecos.o(i.os_rel2abs_path))
<BR><BR>[Calls]<UL><LI><a href="#[79b03a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_strdup
</UL><BR>[Called By]<UL><LI><a href="#[797346c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface
</UL><P><STRONG><a name="[7967e4c]"></a>os_sleep</STRONG> (ARM, 40 bytes, Stack size 8 bytes, os_ecos.o(i.os_sleep))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
</UL><BR>[Called By]<UL><LI><a href="#[796866c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_deinit
<LI><a href="#[7967fac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_driver_init
<LI><a href="#[8312c08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_michael_mic_failure
</UL><P><STRONG><a name="[79b03a4]"></a>os_strdup</STRONG> (ARM, 64 bytes, Stack size 16 bytes, os_ecos.o(i.os_strdup))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Called By]<UL><LI><a href="#[79672b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;os_rel2abs_path
<LI><a href="#[79b057c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_alloc_empty
<LI><a href="#[9c67c68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_auth_alg
<LI><a href="#[9c62450]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_cipher
<LI><a href="#[9c67b6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_eap
<LI><a href="#[9c67f60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_key_mgmt
<LI><a href="#[9c6805c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_proto
<LI><a href="#[9c63ef8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_string
<LI><a href="#[79b05f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read
<LI><a href="#[79b2044]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_blob
<LI><a href="#[5007624]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
<LI><a href="#[797346c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface
</UL><P><STRONG><a name="[500769c]"></a>os_zalloc</STRONG> (ARM, 36 bytes, Stack size 16 bytes, os_ecos.o(i.os_zalloc))
<BR><BR>[Calls]<UL><LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Called By]<UL><LI><a href="#[8479ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_init
<LI><a href="#[7966d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_init
<LI><a href="#[7967ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;l2_packet_init
<LI><a href="#[9cf6560]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_add
<LI><a href="#[9cf6cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_init
<LI><a href="#[9c8aa08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_candidate_add
<LI><a href="#[9c8aaf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_init
<LI><a href="#[79688f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_blacklist_add
<LI><a href="#[79b057c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_alloc_empty
<LI><a href="#[79b2044]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_blob
<LI><a href="#[79b20c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_network
<LI><a href="#[9c67be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_auth_alg
<LI><a href="#[9c621c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_cipher
<LI><a href="#[9c67af0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_eap
<LI><a href="#[9c67ee0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_key_mgmt
<LI><a href="#[9c67fe0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_proto
<LI><a href="#[9c62f1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_string_hex
<LI><a href="#[8406cc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_range
<LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
<LI><a href="#[7966d18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_init
<LI><a href="#[50075a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_add_iface
<LI><a href="#[79684f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_init
<LI><a href="#[7967704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_global_ctrl_iface_init
<LI><a href="#[5007624]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
<LI><a href="#[796f2b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_eapol
<LI><a href="#[796f23c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_wpa
<LI><a href="#[4a55a8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_main
</UL><P><STRONG><a name="[7f5f844]"></a>oss_init</STRONG> (ARM, 36 bytes, Stack size 8 bytes, input-oss.o(i.oss_init))
<BR><BR>[Calls]<UL><LI><a href="#[780fd90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;register_config_context
</UL><BR>[Called By]<UL><LI><a href="#[5923f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RtspServerStart
</UL><P><STRONG><a name="[8cc5d1c]"></a>p_ol_wgh_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, p_ol_wgh.o(i.p_ol_wgh_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[88869ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_exit
</UL><P><STRONG><a name="[8cc59fc]"></a>p_ol_wgh_init</STRONG> (ARM, 72 bytes, Stack size 16 bytes, p_ol_wgh.o(i.p_ol_wgh_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[88868c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_init
</UL><P><STRONG><a name="[8cc60ac]"></a>p_ol_wgh_reset</STRONG> (ARM, 40 bytes, Stack size 0 bytes, p_ol_wgh.o(i.p_ol_wgh_reset))
<BR>[Called By]<UL><LI><a href="#[8886a98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_reset
</UL><P><STRONG><a name="[71ed2f8]"></a>parseCommand</STRONG> (ARM, 228 bytes, Stack size 152 bytes, vp_com.o(i.parseCommand))
<BR><BR>[Calls]<UL><LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
</UL><BR>[Called By]<UL><LI><a href="#[71ed214]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbCustomRequest
</UL><P><STRONG><a name="[80cf474]"></a>parse_pmsg</STRONG> (ARM, 888 bytes, Stack size 32 bytes, pmsg.o(i.parse_pmsg))
<BR><BR>[Calls]<UL><LI><a href="#[80d0784]">&gt&gt</a>&nbsp;&nbsp;&nbsp;delim
<LI><a href="#[743f850]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isdigit
<LI><a href="#[4dee704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strtol
</UL><BR>[Called By]<UL><LI><a href="#[8180598]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_request
</UL><P><STRONG><a name="[9c5c614]"></a>pbkdf2_sha1</STRONG> (ARM, 128 bytes, Stack size 64 bytes, sha1.o(i.pbkdf2_sha1))
<BR><BR>[Calls]<UL><LI><a href="#[8a10de4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1_f
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[79afe1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_update_psk
</UL><P><STRONG><a name="[4a03868]"></a>period_find_thread</STRONG> (ARM, 108 bytes, Stack size 56 bytes, UartTest.o(i.period_find_thread))
<BR><BR>[Calls]<UL><LI><a href="#[4a03958]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_find
<LI><a href="#[4a038e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_get_info
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
</UL><BR>[Called By]<UL><LI><a href="#[4a03704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;period_pause_thread
<LI><a href="#[4a03610]">&lt&lt</a>&nbsp;&nbsp;&nbsp;period_resume_thread
</UL><P><STRONG><a name="[4a03704]"></a>period_pause_thread</STRONG> (ARM, 24 bytes, Stack size 8 bytes, UartTest.o(i.period_pause_thread))
<BR><BR>[Calls]<UL><LI><a href="#[4a03868]">&gt&gt</a>&nbsp;&nbsp;&nbsp;period_find_thread
<LI><a href="#[4a0377c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_suspend
</UL><BR>[Called By]<UL><LI><a href="#[4a54a54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsUartTestHandler
</UL><P><STRONG><a name="[4a03610]"></a>period_resume_thread</STRONG> (ARM, 24 bytes, Stack size 8 bytes, UartTest.o(i.period_resume_thread))
<BR><BR>[Calls]<UL><LI><a href="#[4a03868]">&gt&gt</a>&nbsp;&nbsp;&nbsp;period_find_thread
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
</UL><BR>[Called By]<UL><LI><a href="#[4a54a54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsUartTestHandler
</UL><P><STRONG><a name="[8401d08]"></a>perror</STRONG> (ARM, 84 bytes, Stack size 16 bytes, System.o(i.perror), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4d0cb38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fputs
</UL><P><STRONG><a name="[8466f04]"></a>perror</STRONG> (ARM, 84 bytes, Stack size 16 bytes, System.o(i.perror), UNUSED)
<P><STRONG><a name="[4ced3b4]"></a>perror</STRONG> (ARM, 84 bytes, Stack size 16 bytes, System.o(i.perror), UNUSED)
<P><STRONG><a name="[5859b74]"></a>perror</STRONG> (ARM, 84 bytes, Stack size 16 bytes, System.o(i.perror), UNUSED)
<P><STRONG><a name="[4defac0]"></a>perror</STRONG> (ARM, 84 bytes, Stack size 16 bytes, System.o(i.perror))
<BR>[Called By]<UL><LI><a href="#[4ced504]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_bootp
<LI><a href="#[4a556e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_net
<LI><a href="#[4d0cfac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_loopback_interface
<LI><a href="#[50d98e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp_down_net
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
<LI><a href="#[4a5583c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownInterface
<LI><a href="#[5859bc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetDevInterface
<LI><a href="#[4def22c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetPubIPInfo
<LI><a href="#[4dd624c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;clr_flag
<LI><a href="#[836c178]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_private_info
<LI><a href="#[836b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell2param
<LI><a href="#[836bc58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell_ioctl
<LI><a href="#[5859b00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mc_rx_socket
<LI><a href="#[4dd61dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_flag
<LI><a href="#[836e42c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_init
<LI><a href="#[8406d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_receive
<LI><a href="#[839b54c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_bssid
<LI><a href="#[8401b88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_ifflags
<LI><a href="#[8406cc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_range
<LI><a href="#[839b4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_scan_results
<LI><a href="#[839b5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_ssid
<LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
<LI><a href="#[8406fd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_pmksa
<LI><a href="#[839b6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_scan
<LI><a href="#[8401c88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_bssid
<LI><a href="#[839b7cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_freq
<LI><a href="#[8401b08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_ifflags
<LI><a href="#[839b84c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_mode
<LI><a href="#[8401c08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_region
<LI><a href="#[839b74c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_ssid
<LI><a href="#[79684f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_init
<LI><a href="#[7967704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_global_ctrl_iface_init
</UL><P><STRONG><a name="[839b374]"></a>perror</STRONG> (ARM, 84 bytes, Stack size 16 bytes, System.o(i.perror), UNUSED)
<P><STRONG><a name="[8cd62dc]"></a>ph_disp</STRONG> (ARM, 856 bytes, Stack size 212 bytes, ph_disp.o(i.ph_disp))
<BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cd7564]"></a>ph_disp_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, ph_disp.o(i.ph_disp_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[886ef44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_exit
</UL><P><STRONG><a name="[8cd7054]"></a>ph_disp_init</STRONG> (ARM, 104 bytes, Stack size 16 bytes, ph_disp.o(i.ph_disp_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[886eddc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_init
</UL><P><STRONG><a name="[8cd6348]"></a>ph_disp_lock</STRONG> (ARM, 12 bytes, Stack size 0 bytes, ph_disp.o(i.ph_disp_lock))
<BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cd63bc]"></a>ph_disp_release</STRONG> (ARM, 12 bytes, Stack size 0 bytes, ph_disp.o(i.ph_disp_release))
<BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[8cd7894]"></a>ph_disp_reset</STRONG> (ARM, 72 bytes, Stack size 0 bytes, ph_disp.o(i.ph_disp_reset))
<BR>[Called By]<UL><LI><a href="#[886f0ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr_reset
</UL><P><STRONG><a name="[5c077ec]"></a>play_waypoint_action</STRONG> (ARM, 300 bytes, Stack size 8 bytes, er_rsm_thread_routines.o(i.play_waypoint_action))
<BR><BR>[Calls]<UL><LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[5ad0ae4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capture_and_email_picture
<LI><a href="#[4f750a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;flush_ns_uart
<LI><a href="#[4f75930]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dprint_to_socket
</UL><BR>[Called By]<UL><LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
</UL><P><STRONG><a name="[4d84510]"></a>pllEvalPLLCON</STRONG> (ARM, 228 bytes, Stack size 16 bytes, pll.o(i.pllEvalPLLCON))
<BR><BR>[Calls]<UL><LI><a href="#[75802c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__pllEvalPLLCON
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
</UL><BR>[Called By]<UL><LI><a href="#[4a55508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInitClock
</UL><P><STRONG><a name="[9cf6560]"></a>pmksa_cache_add</STRONG> (ARM, 800 bytes, Stack size 104 bytes, pmksa_cache.o(i.pmksa_cache_add))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[8354974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hmac_sha1_vector
<LI><a href="#[7a5ae98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_get_time
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8356420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_free_entry
<LI><a href="#[83563a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_set_expiration
</UL><BR>[Called By]<UL><LI><a href="#[9c8a984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_get_opportunistic
<LI><a href="#[9c8bc78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_eapol_cb
<LI><a href="#[9cfbebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_pmk
</UL><P><STRONG><a name="[796933c]"></a>pmksa_cache_clear_current</STRONG> (ARM, 16 bytes, Stack size 0 bytes, pmksa_cache.o(i.pmksa_cache_clear_current))
<BR>[Called By]<UL><LI><a href="#[79695a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_non_wpa_policy
</UL><P><STRONG><a name="[9cf6c5c]"></a>pmksa_cache_deinit</STRONG> (ARM, 68 bytes, Stack size 16 bytes, pmksa_cache.o(i.pmksa_cache_deinit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[83563a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_set_expiration
</UL><BR>[Called By]<UL><LI><a href="#[7966e70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_deinit
</UL><P><STRONG><a name="[9cf66c8]"></a>pmksa_cache_get</STRONG> (ARM, 112 bytes, Stack size 16 bytes, pmksa_cache.o(i.pmksa_cache_get))
<BR><BR>[Calls]<UL><LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
</UL><BR>[Called By]<UL><LI><a href="#[7968edc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_set_current
<LI><a href="#[83563a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_set_expiration
<LI><a href="#[9cf696c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_candidate_process
<LI><a href="#[9c8a904]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_scan_results
<LI><a href="#[9cfbebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_pmk
</UL><P><STRONG><a name="[7966c9c]"></a>pmksa_cache_get_current</STRONG> (ARM, 16 bytes, Stack size 0 bytes, pmksa_cache.o(i.pmksa_cache_get_current))
<BR>[Called By]<UL><LI><a href="#[796e4b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_eapol_send
</UL><P><STRONG><a name="[9c8a984]"></a>pmksa_cache_get_opportunistic</STRONG> (ARM, 176 bytes, Stack size 32 bytes, pmksa_cache.o(i.pmksa_cache_get_opportunistic))
<BR><BR>[Calls]<UL><LI><a href="#[9cf6560]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_add
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[7968edc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_set_current
<LI><a href="#[9c8aa08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_candidate_add
</UL><P><STRONG><a name="[9cf6cd4]"></a>pmksa_cache_init</STRONG> (ARM, 44 bytes, Stack size 16 bytes, pmksa_cache.o(i.pmksa_cache_init))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
</UL><BR>[Called By]<UL><LI><a href="#[7966d18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_init
</UL><P><STRONG><a name="[9cf6b64]"></a>pmksa_cache_notify_reconfig</STRONG> (ARM, 28 bytes, Stack size 0 bytes, pmksa_cache.o(i.pmksa_cache_notify_reconfig))
<BR>[Called By]<UL><LI><a href="#[7968cd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_config
</UL><P><STRONG><a name="[7968edc]"></a>pmksa_cache_set_current</STRONG> (ARM, 184 bytes, Stack size 24 bytes, pmksa_cache.o(i.pmksa_cache_set_current))
<BR><BR>[Calls]<UL><LI><a href="#[9cf66c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_get
<LI><a href="#[9c8a984]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_get_opportunistic
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
</UL><BR>[Called By]<UL><LI><a href="#[831229c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_find_assoc_pmkid
<LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
</UL><P><STRONG><a name="[9c8aa08]"></a>pmksa_candidate_add</STRONG> (ARM, 332 bytes, Stack size 48 bytes, preauth.o(i.pmksa_candidate_add))
<BR><BR>[Calls]<UL><LI><a href="#[9c8a984]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_get_opportunistic
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[9cf696c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_candidate_process
</UL><BR>[Called By]<UL><LI><a href="#[9c8a904]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_scan_results
<LI><a href="#[83129e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_pmkid_candidate
</UL><P><STRONG><a name="[7966ee4]"></a>pmksa_candidate_free</STRONG> (ARM, 52 bytes, Stack size 8 bytes, preauth.o(i.pmksa_candidate_free))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[9c8a904]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_scan_results
<LI><a href="#[796ef34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
</UL><P><STRONG><a name="[4a55bec]"></a>prdAddTask</STRONG> (ARM, 100 bytes, Stack size 24 bytes, PeriodTask.o(i.prdAddTask))
<BR><BR>[Calls]<UL><LI><a href="#[4efdec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdLock
<LI><a href="#[4efdcf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listAttach
<LI><a href="#[4efdf34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdUnlock
</UL><BR>[Called By]<UL><LI><a href="#[4a55154]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReadCameraParam
<LI><a href="#[4a551c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledInit
<LI><a href="#[727eb44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState
<LI><a href="#[4f2955c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuSendCommand_NoResponse
<LI><a href="#[4a5506c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdAddTask_CheckBattery
<LI><a href="#[59243c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdAddTask_CheckNetwork
<LI><a href="#[4a54c34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdAddTask_CheckSuspend
<LI><a href="#[4a54bbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdAddTask_CheckUSB
<LI><a href="#[58875fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdAddTask__CheckDDNS
<LI><a href="#[8019944]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_Active
<LI><a href="#[801a2d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_NoActive
<LI><a href="#[8019e80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_TryConnect
<LI><a href="#[8019be0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_TryConnectOver
<LI><a href="#[727beb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_LED
<LI><a href="#[4a55c5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsSuspendTestHandler
</UL><P><STRONG><a name="[4a5506c]"></a>prdAddTask_CheckBattery</STRONG> (ARM, 52 bytes, Stack size 8 bytes, PeriodTask_CheckBattery.o(i.prdAddTask_CheckBattery))
<BR><BR>[Calls]<UL><LI><a href="#[4a55bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask
</UL><BR>[Called By]<UL><LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[59243c8]"></a>prdAddTask_CheckNetwork</STRONG> (ARM, 52 bytes, Stack size 8 bytes, PeriodTask_CheckNetwork.o(i.prdAddTask_CheckNetwork))
<BR><BR>[Calls]<UL><LI><a href="#[4a55bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask
</UL><BR>[Called By]<UL><LI><a href="#[5927be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_start
</UL><P><STRONG><a name="[4a54c34]"></a>prdAddTask_CheckSuspend</STRONG> (ARM, 52 bytes, Stack size 8 bytes, PeriodTask_CheckSuspend.o(i.prdAddTask_CheckSuspend))
<BR><BR>[Calls]<UL><LI><a href="#[4a55bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask
</UL><BR>[Called By]<UL><LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[72a84d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdReset_CheckSuspend
</UL><P><STRONG><a name="[4a54bbc]"></a>prdAddTask_CheckUSB</STRONG> (ARM, 52 bytes, Stack size 8 bytes, PeriodTask_CheckUSB.o(i.prdAddTask_CheckUSB))
<BR><BR>[Calls]<UL><LI><a href="#[4a55bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask
</UL><BR>[Called By]<UL><LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[58875fc]"></a>prdAddTask__CheckDDNS</STRONG> (ARM, 52 bytes, Stack size 8 bytes, HttpClient.o(i.prdAddTask__CheckDDNS))
<BR><BR>[Calls]<UL><LI><a href="#[4a55bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask
</UL><BR>[Called By]<UL><LI><a href="#[5927be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_start
</UL><P><STRONG><a name="[4efde50]"></a>prdAfterCondWait</STRONG> (ARM, 28 bytes, Stack size 8 bytes, PeriodTask.o(i.prdAfterCondWait))
<BR><BR>[Calls]<UL><LI><a href="#[4a0359c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_self
</UL><BR>[Called By]<UL><LI><a href="#[4eff19c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdRun
</UL><P><STRONG><a name="[4efddd8]"></a>prdBeforeCondWait</STRONG> (ARM, 20 bytes, Stack size 0 bytes, PeriodTask.o(i.prdBeforeCondWait))
<BR>[Called By]<UL><LI><a href="#[4eff19c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdRun
</UL><P><STRONG><a name="[4a548fc]"></a>prdDelTask</STRONG> (ARM, 32 bytes, Stack size 8 bytes, PeriodTask.o(i.prdDelTask))
<BR><BR>[Calls]<UL><LI><a href="#[4efdec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdLock
<LI><a href="#[4db5224]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listDetach
<LI><a href="#[4efdf34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdUnlock
</UL><BR>[Called By]<UL><LI><a href="#[727eb44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState
<LI><a href="#[4eaa53c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuSendCommand
<LI><a href="#[4f2955c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuSendCommand_NoResponse
<LI><a href="#[72a84d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdReset_CheckSuspend
<LI><a href="#[8019944]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_Active
<LI><a href="#[801a2d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_NoActive
<LI><a href="#[8019e80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_TryConnect
<LI><a href="#[8019be0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_TryConnectOver
<LI><a href="#[727beb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_LED
<LI><a href="#[4f2ad58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_ReadMCU
<LI><a href="#[4e31d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_ResetFlag_FactoryDefault
<LI><a href="#[4a5741c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;test_HS
</UL><P><STRONG><a name="[4a5531c]"></a>prdInit</STRONG> (ARM, 156 bytes, Stack size 32 bytes, PeriodTask.o(i.prdInit))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4c2c128]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_init
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
</UL><BR>[Called By]<UL><LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[4efdec8]"></a>prdLock</STRONG> (ARM, 56 bytes, Stack size 8 bytes, PeriodTask.o(i.prdLock))
<BR><BR>[Calls]<UL><LI><a href="#[4a0359c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_self
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
</UL><BR>[Called By]<UL><LI><a href="#[727eb44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState
<LI><a href="#[4a55bec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdAddTask
<LI><a href="#[4a548fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdDelTask
<LI><a href="#[72a84d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdReset_CheckSuspend
<LI><a href="#[4eff19c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdRun
<LI><a href="#[8019944]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_Active
<LI><a href="#[801a2d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_NoActive
<LI><a href="#[8019e80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_TryConnect
<LI><a href="#[8019be0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_TryConnectOver
<LI><a href="#[727beb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_LED
<LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[4efdc38]"></a>prdNothing</STRONG> (ARM, 4 bytes, Stack size 0 bytes, PeriodTask.o(i.prdNothing))
<BR>[Address Reference Count : 1]<UL><LI> PeriodTask_LED.o(i.ledInit)
</UL><P><STRONG><a name="[72a84d4]"></a>prdReset_CheckSuspend</STRONG> (ARM, 28 bytes, Stack size 8 bytes, PeriodTask_CheckSuspend.o(i.prdReset_CheckSuspend))
<BR><BR>[Calls]<UL><LI><a href="#[4efdec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdLock
<LI><a href="#[4a548fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdDelTask
<LI><a href="#[4a54c34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask_CheckSuspend
<LI><a href="#[4efdf34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdUnlock
</UL><BR>[Called By]<UL><LI><a href="#[8019944]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_Active
<LI><a href="#[8019e80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_TryConnect
<LI><a href="#[7242e18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckUSB
</UL><P><STRONG><a name="[4efdf34]"></a>prdUnlock</STRONG> (ARM, 76 bytes, Stack size 8 bytes, PeriodTask.o(i.prdUnlock))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[4c2be18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_signal
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
</UL><BR>[Called By]<UL><LI><a href="#[727eb44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState
<LI><a href="#[4a55bec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdAddTask
<LI><a href="#[4a548fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdDelTask
<LI><a href="#[72a84d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdReset_CheckSuspend
<LI><a href="#[4eff19c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdRun
<LI><a href="#[8019944]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_Active
<LI><a href="#[801a2d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_NoActive
<LI><a href="#[8019e80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_TryConnect
<LI><a href="#[8019be0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_TryConnectOver
<LI><a href="#[727beb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_LED
<LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[8cc54cc]"></a>pre_big</STRONG> (ARM, 1080 bytes, Stack size 120 bytes, pre_big.o(i.pre_big))
<BR>[Called By]<UL><LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
</UL><P><STRONG><a name="[8cf353c]"></a>preemphasis</STRONG> (ARM, 112 bytes, Stack size 16 bytes, preemph.o(i.preemphasis))
<BR>[Called By]<UL><LI><a href="#[886ec0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Filter
</UL><P><STRONG><a name="[8cf3694]"></a>preemphasis_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, preemph.o(i.preemphasis_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[886eecc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Filter_exit
<LI><a href="#[886ed64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Filter_init
</UL><P><STRONG><a name="[8cf361c]"></a>preemphasis_init</STRONG> (ARM, 60 bytes, Stack size 16 bytes, preemph.o(i.preemphasis_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[886ed64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Filter_init
</UL><P><STRONG><a name="[8cf377c]"></a>preemphasis_reset</STRONG> (ARM, 24 bytes, Stack size 0 bytes, preemph.o(i.preemphasis_reset))
<BR>[Called By]<UL><LI><a href="#[886ed64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Filter_init
<LI><a href="#[886f034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Post_Filter_reset
</UL><P><STRONG><a name="[81f9398]"></a>print_content_encoding</STRONG> (ARM, 56 bytes, Stack size 16 bytes, response.o(i.print_content_encoding))
<BR><BR>[Calls]<UL><LI><a href="#[59af6ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_write
</UL><BR>[Called By]<UL><LI><a href="#[81f91b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_request_ok_param
</UL><P><STRONG><a name="[59af5b8]"></a>print_content_length</STRONG> (ARM, 52 bytes, Stack size 8 bytes, response.o(i.print_content_length))
<BR><BR>[Calls]<UL><LI><a href="#[59af6ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_write
<LI><a href="#[81f9328]">&gt&gt</a>&nbsp;&nbsp;&nbsp;simple_itoa
</UL><BR>[Called By]<UL><LI><a href="#[4e4c6a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
<LI><a href="#[81f9234]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_request_ok
<LI><a href="#[81f91b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_request_ok_param
</UL><P><STRONG><a name="[81f9414]"></a>print_content_type</STRONG> (ARM, 84 bytes, Stack size 8 bytes, response.o(i.print_content_type))
<BR><BR>[Calls]<UL><LI><a href="#[59af6ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_write
<LI><a href="#[772e120]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_mime_type
</UL><BR>[Called By]<UL><LI><a href="#[81f9234]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_request_ok
<LI><a href="#[81f91b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_request_ok_param
</UL><P><STRONG><a name="[59af634]"></a>print_http_headers</STRONG> (ARM, 148 bytes, Stack size 8 bytes, response.o(i.print_http_headers))
<BR><BR>[Calls]<UL><LI><a href="#[59af6ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_write
<LI><a href="#[81f92ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_write_rfc822_time
<LI><a href="#[81f9328]">&gt&gt</a>&nbsp;&nbsp;&nbsp;simple_itoa
</UL><BR>[Called By]<UL><LI><a href="#[4e4c6a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
<LI><a href="#[77ac1c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_bad_request
<LI><a href="#[77ac2ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_error
<LI><a href="#[8218e2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_not_found
<LI><a href="#[81f9234]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_request_ok
<LI><a href="#[81f91b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_request_ok_param
<LI><a href="#[59af790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_unauthorized
</UL><P><STRONG><a name="[5ad0bec]"></a>print_labeled_dense_waypoints</STRONG> (ARM, 132 bytes, Stack size 152 bytes, waypoint-outlier-rejector.o(i.print_labeled_dense_waypoints))
<BR><BR>[Calls]<UL><LI><a href="#[4f75930]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dprint_to_socket
<LI><a href="#[4f74828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Called By]<UL><LI><a href="#[4fc22ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_stop_and_save
</UL><P><STRONG><a name="[59af540]"></a>print_last_modified</STRONG> (ARM, 44 bytes, Stack size 8 bytes, response.o(i.print_last_modified))
<BR><BR>[Calls]<UL><LI><a href="#[59af6ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_write
<LI><a href="#[81f92ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_write_rfc822_time
</UL><BR>[Called By]<UL><LI><a href="#[4e4c6a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
<LI><a href="#[81f9234]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_request_ok
<LI><a href="#[81f91b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_request_ok_param
</UL><P><STRONG><a name="[71eca04]"></a>processClient</STRONG> (ARM, 856 bytes, Stack size 4176 bytes, vp_com.o(i.processClient))
<BR><BR>[Calls]<UL><LI><a href="#[71ed618]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBRead
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[71ed5a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBResetForVCom
<LI><a href="#[71eca78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;logonRequest
<LI><a href="#[71ecaec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;initRequest
<LI><a href="#[71ecb5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;authRequest
<LI><a href="#[71ecbcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;imageRequest
<LI><a href="#[71eccb8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usbIPRequest
<LI><a href="#[71ecd2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FTPRequest
<LI><a href="#[71ecd9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mailRequest
<LI><a href="#[71ece7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;firmwareRequst
<LI><a href="#[71ecef0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rebootRequst
<LI><a href="#[71ecf64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;systemRequest
<LI><a href="#[71ed12c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;restoreRequst
<LI><a href="#[71ed1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usbWlanRequest
<LI><a href="#[71ed214]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usbCustomRequest
<LI><a href="#[71ed3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;freshWlanRequest
<LI><a href="#[71ed450]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getIPInfo
<LI><a href="#[71ee424]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrrequestStatusLenth
<LI><a href="#[71ee330]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrrequestStatusStru
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[71f3fe8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBWrite_Again
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[71ed4c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;netstatRequest
<LI><a href="#[71ed534]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcom_getPPP
<LI><a href="#[71ed684]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcom_setPPP
</UL><BR>[Called By]<UL><LI><a href="#[71ec990]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcomThreadEntry
</UL><P><STRONG><a name="[77ac320]"></a>process_get</STRONG> (ARM, 196 bytes, Stack size 8 bytes, get.o(i.process_get))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><BR>[Called By]<UL><LI><a href="#[7317ce4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_requests
</UL><P><STRONG><a name="[77ac148]"></a>process_header_end</STRONG> (ARM, 192 bytes, Stack size 8 bytes, request.o(i.process_header_end))
<BR><BR>[Calls]<UL><LI><a href="#[77ac2ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_r_error
<LI><a href="#[77ac0d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;translate_uri
<LI><a href="#[77ac064]">&gt&gt</a>&nbsp;&nbsp;&nbsp;RunEmbedFun
<LI><a href="#[77abff4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_get
</UL><BR>[Called By]<UL><LI><a href="#[77ac400]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_header
</UL><P><STRONG><a name="[77ac238]"></a>process_logline</STRONG> (ARM, 340 bytes, Stack size 24 bytes, request.o(i.process_logline))
<BR><BR>[Calls]<UL><LI><a href="#[77ac960]">&gt&gt</a>&nbsp;&nbsp;&nbsp;request_type
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[52aaaac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sscanf
<LI><a href="#[77ac1c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_r_bad_request
</UL><BR>[Called By]<UL><LI><a href="#[77ac400]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_header
</UL><P><STRONG><a name="[77abf7c]"></a>process_option_line</STRONG> (ARM, 432 bytes, Stack size 16 bytes, request.o(i.process_option_line))
<BR><BR>[Calls]<UL><LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[77abf0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;to_upper
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[743b184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncasecmp
</UL><BR>[Called By]<UL><LI><a href="#[77ac400]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_header
</UL><P><STRONG><a name="[7317ce4]"></a>process_requests</STRONG> (ARM, 284 bytes, Stack size 24 bytes, request.o(i.process_requests))
<BR><BR>[Calls]<UL><LI><a href="#[77ac470]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_flush
<LI><a href="#[77ac400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read_header
<LI><a href="#[77ac390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read_body
<LI><a href="#[77ac320]">&gt&gt</a>&nbsp;&nbsp;&nbsp;process_get
<LI><a href="#[77ac2ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_r_error
<LI><a href="#[7317b20]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free_request
<LI><a href="#[77ac4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;block_request
<LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
</UL><BR>[Called By]<UL><LI><a href="#[73180f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpdStartEx3
</UL><P><STRONG><a name="[8d3c7cc]"></a>pseudonoise</STRONG> (ARM, 100 bytes, Stack size 8 bytes, b_cn_cod.o(i.pseudonoise))
<BR>[Called By]<UL><LI><a href="#[8d3c758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;build_CN_code
<LI><a href="#[8cd6f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dtx_dec
</UL><P><STRONG><a name="[5950b40]"></a>pushMail</STRONG> (ARM, 768 bytes, Stack size 64 bytes, libmail.o(i.pushMail))
<BR><BR>[Calls]<UL><LI><a href="#[5a6815c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;netConnect
<LI><a href="#[5a680ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mailLogin
<LI><a href="#[5a688b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mailPost
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[5a68848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mailAck
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5a6807c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;splitString
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[5a64cfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mailError
<LI><a href="#[5a68004]">&gt&gt</a>&nbsp;&nbsp;&nbsp;deleteSplitString
<LI><a href="#[5a64d6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mailTalk
<LI><a href="#[5a67f98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;postBin
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[4e4a564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MailStart
</UL><P><STRONG><a name="[734d9e8]"></a>pwr_disable_mcu_irq</STRONG> (ARM, 20 bytes, Stack size 0 bytes, ecos_power.o(i.pwr_disable_mcu_irq))
<BR>[Called By]<UL><LI><a href="#[49f8508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_mcu_irq
<LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
<LI><a href="#[734d878]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_system_power_down
<LI><a href="#[734d780]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_system_power_saving
</UL><P><STRONG><a name="[734d8f4]"></a>pwr_disable_wifi_irq</STRONG> (ARM, 20 bytes, Stack size 0 bytes, ecos_power.o(i.pwr_disable_wifi_irq))
<BR>[Called By]<UL><LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
<LI><a href="#[734d878]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_system_power_down
<LI><a href="#[734d780]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_system_power_saving
<LI><a href="#[49f8578]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_wifi_irq
</UL><P><STRONG><a name="[734da60]"></a>pwr_enable_mcu_irq</STRONG> (ARM, 20 bytes, Stack size 0 bytes, ecos_power.o(i.pwr_enable_mcu_irq))
<BR>[Called By]<UL><LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
<LI><a href="#[734d878]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_system_power_down
</UL><P><STRONG><a name="[734d970]"></a>pwr_enable_wifi_irq</STRONG> (ARM, 20 bytes, Stack size 0 bytes, ecos_power.o(i.pwr_enable_wifi_irq))
<BR>[Called By]<UL><LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
<LI><a href="#[734d878]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_system_power_down
</UL><P><STRONG><a name="[49f8508]"></a>pwr_mcu_irq</STRONG> (ARM, 24 bytes, Stack size 8 bytes, ecos_power.o(i.pwr_mcu_irq))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[734d7fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_stop_suspend_irq
<LI><a href="#[734d9e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_disable_mcu_irq
</UL><BR>[Called By]<UL><LI><a href="#[49f8754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gpio_dsr_handle
</UL><P><STRONG><a name="[4a54884]"></a>pwr_power_saving</STRONG> (ARM, 244 bytes, Stack size 16 bytes, ecos_power.o(i.pwr_power_saving))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[734d9e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_disable_mcu_irq
<LI><a href="#[734d8f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_disable_wifi_irq
<LI><a href="#[734da60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_enable_mcu_irq
<LI><a href="#[4e4cb30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetWlanPSMode
<LI><a href="#[4e4cab8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetWlanHostSleepCfg
<LI><a href="#[734d704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wifiSetHostSleepFlag
<LI><a href="#[734d970]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_enable_wifi_irq
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[734d690]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wifiIsHostSleep
<LI><a href="#[4efdec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdLock
<LI><a href="#[734d610]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702LockAndDisableAudio
<LI><a href="#[734d594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptEnterPowerSaving
<LI><a href="#[734d524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsSuspend
<LI><a href="#[4f2964c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcuLock
<LI><a href="#[4f29404]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcuSuspend
<LI><a href="#[727b2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledSuspend
<LI><a href="#[734d780]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_system_power_saving
<LI><a href="#[727b258]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledWakeup
<LI><a href="#[4f29394]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcuWakeup
<LI><a href="#[4f295dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcuUnlock
<LI><a href="#[734d4b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsWakeup
<LI><a href="#[734d438]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptLeavePowerSaving
<LI><a href="#[734d3b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702UnlockAndRestorePreviousAudio
<LI><a href="#[4efdf34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdUnlock
<LI><a href="#[734d334]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetWlanHostWakeUpCfg
</UL><BR>[Called By]<UL><LI><a href="#[4a5741c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;test_HS
</UL><P><STRONG><a name="[4d844a0]"></a>pwr_set_clk</STRONG> (ARM, 1280 bytes, Stack size 24 bytes, powerctrl.o(i.pwr_set_clk))
<BR><BR>[Calls]<UL><LI><a href="#[786d4ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DELAY
</UL><BR>[Called By]<UL><LI><a href="#[4a55508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInitClock
</UL><P><STRONG><a name="[734d7fc]"></a>pwr_stop_suspend_irq</STRONG> (ARM, 72 bytes, Stack size 8 bytes, ecos_power.o(i.pwr_stop_suspend_irq))
<BR><BR>[Calls]<UL><LI><a href="#[4c30798]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_set_priority
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[49f8508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_mcu_irq
<LI><a href="#[49f866c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_usb_irq
<LI><a href="#[49f8578]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_wifi_irq
</UL><P><STRONG><a name="[734d878]"></a>pwr_system_power_down</STRONG> (ARM, 76 bytes, Stack size 4 bytes, ecos_power.o(i.pwr_system_power_down))
<BR><BR>[Calls]<UL><LI><a href="#[734da60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_enable_mcu_irq
<LI><a href="#[734d970]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_enable_wifi_irq
<LI><a href="#[734d9e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_disable_mcu_irq
<LI><a href="#[734d8f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_disable_wifi_irq
</UL><BR>[Address Reference Count : 1]<UL><LI> ecos_power.o(i.pwr_system_power_saving)
</UL><P><STRONG><a name="[734d780]"></a>pwr_system_power_saving</STRONG> (ARM, 316 bytes, Stack size 56 bytes, ecos_power.o(i.pwr_system_power_saving))
<BR><BR>[Calls]<UL><LI><a href="#[734df90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__pwr_delay
<LI><a href="#[734d9e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_disable_mcu_irq
<LI><a href="#[734d8f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_disable_wifi_irq
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
<LI><a href="#[4c30b88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_kill
<LI><a href="#[4def7a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;thread_join
</UL><BR>[Called By]<UL><LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[49f866c]"></a>pwr_usb_irq</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ecos_power.o(i.pwr_usb_irq))
<BR><BR>[Calls]<UL><LI><a href="#[734d7fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_stop_suspend_irq
</UL><BR>[Called By]<UL><LI><a href="#[49f8754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gpio_dsr_handle
</UL><P><STRONG><a name="[49f8578]"></a>pwr_wifi_irq</STRONG> (ARM, 16 bytes, Stack size 8 bytes, ecos_power.o(i.pwr_wifi_irq))
<BR><BR>[Calls]<UL><LI><a href="#[734d7fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_stop_suspend_irq
<LI><a href="#[734d8f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_disable_wifi_irq
</UL><BR>[Called By]<UL><LI><a href="#[49f8754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gpio_dsr_handle
</UL><P><STRONG><a name="[8de32f4]"></a>q_gain_code</STRONG> (ARM, 424 bytes, Stack size 40 bytes, q_gain_c.o(i.q_gain_code))
<BR><BR>[Calls]<UL><LI><a href="#[8d93f70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Pow2
</UL><BR>[Called By]<UL><LI><a href="#[8cc5228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gainQuant
</UL><P><STRONG><a name="[8d73670]"></a>q_gain_pitch</STRONG> (ARM, 304 bytes, Stack size 28 bytes, q_gain_p.o(i.q_gain_pitch))
<BR>[Called By]<UL><LI><a href="#[8de327c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR795_gain_quant
<LI><a href="#[8cc5308]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cl_ltp
</UL><P><STRONG><a name="[784377c]"></a>random_bytes</STRONG> (ARM, 44 bytes, Stack size 16 bytes, RtspServer.o(i.random_bytes))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rand
</UL><BR>[Called By]<UL><LI><a href="#[784465c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_nonce
<LI><a href="#[77e7a84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_rtp_endpoint
</UL><P><STRONG><a name="[78437f0]"></a>random_id</STRONG> (ARM, 76 bytes, Stack size 24 bytes, RtspServer.o(i.random_id))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Called By]<UL><LI><a href="#[784465c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_nonce
<LI><a href="#[80eb528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_SETUP
</UL><P><STRONG><a name="[8479e30]"></a>rc4</STRONG> (ARM, 40 bytes, Stack size 8 bytes, rc4.o(i.rc4))
<BR><BR>[Calls]<UL><LI><a href="#[9cf68fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rc4_skip
</UL><BR>[Called By]<UL><LI><a href="#[83ed500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_processKey
</UL><P><STRONG><a name="[9cf68fc]"></a>rc4_skip</STRONG> (ARM, 248 bytes, Stack size 280 bytes, rc4.o(i.rc4_skip))
<BR>[Called By]<UL><LI><a href="#[8479e30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rc4
<LI><a href="#[9d004c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_decrypt_key_data
<LI><a href="#[9cfb404]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_wpa
</UL><P><STRONG><a name="[77ac390]"></a>read_body</STRONG> (ARM, 260 bytes, Stack size 16 bytes, read.o(i.read_body))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[81ec348]">&gt&gt</a>&nbsp;&nbsp;&nbsp;boa_perror
<LI><a href="#[81ec3b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write_body
</UL><BR>[Called By]<UL><LI><a href="#[7317ce4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_requests
</UL><P><STRONG><a name="[7f3e4d8]"></a>read_config_file</STRONG> (ARM, 468 bytes, Stack size 2640 bytes, conf_parse.o(i.read_config_file))
<BR><BR>[Calls]<UL><LI><a href="#[7f3e464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;start_conf_read
<LI><a href="#[7f3e8d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;process_statement
<LI><a href="#[4def4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[7f3e3f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_next_token
</UL><BR>[Called By]<UL><LI><a href="#[5923f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RtspServerStart
</UL><P><STRONG><a name="[7318080]"></a>read_config_files</STRONG> (ARM, 108 bytes, Stack size 16 bytes, config.o(i.read_config_files))
<BR><BR>[Calls]<UL><LI><a href="#[778712c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_mime_type
</UL><BR>[Called By]<UL><LI><a href="#[73180f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpdStartEx3
</UL><P><STRONG><a name="[9b5e8f4]"></a>read_fs_info</STRONG> (ARM, 972 bytes, Stack size 64 bytes, WBFAT_LDISK.o(i.read_fs_info))
<BR><BR>[Calls]<UL><LI><a href="#[9baf8c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;allocate_file_handle
<LI><a href="#[9baf7d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsHandleToDescriptor
<LI><a href="#[765d568]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsIORead
<LI><a href="#[9baf84c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;release_file_handle
</UL><BR>[Called By]<UL><LI><a href="#[9b5e968]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_allocate_cluster
<LI><a href="#[9b5e878]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_reclaim_clusters
</UL><P><STRONG><a name="[77ac400]"></a>read_header</STRONG> (ARM, 740 bytes, Stack size 24 bytes, read.o(i.read_header))
<BR><BR>[Calls]<UL><LI><a href="#[4d0cb38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fputs
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[77abf7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;process_option_line
<LI><a href="#[77ac238]">&gt&gt</a>&nbsp;&nbsp;&nbsp;process_logline
<LI><a href="#[77ac148]">&gt&gt</a>&nbsp;&nbsp;&nbsp;process_header_end
<LI><a href="#[4dee704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[81ec3b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write_body
<LI><a href="#[77ac960]">&gt&gt</a>&nbsp;&nbsp;&nbsp;request_type
<LI><a href="#[77ac1c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_r_bad_request
</UL><BR>[Called By]<UL><LI><a href="#[7317ce4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_requests
</UL><P><STRONG><a name="[7317aac]"></a>ready_request</STRONG> (ARM, 120 bytes, Stack size 4 bytes, queue.o(i.ready_request))
<BR><BR>[Calls]<UL><LI><a href="#[77ac810]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dequeue
<LI><a href="#[77ac5c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;enqueue
</UL><BR>[Called By]<UL><LI><a href="#[7319734]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fdset_update
</UL><P><STRONG><a name="[71ecef0]"></a>rebootRequst</STRONG> (ARM, 56 bytes, Stack size 16 bytes, vp_com.o(i.rebootRequst))
<BR><BR>[Calls]<UL><LI><a href="#[71ed6f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;statusReply
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[4eaa894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlReboot
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
</UL><P><STRONG><a name="[7ff7dd0]"></a>ref_frame</STRONG> (ARM, 44 bytes, Stack size 16 bytes, frame.o(i.ref_frame))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[780fb4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;deliver_frame_to_stream
</UL><P><STRONG><a name="[4a54acc]"></a>registerCustomCmd</STRONG> (ARM, 304 bytes, Stack size 40 bytes, vp_com.o(i.registerCustomCmd))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[71ec834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
</UL><BR>[Called By]<UL><LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[780fd90]"></a>register_config_context</STRONG> (ARM, 192 bytes, Stack size 32 bytes, conf_parse.o(i.register_config_context))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[77e7990]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtspBufIsValid
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Called By]<UL><LI><a href="#[8107854]">&lt&lt</a>&nbsp;&nbsp;&nbsp;access_log_init
<LI><a href="#[808c404]">&lt&lt</a>&nbsp;&nbsp;&nbsp;live_init
<LI><a href="#[81077e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mpeg4_init
<LI><a href="#[7f5f844]">&lt&lt</a>&nbsp;&nbsp;&nbsp;oss_init
<LI><a href="#[780fe0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;v4l_init
</UL><P><STRONG><a name="[5ad0c70]"></a>reject_outliers_from_dense_waypoints_using_dist</STRONG> (ARM, 64 bytes, Stack size 16 bytes, waypoint-outlier-rejector-using-dist.o(i.reject_outliers_from_dense_waypoints_using_dist))
<BR><BR>[Calls]<UL><LI><a href="#[8335678]">&gt&gt</a>&nbsp;&nbsp;&nbsp;compute_neighboring_wp_distances
<LI><a href="#[83355e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mark_waypoints_as_good_and_bad_using_dist
</UL><BR>[Called By]<UL><LI><a href="#[4fc22ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_stop_and_save
</UL><P><STRONG><a name="[9baf84c]"></a>release_file_handle</STRONG> (ARM, 108 bytes, Stack size 8 bytes, WBFAT.o(i.release_file_handle))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
</UL><BR>[Called By]<UL><LI><a href="#[9b5e8f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_fs_info
</UL><P><STRONG><a name="[77e7828]"></a>remove_event</STRONG> (ARM, 20 bytes, Stack size 0 bytes, event.o(i.remove_event))
<BR>[Called By]<UL><LI><a href="#[77e7918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;del_rtp_endpoint
<LI><a href="#[81192f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_read
<LI><a href="#[817fb34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drop_conn
<LI><a href="#[8034124]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sq_run
</UL><P><STRONG><a name="[77ac470]"></a>req_flush</STRONG> (ARM, 240 bytes, Stack size 16 bytes, util.o(i.req_flush))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><BR>[Called By]<UL><LI><a href="#[7317ce4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_requests
<LI><a href="#[77ac1c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_bad_request
<LI><a href="#[77ac2ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_error
<LI><a href="#[8218e2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_not_found
<LI><a href="#[59af790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_unauthorized
</UL><P><STRONG><a name="[59af6ac]"></a>req_write</STRONG> (ARM, 104 bytes, Stack size 16 bytes, util.o(i.req_write))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[4e4c6a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
<LI><a href="#[81f9398]">&lt&lt</a>&nbsp;&nbsp;&nbsp;print_content_encoding
<LI><a href="#[59af5b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;print_content_length
<LI><a href="#[81f9414]">&lt&lt</a>&nbsp;&nbsp;&nbsp;print_content_type
<LI><a href="#[59af634]">&lt&lt</a>&nbsp;&nbsp;&nbsp;print_http_headers
<LI><a href="#[59af540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;print_last_modified
<LI><a href="#[77ac1c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_bad_request
<LI><a href="#[77ac2ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_error
<LI><a href="#[8218e2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_not_found
<LI><a href="#[81f9234]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_request_ok
<LI><a href="#[81f91b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_request_ok_param
<LI><a href="#[59af790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_r_unauthorized
</UL><P><STRONG><a name="[81f92ac]"></a>req_write_rfc822_time</STRONG> (ARM, 344 bytes, Stack size 32 bytes, util.o(i.req_write_rfc822_time))
<BR><BR>[Calls]<UL><LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[821cf7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gmtime
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[821cda8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
</UL><BR>[Called By]<UL><LI><a href="#[59af634]">&lt&lt</a>&nbsp;&nbsp;&nbsp;print_http_headers
<LI><a href="#[59af540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;print_last_modified
</UL><P><STRONG><a name="[77ac960]"></a>request_type</STRONG> (ARM, 168 bytes, Stack size 32 bytes, request.o(i.request_type))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
</UL><BR>[Called By]<UL><LI><a href="#[77ac238]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_logline
<LI><a href="#[77ac400]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_header
</UL><P><STRONG><a name="[8031f0c]"></a>resched_event</STRONG> (ARM, 80 bytes, Stack size 8 bytes, event.o(i.resched_event))
<BR><BR>[Calls]<UL><LI><a href="#[8032064]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time_add
<LI><a href="#[8031ff4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time_future
</UL><BR>[Called By]<UL><LI><a href="#[77e755c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_timer_event
<LI><a href="#[8031b60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;event_loop
</UL><P><STRONG><a name="[4f75290]"></a>reset_northstar_and_get_version</STRONG> (ARM, 212 bytes, Stack size 24 bytes, er_ns_nav.o(i.reset_northstar_and_get_version))
<BR><BR>[Calls]<UL><LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[4f75214]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_port_read_blocking
<LI><a href="#[4f7519c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_set_baud_rate
<LI><a href="#[4f7511c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_port_set_baud_rate_19200
<LI><a href="#[4f750a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;flush_ns_uart
<LI><a href="#[4f75034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_get_version
</UL><BR>[Called By]<UL><LI><a href="#[4f77e9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_nav_thread
<LI><a href="#[4f74acc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;try_northstar_recovery
</UL><P><STRONG><a name="[71ed12c]"></a>restoreRequst</STRONG> (ARM, 92 bytes, Stack size 16 bytes, vp_com.o(i.restoreRequst))
<BR><BR>[Calls]<UL><LI><a href="#[71ed6f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;statusReply
<LI><a href="#[4eaa7a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetFactoryDefault
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[4eaa894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlReboot
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
</UL><P><STRONG><a name="[49dbab8]"></a>retMem</STRONG> (ARM, 60 bytes, Stack size 16 bytes, memmgmt.o(i.retMem))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[5950acc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ret_mail_mem
<LI><a href="#[817fba4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ret_rtsp_mem
</UL><P><STRONG><a name="[5950acc]"></a>ret_mail_mem</STRONG> (ARM, 16 bytes, Stack size 0 bytes, libmail.o(i.ret_mail_mem))
<BR><BR>[Calls]<UL><LI><a href="#[49dbab8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;retMem
</UL><BR>[Called By]<UL><LI><a href="#[57b6f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DO_TestSendMailFile
<LI><a href="#[4e4a564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MailStart
</UL><P><STRONG><a name="[817fba4]"></a>ret_rtsp_mem</STRONG> (ARM, 16 bytes, Stack size 0 bytes, tcp.o(i.ret_rtsp_mem))
<BR><BR>[Calls]<UL><LI><a href="#[49dbab8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;retMem
</UL><BR>[Called By]<UL><LI><a href="#[817fb34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drop_conn
</UL><P><STRONG><a name="[8a2c8c0]"></a>rijndaelDecrypt</STRONG> (ARM, 1260 bytes, Stack size 48 bytes, aes_wrap.o(i.rijndaelDecrypt))
<BR><BR>[Calls]<UL><LI><a href="#[8a2f3b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rotr
</UL><BR>[Called By]<UL><LI><a href="#[9cf688c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;aes_unwrap
</UL><P><STRONG><a name="[8a2c9a8]"></a>rijndaelKeySetupDec</STRONG> (ARM, 284 bytes, Stack size 40 bytes, aes_wrap.o(i.rijndaelKeySetupDec))
<BR><BR>[Calls]<UL><LI><a href="#[8a2ca20]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rijndaelKeySetupEnc
<LI><a href="#[8a2f3b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rotr
</UL><BR>[Called By]<UL><LI><a href="#[8a2c6e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;aes_decrypt_init
</UL><P><STRONG><a name="[8a2ca20]"></a>rijndaelKeySetupEnc</STRONG> (ARM, 304 bytes, Stack size 16 bytes, aes_wrap.o(i.rijndaelKeySetupEnc))
<BR>[Called By]<UL><LI><a href="#[8a2c9a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rijndaelKeySetupDec
</UL><P><STRONG><a name="[7ddf6e8]"></a>rls_region</STRONG> (ARM, 52 bytes, Stack size 16 bytes, cmp_img.o(i.rls_region))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[5456468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;compare_image
</UL><P><STRONG><a name="[4f73cd4]"></a>rotate_rovio_by_angle</STRONG> (ARM, 452 bytes, Stack size 32 bytes, er_rsm_thread_routines.o(i.rotate_rovio_by_angle))
<BR><BR>[Calls]<UL><LI><a href="#[4f73f7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
<LI><a href="#[4f74828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[4f741d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[4f73d50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[4f73b70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_mcu_cmd_with_obstacle_avoidance
<LI><a href="#[4f73e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fcmpge
</UL><BR>[Called By]<UL><LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[4f74418]"></a>rovio_home</STRONG> (ARM, 4156 bytes, Stack size 48 bytes, er_ns_nav.o(i.rovio_home))
<BR><BR>[Calls]<UL><LI><a href="#[4f7439c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;is_rovio_low_on_battery
<LI><a href="#[4f74328]">&gt&gt</a>&nbsp;&nbsp;&nbsp;is_rovio_docked
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4f75ba0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_current_rovio_state
<LI><a href="#[4f75c1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_current_rovio_state
<LI><a href="#[4f7457c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;state_change_head_position
<LI><a href="#[4f742b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;drive_forward
<LI><a href="#[4f74974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dflt
<LI><a href="#[4f74240]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__softfp_sqrt
<LI><a href="#[4f741d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[4f74488]">&gt&gt</a>&nbsp;&nbsp;&nbsp;state_delay_ticks
<LI><a href="#[4f74158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f75314]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_request_room_switch
<LI><a href="#[4f740d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_replay_path_between_rooms
<LI><a href="#[4f74058]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_rovio_head_position
<LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
<LI><a href="#[4f74894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[4f73f7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[4f73f04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_follow_waypoint
<LI><a href="#[4f73e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fcmpge
<LI><a href="#[4f73e2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[4f73dbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;clamp_angle
<LI><a href="#[4f74828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[4f73d50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[4f73cd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rotate_rovio_by_angle
<LI><a href="#[4f74900]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__softfp_atan2
<LI><a href="#[4f73c68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[4f73bfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[4db4e7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[4f73b70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_mcu_cmd_with_obstacle_avoidance
<LI><a href="#[4f73af8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;orient_to_beacon
<LI><a href="#[4f74500]">&gt&gt</a>&nbsp;&nbsp;&nbsp;look_for_mag_maximum
<LI><a href="#[4f73a7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;execute_drive_command
<LI><a href="#[4f739f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;align_with_beacon_before_saving_home
<LI><a href="#[4f73978]">&gt&gt</a>&nbsp;&nbsp;&nbsp;save_home_position
<LI><a href="#[4f73904]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_mcu_cmd
<LI><a href="#[4f73890]">&gt&gt</a>&nbsp;&nbsp;&nbsp;drive_to_beacon
<LI><a href="#[4f73790]">&gt&gt</a>&nbsp;&nbsp;&nbsp;execute_wheel_velocities
<LI><a href="#[4f73718]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_record_waypoint
<LI><a href="#[4f735c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
<LI><a href="#[4fc2044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_stop_playing
</UL><BR>[Called By]<UL><LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
</UL><P><STRONG><a name="[9cf696c]"></a>rsn_preauth_candidate_process</STRONG> (ARM, 412 bytes, Stack size 48 bytes, preauth.o(i.rsn_preauth_candidate_process))
<BR><BR>[Calls]<UL><LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[9cf66c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_get
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[9c8aaf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_init
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[9c8aa08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_candidate_add
<LI><a href="#[9c8bc78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_eapol_cb
<LI><a href="#[9c8c180]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_timeout
<LI><a href="#[9cffb3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_start_preauth
</UL><P><STRONG><a name="[7968578]"></a>rsn_preauth_deinit</STRONG> (ARM, 100 bytes, Stack size 16 bytes, preauth.o(i.rsn_preauth_deinit))
<BR><BR>[Calls]<UL><LI><a href="#[7969720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[7966f60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_deinit
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[7966fd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;l2_packet_deinit
</UL><BR>[Called By]<UL><LI><a href="#[9c8bc78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_eapol_cb
<LI><a href="#[9c8c180]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_timeout
<LI><a href="#[9cf6be4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_notify_assoc
<LI><a href="#[7968874]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_notify_disassoc
<LI><a href="#[796ef34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
<LI><a href="#[79686f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configuration
</UL><P><STRONG><a name="[9c8aaf8]"></a>rsn_preauth_init</STRONG> (ARM, 560 bytes, Stack size 72 bytes, preauth.o(i.rsn_preauth_init))
<BR><BR>[Calls]<UL><LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[7967ebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;l2_packet_init
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[7966d88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_init
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[7969820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_config
<LI><a href="#[9c8aa80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_configure
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[7968288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portValid
<LI><a href="#[7968308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portEnabled
<LI><a href="#[79696a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
</UL><BR>[Called By]<UL><LI><a href="#[9cf696c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_candidate_process
</UL><P><STRONG><a name="[9c8a904]"></a>rsn_preauth_scan_results</STRONG> (ARM, 244 bytes, Stack size 64 bytes, preauth.o(i.rsn_preauth_scan_results))
<BR><BR>[Calls]<UL><LI><a href="#[7966ee4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_candidate_free
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[7969244]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie
<LI><a href="#[9cf66c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_get
<LI><a href="#[9c8aa08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_candidate_add
</UL><BR>[Called By]<UL><LI><a href="#[8312b80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_scan_results
</UL><P><STRONG><a name="[81078c8]"></a>rtspBufInit</STRONG> (ARM, 320 bytes, Stack size 8 bytes, rtsp_buffer.o(i.rtspBufInit))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[755f3b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__memInit
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[5923f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RtspServerStart
</UL><P><STRONG><a name="[77e7990]"></a>rtspBufIsValid</STRONG> (ARM, 28 bytes, Stack size 8 bytes, rtsp_buffer.o(i.rtspBufIsValid))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
</UL><BR>[Called By]<UL><LI><a href="#[7ff806c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_frame_heap
<LI><a href="#[8162a3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_convert_stream
<LI><a href="#[8163f7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_dest
<LI><a href="#[80352cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_event
<LI><a href="#[780fcac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_exchanger
<LI><a href="#[80cf23c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_pmsg
<LI><a href="#[77e7a84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_rtp_endpoint
<LI><a href="#[813cb84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_rtp_media
<LI><a href="#[808c474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_rtsp_location
<LI><a href="#[780fe7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_stream
<LI><a href="#[780fd90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;register_config_context
</UL><P><STRONG><a name="[5924610]"></a>rtspTunnelReadData</STRONG> (ARM, 388 bytes, Stack size 296 bytes, rtspserver.o(i.rtspTunnelReadData))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[71ed36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[592459c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DecodeBase64
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
</UL><BR>[Address Reference Count : 1]<UL><LI> rtspserver.o(i.Http_RtspTunnel)
</UL><P><STRONG><a name="[811961c]"></a>rtsp_conn_disconnect</STRONG> (ARM, 80 bytes, Stack size 16 bytes, rtsp.o(i.rtsp_conn_disconnect))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
</UL><BR>[Called By]<UL><LI><a href="#[817fb34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drop_conn
</UL><P><STRONG><a name="[8119448]"></a>rtsp_handle_msg</STRONG> (ARM, 412 bytes, Stack size 16 bytes, rtsp.o(i.rtsp_handle_msg))
<BR><BR>[Calls]<UL><LI><a href="#[4def4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[7843aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_header
<LI><a href="#[4dee704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[80eb680]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtsp_create_reply
<LI><a href="#[80cf404]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_header
<LI><a href="#[80eb610]">&gt&gt</a>&nbsp;&nbsp;&nbsp;log_request
<LI><a href="#[81193d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_send_pmsg
<LI><a href="#[80eb59c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;handle_DESCRIBE
<LI><a href="#[80eb528]">&gt&gt</a>&nbsp;&nbsp;&nbsp;handle_SETUP
<LI><a href="#[80eb4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;handle_PLAY
<LI><a href="#[80eb444]">&gt&gt</a>&nbsp;&nbsp;&nbsp;handle_TEARDOWN
<LI><a href="#[80eb3d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtsp_send_error
</UL><BR>[Called By]<UL><LI><a href="#[8180598]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_request
</UL><P><STRONG><a name="[56dba70]"></a>rtsp_mem_init</STRONG> (ARM, 48 bytes, Stack size 16 bytes, tcp.o(i.rtsp_mem_init))
<BR><BR>[Calls]<UL><LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[49dbcf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__mgmtInit
</UL><BR>[Called By]<UL><LI><a href="#[56dec34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Buffer_Assign
</UL><P><STRONG><a name="[56dbb5c]"></a>rtsp_server_init</STRONG> (ARM, 24 bytes, Stack size 8 bytes, frame.o(i.rtsp_server_init))
<BR><BR>[Calls]<UL><LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Called By]<UL><LI><a href="#[56dec34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Buffer_Assign
</UL><P><STRONG><a name="[8cd6f6c]"></a>rx_dtx_handler</STRONG> (ARM, 372 bytes, Stack size 8 bytes, dtx_dec.o(i.rx_dtx_handler))
<BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
</UL><P><STRONG><a name="[4f74cac]"></a>save_freq_table_selector_to_flash</STRONG> (ARM, 56 bytes, Stack size 8 bytes, er_rsm_thread_routines.o(i.save_freq_table_selector_to_flash))
<BR><BR>[Calls]<UL><LI><a href="#[5ad0e68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_usi_write_wrapper
</UL><BR>[Called By]<UL><LI><a href="#[4f74e30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;select_correct_freq_set
</UL><P><STRONG><a name="[4f73978]"></a>save_home_position</STRONG> (ARM, 168 bytes, Stack size 16 bytes, er_rsm_thread_routines.o(i.save_home_position))
<BR><BR>[Calls]<UL><LI><a href="#[5ad0e68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_usi_write_wrapper
<LI><a href="#[4f75ba0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_current_rovio_state
</UL><BR>[Called By]<UL><LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[8199a10]"></a>scanner_error</STRONG> (ARM, 32 bytes, Stack size 8 bytes, conf_scan.o(i.scanner_error))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[4e4a4f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;exit
</UL><BR>[Called By]<UL><LI><a href="#[81997c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yy_create_buffer
<LI><a href="#[819b314]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yy_get_next_buffer
<LI><a href="#[81996ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yylex
</UL><P><STRONG><a name="[8e8b024]"></a>search_10and8i40</STRONG> (ARM, 2944 bytes, Stack size 312 bytes, s10_8pf.o(i.search_10and8i40))
<BR>[Called By]<UL><LI><a href="#[8d58478]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_10i40_35bits
<LI><a href="#[8d584f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_8i40_31bits
</UL><P><STRONG><a name="[4f74e30]"></a>select_correct_freq_set</STRONG> (ARM, 308 bytes, Stack size 32 bytes, er_ns_nav.o(i.select_correct_freq_set))
<BR><BR>[Calls]<UL><LI><a href="#[4f74da8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_set_spotfreq_to_check_ac_freq
<LI><a href="#[4f75624]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_set_report_flags
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[4f755a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_start_continuous_report
<LI><a href="#[4f75528]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_read_report_packet
<LI><a href="#[4f74d34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_stop_report
<LI><a href="#[4f74cac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;save_freq_table_selector_to_flash
</UL><BR>[Called By]<UL><LI><a href="#[4f77e9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_nav_thread
</UL><P><STRONG><a name="[5950a5c]"></a>sendMailMsg</STRONG> (ARM, 204 bytes, Stack size 96 bytes, mail.o(i.sendMailMsg))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[59509ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;createMail
<LI><a href="#[4c2d65c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mbox_tryput
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[57b6f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DO_TestSendMailFile
</UL><P><STRONG><a name="[81194bc]"></a>send_data</STRONG> (ARM, 244 bytes, Stack size 32 bytes, tcp.o(i.send_data))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[811952c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;avail_send_buf
<LI><a href="#[77e74e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_event_enabled
</UL><BR>[Called By]<UL><LI><a href="#[80eb59c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_DESCRIBE
<LI><a href="#[77e7378]">&lt&lt</a>&nbsp;&nbsp;&nbsp;interleave_send
<LI><a href="#[81193d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_send_pmsg
</UL><P><STRONG><a name="[4f74a58]"></a>send_drive_cmd</STRONG> (ARM, 52 bytes, Stack size 48 bytes, er_mcu_cmds.o(i.send_drive_cmd))
<BR><BR>[Calls]<UL><LI><a href="#[5a87b9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcu_send_cmd
</UL><BR>[Called By]<UL><LI><a href="#[4f739f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;align_with_beacon_before_saving_home
<LI><a href="#[4fe1a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drive_rovio_manually
<LI><a href="#[4f73890]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drive_to_beacon
<LI><a href="#[4f73a7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;execute_drive_command
<LI><a href="#[5c07c4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;execute_random_maneuver
<LI><a href="#[5c07bc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;execute_small_sideways_random_maneuver
<LI><a href="#[4f73790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;execute_wheel_velocities
<LI><a href="#[4f74500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;look_for_mag_maximum
<LI><a href="#[4f72ea0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_init_path_module
<LI><a href="#[4fc1fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_pause
<LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
<LI><a href="#[4f740d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_replay_path_between_rooms
<LI><a href="#[4fe14c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_restore_to_default
<LI><a href="#[5ad0f60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_setup_homing_path
<LI><a href="#[4fc20bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_start_play
<LI><a href="#[4fc2458]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_start_recording
<LI><a href="#[4fc22ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_stop_and_save
<LI><a href="#[4fc2044]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_stop_playing
<LI><a href="#[4fe1c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_store_home
<LI><a href="#[4f73af8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;orient_to_beacon
<LI><a href="#[5c077ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;play_waypoint_action
<LI><a href="#[4f73cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rotate_rovio_by_angle
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
<LI><a href="#[4fe1aec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;smc_reset
<LI><a href="#[4f7457c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;state_change_head_position
<LI><a href="#[4fe19f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;test_rovio_hardware
<LI><a href="#[4f74acc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;try_northstar_recovery
</UL><P><STRONG><a name="[4f73904]"></a>send_mcu_cmd</STRONG> (ARM, 60 bytes, Stack size 56 bytes, er_mcu_cmds.o(i.send_mcu_cmd))
<BR><BR>[Calls]<UL><LI><a href="#[5a87b9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcu_send_cmd
</UL><BR>[Called By]<UL><LI><a href="#[4fe1a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drive_rovio_manually
<LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[4f73b70]"></a>send_mcu_cmd_with_obstacle_avoidance</STRONG> (ARM, 428 bytes, Stack size 96 bytes, er_mcu_cmds.o(i.send_mcu_cmd_with_obstacle_avoidance))
<BR><BR>[Calls]<UL><LI><a href="#[4f74328]">&gt&gt</a>&nbsp;&nbsp;&nbsp;is_rovio_docked
<LI><a href="#[5a87b9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcu_send_cmd
<LI><a href="#[75c3274]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_get_time
<LI><a href="#[4e4d338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rand
</UL><BR>[Called By]<UL><LI><a href="#[5c07b40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;move_rovio_towards_target
<LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f73f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_waypoint
<LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
<LI><a href="#[4f73cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rotate_rovio_by_angle
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[77ac1c0]"></a>send_r_bad_request</STRONG> (ARM, 92 bytes, Stack size 8 bytes, response.o(i.send_r_bad_request))
<BR><BR>[Calls]<UL><LI><a href="#[59af6ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_write
<LI><a href="#[59af634]">&gt&gt</a>&nbsp;&nbsp;&nbsp;print_http_headers
<LI><a href="#[77ac470]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_flush
</UL><BR>[Called By]<UL><LI><a href="#[59af808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;auth_required
<LI><a href="#[77abff4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_get
<LI><a href="#[77ac238]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_logline
<LI><a href="#[77ac400]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_header
<LI><a href="#[77ac0d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;translate_uri
</UL><P><STRONG><a name="[77ac2ac]"></a>send_r_error</STRONG> (ARM, 92 bytes, Stack size 8 bytes, response.o(i.send_r_error))
<BR><BR>[Calls]<UL><LI><a href="#[59af6ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_write
<LI><a href="#[59af634]">&gt&gt</a>&nbsp;&nbsp;&nbsp;print_http_headers
<LI><a href="#[77ac470]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_flush
</UL><BR>[Called By]<UL><LI><a href="#[77ac148]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_header_end
<LI><a href="#[7317ce4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_requests
</UL><P><STRONG><a name="[8218e2c]"></a>send_r_not_found</STRONG> (ARM, 136 bytes, Stack size 8 bytes, response.o(i.send_r_not_found))
<BR><BR>[Calls]<UL><LI><a href="#[59af6ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_write
<LI><a href="#[59af634]">&gt&gt</a>&nbsp;&nbsp;&nbsp;print_http_headers
<LI><a href="#[81f90cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;escape_string
<LI><a href="#[77ac470]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_flush
</UL><BR>[Called By]<UL><LI><a href="#[77abff4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_get
<LI><a href="#[77ac0d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;translate_uri
</UL><P><STRONG><a name="[81f9234]"></a>send_r_request_ok</STRONG> (ARM, 112 bytes, Stack size 8 bytes, response.o(i.send_r_request_ok))
<BR><BR>[Calls]<UL><LI><a href="#[59af6ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_write
<LI><a href="#[59af634]">&gt&gt</a>&nbsp;&nbsp;&nbsp;print_http_headers
<LI><a href="#[81f9414]">&gt&gt</a>&nbsp;&nbsp;&nbsp;print_content_type
<LI><a href="#[59af5b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;print_content_length
<LI><a href="#[59af540]">&gt&gt</a>&nbsp;&nbsp;&nbsp;print_last_modified
</UL><BR>[Called By]<UL><LI><a href="#[77abff4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_get
</UL><P><STRONG><a name="[81f91b8]"></a>send_r_request_ok_param</STRONG> (ARM, 128 bytes, Stack size 16 bytes, response.o(i.send_r_request_ok_param))
<BR><BR>[Calls]<UL><LI><a href="#[59af6ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_write
<LI><a href="#[59af634]">&gt&gt</a>&nbsp;&nbsp;&nbsp;print_http_headers
<LI><a href="#[81f9414]">&gt&gt</a>&nbsp;&nbsp;&nbsp;print_content_type
<LI><a href="#[81f9398]">&gt&gt</a>&nbsp;&nbsp;&nbsp;print_content_encoding
<LI><a href="#[59af5b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;print_content_length
<LI><a href="#[59af540]">&gt&gt</a>&nbsp;&nbsp;&nbsp;print_last_modified
</UL><BR>[Called By]<UL><LI><a href="#[77abff4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_get
</UL><P><STRONG><a name="[59af790]"></a>send_r_unauthorized</STRONG> (ARM, 176 bytes, Stack size 16 bytes, response.o(i.send_r_unauthorized))
<BR><BR>[Calls]<UL><LI><a href="#[59af6ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_write
<LI><a href="#[59af634]">&gt&gt</a>&nbsp;&nbsp;&nbsp;print_http_headers
<LI><a href="#[81f90cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;escape_string
<LI><a href="#[77ac470]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_flush
</UL><BR>[Called By]<UL><LI><a href="#[59af808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;auth_required
</UL><P><STRONG><a name="[77e73ec]"></a>send_rtp_packet</STRONG> (ARM, 632 bytes, Stack size 64 bytes, rtp.o(i.send_rtp_packet))
<BR><BR>[Calls]<UL><LI><a href="#[77e7378]">&gt&gt</a>&nbsp;&nbsp;&nbsp;interleave_send
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[50a2300]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sendmsg
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[4db5138]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_write
<LI><a href="#[77e8878]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtcp_send
<LI><a href="#[77e74e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_event_enabled
</UL><BR>[Called By]<UL><LI><a href="#[8959668]">&lt&lt</a>&nbsp;&nbsp;&nbsp;h263_send
<LI><a href="#[8985374]">&lt&lt</a>&nbsp;&nbsp;&nbsp;jpeg_send
<LI><a href="#[898cc34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mpeg4_send
<LI><a href="#[89b7de4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rawaudio_send
</UL><P><STRONG><a name="[5a87b28]"></a>send_wheel_cmd</STRONG> (ARM, 112 bytes, Stack size 56 bytes, er_mcu_cmds.o(i.send_wheel_cmd))
<BR><BR>[Calls]<UL><LI><a href="#[5a87b9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcu_send_cmd
</UL><BR>[Called By]<UL><LI><a href="#[5ad09a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_wheel_speed_cmd
</UL><P><STRONG><a name="[5ad09a4]"></a>send_wheel_speed_cmd</STRONG> (ARM, 32 bytes, Stack size 8 bytes, er_mcu_cmds.o(i.send_wheel_speed_cmd))
<BR><BR>[Calls]<UL><LI><a href="#[5a87b28]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_wheel_cmd
</UL><BR>[Called By]<UL><LI><a href="#[4f73790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;execute_wheel_velocities
<LI><a href="#[4fe19f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;test_rovio_hardware
</UL><P><STRONG><a name="[4eab71c]"></a>set_auth_disable</STRONG> (ARM, 16 bytes, Stack size 0 bytes, http-auth.o(i.set_auth_disable))
<BR>[Called By]<UL><LI><a href="#[4eab808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetUserCheck
<LI><a href="#[5927be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_start
</UL><P><STRONG><a name="[4eab794]"></a>set_auth_enable</STRONG> (ARM, 16 bytes, Stack size 0 bytes, http-auth.o(i.set_auth_enable))
<BR>[Called By]<UL><LI><a href="#[4eab808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetUserCheck
<LI><a href="#[5927be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_start
</UL><P><STRONG><a name="[4eabb34]"></a>set_auth_id</STRONG> (ARM, 208 bytes, Stack size 32 bytes, http-auth.o(i.set_auth_id))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4eabc90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetUser
<LI><a href="#[5927be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_start
</UL><P><STRONG><a name="[4f758b4]"></a>set_beacon_frequency</STRONG> (ARM, 120 bytes, Stack size 32 bytes, er_ns_nav.o(i.set_beacon_frequency))
<BR><BR>[Calls]<UL><LI><a href="#[4f759a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_set_spot_freq
<LI><a href="#[4f75930]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dprint_to_socket
</UL><BR>[Called By]<UL><LI><a href="#[4f75828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_new_report_flags_and_start_report
</UL><P><STRONG><a name="[5924358]"></a>set_config</STRONG> (ARM, 12 bytes, Stack size 0 bytes, conf_scan.o(i.set_config))
<BR>[Called By]<UL><LI><a href="#[5927be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_start
</UL><P><STRONG><a name="[4f75ba0]"></a>set_current_rovio_state</STRONG> (ARM, 68 bytes, Stack size 16 bytes, er_ns_nav.o(i.set_current_rovio_state))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4fe1a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drive_rovio_manually
<LI><a href="#[4f731a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_state_machine
<LI><a href="#[4f74500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;look_for_mag_maximum
<LI><a href="#[4fc23e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_abort_recording
<LI><a href="#[5ad0f60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_setup_homing_path
<LI><a href="#[4fc20bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_start_play
<LI><a href="#[4fc2458]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_start_recording
<LI><a href="#[4fc22ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_stop_and_save
<LI><a href="#[4fc2044]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_stop_playing
<LI><a href="#[4fe1c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_store_home
<LI><a href="#[4f73af8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;orient_to_beacon
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
<LI><a href="#[4f73978]">&lt&lt</a>&nbsp;&nbsp;&nbsp;save_home_position
<LI><a href="#[4fe1aec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;smc_reset
</UL><P><STRONG><a name="[592417c]"></a>set_encoderdisable</STRONG> (ARM, 12 bytes, Stack size 0 bytes, live.o(i.set_encoderdisable))
<BR>[Called By]<UL><LI><a href="#[5927be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_start
</UL><P><STRONG><a name="[59241f4]"></a>set_encoderenable</STRONG> (ARM, 12 bytes, Stack size 0 bytes, live.o(i.set_encoderenable))
<BR>[Called By]<UL><LI><a href="#[5927be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_start
</UL><P><STRONG><a name="[77e74e4]"></a>set_event_enabled</STRONG> (ARM, 28 bytes, Stack size 0 bytes, event.o(i.set_event_enabled))
<BR>[Called By]<UL><LI><a href="#[817fac4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;conn_write
<LI><a href="#[77e76b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_udp_endpoint
<LI><a href="#[8180324]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_accept
<LI><a href="#[80eb4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_PLAY
<LI><a href="#[81194bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_data
<LI><a href="#[77e73ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_rtp_packet
</UL><P><STRONG><a name="[4fe181c]"></a>set_flash_parameter</STRONG> (ARM, 88 bytes, Stack size 8 bytes, er_cgi_thread_routines.o(i.set_flash_parameter))
<BR><BR>[Calls]<UL><LI><a href="#[5ad0e68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_usi_write_wrapper
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[4f75828]"></a>set_new_report_flags_and_start_report</STRONG> (ARM, 380 bytes, Stack size 120 bytes, er_ns_nav.o(i.set_new_report_flags_and_start_report))
<BR><BR>[Calls]<UL><LI><a href="#[4f757a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_get_next_room
<LI><a href="#[4f758b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_beacon_frequency
<LI><a href="#[4f75728]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_get_cur_room
<LI><a href="#[4f75a20]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_room_nine_spot_fequencies
<LI><a href="#[4f7569c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_get_potential_next_room
<LI><a href="#[4f75930]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dprint_to_socket
<LI><a href="#[4f75624]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_set_report_flags
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[4f755a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_start_continuous_report
<LI><a href="#[4f75528]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_read_report_packet
</UL><BR>[Called By]<UL><LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
<LI><a href="#[4f77e9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_nav_thread
<LI><a href="#[4f754a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;swap_curr_and_potential_next_room
<LI><a href="#[4f74acc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;try_northstar_recovery
</UL><P><STRONG><a name="[8a61d68]"></a>Cyg_StdioStream::set_position(unsigned int, int)</STRONG> (ARM, 344 bytes, Stack size 24 bytes, vfscanf.o(i.set_position__15Cyg_StdioStreamFUii))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[8a61df0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::bytes_available_to_read()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4bfe8f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lseek
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[746a0dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::flush_output_unlocked()
</UL><BR>[Called By]<UL><LI><a href="#[84c0170]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vfscanf
</UL><P><STRONG><a name="[7ddf8b4]"></a>set_region_flag</STRONG> (ARM, 84 bytes, Stack size 4 bytes, cmp_img.o(i.set_region_flag))
<BR>[Called By]<UL><LI><a href="#[5456468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;compare_image
</UL><P><STRONG><a name="[7ddf83c]"></a>set_region_level</STRONG> (ARM, 36 bytes, Stack size 0 bytes, cmp_img.o(i.set_region_level))
<BR>[Called By]<UL><LI><a href="#[5456468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;compare_image
</UL><P><STRONG><a name="[4f75a20]"></a>set_room_nine_spot_fequencies</STRONG> (ARM, 184 bytes, Stack size 32 bytes, er_ns_nav.o(i.set_room_nine_spot_fequencies))
<BR><BR>[Calls]<UL><LI><a href="#[4f759a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_set_spot_freq
<LI><a href="#[4f75930]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dprint_to_socket
</UL><BR>[Called By]<UL><LI><a href="#[4f75828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_new_report_flags_and_start_report
</UL><P><STRONG><a name="[8e795b0]"></a>set_sign</STRONG> (ARM, 732 bytes, Stack size 44 bytes, set_sign.o(i.set_sign))
<BR>[Called By]<UL><LI><a href="#[8d585e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_3i40_14bits
<LI><a href="#[8d58568]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_4i40_17bits
</UL><P><STRONG><a name="[8e8b09c]"></a>set_sign12k2</STRONG> (ARM, 668 bytes, Stack size 136 bytes, set_sign.o(i.set_sign12k2))
<BR><BR>[Calls]<UL><LI><a href="#[8d46244]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Inv_sqrt
</UL><BR>[Called By]<UL><LI><a href="#[8d58478]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_10i40_35bits
<LI><a href="#[8d584f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_8i40_31bits
</UL><P><STRONG><a name="[4f74c30]"></a>set_spot_frequencies</STRONG> (ARM, 140 bytes, Stack size 16 bytes, er_ns_nav.o(i.set_spot_frequencies))
<BR><BR>[Calls]<UL><LI><a href="#[4f74bbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_preset_freq
<LI><a href="#[4f74b48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_set_nsamples
<LI><a href="#[4f75930]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dprint_to_socket
</UL><BR>[Called By]<UL><LI><a href="#[4f77e9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_nav_thread
<LI><a href="#[4f74acc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;try_northstar_recovery
</UL><P><STRONG><a name="[4fe1bd8]"></a>set_tuning_parameters</STRONG> (ARM, 304 bytes, Stack size 16 bytes, er_cgi_thread_routines.o(i.set_tuning_parameters))
<BR><BR>[Calls]<UL><LI><a href="#[4fc2364]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_http_param_string
<LI><a href="#[4fc2130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[5ad0e68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_usi_write_wrapper
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[5923fa4]"></a>set_unref_buf_audio</STRONG> (ARM, 12 bytes, Stack size 0 bytes, live.o(i.set_unref_buf_audio))
<BR>[Called By]<UL><LI><a href="#[5927be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_start
</UL><P><STRONG><a name="[592401c]"></a>set_unref_buf_video</STRONG> (ARM, 12 bytes, Stack size 0 bytes, live.o(i.set_unref_buf_video))
<BR>[Called By]<UL><LI><a href="#[5927be8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_start
</UL><P><STRONG><a name="[808c324]"></a>set_waiting</STRONG> (ARM, 96 bytes, Stack size 0 bytes, stream.o(i.set_waiting))
<BR>[Called By]<UL><LI><a href="#[808d994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;live_play
<LI><a href="#[808d8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;live_teardown
<LI><a href="#[8163fec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_running
<LI><a href="#[89543f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_running
</UL><P><STRONG><a name="[9cf681c]"></a>sha1_prf</STRONG> (ARM, 236 bytes, Stack size 104 bytes, sha1.o(i.sha1_prf))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8354974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hmac_sha1_vector
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[9cfbe48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_pmk_to_ptk
</UL><P><STRONG><a name="[8a100ac]"></a>sha1_vector</STRONG> (ARM, 132 bytes, Stack size 120 bytes, sha1.o(i.sha1_vector))
<BR><BR>[Calls]<UL><LI><a href="#[8a11ad8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SHA1Update
<LI><a href="#[8a11a68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SHA1Final
</UL><BR>[Called By]<UL><LI><a href="#[8354974]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hmac_sha1_vector
</UL><P><STRONG><a name="[7e89d34]"></a>sid_sync</STRONG> (ARM, 156 bytes, Stack size 4 bytes, sid_sync.o(i.sid_sync))
<BR>[Called By]<UL><LI><a href="#[755e3b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;amrEncode
</UL><P><STRONG><a name="[7e89f84]"></a>sid_sync_init</STRONG> (ARM, 80 bytes, Stack size 16 bytes, sid_sync.o(i.sid_sync_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
</UL><BR>[Called By]<UL><LI><a href="#[755f33c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;amrInitEncode
</UL><P><STRONG><a name="[7e89bd4]"></a>sid_sync_reset</STRONG> (ARM, 28 bytes, Stack size 0 bytes, sid_sync.o(i.sid_sync_reset))
<BR>[Called By]<UL><LI><a href="#[755e3b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;amrEncode
</UL><P><STRONG><a name="[9be36ec]"></a>signal</STRONG> (ARM, 96 bytes, Stack size 16 bytes, eloop.o(i.signal))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[9be34f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_libc_signals_lock_do_lock
<LI><a href="#[9be33f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_libc_signals_lock_do_unlock
</UL><BR>[Called By]<UL><LI><a href="#[9be60c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_handle_signal
<LI><a href="#[9be3758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_register_signal
</UL><P><STRONG><a name="[81f9328]"></a>simple_itoa</STRONG> (ARM, 48 bytes, Stack size 8 bytes, util.o(i.simple_itoa))
<BR><BR>[Calls]<UL><LI><a href="#[5b5dad8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv10
</UL><BR>[Called By]<UL><LI><a href="#[59af5b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;print_content_length
<LI><a href="#[59af634]">&lt&lt</a>&nbsp;&nbsp;&nbsp;print_http_headers
</UL><P><STRONG><a name="[4fc1ef4]"></a>smc_go_home</STRONG> (ARM, 92 bytes, Stack size 16 bytes, er_cgi_thread_routines.o(i.smc_go_home))
<BR><BR>[Calls]<UL><LI><a href="#[4f75c1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_current_rovio_state
<LI><a href="#[5ad0f60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_setup_homing_path
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[4fc1e78]"></a>smc_go_home_and_dock</STRONG> (ARM, 112 bytes, Stack size 16 bytes, er_cgi_thread_routines.o(i.smc_go_home_and_dock))
<BR><BR>[Calls]<UL><LI><a href="#[4f74328]">&gt&gt</a>&nbsp;&nbsp;&nbsp;is_rovio_docked
<LI><a href="#[4f75c1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_current_rovio_state
<LI><a href="#[5ad0f60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_setup_homing_path
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[4fe1aec]"></a>smc_reset</STRONG> (ARM, 40 bytes, Stack size 8 bytes, er_cgi_thread_routines.o(i.smc_reset))
<BR><BR>[Calls]<UL><LI><a href="#[4f75ba0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_current_rovio_state
<LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[889f644]"></a>sname_compare</STRONG> (ARM, 248 bytes, Stack size 48 bytes, WBFAT_LDISK.o(i.sname_compare))
<BR><BR>[Calls]<UL><LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[88a1a78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;split_sname
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
</UL><BR>[Called By]<UL><LI><a href="#[88a1160]">&lt&lt</a>&nbsp;&nbsp;&nbsp;generate_short_name
</UL><P><STRONG><a name="[582d278]"></a>socket_pipe</STRONG> (ARM, 52 bytes, Stack size 8 bytes, pipe.o(i.socket_pipe))
<BR><BR>[Calls]<UL><LI><a href="#[75ee8cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pipe_create
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4e4a484]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CreateMsgQueue
<LI><a href="#[8031cc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_softqueue_event
<LI><a href="#[780fcac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_exchanger
</UL><P><STRONG><a name="[8031d38]"></a>soft_queue_add</STRONG> (ARM, 136 bytes, Stack size 24 bytes, event.o(i.soft_queue_add))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[8034638]">&gt&gt</a>&nbsp;&nbsp;&nbsp;remove_from_list
<LI><a href="#[80357e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_to_list
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[4c2be18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_signal
</UL><BR>[Called By]<UL><LI><a href="#[7f5f6e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_ring_input
</UL><P><STRONG><a name="[7843b8c]"></a>spook_log</STRONG> (ARM, 376 bytes, Stack size 1648 bytes, log.o(i.spook_log))
<BR><BR>[Calls]<UL><LI><a href="#[80b0f00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;localtime_r
<LI><a href="#[5773ffc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;asctime_r
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4c78f58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[7f5f6e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_ring_input
<LI><a href="#[7843c6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_basic_response
<LI><a href="#[7843b10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_digest_response
<LI><a href="#[7f3e5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;config_frameheap
<LI><a href="#[7f3e644]">&lt&lt</a>&nbsp;&nbsp;&nbsp;config_port
<LI><a href="#[77e7304]">&lt&lt</a>&nbsp;&nbsp;&nbsp;config_rtprange
<LI><a href="#[817fac4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;conn_write
<LI><a href="#[808c6e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_to_stream
<LI><a href="#[77e76b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_udp_endpoint
<LI><a href="#[8180324]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_accept
<LI><a href="#[81192f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_read
<LI><a href="#[817fb34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drop_conn
<LI><a href="#[7810fa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;end_block
<LI><a href="#[7f60688]">&lt&lt</a>&nbsp;&nbsp;&nbsp;end_block
<LI><a href="#[808dd38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;end_block
<LI><a href="#[8953fa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;end_block
<LI><a href="#[780fbc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exchange_frame
<LI><a href="#[80eab3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_rtsp_location
<LI><a href="#[780ff60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_next_frame
<LI><a href="#[80eb59c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_DESCRIBE
<LI><a href="#[80eb4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_PLAY
<LI><a href="#[80eb444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_TEARDOWN
<LI><a href="#[8180598]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_request
<LI><a href="#[8985374]">&lt&lt</a>&nbsp;&nbsp;&nbsp;jpeg_send
<LI><a href="#[808d8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;live_teardown
<LI><a href="#[898cb48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mpeg4_get_sdp
<LI><a href="#[7f5f7d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_audio_ring
<LI><a href="#[780fc3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_frame
<LI><a href="#[7f3e8d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_statement
<LI><a href="#[89b7c74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rawaudio_get_sdp
<LI><a href="#[7f3e4d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_config_file
<LI><a href="#[77e8878]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtcp_send
<LI><a href="#[8119448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_handle_msg
<LI><a href="#[80ea84c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_interleave_setup
<LI><a href="#[80eb3d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_send_error
<LI><a href="#[80ea7d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_udp_setup
<LI><a href="#[8199a10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;scanner_error
<LI><a href="#[77e73ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_rtp_packet
<LI><a href="#[895542c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_bitrate
<LI><a href="#[891eee4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_file
<LI><a href="#[7813790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_framerate_num
<LI><a href="#[7813718]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_framerate_str
<LI><a href="#[89554ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_input
<LI><a href="#[7813808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_inputtype
<LI><a href="#[7813964]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_output
<LI><a href="#[7f61cf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_output
<LI><a href="#[895549c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_output
<LI><a href="#[808fc88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_path
<LI><a href="#[89543f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_running
<LI><a href="#[7f61c30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_samplerate
<LI><a href="#[808fcf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_track
<LI><a href="#[8180814]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_listen
<LI><a href="#[77e8d74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_rtcp_read
<LI><a href="#[77e8de8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_rtp_read
<LI><a href="#[7ff7e40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;unref_frame
</UL><P><STRONG><a name="[80b0ff0]"></a>spook_log_init</STRONG> (ARM, 60 bytes, Stack size 8 bytes, log.o(i.spook_log_init))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4a0359c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_self
</UL><BR>[Called By]<UL><LI><a href="#[5923f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RtspServerStart
</UL><P><STRONG><a name="[8cd626c]"></a>sqrt_l_exp</STRONG> (ARM, 124 bytes, Stack size 16 bytes, sqrt_l.o(i.sqrt_l_exp))
<BR><BR>[Calls]<UL><LI><a href="#[8d461d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;norm_l
<LI><a href="#[8d54e30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_msu
</UL><BR>[Called By]<UL><LI><a href="#[886ec7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Decoder_amr
<LI><a href="#[8f23ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR795_gain_code_quant_mod
</UL><P><STRONG><a name="[7f3e464]"></a>start_conf_read</STRONG> (ARM, 20 bytes, Stack size 0 bytes, conf_scan.o(i.start_conf_read))
<BR>[Called By]<UL><LI><a href="#[7f3e4d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_config_file
</UL><P><STRONG><a name="[5c078dc]"></a>start_nav_to_waypoint</STRONG> (ARM, 196 bytes, Stack size 40 bytes, er_rsm_thread_routines.o(i.start_nav_to_waypoint))
<BR><BR>[Calls]<UL><LI><a href="#[4db4f54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fflt
<LI><a href="#[5a878e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[4db4ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_frdiv
<LI><a href="#[4db4ca4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[4db4e7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ffix
</UL><BR>[Called By]<UL><LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
</UL><P><STRONG><a name="[4f7457c]"></a>state_change_head_position</STRONG> (ARM, 80 bytes, Stack size 8 bytes, er_ns_nav.o(i.state_change_head_position))
<BR><BR>[Calls]<UL><LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
</UL><BR>[Called By]<UL><LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[4f74488]"></a>state_delay_ticks</STRONG> (ARM, 48 bytes, Stack size 0 bytes, er_ns_nav.o(i.state_delay_ticks))
<BR>[Called By]<UL><LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[71ed6f4]"></a>statusReply</STRONG> (ARM, 120 bytes, Stack size 4168 bytes, vp_com.o(i.statusReply))
<BR><BR>[Calls]<UL><LI><a href="#[71ee424]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrrequestStatusLenth
<LI><a href="#[71ee330]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrrequestStatusStru
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[71f3fe8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBWrite_Again
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71ecd2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FTPRequest
<LI><a href="#[71ecb5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;authRequest
<LI><a href="#[71ece7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;firmwareRequst
<LI><a href="#[71ecbcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;imageRequest
<LI><a href="#[71eca78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;logonRequest
<LI><a href="#[71ecd9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailRequest
<LI><a href="#[71ecef0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rebootRequst
<LI><a href="#[71ed12c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;restoreRequst
<LI><a href="#[71ecf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;systemRequest
<LI><a href="#[71ed214]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbCustomRequest
<LI><a href="#[71eccb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbIPRequest
<LI><a href="#[71ed1a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbWlanRequest
<LI><a href="#[71ed684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_setPPP
</UL><P><STRONG><a name="[5ad0d04]"></a>store_dense_waypoint</STRONG> (ARM, 184 bytes, Stack size 12 bytes, er_shared_routines.o(i.store_dense_waypoint))
<BR>[Called By]<UL><LI><a href="#[4f73718]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_record_waypoint
<LI><a href="#[4fc22ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_stop_and_save
</UL><P><STRONG><a name="[4fe16b0]"></a>store_image_capture_action</STRONG> (ARM, 100 bytes, Stack size 16 bytes, er_cgi_thread_routines.o(i.store_image_capture_action))
<BR><BR>[Calls]<UL><LI><a href="#[4f74058]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_rovio_head_position
<LI><a href="#[5ad0ae4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capture_and_email_picture
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[8cc5138]"></a>subframePostProc</STRONG> (ARM, 1152 bytes, Stack size 92 bytes, spstproc.o(i.subframePostProc))
<BR>[Called By]<UL><LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
</UL><P><STRONG><a name="[8cc5374]"></a>subframePreProc</STRONG> (ARM, 728 bytes, Stack size 112 bytes, spreproc.o(i.subframePreProc))
<BR><BR>[Calls]<UL><LI><a href="#[8dac4f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Syn_filt
</UL><BR>[Called By]<UL><LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
</UL><P><STRONG><a name="[4f754a0]"></a>swap_curr_and_potential_next_room</STRONG> (ARM, 132 bytes, Stack size 24 bytes, er_ns_nav.o(i.swap_curr_and_potential_next_room))
<BR><BR>[Calls]<UL><LI><a href="#[4f757a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_get_next_room
<LI><a href="#[4f7569c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_get_potential_next_room
<LI><a href="#[4f75728]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_get_cur_room
<LI><a href="#[4f75428]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_init
<LI><a href="#[4f7539c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_set_potential_next_room
<LI><a href="#[4f75828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_new_report_flags_and_start_report
<LI><a href="#[4f75314]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_request_room_switch
</UL><BR>[Called By]<UL><LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
</UL><P><STRONG><a name="[75cd75c]"></a>sysCacheState</STRONG> (ARM, 12 bytes, Stack size 0 bytes, wb_cache.o(i.sysCacheState))
<BR>[Called By]<UL><LI><a href="#[7e91c80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_ISP_Setting
</UL><P><STRONG><a name="[4d845f8]"></a>sysDisableCache</STRONG> (ARM, 52 bytes, Stack size 8 bytes, wb_cache.o(i.sysDisableCache))
<BR><BR>[Calls]<UL><LI><a href="#[5094598]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sys_flush_and_clean_dcache
</UL><BR>[Called By]<UL><LI><a href="#[4d31d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_fmi_init
<LI><a href="#[4a55508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInitClock
</UL><P><STRONG><a name="[789f58c]"></a>sysDisableInterrupt</STRONG> (ARM, 44 bytes, Stack size 0 bytes, wb_aic.o(i.sysDisableInterrupt))
<BR>[Called By]<UL><LI><a href="#[78a3774]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iis_init
</UL><P><STRONG><a name="[4d84584]"></a>sysEnableCache</STRONG> (ARM, 132 bytes, Stack size 0 bytes, wb_cache.o(i.sysEnableCache))
<BR>[Called By]<UL><LI><a href="#[4d31d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_fmi_init
<LI><a href="#[4a55508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInitClock
</UL><P><STRONG><a name="[4d8466c]"></a>sysFlushCache</STRONG> (ARM, 72 bytes, Stack size 8 bytes, wb_cache.o(i.sysFlushCache))
<BR><BR>[Calls]<UL><LI><a href="#[5094598]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sys_flush_and_clean_dcache
</UL><BR>[Called By]<UL><LI><a href="#[4a55508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInitClock
</UL><P><STRONG><a name="[7c2a44c]"></a>sysGetIBitState</STRONG> (ARM, 20 bytes, Stack size 0 bytes, wb_aic.o(i.sysGetIBitState))
<BR>[Called By]<UL><LI><a href="#[789fb80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;I2CRDWRBegin
</UL><P><STRONG><a name="[77c85f4]"></a>sysGetTicks</STRONG> (ARM, 32 bytes, Stack size 0 bytes, wb_timer.o(i.sysGetTicks))
<BR>[Called By]<UL><LI><a href="#[77c8664]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiActive
</UL><P><STRONG><a name="[5320ff0]"></a>sysInvalidCache</STRONG> (ARM, 16 bytes, Stack size 0 bytes, wb_cache.o(i.sysInvalidCache))
<BR>[Called By]<UL><LI><a href="#[4d31d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_fmi_init
</UL><P><STRONG><a name="[75b51c0]"></a>sysIsInIRQ</STRONG> (ARM, 24 bytes, Stack size 0 bytes, tt_semaphore.o(i.sysIsInIRQ))
<BR>[Called By]<UL><LI><a href="#[4def640]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
</UL><P><STRONG><a name="[78b9010]"></a>sysSetInterruptType</STRONG> (ARM, 56 bytes, Stack size 0 bytes, wb_aic.o(i.sysSetInterruptType))
<BR>[Called By]<UL><LI><a href="#[73656e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;adcStartRecord
<LI><a href="#[73659a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dacStartPlay
</UL><P><STRONG><a name="[7c2a538]"></a>sysSetLocalInterrupt</STRONG> (ARM, 88 bytes, Stack size 0 bytes, wb_aic.o(i.sysSetLocalInterrupt))
<BR>[Called By]<UL><LI><a href="#[789fb80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;I2CRDWRBegin
<LI><a href="#[789fb10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;I2CRDWREnd
</UL><P><STRONG><a name="[71ecf64]"></a>systemRequest</STRONG> (ARM, 456 bytes, Stack size 56 bytes, vp_com.o(i.systemRequest))
<BR><BR>[Calls]<UL><LI><a href="#[71ed618]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBRead
<LI><a href="#[71ed5a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBResetForVCom
<LI><a href="#[71edd78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrsystemSettingStru
<LI><a href="#[4eaae1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetMediaFormat
<LI><a href="#[71ed6f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;statusReply
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[4eaa894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlReboot
<LI><a href="#[71f1dd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;string_mac_to_long
<LI><a href="#[4dee5bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetMac
<LI><a href="#[4eaa4c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetDefaultMac
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[71ed048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcomDump
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
</UL><P><STRONG><a name="[81193d4]"></a>tcp_send_pmsg</STRONG> (ARM, 372 bytes, Stack size 2096 bytes, tcp.o(i.tcp_send_pmsg))
<BR><BR>[Calls]<UL><LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[811952c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;avail_send_buf
<LI><a href="#[81194bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_data
</UL><BR>[Called By]<UL><LI><a href="#[80eb59c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_DESCRIBE
<LI><a href="#[80eb4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_PLAY
<LI><a href="#[80eb528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_SETUP
<LI><a href="#[80eb444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_TEARDOWN
<LI><a href="#[81800a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_unknown
<LI><a href="#[8119448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_handle_msg
<LI><a href="#[80eb3d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_send_error
</UL><P><STRONG><a name="[4fe19f8]"></a>test_rovio_hardware</STRONG> (ARM, 372 bytes, Stack size 32 bytes, er_cgi_thread_routines.o(i.test_rovio_hardware))
<BR><BR>[Calls]<UL><LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4fc2364]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_http_param_string
<LI><a href="#[4fc2130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[5ad09a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_wheel_speed_cmd
<LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
<LI><a href="#[5ad0e68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_usi_write_wrapper
</UL><BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[4def7a4]"></a>thread_join</STRONG> (ARM, 84 bytes, Stack size 24 bytes, System.o(i.thread_join))
<BR><BR>[Calls]<UL><LI><a href="#[4a038e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_get_info
<LI><a href="#[4c30e70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delete
<LI><a href="#[4c30a1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_yield
</UL><BR>[Called By]<UL><LI><a href="#[734d780]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_system_power_saving
</UL><P><STRONG><a name="[8032064]"></a>time_add</STRONG> (ARM, 76 bytes, Stack size 8 bytes, event.o(i.time_add))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[8031f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;resched_event
<LI><a href="#[8031ff4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;time_future
</UL><P><STRONG><a name="[8032144]"></a>time_ago</STRONG> (ARM, 32 bytes, Stack size 16 bytes, event.o(i.time_ago))
<BR><BR>[Calls]<UL><LI><a href="#[80360a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[80321b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time_diff
</UL><BR>[Called By]<UL><LI><a href="#[8031b60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;event_loop
</UL><P><STRONG><a name="[80321b4]"></a>time_diff</STRONG> (ARM, 48 bytes, Stack size 0 bytes, event.o(i.time_diff))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[8032144]">&lt&lt</a>&nbsp;&nbsp;&nbsp;time_ago
</UL><P><STRONG><a name="[8031ff4]"></a>time_future</STRONG> (ARM, 32 bytes, Stack size 16 bytes, event.o(i.time_future))
<BR><BR>[Calls]<UL><LI><a href="#[80360a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[8032064]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time_add
</UL><BR>[Called By]<UL><LI><a href="#[8031f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;resched_event
</UL><P><STRONG><a name="[8ac5de8]"></a>tls_deinit</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tls_none.o(i.tls_deinit))
<BR>[Called By]<UL><LI><a href="#[8479f84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_deinit
</UL><P><STRONG><a name="[8ac5e58]"></a>tls_init</STRONG> (ARM, 8 bytes, Stack size 0 bytes, tls_none.o(i.tls_init))
<BR>[Called By]<UL><LI><a href="#[8479ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_init
</UL><P><STRONG><a name="[77abf0c]"></a>to_upper</STRONG> (ARM, 64 bytes, Stack size 16 bytes, util.o(i.to_upper))
<BR><BR>[Calls]<UL><LI><a href="#[52aad5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;toupper
</UL><BR>[Called By]<UL><LI><a href="#[77abf7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_option_line
</UL><P><STRONG><a name="[4fe153c]"></a>toggle_weak_ns_signal_resistance</STRONG> (ARM, 24 bytes, Stack size 0 bytes, er_cgi_thread_routines.o(i.toggle_weak_ns_signal_resistance))
<BR>[Called By]<UL><LI><a href="#[4fc2540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlCtrlNAV
</UL><P><STRONG><a name="[8cc5ca8]"></a>ton_stab_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, ton_stab.o(i.ton_stab_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[88869ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_exit
</UL><P><STRONG><a name="[8cc5988]"></a>ton_stab_init</STRONG> (ARM, 72 bytes, Stack size 16 bytes, ton_stab.o(i.ton_stab_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[8cc62e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Set_zero
</UL><BR>[Called By]<UL><LI><a href="#[88868c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_init
</UL><P><STRONG><a name="[8cc6038]"></a>ton_stab_reset</STRONG> (ARM, 40 bytes, Stack size 8 bytes, ton_stab.o(i.ton_stab_reset))
<BR><BR>[Calls]<UL><LI><a href="#[8cc62e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Set_zero
</UL><BR>[Called By]<UL><LI><a href="#[8886a98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_reset
</UL><P><STRONG><a name="[77ac0d4]"></a>translate_uri</STRONG> (ARM, 180 bytes, Stack size 24 bytes, alias.o(i.translate_uri))
<BR><BR>[Calls]<UL><LI><a href="#[821d13c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;clean_pathname
<LI><a href="#[8218e2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_r_not_found
<LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[785f888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_New
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[821cf08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;unescape_uri
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[77ac1c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_r_bad_request
<LI><a href="#[59af4c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetDocumentBasedPath
</UL><BR>[Called By]<UL><LI><a href="#[77ac148]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_header_end
</UL><P><STRONG><a name="[8511c3c]"></a>Cyg_Mempool_Fixed_Implementation::try_alloc(int)</STRONG> (ARM, 152 bytes, Stack size 16 bytes, memfixed.o(i.try_alloc__32Cyg_Mempool_Fixed_ImplementationFi))
<BR><BR>[Calls]<UL><LI><a href="#[750a318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_lsbindex
</UL><BR>[Called By]<UL><LI><a href="#[5cef464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::alloc()
<LI><a href="#[5cef360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::alloc(unsigned long long)
<LI><a href="#[5cef2d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::try_alloc()
<LI><a href="#[5cef254]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::free(unsigned char*)
</UL><P><STRONG><a name="[852fa74]"></a>Cyg_Mempool_Variable_Implementation::try_alloc(int)</STRONG> (ARM, 156 bytes, Stack size 0 bytes, memvar.o(i.try_alloc__35Cyg_Mempool_Variable_ImplementationFi))
<BR>[Called By]<UL><LI><a href="#[5cef9a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::alloc(int)
<LI><a href="#[5cef898]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::alloc(int, unsigned long long)
<LI><a href="#[5cef810]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::try_alloc(int)
<LI><a href="#[5cef788]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::free(unsigned char*, int)
</UL><P><STRONG><a name="[4f74acc]"></a>try_northstar_recovery</STRONG> (ARM, 164 bytes, Stack size 16 bytes, er_ns_nav.o(i.try_northstar_recovery))
<BR><BR>[Calls]<UL><LI><a href="#[4f74a58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_drive_cmd
<LI><a href="#[4f750a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;flush_ns_uart
<LI><a href="#[4f75034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_get_version
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[4f75290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;reset_northstar_and_get_version
<LI><a href="#[4f74c30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_spot_frequencies
<LI><a href="#[4f75828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_new_report_flags_and_start_report
<LI><a href="#[4f75930]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dprint_to_socket
</UL><BR>[Called By]<UL><LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
</UL><P><STRONG><a name="[4a55f20]"></a>tsAudioLoopbackTestHandler</STRONG> (ARM, 128 bytes, Stack size 16 bytes, CameraTest.o(i.tsAudioLoopbackTestHandler))
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4a55e3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSetPlayVolume
<LI><a href="#[4a55dc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioBypassEnable
<LI><a href="#[4a55cd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioBypassDisable
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Address Reference Count : 1]<UL><LI> CameraTest.o(i.main)
</UL><P><STRONG><a name="[4a55b74]"></a>tsGpioTestHandler</STRONG> (ARM, 364 bytes, Stack size 32 bytes, CameraTest.o(i.tsGpioTestHandler))
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Address Reference Count : 1]<UL><LI> CameraTest.o(i.main)
</UL><P><STRONG><a name="[4a56080]"></a>tsOnboardTestHandler</STRONG> (ARM, 56 bytes, Stack size 16 bytes, CameraTest.o(i.tsOnboardTestHandler))
<BR><BR>[Calls]<UL><LI><a href="#[4a5600c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledGetResult
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Address Reference Count : 1]<UL><LI> CameraTest.o(i.main)
</UL><P><STRONG><a name="[4a55c5c]"></a>tsSuspendTestHandler</STRONG> (ARM, 116 bytes, Stack size 16 bytes, CameraTest.o(i.tsSuspendTestHandler))
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4a55bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Address Reference Count : 1]<UL><LI> CameraTest.o(i.main)
</UL><P><STRONG><a name="[4a54a54]"></a>tsUartTestHandler</STRONG> (ARM, 588 bytes, Stack size 56 bytes, UartTest.o(i.tsUartTestHandler))
<BR><BR>[Calls]<UL><LI><a href="#[4bba1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;uart_is_sys_msg_suppressed
<LI><a href="#[4a0359c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_self
<LI><a href="#[4a03520]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_get_priority
<LI><a href="#[4a037f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;er_pause_thread
<LI><a href="#[4a03704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;period_pause_thread
<LI><a href="#[4bba6e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_lookup
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a034a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_get_config
<LI><a href="#[4bba670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_set_config
<LI><a href="#[4bba278]">&gt&gt</a>&nbsp;&nbsp;&nbsp;uart_suppress_sys_msg
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4a03d24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;UartWriteTrigger
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[4a0368c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;er_resume_thread
<LI><a href="#[4a03610]">&gt&gt</a>&nbsp;&nbsp;&nbsp;period_resume_thread
</UL><BR>[Address Reference Count : 1]<UL><LI> CameraTest.o(i.main)
</UL><P><STRONG><a name="[75b4e58]"></a>tt_cond_broadcast</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tt_semaphore.o(i.tt_cond_broadcast))
<BR><BR>[Calls]<UL><LI><a href="#[4c2bd18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_broadcast
</UL><BR>[Called By]<UL><LI><a href="#[755e24c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_EventNotify
</UL><P><STRONG><a name="[75eec78]"></a>tt_cond_init</STRONG> (ARM, 24 bytes, Stack size 16 bytes, tt_semaphore.o(i.tt_cond_init))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c128]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_init
</UL><BR>[Called By]<UL><LI><a href="#[75f08ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_init
<LI><a href="#[4d840b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_Init
<LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
</UL><P><STRONG><a name="[75eeb14]"></a>tt_cond_signal</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tt_semaphore.o(i.tt_cond_signal))
<BR><BR>[Calls]<UL><LI><a href="#[4c2be18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_signal
</UL><BR>[Called By]<UL><LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[75f0b48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_putc
<LI><a href="#[7566b94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnPlay
</UL><P><STRONG><a name="[75ee858]"></a>tt_cond_wait</STRONG> (ARM, 84 bytes, Stack size 16 bytes, tt_semaphore.o(i.tt_cond_wait))
<BR><BR>[Calls]<UL><LI><a href="#[4c2bf24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_wait
<LI><a href="#[4a0359c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_self
</UL><BR>[Called By]<UL><LI><a href="#[75ef7c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread1
<LI><a href="#[558f9cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_EventRead
<LI><a href="#[75f0b48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_putc
<LI><a href="#[755fc10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauDecode
</UL><P><STRONG><a name="[75c3200]"></a>tt_get_ticks</STRONG> (ARM, 12 bytes, Stack size 8 bytes, tt_time.o(i.tt_get_ticks))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
</UL><BR>[Called By]<UL><LI><a href="#[5459b04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_WaitEncode
<LI><a href="#[54ad960]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4ForceIFrame
<LI><a href="#[5456884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encStart
</UL><P><STRONG><a name="[75c3274]"></a>tt_get_time</STRONG> (ARM, 36 bytes, Stack size 8 bytes, tt_time.o(i.tt_get_time))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[4fe1a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drive_rovio_manually
<LI><a href="#[4f73890]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drive_to_beacon
<LI><a href="#[5c07c4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;execute_random_maneuver
<LI><a href="#[5c07bc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;execute_small_sideways_random_maneuver
<LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f73f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_waypoint
<LI><a href="#[4f73b70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_mcu_cmd_with_obstacle_avoidance
<LI><a href="#[5430f94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoBuildDate
<LI><a href="#[5431008]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoBuildTime
<LI><a href="#[544d694]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoSetTime
</UL><P><STRONG><a name="[75c3188]"></a>tt_msec_to_ticks</STRONG> (ARM, 104 bytes, Stack size 16 bytes, tt_time.o(i.tt_msec_to_ticks))
<BR><BR>[Calls]<UL><LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[4d84430]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[54ad960]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4ForceIFrame
</UL><P><STRONG><a name="[755eff8]"></a>tt_msg_queue_init</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tt_msg.o(i.tt_msg_queue_init))
<BR><BR>[Calls]<UL><LI><a href="#[4c2ddcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mbox_create
</UL><BR>[Called By]<UL><LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
<LI><a href="#[4d84040]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptInitThread
<LI><a href="#[4d842e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdInit
</UL><P><STRONG><a name="[755e5fc]"></a>tt_msg_recv</STRONG> (ARM, 48 bytes, Stack size 16 bytes, tt_msg.o(i.tt_msg_recv))
<BR><BR>[Calls]<UL><LI><a href="#[4c2dbf4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mbox_get
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[7565e90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThreadEntry
<LI><a href="#[545efc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThreadEntry
<LI><a href="#[53c32d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThreadEntry
</UL><P><STRONG><a name="[755f9cc]"></a>tt_msg_send</STRONG> (ARM, 76 bytes, Stack size 16 bytes, tt_msg.o(i.tt_msg_send))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4c2d838]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mbox_put
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[755fa3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartPlay
<LI><a href="#[755edc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartRecord
<LI><a href="#[5459a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_StartEncode
<LI><a href="#[5457924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptWaitPrevMsg
</UL><P><STRONG><a name="[5456d4c]"></a>tt_msg_timed_recv</STRONG> (ARM, 76 bytes, Stack size 16 bytes, tt_msg.o(i.tt_msg_timed_recv))
<BR><BR>[Calls]<UL><LI><a href="#[4c2db04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mbox_timed_get
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[545f034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThreadCapEntry
</UL><P><STRONG><a name="[755fb9c]"></a>tt_msg_try_send</STRONG> (ARM, 96 bytes, Stack size 24 bytes, tt_msg.o(i.tt_msg_try_send))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4c2d65c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mbox_tryput
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[755fc10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauDecode
<LI><a href="#[75654d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauRecordCallback
<LI><a href="#[545dc9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptIrqHandler
<LI><a href="#[537f110]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdRefreshLcm
<LI><a href="#[537e0d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdUpdateRemote
</UL><P><STRONG><a name="[4d84430]"></a>tt_msleep</STRONG> (ARM, 20 bytes, Stack size 8 bytes, tt_time.o(i.tt_msleep))
<BR><BR>[Calls]<UL><LI><a href="#[75c3188]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msec_to_ticks
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
</UL><BR>[Called By]<UL><LI><a href="#[881ea58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CAM_SensorPowerOn
<LI><a href="#[881eb44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CAM_SetZoom
<LI><a href="#[881ead0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CAM_SuspendTV
<LI><a href="#[4e4a410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SelectThread
<LI><a href="#[881ebb4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SuspendTvp5150
<LI><a href="#[4a55508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInitClock
<LI><a href="#[545a790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_vcptSensorInit
<LI><a href="#[780feec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;deliver_frame
<LI><a href="#[4fe1a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;drive_rovio_manually
<LI><a href="#[7e91ba0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV7670
<LI><a href="#[7e91c10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV9650
<LI><a href="#[7e91b2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_PO6030K
<LI><a href="#[4a550e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuInit
<LI><a href="#[4f29394]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuWakeup
<LI><a href="#[4f77e9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_nav_thread
<LI><a href="#[4f7519c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_set_baud_rate
<LI><a href="#[5b5db48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_uart_read
<LI><a href="#[4fc20bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_start_play
<LI><a href="#[4fc22ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_stop_and_save
<LI><a href="#[5c077ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;play_waypoint_action
<LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
<LI><a href="#[4f75290]">&lt&lt</a>&nbsp;&nbsp;&nbsp;reset_northstar_and_get_version
<LI><a href="#[4f74e30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;select_correct_freq_set
<LI><a href="#[4f75828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_new_report_flags_and_start_report
<LI><a href="#[4f74acc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;try_northstar_recovery
<LI><a href="#[7566420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauPlayCallback
<LI><a href="#[755fa3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartPlay
<LI><a href="#[755edc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartRecord
<LI><a href="#[545e618]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptSensorPowerOff
<LI><a href="#[545dd84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptSensorPowerOn
<LI><a href="#[54573a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStart
<LI><a href="#[5459b04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_WaitEncode
<LI><a href="#[5422c2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4AddRef
<LI><a href="#[4d87408]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_entry
<LI><a href="#[558f5b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableJPEGEncoder
</UL><P><STRONG><a name="[54ad150]"></a>tt_pc_consume</STRONG> (ARM, 48 bytes, Stack size 16 bytes, tt_msg.o(i.tt_pc_consume))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_wait
<LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><BR>[Called By]<UL><LI><a href="#[54ad2b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decStart
</UL><P><STRONG><a name="[755f070]"></a>tt_pc_init</STRONG> (ARM, 28 bytes, Stack size 8 bytes, tt_msg.o(i.tt_pc_init))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d3fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_init
</UL><BR>[Called By]<UL><LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
<LI><a href="#[4d84198]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmInit
<LI><a href="#[4d84128]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4Init
<LI><a href="#[4d84278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeInit
</UL><P><STRONG><a name="[755e66c]"></a>tt_pc_produce</STRONG> (ARM, 44 bytes, Stack size 16 bytes, tt_msg.o(i.tt_pc_produce))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_wait
<LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><BR>[Called By]<UL><LI><a href="#[7566b94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnPlay
</UL><P><STRONG><a name="[755e510]"></a>tt_pc_try_consume</STRONG> (ARM, 64 bytes, Stack size 16 bytes, tt_msg.o(i.tt_pc_try_consume))
<BR><BR>[Calls]<UL><LI><a href="#[4c2cfec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_trywait
<LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><BR>[Called By]<UL><LI><a href="#[7566420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauPlayCallback
<LI><a href="#[54225d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decDoneCallback
<LI><a href="#[54224dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decErrorCallback
<LI><a href="#[5422558]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decWaitCallback
<LI><a href="#[5422b3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encDoneCallback
<LI><a href="#[5422ac0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encErrorCallback
<LI><a href="#[541d678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeOnProcessOK
</UL><P><STRONG><a name="[535586c]"></a>tt_pc_try_produce</STRONG> (ARM, 60 bytes, Stack size 16 bytes, tt_msg.o(i.tt_pc_try_produce))
<BR><BR>[Calls]<UL><LI><a href="#[4c2cfec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_trywait
<LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><BR>[Called By]<UL><LI><a href="#[537dbc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmStartRefresh
<LI><a href="#[54ad2b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decStart
<LI><a href="#[5456884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encStart
<LI><a href="#[537eb14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeTrigger
</UL><P><STRONG><a name="[4e4a0ec]"></a>tt_rmutex_init</STRONG> (ARM, 16 bytes, Stack size 0 bytes, tt_semaphore.o(i.tt_rmutex_init))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
</UL><BR>[Called By]<UL><LI><a href="#[75f08ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_init
<LI><a href="#[4a5496c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ServerStart
<LI><a href="#[4d840b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_Init
<LI><a href="#[4a551c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledInit
<LI><a href="#[4a550e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuInit
<LI><a href="#[4a552a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyInitDevice
<LI><a href="#[4d83fd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauInit
<LI><a href="#[4d84040]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptInitThread
<LI><a href="#[4d842e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdInit
<LI><a href="#[4d84208]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vgfxInit
<LI><a href="#[4d84278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeInit
</UL><P><STRONG><a name="[4def640]"></a>tt_rmutex_lock</STRONG> (ARM, 72 bytes, Stack size 16 bytes, tt_semaphore.o(i.tt_rmutex_lock))
<BR><BR>[Calls]<UL><LI><a href="#[75b51c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sysIsInIRQ
<LI><a href="#[4a0359c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_self
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
</UL><BR>[Called By]<UL><LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[75ef7c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread1
<LI><a href="#[75ef838]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_close_fd
<LI><a href="#[4e4b2cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetIP
<LI><a href="#[4e4b92c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetMediaFormat
<LI><a href="#[4e4aaf0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetPPP
<LI><a href="#[4e4abd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetUPnP
<LI><a href="#[4e4acc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetVNet
<LI><a href="#[4e4b754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetWlan
<LI><a href="#[4e4b340]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetIP
<LI><a href="#[4e4aa7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetPPP
<LI><a href="#[4e4ab64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUPnP
<LI><a href="#[4e4ac4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetVNet
<LI><a href="#[5380228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vdRefreshLcm
<LI><a href="#[4eaba44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlAuthUser
<LI><a href="#[4eab9d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlDelUser
<LI><a href="#[4eaac30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlEnableMotionDetect
<LI><a href="#[4eab16c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetFraemrate
<LI><a href="#[4eab25c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetFramerateCapalibity
<LI><a href="#[4eaabc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetIP
<LI><a href="#[4dee54c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetMac
<LI><a href="#[4eaada4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetMediaFoamat
<LI><a href="#[4eabd00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetMyself
<LI><a href="#[4eab2dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetQuality
<LI><a href="#[4eab3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetQualityCapability
<LI><a href="#[4eab444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetResolution
<LI><a href="#[4eab880]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetUser
<LI><a href="#[4eab6a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetUserCheck
<LI><a href="#[4eaa904]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetWlan
<LI><a href="#[4eaacac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlIsMotionDetectEnabled
<LI><a href="#[4eab0f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetBrightness
<LI><a href="#[4eaa4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetDefaultMac
<LI><a href="#[4eab1e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetFramerate
<LI><a href="#[4eaab50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetIP
<LI><a href="#[4dee5bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetMac
<LI><a href="#[4eaae1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetMediaFormat
<LI><a href="#[4eaaf0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetMicVolume
<LI><a href="#[4eab350]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetQuality
<LI><a href="#[4eab530]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetResolution
<LI><a href="#[4eab000]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetSpeakerVolume
<LI><a href="#[4eabc90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetUser
<LI><a href="#[4eab808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetUserCheck
<LI><a href="#[4eaaae0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetWlan
<LI><a href="#[558f900]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_EventInterrupt
<LI><a href="#[558f9cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_EventRead
<LI><a href="#[4f292a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledClearError
<LI><a href="#[4e49db0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledClearFactoryDefault
<LI><a href="#[4a54f80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledError
<LI><a href="#[4a5600c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledGetResult
<LI><a href="#[4e4dc6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledSetFactoryDefault
<LI><a href="#[72cf544]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledSetLowBattery
<LI><a href="#[727b338]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledSetNetwork
<LI><a href="#[727eb44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState
<LI><a href="#[727b3ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState_Error
<LI><a href="#[727b2c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledSuspend
<LI><a href="#[727d158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledUpdateStatus
<LI><a href="#[4f2964c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuLock
<LI><a href="#[4eaa53c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuSendCommand
<LI><a href="#[4f2955c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuSendCommand_NoResponse
<LI><a href="#[4f29394]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuWakeup
<LI><a href="#[4f2ad58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_ReadMCU
<LI><a href="#[75f0b48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_putc
<LI><a href="#[4defcd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyFlash
<LI><a href="#[4defd48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyLock
<LI><a href="#[4e4c9d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyRead
<LI><a href="#[71ece0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyWrite
<LI><a href="#[7560048]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauLock
<LI><a href="#[71ed534]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_getPPP
<LI><a href="#[71ed684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_setPPP
<LI><a href="#[54577c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptLock
<LI><a href="#[537f184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdLock
<LI><a href="#[53c2894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdSetSourceVideoSize
<LI><a href="#[53c2af8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdSetWindow
<LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
<LI><a href="#[537ef34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vgfxLock
<LI><a href="#[537ec00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeLock
<LI><a href="#[558f630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableAudioEncoder
</UL><P><STRONG><a name="[75b4fbc]"></a>tt_rmutex_try_lock_in_dsr</STRONG> (ARM, 40 bytes, Stack size 8 bytes, tt_semaphore.o(i.tt_rmutex_try_lock_in_dsr))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c388]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_trylock
</UL><BR>[Called By]<UL><LI><a href="#[755fab0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauTryLockInDsr
<LI><a href="#[5457ad4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptTryLockInDsr
<LI><a href="#[5456be4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeTryLockInDsr
</UL><P><STRONG><a name="[4def318]"></a>tt_rmutex_unlock</STRONG> (ARM, 64 bytes, Stack size 8 bytes, tt_semaphore.o(i.tt_rmutex_unlock))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
<LI><a href="#[75ef838]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_close_fd
<LI><a href="#[4e4b2cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetIP
<LI><a href="#[4e4b92c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetMediaFormat
<LI><a href="#[4e4aaf0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetPPP
<LI><a href="#[4e4abd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetUPnP
<LI><a href="#[4e4acc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetVNet
<LI><a href="#[4e4b754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetWlan
<LI><a href="#[4e4b340]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetIP
<LI><a href="#[4e4aa7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetPPP
<LI><a href="#[4e4ab64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetUPnP
<LI><a href="#[4e4ac4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetVNet
<LI><a href="#[5380228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vdRefreshLcm
<LI><a href="#[4eaba44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlAuthUser
<LI><a href="#[4eab9d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlDelUser
<LI><a href="#[4eaac30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlEnableMotionDetect
<LI><a href="#[4eab16c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetFraemrate
<LI><a href="#[4eab25c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetFramerateCapalibity
<LI><a href="#[4eaabc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetIP
<LI><a href="#[4dee54c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetMac
<LI><a href="#[4eaada4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetMediaFoamat
<LI><a href="#[4eabd00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetMyself
<LI><a href="#[4eab2dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetQuality
<LI><a href="#[4eab3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetQualityCapability
<LI><a href="#[4eab444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetResolution
<LI><a href="#[4eab880]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetUser
<LI><a href="#[4eab6a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetUserCheck
<LI><a href="#[4eaa904]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlGetWlan
<LI><a href="#[4eaacac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlIsMotionDetectEnabled
<LI><a href="#[4eab0f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetBrightness
<LI><a href="#[4eaa4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetDefaultMac
<LI><a href="#[4eab1e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetFramerate
<LI><a href="#[4eaab50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetIP
<LI><a href="#[4dee5bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetMac
<LI><a href="#[4eaae1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetMediaFormat
<LI><a href="#[4eaaf0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetMicVolume
<LI><a href="#[4eab350]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetQuality
<LI><a href="#[4eab530]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetResolution
<LI><a href="#[4eab000]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetSpeakerVolume
<LI><a href="#[4eabc90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetUser
<LI><a href="#[4eab808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetUserCheck
<LI><a href="#[4eaaae0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ictlSetWlan
<LI><a href="#[558f900]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_EventInterrupt
<LI><a href="#[558f9cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_EventRead
<LI><a href="#[4f292a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledClearError
<LI><a href="#[4e49db0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledClearFactoryDefault
<LI><a href="#[4a54f80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledError
<LI><a href="#[4a5600c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledGetResult
<LI><a href="#[4e4dc6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledSetFactoryDefault
<LI><a href="#[72cf544]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledSetLowBattery
<LI><a href="#[727b338]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledSetNetwork
<LI><a href="#[727eb44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState
<LI><a href="#[727b3ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState_Error
<LI><a href="#[727d158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledUpdateStatus
<LI><a href="#[727b258]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledWakeup
<LI><a href="#[4eaa53c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuSendCommand
<LI><a href="#[4f2955c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuSendCommand_NoResponse
<LI><a href="#[4f295dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuUnlock
<LI><a href="#[4f29394]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuWakeup
<LI><a href="#[4f2ad58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_ReadMCU
<LI><a href="#[75f0b48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_putc
<LI><a href="#[4defcd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyFlash
<LI><a href="#[4e4c9d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyRead
<LI><a href="#[71ece0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyWrite
<LI><a href="#[75600b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauUnlock
<LI><a href="#[71ed534]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_getPPP
<LI><a href="#[71ed684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_setPPP
<LI><a href="#[5457b4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptUnlock
<LI><a href="#[53c2894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdSetSourceVideoSize
<LI><a href="#[53c2af8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdSetWindow
<LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
<LI><a href="#[537f264]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdUnlock
<LI><a href="#[537edd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vgfxUnlock
<LI><a href="#[537ea2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeUnlock
<LI><a href="#[558f630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableAudioEncoder
</UL><P><STRONG><a name="[4db4ba8]"></a>tt_ticks_to_msec</STRONG> (ARM, 96 bytes, Stack size 16 bytes, tt_time.o(i.tt_ticks_to_msec))
<BR><BR>[Calls]<UL><LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[5459b04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_WaitEncode
<LI><a href="#[4db5ef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_linkrefresh
</UL><P><STRONG><a name="[8cc5754]"></a>tx_dtx_handler</STRONG> (ARM, 144 bytes, Stack size 4 bytes, dtx_enc.o(i.tx_dtx_handler))
<BR>[Called By]<UL><LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
</UL><P><STRONG><a name="[4a55388]"></a>uart_init_setting_block_mode</STRONG> (ARM, 96 bytes, Stack size 16 bytes, uart_wrapper.o(i.uart_init_setting_block_mode))
<BR><BR>[Calls]<UL><LI><a href="#[4bba6e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_lookup
<LI><a href="#[4bba670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_set_config
</UL><BR>[Called By]<UL><LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[4bba1f8]"></a>uart_is_sys_msg_suppressed</STRONG> (ARM, 12 bytes, Stack size 0 bytes, uart_wrapper.o(i.uart_is_sys_msg_suppressed))
<BR>[Called By]<UL><LI><a href="#[4ba2f10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_write_char
<LI><a href="#[85848f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tty_write
<LI><a href="#[4a54a54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsUartTestHandler
</UL><P><STRONG><a name="[4bba278]"></a>uart_suppress_sys_msg</STRONG> (ARM, 12 bytes, Stack size 0 bytes, uart_wrapper.o(i.uart_suppress_sys_msg))
<BR>[Called By]<UL><LI><a href="#[4a54a54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsUartTestHandler
</UL><P><STRONG><a name="[81dd18c]"></a>ulaw2linear</STRONG> (ARM, 44 bytes, Stack size 0 bytes, g711.o(i.ulaw2linear))
<BR>[Address Reference Count : 1]<UL><LI> aulaw_interface.o(i.DecodeLAW)
</UL><P><STRONG><a name="[7843bfc]"></a>unbase64</STRONG> (ARM, 240 bytes, Stack size 40 bytes, tcp.o(i.unbase64))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[7843c6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_basic_response
<LI><a href="#[81192f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_read
</UL><P><STRONG><a name="[821cf08]"></a>unescape_uri</STRONG> (ARM, 160 bytes, Stack size 4 bytes, util.o(i.unescape_uri))
<BR>[Called By]<UL><LI><a href="#[5537260]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseString
<LI><a href="#[77ac0d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;translate_uri
</UL><P><STRONG><a name="[88cbb28]"></a>unicode_wild_card_comapre</STRONG> (ARM, 188 bytes, Stack size 4 bytes, WBFAT_LIB.o(i.unicode_wild_card_comapre))
<BR>[Called By]<UL><LI><a href="#[9b5e1e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsUnicodeWildCardCompare
</UL><P><STRONG><a name="[8511cd0]"></a>static Cyg_Scheduler::unlock()</STRONG> (ARM, 28 bytes, Stack size 0 bytes, flag.o(i.unlock__13Cyg_SchedulerSFv), UNUSED)
<P><STRONG><a name="[852fb0c]"></a>static Cyg_Scheduler::unlock()</STRONG> (ARM, 28 bytes, Stack size 0 bytes, flag.o(i.unlock__13Cyg_SchedulerSFv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><P><STRONG><a name="[74baabc]"></a>static Cyg_Scheduler::unlock()</STRONG> (ARM, 28 bytes, Stack size 0 bytes, flag.o(i.unlock__13Cyg_SchedulerSFv), UNUSED)
<P><STRONG><a name="[5025574]"></a>static Cyg_Scheduler::unlock()</STRONG> (ARM, 28 bytes, Stack size 0 bytes, flag.o(i.unlock__13Cyg_SchedulerSFv), UNUSED)
<P><STRONG><a name="[74d4898]"></a>static Cyg_Scheduler::unlock()</STRONG> (ARM, 28 bytes, Stack size 0 bytes, flag.o(i.unlock__13Cyg_SchedulerSFv))
<BR>[Called By]<UL><LI><a href="#[4c2cb88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::~Cyg_Flag()
<LI><a href="#[4c2c9a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::maskbits(unsigned int)
<LI><a href="#[4c2ca94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::setbits(unsigned int)
<LI><a href="#[4c2c6cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::poll(unsigned int, unsigned char)
<LI><a href="#[4c2c8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::wait(unsigned int, unsigned char)
<LI><a href="#[4c2c7bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Flag::wait(unsigned int, unsigned char, unsigned long long)
<LI><a href="#[4c2dc68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::~Cyg_Mbox()
<LI><a href="#[4c2db7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::get()
<LI><a href="#[4c2da8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::get(unsigned long long)
<LI><a href="#[4c2d9a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::tryget()
<LI><a href="#[4c2d7c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::put(void*)
<LI><a href="#[4c2d6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::put(void*, unsigned long long)
<LI><a href="#[4c2d5e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::tryput(void*)
<LI><a href="#[4c2d8ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::peek_item()
<LI><a href="#[74eb464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
<LI><a href="#[50254e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_ThreadTimer::alarm(Cyg_Alarm*, unsigned int)
<LI><a href="#[4c30fd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::Cyg_Thread(unsigned int, void (*)(unsigned int), unsigned int, char*, unsigned int, unsigned int)
<LI><a href="#[4c30d78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::~Cyg_Thread()
<LI><a href="#[74eb4e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::sleep()
<LI><a href="#[5025464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::counted_sleep()
<LI><a href="#[50253e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::counted_sleep(unsigned long long)
<LI><a href="#[502535c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::counted_wake()
<LI><a href="#[50252d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::cancel_counted_wake()
<LI><a href="#[4c30cfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::suspend()
<LI><a href="#[4c30bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::resume()
<LI><a href="#[5025250]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::force_resume()
<LI><a href="#[4c30a94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::release()
<LI><a href="#[4c30df4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::kill()
<LI><a href="#[4c30714]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::set_priority(int)
<LI><a href="#[4c30594]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::delay(unsigned long long)
<LI><a href="#[4c30298]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::new_data_index()
<LI><a href="#[4c30190]">&lt&lt</a>&nbsp;&nbsp;&nbsp;static Cyg_Thread::free_data_index(int)
<LI><a href="#[5cef4e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::~Cyg_Mempool_Fixed()
<LI><a href="#[5cef464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::alloc()
<LI><a href="#[5cef360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::alloc(unsigned long long)
<LI><a href="#[5cef2d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::try_alloc()
<LI><a href="#[5cef254]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::free(unsigned char*)
<LI><a href="#[8511bac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::resize_alloc(unsigned char*, int, int*)
<LI><a href="#[5cef13c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Fixed::get_status(unsigned short, Cyg_Mempool_Status&)
<LI><a href="#[5cefa24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::~Cyg_Mempool_Variable()
<LI><a href="#[5cef9a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::alloc(int)
<LI><a href="#[5cef898]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::alloc(int, unsigned long long)
<LI><a href="#[5cef810]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::try_alloc(int)
<LI><a href="#[852f9e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::resize_alloc(unsigned char*, int, int*)
<LI><a href="#[5cef788]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::free(unsigned char*, int)
<LI><a href="#[5cef66c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_Variable::get_status(unsigned short, Cyg_Mempool_Status&)
</UL><P><STRONG><a name="[7ff7e40]"></a>unref_frame</STRONG> (ARM, 176 bytes, Stack size 16 bytes, frame.o(i.unref_frame))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
</UL><BR>[Called By]<UL><LI><a href="#[7f5f6e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_ring_input
<LI><a href="#[8163cf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;convert_uyvy_to_rgb24
<LI><a href="#[780fb4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;deliver_frame_to_stream
<LI><a href="#[895355c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mpeg4_loop
<LI><a href="#[808e1f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;next_live_frame
</UL><P><STRONG><a name="[9b26334]"></a>update_block_data</STRONG> (ARM, 876 bytes, Stack size 40 bytes, sm_l2p.o(i.update_block_data))
<BR><BR>[Calls]<UL><LI><a href="#[7648eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_L2PTable_Init
<LI><a href="#[9b26580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_free_block
<LI><a href="#[760e3fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_GetBlockAddr
<LI><a href="#[9b266e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSMGetMarkData
<LI><a href="#[760de08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSML2PWriteProtect
<LI><a href="#[760e0cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Write_512
<LI><a href="#[760e474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_BlockErase
<LI><a href="#[9b267cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SM_AddFreeBlock
<LI><a href="#[9b263ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;check_page_mark
<LI><a href="#[760e1b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read_512
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[760dd90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_WritePage0
</UL><BR>[Called By]<UL><LI><a href="#[76491f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Write
</UL><P><STRONG><a name="[9b262b8]"></a>update_block_data_2K</STRONG> (ARM, 1696 bytes, Stack size 72 bytes, sm_l2p.o(i.update_block_data_2K))
<BR><BR>[Calls]<UL><LI><a href="#[7648eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_L2PTable_Init
<LI><a href="#[9b26580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_free_block
<LI><a href="#[760e3fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_GetBlockAddr
<LI><a href="#[760df70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read_2K
<LI><a href="#[760de08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSML2PWriteProtect
<LI><a href="#[760defc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Write_2K
<LI><a href="#[760e474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_BlockErase
<LI><a href="#[9b267cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SM_AddFreeBlock
<LI><a href="#[9b263ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;check_page_mark
<LI><a href="#[760dd18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Write_2K_CB
<LI><a href="#[760dd90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_WritePage0
<LI><a href="#[9b26420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;update_page_data
</UL><BR>[Called By]<UL><LI><a href="#[76491f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSM_Write
</UL><P><STRONG><a name="[8cc51b0]"></a>update_gp_clipping</STRONG> (ARM, 40 bytes, Stack size 16 bytes, ton_stab.o(i.update_gp_clipping))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
</UL><P><STRONG><a name="[9b26420]"></a>update_page_data</STRONG> (ARM, 268 bytes, Stack size 32 bytes, sm_l2p.o(i.update_page_data))
<BR><BR>[Calls]<UL><LI><a href="#[760defc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Write_2K
<LI><a href="#[4ced1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memset
<LI><a href="#[760df70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read_2K
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[9b262b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_block_data_2K
</UL><P><STRONG><a name="[4f749e0]"></a>update_rovio_pose</STRONG> (ARM, 452 bytes, Stack size 48 bytes, er_ns_nav.o(i.update_rovio_pose))
<BR><BR>[Calls]<UL><LI><a href="#[4f75930]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dprint_to_socket
<LI><a href="#[4f74974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dflt
<LI><a href="#[4f74900]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__softfp_atan2
<LI><a href="#[4f74894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[4f74828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[4f747b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__softfp_cos
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4f746d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__softfp_sin
<LI><a href="#[4f74668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[4e4cde8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[4f75728]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_get_cur_room
</UL><BR>[Called By]<UL><LI><a href="#[4f73540]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
</UL><P><STRONG><a name="[4dee3f4]"></a>upnp_get_extip</STRONG> (ARM, 64 bytes, Stack size 8 bytes, upnp.o(i.upnp_get_extip))
<BR><BR>[Calls]<UL><LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Called By]<UL><LI><a href="#[4e4abd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetUPnP
</UL><P><STRONG><a name="[4dee468]"></a>upnp_get_port</STRONG> (ARM, 112 bytes, Stack size 4 bytes, upnp.o(i.upnp_get_port))
<BR>[Called By]<UL><LI><a href="#[4e4abd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetUPnP
</UL><P><STRONG><a name="[4e4cd00]"></a>upnp_refresh</STRONG> (ARM, 60 bytes, Stack size 8 bytes, upnp.o(i.upnp_refresh))
<BR><BR>[Calls]<UL><LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
</UL><BR>[Called By]<UL><LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[58d2ac0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_set_ip_addr
</UL><P><STRONG><a name="[7a379b0]"></a>upnp_wait_start</STRONG> (ARM, 56 bytes, Stack size 16 bytes, upnp.o(i.upnp_wait_start))
<BR><BR>[Calls]<UL><LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
</UL><BR>[Called By]<UL><LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[71ed214]"></a>usbCustomRequest</STRONG> (ARM, 324 bytes, Stack size 264 bytes, vp_com.o(i.usbCustomRequest))
<BR><BR>[Calls]<UL><LI><a href="#[71ed618]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBRead
<LI><a href="#[71ed5a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBResetForVCom
<LI><a href="#[71ee770]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrString
<LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[71ed2f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;parseCommand
<LI><a href="#[71ed6f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;statusReply
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
</UL><P><STRONG><a name="[72ed200]"></a>usbHandlerDSR</STRONG> (ARM, 216 bytes, Stack size 24 bytes, vp_usb.o(i.usbHandlerDSR))
<BR><BR>[Calls]<UL><LI><a href="#[72f2778]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SDRAM_USB_Transfer
<LI><a href="#[72f2704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;copy_mem_to_usb
<LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_usb.o(i.USB_Int_Init)
</UL><P><STRONG><a name="[71eccb8]"></a>usbIPRequest</STRONG> (ARM, 264 bytes, Stack size 96 bytes, vp_com.o(i.usbIPRequest))
<BR><BR>[Calls]<UL><LI><a href="#[71ed618]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBRead
<LI><a href="#[71ed5a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBResetForVCom
<LI><a href="#[71edf68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdripSettingStru
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[4eaab50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetIP
<LI><a href="#[4def2a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wsp_set_network_ip
<LI><a href="#[71ecc40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wsp_wait_network_ip
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[71ed6f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;statusReply
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
</UL><P><STRONG><a name="[71ed1a0]"></a>usbWlanRequest</STRONG> (ARM, 220 bytes, Stack size 88 bytes, vp_com.o(i.usbWlanRequest))
<BR><BR>[Calls]<UL><LI><a href="#[71ed618]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBRead
<LI><a href="#[71ed5a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBResetForVCom
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[71edc88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrwlanSettingStru
<LI><a href="#[4eaaae0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ictlSetWlan
<LI><a href="#[4dee9b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetWlan
<LI><a href="#[71ed6f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;statusReply
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
</UL><P><STRONG><a name="[77c8664]"></a>usiActive</STRONG> (ARM, 80 bytes, Stack size 16 bytes, spiflash.o(i.usiActive))
<BR><BR>[Calls]<UL><LI><a href="#[77c85f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sysGetTicks
</UL><BR>[Called By]<UL><LI><a href="#[77c8510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiCheckBusy
<LI><a href="#[7338e24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiEraseSector
<LI><a href="#[7338f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiRead
<LI><a href="#[77c82d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiReadID
<LI><a href="#[7338db4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiWrite
<LI><a href="#[77c842c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiWriteEnable
</UL><P><STRONG><a name="[77c8510]"></a>usiCheckBusy</STRONG> (ARM, 100 bytes, Stack size 16 bytes, spiflash.o(i.usiCheckBusy))
<BR><BR>[Calls]<UL><LI><a href="#[77c8584]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiTxLen
<LI><a href="#[77c8664]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiActive
</UL><BR>[Called By]<UL><LI><a href="#[7338e24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiEraseSector
<LI><a href="#[7338db4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiWrite
</UL><P><STRONG><a name="[7338e24]"></a>usiEraseSector</STRONG> (ARM, 124 bytes, Stack size 24 bytes, spiflash.o(i.usiEraseSector))
<BR><BR>[Calls]<UL><LI><a href="#[77c842c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiWriteEnable
<LI><a href="#[77c8584]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiTxLen
<LI><a href="#[77c8664]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiActive
<LI><a href="#[77c8510]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiCheckBusy
</UL><BR>[Called By]<UL><LI><a href="#[4defcd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyFlash
</UL><P><STRONG><a name="[7338ff0]"></a>usiInitDevice</STRONG> (ARM, 128 bytes, Stack size 8 bytes, spiflash.o(i.usiInitDevice))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[77c82d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiReadID
</UL><BR>[Called By]<UL><LI><a href="#[4a552a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyInitDevice
</UL><P><STRONG><a name="[4defcd8]"></a>usiMyFlash</STRONG> (ARM, 116 bytes, Stack size 24 bytes, myspi.o(i.usiMyFlash))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7338e24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiEraseSector
<LI><a href="#[7338db4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiWrite
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[4defdb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99802Reboot
<LI><a href="#[4eaa630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__WriteFlashMemory
<LI><a href="#[71ece7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;firmwareRequst
<LI><a href="#[5ad0e68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_usi_write_wrapper
<LI><a href="#[71ece0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyWrite
</UL><P><STRONG><a name="[7338f78]"></a>usiMyGetTotalSize</STRONG> (ARM, 32 bytes, Stack size 8 bytes, myspi.o(i.usiMyGetTotalSize))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4e4a074]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetFlashCapability
<LI><a href="#[4e4ddd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReadFlashMemory
<LI><a href="#[4eaa630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__WriteFlashMemory
</UL><P><STRONG><a name="[4a552a8]"></a>usiMyInitDevice</STRONG> (ARM, 76 bytes, Stack size 16 bytes, myspi.o(i.usiMyInitDevice))
<BR><BR>[Calls]<UL><LI><a href="#[4e4a0ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_init
<LI><a href="#[7338ff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiInitDevice
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[4defd48]"></a>usiMyLock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, myspi.o(i.usiMyLock))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
</UL><BR>[Called By]<UL><LI><a href="#[4defdb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99802Reboot
</UL><P><STRONG><a name="[4e4c9d8]"></a>usiMyRead</STRONG> (ARM, 256 bytes, Stack size 296 bytes, myspi.o(i.usiMyRead))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[7338f0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiRead
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[57e87cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillFirmwareData
<LI><a href="#[4e4a074]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetFlashCapability
<LI><a href="#[4e4af7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_GetFirmware
<LI><a href="#[4e4ddd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ReadFlashMemory
<LI><a href="#[4a54e98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Read_FlashFile
<LI><a href="#[5ad0fdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_usi_read_wrapper
</UL><P><STRONG><a name="[71ece0c]"></a>usiMyWrite</STRONG> (ARM, 240 bytes, Stack size 48 bytes, myspi.o(i.usiMyWrite))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4defcd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyFlash
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7338f0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiRead
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_Post_FMUpload
<LI><a href="#[57e7c80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MPTestWriteFlash
<LI><a href="#[57e7c0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ProcessUpdate
<LI><a href="#[4eaa630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__WriteFlashMemory
<LI><a href="#[71ece7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;firmwareRequst
<LI><a href="#[5ad0e68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_usi_write_wrapper
</UL><P><STRONG><a name="[7338f0c]"></a>usiRead</STRONG> (ARM, 148 bytes, Stack size 24 bytes, spiflash.o(i.usiRead))
<BR><BR>[Calls]<UL><LI><a href="#[77c8584]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiTxLen
<LI><a href="#[77c8664]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiActive
</UL><BR>[Called By]<UL><LI><a href="#[4e4c9d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyRead
<LI><a href="#[71ece0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyWrite
</UL><P><STRONG><a name="[77c82d8]"></a>usiReadID</STRONG> (ARM, 120 bytes, Stack size 8 bytes, spiflash.o(i.usiReadID))
<BR><BR>[Calls]<UL><LI><a href="#[77c8584]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiTxLen
<LI><a href="#[77c8664]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiActive
</UL><BR>[Called By]<UL><LI><a href="#[7338ff0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiInitDevice
</UL><P><STRONG><a name="[77c8584]"></a>usiTxLen</STRONG> (ARM, 88 bytes, Stack size 0 bytes, spiflash.o(i.usiTxLen))
<BR>[Called By]<UL><LI><a href="#[77c8510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiCheckBusy
<LI><a href="#[7338e24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiEraseSector
<LI><a href="#[7338f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiRead
<LI><a href="#[77c82d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiReadID
<LI><a href="#[7338db4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiWrite
<LI><a href="#[77c842c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiWriteEnable
</UL><P><STRONG><a name="[7338db4]"></a>usiWrite</STRONG> (ARM, 192 bytes, Stack size 40 bytes, spiflash.o(i.usiWrite))
<BR><BR>[Calls]<UL><LI><a href="#[77c842c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiWriteEnable
<LI><a href="#[77c8584]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiTxLen
<LI><a href="#[77c8664]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiActive
<LI><a href="#[77c8510]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiCheckBusy
</UL><BR>[Called By]<UL><LI><a href="#[4defcd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiMyFlash
</UL><P><STRONG><a name="[77c842c]"></a>usiWriteEnable</STRONG> (ARM, 64 bytes, Stack size 8 bytes, spiflash.o(i.usiWriteEnable))
<BR><BR>[Calls]<UL><LI><a href="#[77c8584]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiTxLen
<LI><a href="#[77c8664]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiActive
</UL><BR>[Called By]<UL><LI><a href="#[7338e24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiEraseSector
<LI><a href="#[7338db4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usiWrite
</UL><P><STRONG><a name="[816281c]"></a>uyvy2rgb</STRONG> (ARM, 316 bytes, Stack size 48 bytes, stream.o(i.uyvy2rgb))
<BR>[Called By]<UL><LI><a href="#[8163cf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;convert_uyvy_to_rgb24
</UL><P><STRONG><a name="[780fe0c]"></a>v4l_init</STRONG> (ARM, 36 bytes, Stack size 8 bytes, input-v4l.o(i.v4l_init))
<BR><BR>[Calls]<UL><LI><a href="#[780fd90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;register_config_context
</UL><BR>[Called By]<UL><LI><a href="#[5923f30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RtspServerStart
</UL><P><STRONG><a name="[7810048]"></a>v4l_loop</STRONG> (ARM, 368 bytes, Stack size 48 bytes, input-v4l.o(i.v4l_loop))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[780ff60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_next_frame
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
<LI><a href="#[780feec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;deliver_frame
</UL><BR>[Address Reference Count : 1]<UL><LI> input-v4l.o(i.end_block)
</UL><P><STRONG><a name="[8cc57c8]"></a>vad1</STRONG> (ARM, 204 bytes, Stack size 40 bytes, vad1.o(i.vad1))
<BR><BR>[Calls]<UL><LI><a href="#[8e4ca24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;filter_bank
<LI><a href="#[8e4c9b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vad_decision
</UL><BR>[Called By]<UL><LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
</UL><P><STRONG><a name="[8cc5c38]"></a>vad1_exit</STRONG> (ARM, 36 bytes, Stack size 8 bytes, vad1.o(i.vad1_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[88869ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_exit
</UL><P><STRONG><a name="[8cc5918]"></a>vad1_init</STRONG> (ARM, 64 bytes, Stack size 16 bytes, vad1.o(i.vad1_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[8cc5fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vad1_reset
</UL><BR>[Called By]<UL><LI><a href="#[88868c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_init
</UL><P><STRONG><a name="[8cc5fc8]"></a>vad1_reset</STRONG> (ARM, 244 bytes, Stack size 4 bytes, vad1.o(i.vad1_reset))
<BR>[Called By]<UL><LI><a href="#[8886a98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr_reset
<LI><a href="#[8cc5918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vad1_init
</UL><P><STRONG><a name="[8e22108]"></a>vad_complex_detection_update</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vad1.o(i.vad_complex_detection_update))
<BR>[Called By]<UL><LI><a href="#[8e0e888]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pitch_ol
<LI><a href="#[8e0e814]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pitch_ol_wgh
</UL><P><STRONG><a name="[8cc53e8]"></a>vad_pitch_detection</STRONG> (ARM, 124 bytes, Stack size 4 bytes, vad1.o(i.vad_pitch_detection))
<BR>[Called By]<UL><LI><a href="#[88866f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cod_amr
</UL><P><STRONG><a name="[8e221f8]"></a>vad_tone_detection</STRONG> (ARM, 56 bytes, Stack size 8 bytes, vad1.o(i.vad_tone_detection))
<BR><BR>[Calls]<UL><LI><a href="#[8d54e30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_msu
</UL><BR>[Called By]<UL><LI><a href="#[8edb494]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Lag_max
<LI><a href="#[8e0e814]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pitch_ol_wgh
</UL><P><STRONG><a name="[8e22270]"></a>vad_tone_detection_update</STRONG> (ARM, 32 bytes, Stack size 0 bytes, vad1.o(i.vad_tone_detection_update))
<BR>[Called By]<UL><LI><a href="#[8e0e888]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pitch_ol
<LI><a href="#[8e0e814]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pitch_ol_wgh
</UL><P><STRONG><a name="[755fc10]"></a>vauDecode</STRONG> (ARM, 216 bytes, Stack size 40 bytes, vp_audio.o(i.vauDecode))
<BR><BR>[Calls]<UL><LI><a href="#[7560048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauLock
<LI><a href="#[75ee858]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_cond_wait
<LI><a href="#[7566b1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;auSplitter_DelData
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[75600b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauUnlock
<LI><a href="#[755fb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msg_try_send
</UL><BR>[Called By]<UL><LI><a href="#[558f88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_Write
</UL><P><STRONG><a name="[755ffcc]"></a>vauGetEncBuffer_Local</STRONG> (ARM, 56 bytes, Stack size 8 bytes, vp_audio.o(i.vauGetEncBuffer_Local))
<BR><BR>[Calls]<UL><LI><a href="#[7560048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauLock
<LI><a href="#[75600b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauUnlock
</UL><BR>[Called By]<UL><LI><a href="#[558f9cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_EventRead
<LI><a href="#[558f630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableAudioEncoder
</UL><P><STRONG><a name="[7560124]"></a>vauGetEncBuffer_Remote</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_audio.o(i.vauGetEncBuffer_Remote))
<BR>[Called By]<UL><LI><a href="#[558f88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_Write
</UL><P><STRONG><a name="[755ecd0]"></a>vauGetQualityLevel</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_audio.o(i.vauGetQualityLevel))
<BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[4d83fd4]"></a>vauInit</STRONG> (ARM, 772 bytes, Stack size 48 bytes, vp_audio.o(i.vauInit))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[755f3b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__memInit
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[7365c5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioEnable
<LI><a href="#[755f33c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;amrInitEncode
<LI><a href="#[755f2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;amrInitDecode
<LI><a href="#[755f254]">&gt&gt</a>&nbsp;&nbsp;&nbsp;imaadpcmInit
<LI><a href="#[755f1d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;imaadpcmSamplePerBlock
<LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[755f164]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufEncAudioNew
<LI><a href="#[755f070]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_pc_init
<LI><a href="#[4e4a0ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_init
<LI><a href="#[75eec78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_cond_init
<LI><a href="#[755eff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msg_queue_init
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
<LI><a href="#[755ef88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufAudioNew
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[755f954]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audio_WM8978_test
</UL><BR>[Called By]<UL><LI><a href="#[4a54f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInit
</UL><P><STRONG><a name="[7560048]"></a>vauLock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_audio.o(i.vauLock))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
</UL><BR>[Called By]<UL><LI><a href="#[755ff5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauDecode
<LI><a href="#[7560bc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauRecord_AttachBuffer
<LI><a href="#[558f9cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_EventRead
<LI><a href="#[755fc10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauDecode
<LI><a href="#[755ffcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauGetEncBuffer_Local
<LI><a href="#[755ec58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauSetPlayVolume
<LI><a href="#[755ebe0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauSetRecordVolume
<LI><a href="#[755fa3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartPlay
<LI><a href="#[755edc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartRecord
<LI><a href="#[755ef18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStopPlay
<LI><a href="#[755eea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStopRecord
<LI><a href="#[7566b94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnPlay
<LI><a href="#[75620ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnRecord
<LI><a href="#[755ee34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauUninit
<LI><a href="#[558f630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableAudioEncoder
</UL><P><STRONG><a name="[755fb24]"></a>vauNotificationGet</STRONG> (ARM, 268 bytes, Stack size 40 bytes, vp_audio.o(i.vauNotificationGet))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c388]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_trylock
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[7566420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauPlayCallback
</UL><P><STRONG><a name="[755eaec]"></a>vauSetFormat</STRONG> (ARM, 24 bytes, Stack size 0 bytes, vp_audio.o(i.vauSetFormat))
<BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[755eb60]"></a>vauSetNotificationVolume</STRONG> (ARM, 36 bytes, Stack size 0 bytes, vp_audio.o(i.vauSetNotificationVolume))
<BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[755ec58]"></a>vauSetPlayVolume</STRONG> (ARM, 104 bytes, Stack size 16 bytes, vp_audio.o(i.vauSetPlayVolume))
<BR><BR>[Calls]<UL><LI><a href="#[7560048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauLock
<LI><a href="#[4a55e3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSetPlayVolume
<LI><a href="#[75600b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauUnlock
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[755ed48]"></a>vauSetQualityLevel</STRONG> (ARM, 24 bytes, Stack size 0 bytes, vp_audio.o(i.vauSetQualityLevel))
<BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[755ebe0]"></a>vauSetRecordVolume</STRONG> (ARM, 104 bytes, Stack size 16 bytes, vp_audio.o(i.vauSetRecordVolume))
<BR><BR>[Calls]<UL><LI><a href="#[7560048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauLock
<LI><a href="#[7365490]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSetRecordVolume
<LI><a href="#[75600b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauUnlock
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[755fa3c]"></a>vauStartPlay</STRONG> (ARM, 168 bytes, Stack size 24 bytes, vp_audio.o(i.vauStartPlay))
<BR><BR>[Calls]<UL><LI><a href="#[7560048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauLock
<LI><a href="#[7365a88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioStartPlay
<LI><a href="#[4a55e3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSetPlayVolume
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[4a54f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledError
<LI><a href="#[75600b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauUnlock
<LI><a href="#[4c2d3fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_init
<LI><a href="#[755f9cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msg_send
<LI><a href="#[4c2d1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_wait
<LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
</UL><BR>[Called By]<UL><LI><a href="#[755f954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_WM8978_test
<LI><a href="#[734d3b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702UnlockAndRestorePreviousAudio
</UL><P><STRONG><a name="[755edc0]"></a>vauStartRecord</STRONG> (ARM, 164 bytes, Stack size 24 bytes, vp_audio.o(i.vauStartRecord))
<BR><BR>[Calls]<UL><LI><a href="#[7560048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauLock
<LI><a href="#[73657d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioStartRecord
<LI><a href="#[7365490]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSetRecordVolume
<LI><a href="#[755f858]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSetDacVolume
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[4a54f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledError
<LI><a href="#[75600b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauUnlock
<LI><a href="#[4c2d3fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_init
<LI><a href="#[755f9cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msg_send
<LI><a href="#[4c2d1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_wait
</UL><BR>[Called By]<UL><LI><a href="#[558f630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableAudioEncoder
<LI><a href="#[734d3b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702UnlockAndRestorePreviousAudio
</UL><P><STRONG><a name="[755ef18]"></a>vauStopPlay</STRONG> (ARM, 52 bytes, Stack size 16 bytes, vp_audio.o(i.vauStopPlay))
<BR><BR>[Calls]<UL><LI><a href="#[7560048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauLock
<LI><a href="#[736592c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioStopPlay
<LI><a href="#[75600b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauUnlock
</UL><BR>[Called By]<UL><LI><a href="#[755ee34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauUninit
<LI><a href="#[734d610]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702LockAndDisableAudio
</UL><P><STRONG><a name="[755eea4]"></a>vauStopRecord</STRONG> (ARM, 52 bytes, Stack size 16 bytes, vp_audio.o(i.vauStopRecord))
<BR><BR>[Calls]<UL><LI><a href="#[7560048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauLock
<LI><a href="#[7365670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioStopRecord
<LI><a href="#[75600b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauUnlock
</UL><BR>[Called By]<UL><LI><a href="#[755ee34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauUninit
<LI><a href="#[558f630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableAudioEncoder
<LI><a href="#[734d610]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702LockAndDisableAudio
</UL><P><STRONG><a name="[755fab0]"></a>vauTryLockInDsr</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_audio.o(i.vauTryLockInDsr))
<BR><BR>[Calls]<UL><LI><a href="#[75b4fbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_try_lock_in_dsr
</UL><BR>[Called By]<UL><LI><a href="#[7566420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauPlayCallback
</UL><P><STRONG><a name="[755ee34]"></a>vauUninit</STRONG> (ARM, 24 bytes, Stack size 8 bytes, vp_audio.o(i.vauUninit))
<BR><BR>[Calls]<UL><LI><a href="#[7560048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauLock
<LI><a href="#[755eea4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauStopRecord
<LI><a href="#[755ef18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauStopPlay
<LI><a href="#[75600b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauUnlock
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[75600b4]"></a>vauUnlock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_audio.o(i.vauUnlock))
<BR><BR>[Calls]<UL><LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[755ff5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauDecode
<LI><a href="#[7560bc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauRecord_AttachBuffer
<LI><a href="#[558f9cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_EventRead
<LI><a href="#[755fc10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauDecode
<LI><a href="#[755ffcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauGetEncBuffer_Local
<LI><a href="#[7566420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauPlayCallback
<LI><a href="#[755ec58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauSetPlayVolume
<LI><a href="#[755ebe0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauSetRecordVolume
<LI><a href="#[755fa3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartPlay
<LI><a href="#[755edc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStartRecord
<LI><a href="#[755ef18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStopPlay
<LI><a href="#[755eea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauStopRecord
<LI><a href="#[7566b94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnPlay
<LI><a href="#[75620ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnRecord
<LI><a href="#[755ee34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauUninit
<LI><a href="#[558f630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableAudioEncoder
</UL><P><STRONG><a name="[71ed048]"></a>vcomDump</STRONG> (ARM, 136 bytes, Stack size 24 bytes, vp_com.o(i.vcomDump))
<BR><BR>[Calls]<UL><LI><a href="#[71ed0b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcomDumpSize
<LI><a href="#[71ecfd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBWrite
</UL><BR>[Called By]<UL><LI><a href="#[71ecf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;systemRequest
</UL><P><STRONG><a name="[71ed0b8]"></a>vcomDumpSize</STRONG> (ARM, 28 bytes, Stack size 0 bytes, vp_com.o(i.vcomDumpSize))
<BR>[Called By]<UL><LI><a href="#[71ed048]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcomDump
</UL><P><STRONG><a name="[71ed764]"></a>vcomReset</STRONG> (ARM, 24 bytes, Stack size 0 bytes, vp_com.o(i.vcomReset))
<BR>[Address Reference Count : 1]<UL><LI> vp_com.o(i.VirtualComInit)
</UL><P><STRONG><a name="[71ec990]"></a>vcomThreadEntry</STRONG> (ARM, 12 bytes, Stack size 8 bytes, vp_com.o(i.vcomThreadEntry))
<BR><BR>[Calls]<UL><LI><a href="#[71eca04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;processClient
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_com.o(i.VirtualComInit)
</UL><P><STRONG><a name="[71ed534]"></a>vcom_getPPP</STRONG> (ARM, 252 bytes, Stack size 32 bytes, vp_com.o(i.vcom_getPPP))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[71ee9ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrInt
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[71f3fe8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBWrite_Again
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
</UL><P><STRONG><a name="[71ed684]"></a>vcom_setPPP</STRONG> (ARM, 500 bytes, Stack size 136 bytes, vp_com.o(i.vcom_setPPP))
<BR><BR>[Calls]<UL><LI><a href="#[71ed618]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBRead
<LI><a href="#[71ed5a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBResetForVCom
<LI><a href="#[71ee9ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrInt
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4def554]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpMyStrncpy
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4e4d16c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ppot_disconnect
<LI><a href="#[4e4d088]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ppot_connect
<LI><a href="#[71ed6f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;statusReply
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
</UL><P><STRONG><a name="[4ba2ea0]"></a>vcom_write</STRONG> (ARM, 116 bytes, Stack size 24 bytes, vp_com.o(i.vcom_write))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4ba2f10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_write_char
<LI><a href="#[85848f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tty_write
</UL><P><STRONG><a name="[5457240]"></a>vcptEnableDrawImageTime</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_thread_capture.o(i.vcptEnableDrawImageTime))
<BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[734d594]"></a>vcptEnterPowerSaving</STRONG> (ARM, 44 bytes, Stack size 8 bytes, vp_thread_capture.o(i.vcptEnterPowerSaving))
<BR><BR>[Calls]<UL><LI><a href="#[54577c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptLock
<LI><a href="#[545e618]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptSensorPowerOff
<LI><a href="#[5457b4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptUnlock
</UL><BR>[Called By]<UL><LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[54570d4]"></a>vcptGetFrequency</STRONG> (ARM, 28 bytes, Stack size 8 bytes, vp_thread_capture.o(i.vcptGetFrequency))
<BR><BR>[Calls]<UL><LI><a href="#[54577c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptLock
<LI><a href="#[5457060]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dspGetFrequency
<LI><a href="#[5457b4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptUnlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4b83c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetCamera
</UL><P><STRONG><a name="[4db4e08]"></a>vcptGetWindow</STRONG> (ARM, 76 bytes, Stack size 16 bytes, vp_thread_capture.o(i.vcptGetWindow))
<BR><BR>[Calls]<UL><LI><a href="#[54577c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptLock
<LI><a href="#[5457b4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptUnlock
</UL><BR>[Called By]<UL><LI><a href="#[4db5f78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_change
</UL><P><STRONG><a name="[4d84040]"></a>vcptInitThread</STRONG> (ARM, 568 bytes, Stack size 40 bytes, vp_thread_capture.o(i.vcptInitThread))
<BR><BR>[Calls]<UL><LI><a href="#[5457a5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerInit
<LI><a href="#[755eff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msg_queue_init
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
<LI><a href="#[54579e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufCptPlanarNew
<LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4c2d3fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_init
<LI><a href="#[4e4a0ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_init
</UL><BR>[Called By]<UL><LI><a href="#[4a54f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInit
</UL><P><STRONG><a name="[5456e80]"></a>vcptJpegTimerAck</STRONG> (ARM, 48 bytes, Stack size 16 bytes, vp_thread_capture.o(i.vcptJpegTimerAck))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4c2bd18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_broadcast
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[56dc360]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SaveJpeg
</UL><P><STRONG><a name="[5457a5c]"></a>vcptJpegTimerInit</STRONG> (ARM, 72 bytes, Stack size 16 bytes, vp_thread_capture.o(i.vcptJpegTimerInit))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4c2c128]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_init
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
</UL><BR>[Called By]<UL><LI><a href="#[4d84040]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptInitThread
</UL><P><STRONG><a name="[5457bbc]"></a>vcptJpegTimerIsEnable</STRONG> (ARM, 92 bytes, Stack size 8 bytes, vp_thread_capture.o(i.vcptJpegTimerIsEnable))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
</UL><BR>[Called By]<UL><LI><a href="#[5459a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_StartEncode
</UL><P><STRONG><a name="[5456f70]"></a>vcptJpegTimerNotify</STRONG> (ARM, 44 bytes, Stack size 8 bytes, vp_thread_capture.o(i.vcptJpegTimerNotify))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4b49c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SendMail
<LI><a href="#[56dcec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillCameraData
<LI><a href="#[4e4c544]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_GetCameraData
<LI><a href="#[4e4c5bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendJpeg
<LI><a href="#[5ad0ae4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capture_and_email_picture
</UL><P><STRONG><a name="[5456ef8]"></a>vcptJpegTimerWait</STRONG> (ARM, 68 bytes, Stack size 16 bytes, vp_thread_capture.o(i.vcptJpegTimerWait))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4c2bf24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_wait
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4b49c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SendMail
<LI><a href="#[4e4c544]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_GetCameraData
<LI><a href="#[4e4c5bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_SendJpeg
<LI><a href="#[5ad0ae4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;capture_and_email_picture
</UL><P><STRONG><a name="[734d438]"></a>vcptLeavePowerSaving</STRONG> (ARM, 48 bytes, Stack size 8 bytes, vp_thread_capture.o(i.vcptLeavePowerSaving))
<BR><BR>[Calls]<UL><LI><a href="#[54577c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptLock
<LI><a href="#[545dd84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptSensorPowerOn
<LI><a href="#[5457330]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dspSetVideoSource
<LI><a href="#[545dd10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptSensorInit
<LI><a href="#[5457b4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptUnlock
</UL><BR>[Called By]<UL><LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[54577c4]"></a>vcptLock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_thread_capture.o(i.vcptLock))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
</UL><BR>[Called By]<UL><LI><a href="#[734d594]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptEnterPowerSaving
<LI><a href="#[54570d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptGetFrequency
<LI><a href="#[4db4e08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptGetWindow
<LI><a href="#[734d438]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptLeavePowerSaving
<LI><a href="#[5457498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptSetContrastBright
<LI><a href="#[5457588]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptSetFrequency
<LI><a href="#[54572bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptSetWindow
<LI><a href="#[54573a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStart
<LI><a href="#[5457754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStop
</UL><P><STRONG><a name="[5457498]"></a>vcptSetContrastBright</STRONG> (ARM, 72 bytes, Stack size 16 bytes, vp_thread_capture.o(i.vcptSetContrastBright))
<BR><BR>[Calls]<UL><LI><a href="#[54577c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptLock
<LI><a href="#[5457418]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dspSetBrightnessContrast
<LI><a href="#[5457b4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptUnlock
</UL><BR>[Called By]<UL><LI><a href="#[545a790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_vcptSensorInit
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[5457588]"></a>vcptSetFrequency</STRONG> (ARM, 36 bytes, Stack size 8 bytes, vp_thread_capture.o(i.vcptSetFrequency))
<BR><BR>[Calls]<UL><LI><a href="#[54577c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptLock
<LI><a href="#[5457514]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dspSetFrequency
<LI><a href="#[5457b4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptUnlock
</UL><BR>[Called By]<UL><LI><a href="#[4e4b8b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetCamera
<LI><a href="#[545a790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_vcptSensorInit
</UL><P><STRONG><a name="[54572bc]"></a>vcptSetWindow</STRONG> (ARM, 160 bytes, Stack size 32 bytes, vp_thread_capture.o(i.vcptSetWindow))
<BR><BR>[Calls]<UL><LI><a href="#[54577c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptLock
<LI><a href="#[54578ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__capSetIRQHandler
<LI><a href="#[5457924]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptWaitPrevMsg
<LI><a href="#[537e7dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdSetLocalSourceWindow
<LI><a href="#[545da20]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptSetSourceRotate
<LI><a href="#[5457b4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptUnlock
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[54573a8]"></a>vcptStart</STRONG> (ARM, 316 bytes, Stack size 24 bytes, vp_thread_capture.o(i.vcptStart))
<BR><BR>[Calls]<UL><LI><a href="#[54577c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptLock
<LI><a href="#[54578ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__capSetIRQHandler
<LI><a href="#[5457924]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptWaitPrevMsg
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[545dd84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptSensorPowerOn
<LI><a href="#[5457330]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dspSetVideoSource
<LI><a href="#[545dd10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptSensorInit
<LI><a href="#[4a54f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledError
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[537f1f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdGetSettings
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[5457b4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptUnlock
<LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[545e618]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptSensorPowerOff
</UL><BR>[Called By]<UL><LI><a href="#[558f5b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableJPEGEncoder
<LI><a href="#[558f6ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableMP4Encoder
</UL><P><STRONG><a name="[5457754]"></a>vcptStop</STRONG> (ARM, 140 bytes, Stack size 16 bytes, vp_thread_capture.o(i.vcptStop))
<BR><BR>[Calls]<UL><LI><a href="#[54577c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptLock
<LI><a href="#[54578ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__capSetIRQHandler
<LI><a href="#[5457924]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptWaitPrevMsg
<LI><a href="#[545e690]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vcptEnable
<LI><a href="#[54576e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capInit
<LI><a href="#[5457678]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capClkRatio
<LI><a href="#[545e618]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptSensorPowerOff
<LI><a href="#[5457b4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptUnlock
</UL><BR>[Called By]<UL><LI><a href="#[5457600]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptUninitThread
<LI><a href="#[558f5b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableJPEGEncoder
<LI><a href="#[558f6ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableMP4Encoder
</UL><P><STRONG><a name="[5457ad4]"></a>vcptTryLockInDsr</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_thread_capture.o(i.vcptTryLockInDsr))
<BR><BR>[Calls]<UL><LI><a href="#[75b4fbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_try_lock_in_dsr
</UL><BR>[Called By]<UL><LI><a href="#[545dc9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptIrqHandler
</UL><P><STRONG><a name="[5457600]"></a>vcptUninitThread</STRONG> (ARM, 4 bytes, Stack size 0 bytes, vp_thread_capture.o(i.vcptUninitThread))
<BR><BR>[Calls]<UL><LI><a href="#[5457754]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptStop
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[5457b4c]"></a>vcptUnlock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_thread_capture.o(i.vcptUnlock))
<BR><BR>[Calls]<UL><LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[734d594]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptEnterPowerSaving
<LI><a href="#[54570d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptGetFrequency
<LI><a href="#[4db4e08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptGetWindow
<LI><a href="#[545dc9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptIrqHandler
<LI><a href="#[734d438]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptLeavePowerSaving
<LI><a href="#[5457498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptSetContrastBright
<LI><a href="#[5457588]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptSetFrequency
<LI><a href="#[54572bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptSetWindow
<LI><a href="#[54573a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStart
<LI><a href="#[5457754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStop
<LI><a href="#[5459a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_StartEncode
</UL><P><STRONG><a name="[5457924]"></a>vcptWaitPrevMsg</STRONG> (ARM, 56 bytes, Stack size 16 bytes, vp_thread_capture.o(i.vcptWaitPrevMsg))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d3fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_init
<LI><a href="#[755f9cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msg_send
<LI><a href="#[4c2d1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_wait
<LI><a href="#[4c2d2f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_destroy
</UL><BR>[Called By]<UL><LI><a href="#[54572bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptSetWindow
<LI><a href="#[54573a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStart
<LI><a href="#[5457754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStop
<LI><a href="#[558f6ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableMP4Encoder
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[537e14c]"></a>vdAddMotionBuffer</STRONG> (ARM, 32 bytes, Stack size 8 bytes, vp_video.o(i.vdAddMotionBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[537e240]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdDelMotionBuffer
</UL><BR>[Called By]<UL><LI><a href="#[5459a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_StartEncode
</UL><P><STRONG><a name="[537e240]"></a>vdDelMotionBuffer</STRONG> (ARM, 116 bytes, Stack size 16 bytes, vp_video.o(i.vdDelMotionBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[5459224]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnDetectMotion
<LI><a href="#[537e14c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdAddMotionBuffer
</UL><P><STRONG><a name="[537e418]"></a>vdEnableLocalJPEG</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_video.o(i.vdEnableLocalJPEG))
<BR>[Called By]<UL><LI><a href="#[558f5b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableJPEGEncoder
</UL><P><STRONG><a name="[537e504]"></a>vdEnableLocalMP4</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_video.o(i.vdEnableLocalMP4))
<BR>[Called By]<UL><LI><a href="#[558f6ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableMP4Encoder
</UL><P><STRONG><a name="[537e5f8]"></a>vdEnableLocalWindow</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_video.o(i.vdEnableLocalWindow))
<BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[537e32c]"></a>vdEnableMotionDetect</STRONG> (ARM, 36 bytes, Stack size 0 bytes, vp_video.o(i.vdEnableMotionDetect))
<BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[537e57c]"></a>vdEnableRemoteWindow</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_video.o(i.vdEnableRemoteWindow))
<BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[537e2b8]"></a>vdGetMotionsNum</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_video.o(i.vdGetMotionsNum))
<BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[537f1f0]"></a>vdGetSettings</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_video.o(i.vdGetSettings))
<BR>[Called By]<UL><LI><a href="#[558f9cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_EventRead
<LI><a href="#[54573a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStart
<LI><a href="#[5459a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_StartEncode
<LI><a href="#[545b2b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcpt_DownscaledForDetectMotion_InDsr
<LI><a href="#[5505020]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegEncInit
<LI><a href="#[54acca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encSetFormat
<LI><a href="#[54acd18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encSetQuality
<LI><a href="#[558f6ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableMP4Encoder
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[4d842e8]"></a>vdInit</STRONG> (ARM, 184 bytes, Stack size 32 bytes, vp_video.o(i.vdInit))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4e4a0ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_init
<LI><a href="#[537f018]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufVideoNew
<LI><a href="#[755eff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msg_queue_init
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
</UL><BR>[Called By]<UL><LI><a href="#[4a54f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInit
</UL><P><STRONG><a name="[537f184]"></a>vdLock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_video.o(i.vdLock))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
</UL><BR>[Called By]<UL><LI><a href="#[558f9cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_EventRead
<LI><a href="#[5459224]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnDetectMotion
<LI><a href="#[54592a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnRefresh
<LI><a href="#[54acca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encSetFormat
<LI><a href="#[54acd18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encSetQuality
<LI><a href="#[558f5b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableJPEGEncoder
<LI><a href="#[558f6ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableMP4Encoder
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[537f110]"></a>vdRefreshLcm</STRONG> (ARM, 20 bytes, Stack size 0 bytes, vp_video.o(i.vdRefreshLcm))
<BR><BR>[Calls]<UL><LI><a href="#[755fb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msg_try_send
</UL><BR>[Called By]<UL><LI><a href="#[54592a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnRefresh
<LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
</UL><P><STRONG><a name="[537e7dc]"></a>vdSetLocalSourceWindow</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_video.o(i.vdSetLocalSourceWindow))
<BR><BR>[Calls]<UL><LI><a href="#[53c2894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdSetSourceVideoSize
</UL><BR>[Called By]<UL><LI><a href="#[54572bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptSetWindow
</UL><P><STRONG><a name="[537e858]"></a>vdSetLocalWindow</STRONG> (ARM, 16 bytes, Stack size 0 bytes, vp_video.o(i.vdSetLocalWindow))
<BR><BR>[Calls]<UL><LI><a href="#[53c2af8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdSetWindow
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[537e670]"></a>vdSetRemoteSourceWindow</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_video.o(i.vdSetRemoteSourceWindow))
<BR><BR>[Calls]<UL><LI><a href="#[53c2894]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdSetSourceVideoSize
</UL><BR>[Called By]<UL><LI><a href="#[53c0850]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote
</UL><P><STRONG><a name="[537e6ec]"></a>vdSetRemoteWindow</STRONG> (ARM, 16 bytes, Stack size 0 bytes, vp_video.o(i.vdSetRemoteWindow))
<BR><BR>[Calls]<UL><LI><a href="#[53c2af8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdSetWindow
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[537e3a8]"></a>vdSetZIndex</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_video.o(i.vdSetZIndex))
<BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[537f088]"></a>vdThread_OnUpdateRemote_OnRefresh</STRONG> (ARM, 1376 bytes, Stack size 120 bytes, vp_video.o(i.vdThread_OnUpdateRemote_OnRefresh))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[537f018]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufVideoNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[537efa4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufVideoDecRef
<LI><a href="#[537ef34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vgfxLock
<LI><a href="#[537eec0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gfxImageFilter
<LI><a href="#[537ee48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vgfxWaitEngineReady
<LI><a href="#[537edd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vgfxUnlock
<LI><a href="#[537ed60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegdecGetYSize
<LI><a href="#[53c354c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4decGetUVSize
<LI><a href="#[537ece8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegdecGetUVSize
<LI><a href="#[537ec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gfxWaitEngineReady
<LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
<LI><a href="#[537ec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vvpeLock
<LI><a href="#[537eb84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpeFormatConversionDDA
<LI><a href="#[537eb14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vvpeTrigger
<LI><a href="#[537ea9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vvpeWaitProcessOK
<LI><a href="#[537ea2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vvpeUnlock
<LI><a href="#[537e9bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpeRotation
<LI><a href="#[537f110]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdRefreshLcm
</UL><BR>[Called By]<UL><LI><a href="#[53c0850]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote
</UL><P><STRONG><a name="[537f264]"></a>vdUnlock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_video.o(i.vdUnlock))
<BR><BR>[Calls]<UL><LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[558f9cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_EventRead
<LI><a href="#[5459224]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnDetectMotion
<LI><a href="#[54592a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnRefresh
<LI><a href="#[54acca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encSetFormat
<LI><a href="#[54acd18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encSetQuality
<LI><a href="#[558f5b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableJPEGEncoder
<LI><a href="#[558f6ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableMP4Encoder
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[537e0d8]"></a>vdUpdateRemote</STRONG> (ARM, 20 bytes, Stack size 0 bytes, vp_video.o(i.vdUpdateRemote))
<BR><BR>[Calls]<UL><LI><a href="#[755fb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msg_try_send
</UL><BR>[Called By]<UL><LI><a href="#[558f88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_Write
<LI><a href="#[54acefc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decPrepare
</UL><P><STRONG><a name="[4d84208]"></a>vgfxInit</STRONG> (ARM, 28 bytes, Stack size 8 bytes, vp_gfx.o(i.vgfxInit))
<BR><BR>[Calls]<UL><LI><a href="#[4e4a0ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_init
</UL><BR>[Called By]<UL><LI><a href="#[4a54f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInit
</UL><P><STRONG><a name="[537ef34]"></a>vgfxLock</STRONG> (ARM, 20 bytes, Stack size 8 bytes, vp_gfx.o(i.vgfxLock))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[54d51f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vgfxAddRef
</UL><BR>[Called By]<UL><LI><a href="#[53581b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__lcmFillBuffer
<LI><a href="#[5380228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vdRefreshLcm
<LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
<LI><a href="#[558f798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702WriteOSD
</UL><P><STRONG><a name="[537edd8]"></a>vgfxUnlock</STRONG> (ARM, 36 bytes, Stack size 8 bytes, vp_gfx.o(i.vgfxUnlock))
<BR><BR>[Calls]<UL><LI><a href="#[54d4780]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gfxCloseEnv
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[53581b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__lcmFillBuffer
<LI><a href="#[5380228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vdRefreshLcm
<LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
<LI><a href="#[558f798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702WriteOSD
</UL><P><STRONG><a name="[537ee48]"></a>vgfxWaitEngineReady</STRONG> (ARM, 72 bytes, Stack size 16 bytes, vp_gfx.o(i.vgfxWaitEngineReady))
<BR><BR>[Calls]<UL><LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
</UL><BR>[Called By]<UL><LI><a href="#[53581b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__lcmFillBuffer
<LI><a href="#[5380228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vdRefreshLcm
<LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
</UL><P><STRONG><a name="[544d220]"></a>vinfoClearContent</STRONG> (ARM, 84 bytes, Stack size 16 bytes, vp_info.o(i.vinfoClearContent))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[5456a08]"></a>vinfoDrawContent</STRONG> (ARM, 304 bytes, Stack size 224 bytes, vp_info.o(i.vinfoDrawContent))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[544d3ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fontSetFont
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[544ece8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vinfoReplaceKeyWord
<LI><a href="#[544d30c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fontGetSize
<LI><a href="#[544ec74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vinfoRegetXY
<LI><a href="#[544d37c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fontPrint
</UL><BR>[Called By]<UL><LI><a href="#[5459a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_StartEncode
</UL><P><STRONG><a name="[4d83f64]"></a>vinfoInit</STRONG> (ARM, 68 bytes, Stack size 24 bytes, vp_info.o(i.vinfoInit))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
</UL><BR>[Called By]<UL><LI><a href="#[4a54f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInit
</UL><P><STRONG><a name="[544d298]"></a>vinfoSetContent</STRONG> (ARM, 244 bytes, Stack size 32 bytes, vp_info.o(i.vinfoSetContent))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[544d694]"></a>vinfoSetTime</STRONG> (ARM, 60 bytes, Stack size 48 bytes, vp_info.o(i.vinfoSetTime))
<BR><BR>[Calls]<UL><LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[544d628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mktime
<LI><a href="#[75c3274]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_get_time
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[54565c4]"></a>vjpegAddEncBuffer</STRONG> (ARM, 48 bytes, Stack size 8 bytes, vp_jpeg.o(i.vjpegAddEncBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4efdcf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listAttach
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[5459320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnEncodeJPG
</UL><P><STRONG><a name="[5504524]"></a>vjpegClearBuffer</STRONG> (ARM, 80 bytes, Stack size 8 bytes, vp_jpeg.o(i.vjpegClearBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[55046dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegGetEncBuffer
<LI><a href="#[4db5224]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listDetach
<LI><a href="#[5504614]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegFreeEncBuffer
<LI><a href="#[550459c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufEncJpegDecRef
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[558f5b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableJPEGEncoder
</UL><P><STRONG><a name="[5504fac]"></a>vjpegDecInit</STRONG> (ARM, 36 bytes, Stack size 0 bytes, vp_jpeg.o(i.vjpegDecInit))
<BR>[Called By]<UL><LI><a href="#[558f5b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableJPEGEncoder
</UL><P><STRONG><a name="[5504f38]"></a>vjpegDecSetHW</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_jpeg.o(i.vjpegDecSetHW))
<BR>[Called By]<UL><LI><a href="#[558f88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_Write
</UL><P><STRONG><a name="[5505278]"></a>vjpegDecoderCom_Callback</STRONG> (ARM, 32 bytes, Stack size 8 bytes, vp_jpeg.o(i.vjpegDecoderCom_Callback))
<BR><BR>[Calls]<UL><LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_jpeg.o(i.vjpegInit)
</UL><P><STRONG><a name="[55052f8]"></a>vjpegDecoderErr_Callback</STRONG> (ARM, 32 bytes, Stack size 8 bytes, vp_jpeg.o(i.vjpegDecoderErr_Callback))
<BR><BR>[Calls]<UL><LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_jpeg.o(i.vjpegInit)
</UL><P><STRONG><a name="[5505020]"></a>vjpegEncInit</STRONG> (ARM, 140 bytes, Stack size 24 bytes, vp_jpeg.o(i.vjpegEncInit))
<BR><BR>[Calls]<UL><LI><a href="#[537f1f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdGetSettings
</UL><BR>[Called By]<UL><LI><a href="#[558f5b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableJPEGEncoder
</UL><P><STRONG><a name="[55051f8]"></a>vjpegEncoderCom_Callback</STRONG> (ARM, 20 bytes, Stack size 8 bytes, vp_jpeg.o(i.vjpegEncoderCom_Callback))
<BR><BR>[Calls]<UL><LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_jpeg.o(i.vjpegInit)
</UL><P><STRONG><a name="[5504614]"></a>vjpegFreeEncBuffer</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_jpeg.o(i.vjpegFreeEncBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[550459c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufEncJpegDecRef
</UL><BR>[Called By]<UL><LI><a href="#[5504524]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegClearBuffer
</UL><P><STRONG><a name="[55046dc]"></a>vjpegGetEncBuffer</STRONG> (ARM, 68 bytes, Stack size 8 bytes, vp_jpeg.o(i.vjpegGetEncBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[558f9cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_EventRead
<LI><a href="#[5504524]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vjpegClearBuffer
</UL><P><STRONG><a name="[5504300]"></a>vjpegGetQuality</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_jpeg.o(i.vjpegGetQuality))
<BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[4d84354]"></a>vjpegInit</STRONG> (ARM, 260 bytes, Stack size 32 bytes, vp_jpeg.o(i.vjpegInit))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4c2d3fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_init
<LI><a href="#[4c2d1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_wait
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4c2fadc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_create
<LI><a href="#[4c2f8d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_attach
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[5505094]">&gt&gt</a>&nbsp;&nbsp;&nbsp;jpegSetIRQHandler
</UL><BR>[Called By]<UL><LI><a href="#[4a54f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInit
</UL><P><STRONG><a name="[5456730]"></a>vjpegLock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_jpeg.o(i.vjpegLock))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
</UL><BR>[Called By]<UL><LI><a href="#[558f88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_Write
<LI><a href="#[5459320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnEncodeJPG
<LI><a href="#[558f5b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableJPEGEncoder
</UL><P><STRONG><a name="[5505378]"></a>vjpegOnTheFlyCom_Callback</STRONG> (ARM, 24 bytes, Stack size 0 bytes, vp_jpeg.o(i.vjpegOnTheFlyCom_Callback))
<BR>[Address Reference Count : 1]<UL><LI> vp_jpeg.o(i.vjpegInit)
</UL><P><STRONG><a name="[545654c]"></a>vjpegSendEncBuffer</STRONG> (ARM, 4 bytes, Stack size 0 bytes, vp_jpeg.o(i.vjpegSendEncBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[755e24c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;iothread_EventNotify
</UL><BR>[Called By]<UL><LI><a href="#[5459320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnEncodeJPG
</UL><P><STRONG><a name="[5504374]"></a>vjpegSetQuality</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_jpeg.o(i.vjpegSetQuality))
<BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[54564dc]"></a>vjpegUnlock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_jpeg.o(i.vjpegUnlock))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[558f88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_Write
<LI><a href="#[5459320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnEncodeJPG
<LI><a href="#[558f5b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableJPEGEncoder
</UL><P><STRONG><a name="[5504988]"></a>vjpegWaitDecoderCom</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_jpeg.o(i.vjpegWaitDecoderCom))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_wait
</UL><BR>[Called By]<UL><LI><a href="#[550490c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;decodeJPEGPrimaryImage
</UL><P><STRONG><a name="[5504dd8]"></a>vjpegWaitEncoderCom</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_jpeg.o(i.vjpegWaitEncoderCom))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_wait
</UL><BR>[Called By]<UL><LI><a href="#[54566ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;encodeJPEGwithThumbnailImage
</UL><P><STRONG><a name="[537de84]"></a>vjpegdecGetInfo</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_jpeg.o(i.vjpegdecGetInfo))
<BR>[Called By]<UL><LI><a href="#[53c0850]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote
</UL><P><STRONG><a name="[537ece8]"></a>vjpegdecGetUVSize</STRONG> (ARM, 16 bytes, Stack size 0 bytes, vp_jpeg.o(i.vjpegdecGetUVSize))
<BR>[Called By]<UL><LI><a href="#[5504a00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetRGBRawData
<LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
</UL><P><STRONG><a name="[537ed60]"></a>vjpegdecGetYSize</STRONG> (ARM, 16 bytes, Stack size 0 bytes, vp_jpeg.o(i.vjpegdecGetYSize))
<BR>[Called By]<UL><LI><a href="#[5504a00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetRGBRawData
<LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
</UL><P><STRONG><a name="[53563f0]"></a>vlcmConfigure</STRONG> (ARM, 24 bytes, Stack size 8 bytes, vp_lcm.o(i.vlcmConfigure))
<BR><BR>[Calls]<UL><LI><a href="#[5356464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmLock
<LI><a href="#[537db54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmUnlock
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[5355c60]"></a>vlcmFillLCMBuffer</STRONG> (ARM, 92 bytes, Stack size 24 bytes, vp_lcm.o(i.vlcmFillLCMBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[5356464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmLock
<LI><a href="#[5355bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gfxMakeColor
<LI><a href="#[53581b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__lcmFillBuffer
<LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[537db54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmUnlock
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[5355b24]"></a>vlcmFillOSDBuffer</STRONG> (ARM, 508 bytes, Stack size 24 bytes, vp_lcm.o(i.vlcmFillOSDBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[5356464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmLock
<LI><a href="#[53581b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__lcmFillBuffer
<LI><a href="#[537db54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmUnlock
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[537dd24]"></a>vlcmGetLCMBuffer</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_lcm.o(i.vlcmGetLCMBuffer))
<BR>[Called By]<UL><LI><a href="#[5380228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vdRefreshLcm
</UL><P><STRONG><a name="[5355ebc]"></a>vlcmGetOSDBuffer</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_lcm.o(i.vlcmGetOSDBuffer))
<BR>[Called By]<UL><LI><a href="#[558f798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702WriteOSD
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[5355f34]"></a>vlcmGetOSDColorMode</STRONG> (ARM, 164 bytes, Stack size 40 bytes, vp_lcm.o(i.vlcmGetOSDColorMode))
<BR><BR>[Calls]<UL><LI><a href="#[5356464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmLock
<LI><a href="#[537db54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmUnlock
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[5355a38]"></a>vlcmGetOSDColorWidth</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_lcm.o(i.vlcmGetOSDColorWidth))
<BR><BR>[Calls]<UL><LI><a href="#[53562fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vlcmGetOSDColorWidth
</UL><BR>[Called By]<UL><LI><a href="#[558f798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702WriteOSD
</UL><P><STRONG><a name="[5355ab4]"></a>vlcmGetSize</STRONG> (ARM, 52 bytes, Stack size 16 bytes, vp_lcm.o(i.vlcmGetSize))
<BR><BR>[Calls]<UL><LI><a href="#[5356464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmLock
<LI><a href="#[537db54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmUnlock
</UL><BR>[Called By]<UL><LI><a href="#[558f798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702WriteOSD
</UL><P><STRONG><a name="[4d84198]"></a>vlcmInit</STRONG> (ARM, 132 bytes, Stack size 16 bytes, vp_lcm.o(i.vlcmInit))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[755f070]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_pc_init
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[4a54f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInit
</UL><P><STRONG><a name="[537df6c]"></a>vlcmIsConfigured</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_lcm.o(i.vlcmIsConfigured))
<BR>[Called By]<UL><LI><a href="#[5459a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_StartEncode
<LI><a href="#[53c0850]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote
<LI><a href="#[558f798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702WriteOSD
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[5356464]"></a>vlcmLock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_lcm.o(i.vlcmLock))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
</UL><BR>[Called By]<UL><LI><a href="#[53563f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmConfigure
<LI><a href="#[5355c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmFillLCMBuffer
<LI><a href="#[5355b24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmFillOSDBuffer
<LI><a href="#[5355f34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmGetOSDColorMode
<LI><a href="#[5355ab4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmGetSize
<LI><a href="#[5355d54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmSetOSDBuffer
<LI><a href="#[5356378]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmSetOSDColorMode
<LI><a href="#[558f798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702WriteOSD
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[5355958]"></a>vlcmLock1</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_lcm.o(i.vlcmLock1))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
</UL><BR>[Called By]<UL><LI><a href="#[537dbc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmStartRefresh
</UL><P><STRONG><a name="[5355d54]"></a>vlcmSetOSDBuffer</STRONG> (ARM, 44 bytes, Stack size 16 bytes, vp_lcm.o(i.vlcmSetOSDBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[5356464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmLock
<LI><a href="#[5355cd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpostOSD_DispBuf_Set
<LI><a href="#[537db54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmUnlock
</UL><BR>[Called By]<UL><LI><a href="#[558f798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702WriteOSD
</UL><P><STRONG><a name="[5356378]"></a>vlcmSetOSDColorMode</STRONG> (ARM, 232 bytes, Stack size 56 bytes, vp_lcm.o(i.vlcmSetOSDColorMode))
<BR><BR>[Calls]<UL><LI><a href="#[5356464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmLock
<LI><a href="#[537db54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmUnlock
<LI><a href="#[53562fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vlcmGetOSDColorWidth
<LI><a href="#[5356288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpostOSD_Init
<LI><a href="#[5356208]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpostOSD_Scaling_Control
<LI><a href="#[5356188]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpostOSD_ColKeyMask_Trigger
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[537dbc4]"></a>vlcmStartRefresh</STRONG> (ARM, 80 bytes, Stack size 8 bytes, vp_lcm.o(i.vlcmStartRefresh))
<BR><BR>[Calls]<UL><LI><a href="#[53558e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmTryLock1
<LI><a href="#[5355958]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmLock1
<LI><a href="#[535586c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_pc_try_produce
<LI><a href="#[53557f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpostVA_Trigger
<LI><a href="#[53559c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmUnlock1
</UL><BR>[Called By]<UL><LI><a href="#[5380228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vdRefreshLcm
<LI><a href="#[558f798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702WriteOSD
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[537de14]"></a>vlcmTryLock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_lcm.o(i.vlcmTryLock))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c388]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_trylock
</UL><BR>[Called By]<UL><LI><a href="#[5380228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vdRefreshLcm
</UL><P><STRONG><a name="[53558e4]"></a>vlcmTryLock1</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_lcm.o(i.vlcmTryLock1))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c388]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_trylock
</UL><BR>[Called By]<UL><LI><a href="#[537dbc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmStartRefresh
</UL><P><STRONG><a name="[537db54]"></a>vlcmUnlock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_lcm.o(i.vlcmUnlock))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[5380228]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vdRefreshLcm
<LI><a href="#[53563f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmConfigure
<LI><a href="#[5355c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmFillLCMBuffer
<LI><a href="#[5355b24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmFillOSDBuffer
<LI><a href="#[5355f34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmGetOSDColorMode
<LI><a href="#[5355ab4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmGetSize
<LI><a href="#[5355d54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmSetOSDBuffer
<LI><a href="#[5356378]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmSetOSDColorMode
<LI><a href="#[558f798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702WriteOSD
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[53559c8]"></a>vlcmUnlock1</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_lcm.o(i.vlcmUnlock1))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[537dbc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmStartRefresh
</UL><P><STRONG><a name="[54acc2c]"></a>vmp4ClearBuffer</STRONG> (ARM, 104 bytes, Stack size 24 bytes, vp_mp4.o(i.vmp4ClearBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[54ada4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vmp4encGetBuffer
<LI><a href="#[4db5224]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listDetach
<LI><a href="#[54ad728]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufMP4BitstreamDecRef
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Called By]<UL><LI><a href="#[558f6ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableMP4Encoder
</UL><P><STRONG><a name="[54ad960]"></a>vmp4ForceIFrame</STRONG> (ARM, 52 bytes, Stack size 16 bytes, vp_mp4.o(i.vmp4ForceIFrame))
<BR><BR>[Calls]<UL><LI><a href="#[75c3200]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_get_ticks
<LI><a href="#[75c3188]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msec_to_ticks
</UL><BR>[Called By]<UL><LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[4d84128]"></a>vmp4Init</STRONG> (ARM, 244 bytes, Stack size 24 bytes, vp_mp4.o(i.vmp4Init))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[755f070]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_pc_init
</UL><BR>[Called By]<UL><LI><a href="#[4a54f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInit
</UL><P><STRONG><a name="[54568f8]"></a>vmp4Lock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_mp4.o(i.vmp4Lock))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
</UL><BR>[Called By]<UL><LI><a href="#[545939c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnEncodeMP4
<LI><a href="#[558f6ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableMP4Encoder
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[54567a0]"></a>vmp4Unlock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_mp4.o(i.vmp4Unlock))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[545939c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnEncodeMP4
<LI><a href="#[558f6ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableMP4Encoder
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[54ad508]"></a>vmp4decAddRef</STRONG> (ARM, 136 bytes, Stack size 16 bytes, vp_mp4.o(i.vmp4decAddRef))
<BR><BR>[Calls]<UL><LI><a href="#[5422c2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4AddRef
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[54ad86c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4InstallCallBackFunction
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[54ad494]"></a>vmp4decDecRef</STRONG> (ARM, 108 bytes, Stack size 8 bytes, vp_mp4.o(i.vmp4decDecRef))
<BR><BR>[Calls]<UL><LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[54ad86c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4InstallCallBackFunction
<LI><a href="#[542284c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4DecRef
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[537dfe4]"></a>vmp4decGetBuffer</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vp_mp4.o(i.vmp4decGetBuffer))
<BR>[Called By]<UL><LI><a href="#[558f88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_Write
<LI><a href="#[53c0850]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote
</UL><P><STRONG><a name="[537def8]"></a>vmp4decGetInfo</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_mp4.o(i.vmp4decGetInfo))
<BR>[Called By]<UL><LI><a href="#[53c0850]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote
</UL><P><STRONG><a name="[54acefc]"></a>vmp4decPrepare</STRONG> (ARM, 308 bytes, Stack size 40 bytes, vp_mp4.o(i.vmp4decPrepare))
<BR><BR>[Calls]<UL><LI><a href="#[54210d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4Splitter_DelData
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[54ad2b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4decStart
<LI><a href="#[54acf70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4decWaitOK
<LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[537e0d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdUpdateRemote
<LI><a href="#[5421058]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4Splitter_GetFrame
</UL><BR>[Called By]<UL><LI><a href="#[558f88c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_Write
</UL><P><STRONG><a name="[54ad2b0]"></a>vmp4decStart</STRONG> (ARM, 432 bytes, Stack size 32 bytes, vp_mp4.o(i.vmp4decStart))
<BR><BR>[Calls]<UL><LI><a href="#[535586c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_pc_try_produce
<LI><a href="#[54ad238]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4ResumeDecoder
<LI><a href="#[54ad1c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4SetDecoder
<LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[54ad150]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_pc_consume
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[54ad0d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4SetDecBufferAddr
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
<LI><a href="#[54ad5f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4InstallISR
<LI><a href="#[54ad058]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4SetNewDecBitStreamAddr
<LI><a href="#[54acfe4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4StartDecoder
</UL><BR>[Called By]<UL><LI><a href="#[54acefc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decPrepare
</UL><P><STRONG><a name="[54acf70]"></a>vmp4decWaitOK</STRONG> (ARM, 40 bytes, Stack size 16 bytes, vp_mp4.o(i.vmp4decWaitOK))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_wait
<LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><BR>[Called By]<UL><LI><a href="#[54acefc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decPrepare
</UL><P><STRONG><a name="[54ad8ec]"></a>vmp4encAddRef</STRONG> (ARM, 624 bytes, Stack size 48 bytes, vp_mp4.o(i.vmp4encAddRef))
<BR><BR>[Calls]<UL><LI><a href="#[5422c2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4AddRef
<LI><a href="#[54ad86c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4InstallCallBackFunction
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[54ad7f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufMP4BitstreamNew
<LI><a href="#[54ada4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vmp4encGetBuffer
<LI><a href="#[4db5224]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listDetach
<LI><a href="#[54ad728]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufMP4BitstreamDecRef
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[54ad6b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4SetEncoder
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4efdcf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listAttach
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[755e24c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;iothread_EventNotify
<LI><a href="#[54ad960]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4ForceIFrame
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
<LI><a href="#[54ad5f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4InstallISR
</UL><BR>[Called By]<UL><LI><a href="#[54acca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encSetFormat
<LI><a href="#[54acd18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encSetQuality
<LI><a href="#[558f6ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableMP4Encoder
</UL><P><STRONG><a name="[54ad57c]"></a>vmp4encDecRef</STRONG> (ARM, 96 bytes, Stack size 8 bytes, vp_mp4.o(i.vmp4encDecRef))
<BR><BR>[Calls]<UL><LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[54ad86c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4InstallCallBackFunction
<LI><a href="#[542284c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4DecRef
</UL><BR>[Called By]<UL><LI><a href="#[54acca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encSetFormat
<LI><a href="#[54acd18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encSetQuality
<LI><a href="#[558f6ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableMP4Encoder
</UL><P><STRONG><a name="[54ad9d4]"></a>vmp4encGetBuffer</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_mp4.o(i.vmp4encGetBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[54ada4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vmp4encGetBuffer
</UL><BR>[Called By]<UL><LI><a href="#[558f9cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iothread_EventRead
</UL><P><STRONG><a name="[4db4d10]"></a>vmp4encGetQuality</STRONG> (ARM, 64 bytes, Stack size 16 bytes, vp_mp4.o(i.vmp4encGetQuality))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[5459b04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_WaitEncode
<LI><a href="#[4db5f78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_change
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[54ace84]"></a>vmp4encSetBitrate</STRONG> (ARM, 68 bytes, Stack size 24 bytes, vp_mp4.o(i.vmp4encSetBitrate))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[54ace08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4SetEncoderBitrate
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[54acca0]"></a>vmp4encSetFormat</STRONG> (ARM, 80 bytes, Stack size 16 bytes, vp_mp4.o(i.vmp4encSetFormat))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[537f184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdLock
<LI><a href="#[537f1f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdGetSettings
<LI><a href="#[54ad57c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4encDecRef
<LI><a href="#[54ad8ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[537f264]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdUnlock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[54acd90]"></a>vmp4encSetFramerate</STRONG> (ARM, 60 bytes, Stack size 16 bytes, vp_mp4.o(i.vmp4encSetFramerate))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[54acd18]"></a>vmp4encSetQuality</STRONG> (ARM, 108 bytes, Stack size 16 bytes, vp_mp4.o(i.vmp4encSetQuality))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[537f184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdLock
<LI><a href="#[537f1f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdGetSettings
<LI><a href="#[54ad57c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4encDecRef
<LI><a href="#[54ad8ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[537f264]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdUnlock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[5456884]"></a>vmp4encStart</STRONG> (ARM, 204 bytes, Stack size 32 bytes, vp_mp4.o(i.vmp4encStart))
<BR><BR>[Calls]<UL><LI><a href="#[54ad7f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufMP4BitstreamNew
<LI><a href="#[535586c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_pc_try_produce
<LI><a href="#[54ad418]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4SetNewYUVEncoderAddr
<LI><a href="#[54ad398]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4SetNewEncBitStreamAddr
<LI><a href="#[75c3200]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_get_ticks
<LI><a href="#[54ad324]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4StartEncoder
<LI><a href="#[54ad728]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufMP4BitstreamDecRef
</UL><BR>[Called By]<UL><LI><a href="#[545939c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnEncodeMP4
</UL><P><STRONG><a name="[5456810]"></a>vmp4encWaitOK</STRONG> (ARM, 48 bytes, Stack size 16 bytes, vp_mp4.o(i.vmp4encWaitOK))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_wait
<LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
<LI><a href="#[755e24c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;iothread_EventNotify
</UL><BR>[Called By]<UL><LI><a href="#[545939c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnEncodeMP4
</UL><P><STRONG><a name="[4db5030]"></a>vp_bitrate_control_change_enable</STRONG> (ARM, 56 bytes, Stack size 8 bytes, vp_bitrate_control.o(i.vp_bitrate_control_change_enable))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[56dc278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_OpenCamera
</UL><P><STRONG><a name="[4db50b8]"></a>vp_bitrate_control_getspeed</STRONG> (ARM, 80 bytes, Stack size 8 bytes, vp_bitrate_control.o(i.vp_bitrate_control_getspeed))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[8019944]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_Active
<LI><a href="#[801a2d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_CheckNetwork_NoActive
</UL><P><STRONG><a name="[4a54cb0]"></a>vp_bitrate_control_init</STRONG> (ARM, 196 bytes, Stack size 32 bytes, vp_bitrate_control.o(i.vp_bitrate_control_init))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
</UL><BR>[Called By]<UL><LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[4db5138]"></a>vp_bitrate_control_write</STRONG> (ARM, 80 bytes, Stack size 16 bytes, vp_bitrate_control.o(i.vp_bitrate_control_write))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4db6c38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_linkupdate
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[77ac720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;My_Common_write
<LI><a href="#[817fac4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;conn_write
<LI><a href="#[77e73ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_rtp_packet
</UL><P><STRONG><a name="[5456b70]"></a>vpeDownScale</STRONG> (ARM, 512 bytes, Stack size 32 bytes, vpe.o(i.vpeDownScale))
<BR><BR>[Calls]<UL><LI><a href="#[7d7a794]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpeGetHandle
<LI><a href="#[7d7a728]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpeLcd
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[545b2b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcpt_DownscaledForDetectMotion_InDsr
</UL><P><STRONG><a name="[537eb84]"></a>vpeFormatConversionDDA</STRONG> (ARM, 596 bytes, Stack size 32 bytes, vpe.o(i.vpeFormatConversionDDA))
<BR><BR>[Calls]<UL><LI><a href="#[7d7a794]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpeGetHandle
<LI><a href="#[7d7a728]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpeLcd
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[54592a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnRefresh
<LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
</UL><P><STRONG><a name="[7d7a794]"></a>vpeGetHandle</STRONG> (ARM, 20 bytes, Stack size 0 bytes, vpe.o(i.vpeGetHandle))
<BR>[Called By]<UL><LI><a href="#[5456b70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeDownScale
<LI><a href="#[537eb84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeFormatConversionDDA
</UL><P><STRONG><a name="[541bdd0]"></a>vpeInit</STRONG> (ARM, 184 bytes, Stack size 24 bytes, vpe.o(i.vpeInit))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4c2fadc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_create
<LI><a href="#[4c2f8d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_attach
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[4c2f7d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_detach
<LI><a href="#[4c2f9cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_delete
</UL><BR>[Called By]<UL><LI><a href="#[541d6ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeAddRef
<LI><a href="#[541be3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeUninit
</UL><P><STRONG><a name="[7d7a808]"></a>vpeIntHandler</STRONG> (ARM, 48 bytes, Stack size 8 bytes, vpe.o(i.vpeIntHandler))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[4c2ef7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_acknowledge
</UL><BR>[Address Reference Count : 1]<UL><LI> vpe.o(i.vpeInit)
</UL><P><STRONG><a name="[7d7a87c]"></a>vpeIntHandlerDSR</STRONG> (ARM, 44 bytes, Stack size 8 bytes, vpe.o(i.vpeIntHandlerDSR))
<BR><BR>[Calls]<UL><LI><a href="#[4c2ef7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_acknowledge
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
</UL><BR>[Address Reference Count : 1]<UL><LI> vpe.o(i.vpeInit)
</UL><P><STRONG><a name="[7d7a728]"></a>vpeLcd</STRONG> (ARM, 56 bytes, Stack size 8 bytes, vpe.o(i.vpeLcd))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[7d7a728]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpeLcd
</UL><BR>[Called By]<UL><LI><a href="#[5456b70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeDownScale
<LI><a href="#[537eb84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeFormatConversionDDA
<LI><a href="#[7d7a728]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeLcd
</UL><P><STRONG><a name="[537e9bc]"></a>vpeRotation</STRONG> (ARM, 172 bytes, Stack size 4 bytes, vpe.o(i.vpeRotation))
<BR><BR>[Calls]<UL><LI><a href="#[7d7a630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpeRotationInit
</UL><BR>[Called By]<UL><LI><a href="#[54592a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnRefresh
<LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
</UL><P><STRONG><a name="[7d7a630]"></a>vpeRotationInit</STRONG> (ARM, 156 bytes, Stack size 12 bytes, vpe.o(i.vpeRotationInit))
<BR><BR>[Calls]<UL><LI><a href="#[7d7a6a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;VPEPacketRotationSetBufferAddr
</UL><BR>[Called By]<UL><LI><a href="#[537e9bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpeRotation
</UL><P><STRONG><a name="[541beac]"></a>vpeSetIRQHandler</STRONG> (ARM, 12 bytes, Stack size 0 bytes, vpe.o(i.vpeSetIRQHandler))
<BR>[Called By]<UL><LI><a href="#[4d84278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeInit
<LI><a href="#[541be3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeUninit
</UL><P><STRONG><a name="[541bcec]"></a>vpeTrigger</STRONG> (ARM, 36 bytes, Stack size 0 bytes, vpe.o(i.vpeTrigger))
<BR>[Called By]<UL><LI><a href="#[537eb14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeTrigger
</UL><P><STRONG><a name="[541bd5c]"></a>vpe_ClrIntFlag</STRONG> (ARM, 16 bytes, Stack size 0 bytes, vpe.o(i.vpe_ClrIntFlag))
<BR>[Called By]<UL><LI><a href="#[537eb14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeTrigger
</UL><P><STRONG><a name="[7d49d84]"></a>vpostColKey_Setting</STRONG> (ARM, 36 bytes, Stack size 0 bytes, Vpost.o(i.vpostColKey_Setting))
<BR>[Called By]<UL><LI><a href="#[5356188]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpostOSD_ColKeyMask_Trigger
</UL><P><STRONG><a name="[7d49f6c]"></a>vpostOSDSrc</STRONG> (ARM, 120 bytes, Stack size 0 bytes, Vpost.o(i.vpostOSDSrc))
<BR>[Called By]<UL><LI><a href="#[5356288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpostOSD_Init
</UL><P><STRONG><a name="[5356188]"></a>vpostOSD_ColKeyMask_Trigger</STRONG> (ARM, 152 bytes, Stack size 12 bytes, Vpost.o(i.vpostOSD_ColKeyMask_Trigger))
<BR><BR>[Calls]<UL><LI><a href="#[7d49e7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpostOSD_Setting
<LI><a href="#[7d49d84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpostColKey_Setting
<LI><a href="#[558f45c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpostOSD_Enable
</UL><BR>[Called By]<UL><LI><a href="#[5356378]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmSetOSDColorMode
</UL><P><STRONG><a name="[5356020]"></a>vpostOSD_Disable</STRONG> (ARM, 20 bytes, Stack size 0 bytes, Vpost.o(i.vpostOSD_Disable))
<BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[5355cd8]"></a>vpostOSD_DispBuf_Set</STRONG> (ARM, 12 bytes, Stack size 0 bytes, Vpost.o(i.vpostOSD_DispBuf_Set))
<BR>[Called By]<UL><LI><a href="#[5355d54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmSetOSDBuffer
</UL><P><STRONG><a name="[558f45c]"></a>vpostOSD_Enable</STRONG> (ARM, 20 bytes, Stack size 0 bytes, Vpost.o(i.vpostOSD_Enable))
<BR>[Called By]<UL><LI><a href="#[5356188]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpostOSD_ColKeyMask_Trigger
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[5356288]"></a>vpostOSD_Init</STRONG> (ARM, 308 bytes, Stack size 56 bytes, Vpost.o(i.vpostOSD_Init))
<BR><BR>[Calls]<UL><LI><a href="#[7d49f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpostOSDSrc
<LI><a href="#[7d49ef4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpostOSD_Window_Set
<LI><a href="#[5356208]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpostOSD_Scaling_Control
</UL><BR>[Called By]<UL><LI><a href="#[5356378]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmSetOSDColorMode
</UL><P><STRONG><a name="[5356208]"></a>vpostOSD_Scaling_Control</STRONG> (ARM, 72 bytes, Stack size 0 bytes, Vpost.o(i.vpostOSD_Scaling_Control))
<BR>[Called By]<UL><LI><a href="#[5356378]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmSetOSDColorMode
<LI><a href="#[5356288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpostOSD_Init
</UL><P><STRONG><a name="[7d49e7c]"></a>vpostOSD_Setting</STRONG> (ARM, 184 bytes, Stack size 0 bytes, Vpost.o(i.vpostOSD_Setting))
<BR>[Called By]<UL><LI><a href="#[5356188]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpostOSD_ColKeyMask_Trigger
</UL><P><STRONG><a name="[7d49ef4]"></a>vpostOSD_Window_Set</STRONG> (ARM, 40 bytes, Stack size 0 bytes, Vpost.o(i.vpostOSD_Window_Set))
<BR>[Called By]<UL><LI><a href="#[5356288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vpostOSD_Init
</UL><P><STRONG><a name="[558f2b4]"></a>vpostVA_Stream_Scaling_Ctrl</STRONG> (ARM, 56 bytes, Stack size 4 bytes, Vpost.o(i.vpostVA_Stream_Scaling_Ctrl))
<BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[53557f8]"></a>vpostVA_Trigger</STRONG> (ARM, 56 bytes, Stack size 0 bytes, Vpost.o(i.vpostVA_Trigger))
<BR>[Called By]<UL><LI><a href="#[537dbc4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmStartRefresh
</UL><P><STRONG><a name="[4d84278]"></a>vvpeInit</STRONG> (ARM, 56 bytes, Stack size 8 bytes, vp_vpe.o(i.vvpeInit))
<BR><BR>[Calls]<UL><LI><a href="#[4e4a0ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_init
<LI><a href="#[755f070]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_pc_init
<LI><a href="#[541d6ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vvpeAddRef
<LI><a href="#[541beac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpeSetIRQHandler
<LI><a href="#[541d608]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vvpeDecRef
</UL><BR>[Called By]<UL><LI><a href="#[4a54f0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;VideoPhoneInit
</UL><P><STRONG><a name="[537ec00]"></a>vvpeLock</STRONG> (ARM, 20 bytes, Stack size 8 bytes, vp_vpe.o(i.vvpeLock))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[541d6ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vvpeAddRef
</UL><BR>[Called By]<UL><LI><a href="#[54592a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnRefresh
<LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
</UL><P><STRONG><a name="[537eb14]"></a>vvpeTrigger</STRONG> (ARM, 44 bytes, Stack size 8 bytes, vp_vpe.o(i.vvpeTrigger))
<BR><BR>[Calls]<UL><LI><a href="#[535586c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_pc_try_produce
<LI><a href="#[541bd5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpe_ClrIntFlag
<LI><a href="#[541bcec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpeTrigger
</UL><BR>[Called By]<UL><LI><a href="#[54592a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnRefresh
<LI><a href="#[545b2b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcpt_DownscaledForDetectMotion_InDsr
<LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
</UL><P><STRONG><a name="[5456be4]"></a>vvpeTryLockInDsr</STRONG> (ARM, 28 bytes, Stack size 8 bytes, vp_vpe.o(i.vvpeTryLockInDsr))
<BR><BR>[Calls]<UL><LI><a href="#[75b4fbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_try_lock_in_dsr
<LI><a href="#[541d6ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vvpeAddRef
</UL><BR>[Called By]<UL><LI><a href="#[545b2b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcpt_DownscaledForDetectMotion_InDsr
</UL><P><STRONG><a name="[541be3c]"></a>vvpeUninit</STRONG> (ARM, 28 bytes, Stack size 8 bytes, vp_vpe.o(i.vvpeUninit))
<BR><BR>[Calls]<UL><LI><a href="#[541beac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpeSetIRQHandler
<LI><a href="#[541bdd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpeInit
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[537ea2c]"></a>vvpeUnlock</STRONG> (ARM, 20 bytes, Stack size 8 bytes, vp_vpe.o(i.vvpeUnlock))
<BR><BR>[Calls]<UL><LI><a href="#[541d608]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vvpeDecRef
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[54592a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnRefresh
<LI><a href="#[5459a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_StartEncode
<LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
</UL><P><STRONG><a name="[537ea9c]"></a>vvpeWaitProcessOK</STRONG> (ARM, 28 bytes, Stack size 8 bytes, vp_vpe.o(i.vvpeWaitProcessOK))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_wait
<LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><BR>[Called By]<UL><LI><a href="#[54592a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnRefresh
<LI><a href="#[5459a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_StartEncode
<LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
</UL><P><STRONG><a name="[558f630]"></a>wb702EnableAudioEncoder</STRONG> (ARM, 192 bytes, Stack size 24 bytes, vp_interfaces.o(i.wb702EnableAudioEncoder))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[755edc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauStartRecord
<LI><a href="#[755eea4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauStopRecord
<LI><a href="#[7560048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauLock
<LI><a href="#[755ffcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauGetEncBuffer_Local
<LI><a href="#[4db5224]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listDetach
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[75600b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauUnlock
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[56dc278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_OpenCamera
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[558dccc]"></a>wb702EnableDrawImageTime</STRONG> (ARM, 40 bytes, Stack size 8 bytes, vp_interfaces.o(i.wb702EnableDrawImageTime))
<BR><BR>[Calls]<UL><LI><a href="#[558f4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
</UL><P><STRONG><a name="[558f5b4]"></a>wb702EnableJPEGEncoder</STRONG> (ARM, 164 bytes, Stack size 16 bytes, vp_interfaces.o(i.wb702EnableJPEGEncoder))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[537f184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdLock
<LI><a href="#[5456730]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegLock
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[537e418]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdEnableLocalJPEG
<LI><a href="#[5505020]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegEncInit
<LI><a href="#[5504fac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegDecInit
<LI><a href="#[5504d5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;jpegInitializeEngine
<LI><a href="#[54564dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegUnlock
<LI><a href="#[537f264]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdUnlock
<LI><a href="#[54573a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptStart
<LI><a href="#[5457754]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptStop
<LI><a href="#[5504524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegClearBuffer
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[558f6ac]"></a>wb702EnableMP4Encoder</STRONG> (ARM, 144 bytes, Stack size 16 bytes, vp_interfaces.o(i.wb702EnableMP4Encoder))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[537f184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdLock
<LI><a href="#[537f1f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdGetSettings
<LI><a href="#[54568f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4Lock
<LI><a href="#[537e504]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdEnableLocalMP4
<LI><a href="#[54ad8ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
<LI><a href="#[54567a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4Unlock
<LI><a href="#[537f264]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdUnlock
<LI><a href="#[54573a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptStart
<LI><a href="#[5457754]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptStop
<LI><a href="#[54ad57c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4encDecRef
<LI><a href="#[54acc2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4ClearBuffer
<LI><a href="#[5457924]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptWaitPrevMsg
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[56dc278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_OpenCamera
<LI><a href="#[56dc100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetImageResolution
<LI><a href="#[5926dfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspDisableVideoEncoder
<LI><a href="#[5926e78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspEnableVideoEncoder
<LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[558e4f8]"></a>wb702EnableSuspend</STRONG> (ARM, 40 bytes, Stack size 8 bytes, vp_interfaces.o(i.wb702EnableSuspend))
<BR><BR>[Calls]<UL><LI><a href="#[558f4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
</UL><P><STRONG><a name="[734d610]"></a>wb702LockAndDisableAudio</STRONG> (ARM, 20 bytes, Stack size 8 bytes, vp_interfaces.o(i.wb702LockAndDisableAudio))
<BR><BR>[Calls]<UL><LI><a href="#[755eea4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauStopRecord
<LI><a href="#[755ef18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauStopPlay
</UL><BR>[Called By]<UL><LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[558ded0]"></a>wb702SetAudioPlayVolume</STRONG> (ARM, 44 bytes, Stack size 16 bytes, vp_interfaces.o(i.wb702SetAudioPlayVolume))
<BR><BR>[Calls]<UL><LI><a href="#[558f4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[56dbf10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetSpeakerVolume
</UL><P><STRONG><a name="[558de50]"></a>wb702SetAudioRecordVolume</STRONG> (ARM, 44 bytes, Stack size 16 bytes, vp_interfaces.o(i.wb702SetAudioRecordVolume))
<BR><BR>[Calls]<UL><LI><a href="#[558f4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[56dbe98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetMicVolume
</UL><P><STRONG><a name="[558e840]"></a>wb702SetAudioType</STRONG> (ARM, 52 bytes, Stack size 8 bytes, vp_interfaces.o(i.wb702SetAudioType))
<BR><BR>[Calls]<UL><LI><a href="#[558f4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[56dc278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_OpenCamera
</UL><P><STRONG><a name="[558e5e8]"></a>wb702SetDateTime</STRONG> (ARM, 92 bytes, Stack size 16 bytes, vp_interfaces.o(i.wb702SetDateTime))
<BR><BR>[Calls]<UL><LI><a href="#[558f4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4e4a1d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetCheckedTime
</UL><P><STRONG><a name="[558dc54]"></a>wb702SetDrawContent</STRONG> (ARM, 52 bytes, Stack size 24 bytes, vp_interfaces.o(i.wb702SetDrawContent))
<BR><BR>[Calls]<UL><LI><a href="#[558f4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
</UL><P><STRONG><a name="[558ed80]"></a>wb702SetFrame</STRONG> (ARM, 8 bytes, Stack size 0 bytes, vp_interfaces.o(i.wb702SetFrame))
<BR>[Called By]<UL><LI><a href="#[56dc278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_OpenCamera
</UL><P><STRONG><a name="[558e660]"></a>wb702SetJPEG</STRONG> (ARM, 44 bytes, Stack size 8 bytes, vp_interfaces.o(i.wb702SetJPEG))
<BR><BR>[Calls]<UL><LI><a href="#[558f4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[56dc278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_OpenCamera
<LI><a href="#[56dc100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetImageResolution
</UL><P><STRONG><a name="[558e0b4]"></a>wb702SetJPEGQuality</STRONG> (ARM, 68 bytes, Stack size 8 bytes, vp_interfaces.o(i.wb702SetJPEGQuality))
<BR><BR>[Calls]<UL><LI><a href="#[558f4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[7f8b86c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__W99702_SetImageQuality
</UL><P><STRONG><a name="[558f058]"></a>wb702SetLocalVideoSource</STRONG> (ARM, 56 bytes, Stack size 16 bytes, vp_interfaces.o(i.wb702SetLocalVideoSource))
<BR><BR>[Calls]<UL><LI><a href="#[558f4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
<LI><a href="#[56dc278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_OpenCamera
<LI><a href="#[56dc100]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetImageResolution
</UL><P><STRONG><a name="[558e9ac]"></a>wb702SetVideoBitRate</STRONG> (ARM, 48 bytes, Stack size 8 bytes, vp_interfaces.o(i.wb702SetVideoBitRate))
<BR><BR>[Calls]<UL><LI><a href="#[558f4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[56dc278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_OpenCamera
<LI><a href="#[7f8b86c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__W99702_SetImageQuality
</UL><P><STRONG><a name="[558dd4c]"></a>wb702SetVideoContrastBright</STRONG> (ARM, 44 bytes, Stack size 16 bytes, vp_interfaces.o(i.wb702SetVideoContrastBright))
<BR><BR>[Calls]<UL><LI><a href="#[558f4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[56dbf8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetImageBrightness
</UL><P><STRONG><a name="[4db4d88]"></a>wb702SetVideoDynamicBitrate</STRONG> (ARM, 44 bytes, Stack size 8 bytes, vp_interfaces.o(i.wb702SetVideoDynamicBitrate))
<BR><BR>[Calls]<UL><LI><a href="#[558f4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[4db5f78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_change
</UL><P><STRONG><a name="[4db4c20]"></a>wb702SetVideoDynamicFramerate</STRONG> (ARM, 44 bytes, Stack size 8 bytes, vp_interfaces.o(i.wb702SetVideoDynamicFramerate))
<BR><BR>[Calls]<UL><LI><a href="#[558f4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4db5f78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_change
</UL><P><STRONG><a name="[558ed08]"></a>wb702SetVideoFormat</STRONG> (ARM, 56 bytes, Stack size 16 bytes, vp_interfaces.o(i.wb702SetVideoFormat))
<BR><BR>[Calls]<UL><LI><a href="#[558f4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[56dc278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_OpenCamera
</UL><P><STRONG><a name="[558e1a8]"></a>wb702SetVideoFramerate</STRONG> (ARM, 44 bytes, Stack size 8 bytes, vp_interfaces.o(i.wb702SetVideoFramerate))
<BR><BR>[Calls]<UL><LI><a href="#[558f4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[56dc00c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;W99702_SetFramerate
</UL><P><STRONG><a name="[734d3b0]"></a>wb702UnlockAndRestorePreviousAudio</STRONG> (ARM, 20 bytes, Stack size 8 bytes, vp_interfaces.o(i.wb702UnlockAndRestorePreviousAudio))
<BR><BR>[Calls]<UL><LI><a href="#[755f954]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audio_WM8978_test
<LI><a href="#[755fa3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauStartPlay
<LI><a href="#[755edc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauStartRecord
</UL><BR>[Called By]<UL><LI><a href="#[4a54884]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><P><STRONG><a name="[558f798]"></a>wb702WriteOSD</STRONG> (ARM, 504 bytes, Stack size 80 bytes, vp_interfaces.o(i.wb702WriteOSD))
<BR><BR>[Calls]<UL><LI><a href="#[537df6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmIsConfigured
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4db5224]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listDetach
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5355ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmGetSize
<LI><a href="#[5355a38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmGetOSDColorWidth
<LI><a href="#[5356464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmLock
<LI><a href="#[5355ebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmGetOSDBuffer
<LI><a href="#[537ef34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vgfxLock
<LI><a href="#[558f728]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gfxMemcpy
<LI><a href="#[537edd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vgfxUnlock
<LI><a href="#[537db54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmUnlock
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[5355d54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmSetOSDBuffer
<LI><a href="#[537dbc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmStartRefresh
</UL><BR>[Called By]<UL><LI><a href="#[558f4d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702_ioctl
</UL><P><STRONG><a name="[558f4d0]"></a>wb702_ioctl</STRONG> (ARM, 3684 bytes, Stack size 352 bytes, vp_interfaces.o(i.wb702_ioctl))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[53563f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmConfigure
<LI><a href="#[537df6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmIsConfigured
<LI><a href="#[537f184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdLock
<LI><a href="#[537f1f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdGetSettings
<LI><a href="#[54568f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4Lock
<LI><a href="#[54ad508]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4decAddRef
<LI><a href="#[537e57c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdEnableRemoteWindow
<LI><a href="#[5356464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmLock
<LI><a href="#[558f45c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpostOSD_Enable
<LI><a href="#[5356020]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpostOSD_Disable
<LI><a href="#[537db54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmUnlock
<LI><a href="#[537e5f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdEnableLocalWindow
<LI><a href="#[54ad494]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4decDecRef
<LI><a href="#[54567a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4Unlock
<LI><a href="#[537f264]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdUnlock
<LI><a href="#[5356378]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmSetOSDColorMode
<LI><a href="#[5355c60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmFillLCMBuffer
<LI><a href="#[5355b24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmFillOSDBuffer
<LI><a href="#[537dbc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmStartRefresh
<LI><a href="#[54572bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptSetWindow
<LI><a href="#[537e858]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdSetLocalWindow
<LI><a href="#[5457924]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptWaitPrevMsg
<LI><a href="#[537e6ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdSetRemoteWindow
<LI><a href="#[54acca0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4encSetFormat
<LI><a href="#[558f6ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702EnableMP4Encoder
<LI><a href="#[537e3a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdSetZIndex
<LI><a href="#[558f630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702EnableAudioEncoder
<LI><a href="#[4db4d10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4encGetQuality
<LI><a href="#[54acd18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4encSetQuality
<LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[558f3f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strpbrk
<LI><a href="#[558f384]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strspn
<LI><a href="#[4fc2130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[755ecd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauGetQualityLevel
<LI><a href="#[755ed48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauSetQualityLevel
<LI><a href="#[537e32c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdEnableMotionDetect
<LI><a href="#[537e2b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdGetMotionsNum
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[755eaec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauSetFormat
<LI><a href="#[558f798]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702WriteOSD
<LI><a href="#[54ad960]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4ForceIFrame
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[558f2b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpostVA_Stream_Scaling_Ctrl
<LI><a href="#[558f5b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702EnableJPEGEncoder
<LI><a href="#[544d694]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vinfoSetTime
<LI><a href="#[755ee34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauUninit
<LI><a href="#[5457600]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptUninitThread
<LI><a href="#[541be3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vvpeUninit
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[5355f34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmGetOSDColorMode
<LI><a href="#[5355ebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmGetOSDBuffer
<LI><a href="#[5504374]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegSetQuality
<LI><a href="#[5504300]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegGetQuality
<LI><a href="#[54ace84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4encSetBitrate
<LI><a href="#[54acd90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4encSetFramerate
<LI><a href="#[755ec58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauSetPlayVolume
<LI><a href="#[755ebe0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauSetRecordVolume
<LI><a href="#[755eb60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauSetNotificationVolume
<LI><a href="#[5457498]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptSetContrastBright
<LI><a href="#[5457240]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptEnableDrawImageTime
<LI><a href="#[544d298]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vinfoSetContent
<LI><a href="#[544d220]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vinfoClearContent
</UL><BR>[Called By]<UL><LI><a href="#[558dccc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableDrawImageTime
<LI><a href="#[558e4f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702EnableSuspend
<LI><a href="#[558ded0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetAudioPlayVolume
<LI><a href="#[558de50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetAudioRecordVolume
<LI><a href="#[558e840]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetAudioType
<LI><a href="#[558e5e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetDateTime
<LI><a href="#[558dc54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetDrawContent
<LI><a href="#[558e660]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetJPEG
<LI><a href="#[558e0b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetJPEGQuality
<LI><a href="#[558f058]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetLocalVideoSource
<LI><a href="#[558e9ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoBitRate
<LI><a href="#[558dd4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoContrastBright
<LI><a href="#[4db4d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoDynamicBitrate
<LI><a href="#[4db4c20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoDynamicFramerate
<LI><a href="#[558ed08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoFormat
<LI><a href="#[558e1a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoFramerate
</UL><P><STRONG><a name="[51dedd8]"></a>wlan_debug_printf</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wlan_cmd.o(i.wlan_debug_printf))
<BR>[Called By]<UL><LI><a href="#[51dee50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_iwevcustom_event
<LI><a href="#[51deb60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;QueueCmd
<LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[51de090]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetRadioControl
<LI><a href="#[4d32118]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetMacPacketFilter
<LI><a href="#[51ddec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PSWakeup
<LI><a href="#[51dde50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ExecuteNextCommand
<LI><a href="#[51dddd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SendConfirmSleep
<LI><a href="#[51ddc74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PSConfirmSleep
<LI><a href="#[51dfea8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_set_wep
<LI><a href="#[51df798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DownloadCommandToStation
</UL><P><STRONG><a name="[736504c]"></a>wm8978SelectInputPath</STRONG> (ARM, 716 bytes, Stack size 24 bytes, W99702_WM8978.o(i.wm8978SelectInputPath))
<BR><BR>[Calls]<UL><LI><a href="#[73652b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;TwoWire_Write_Data
</UL><BR>[Called By]<UL><LI><a href="#[789fa98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WM8978_ADC_Setup
<LI><a href="#[7364fd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WM8978_Bypass_Enable
<LI><a href="#[73650c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audioSelectInputPath
</UL><P><STRONG><a name="[7365144]"></a>wm8978SelectOutputPath</STRONG> (ARM, 104 bytes, Stack size 16 bytes, W99702_WM8978.o(i.wm8978SelectOutputPath))
<BR><BR>[Calls]<UL><LI><a href="#[73652b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;TwoWire_Write_Data
</UL><BR>[Called By]<UL><LI><a href="#[7364fd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WM8978_Bypass_Enable
<LI><a href="#[755f604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WM8978_DAC_Setup
</UL><P><STRONG><a name="[736550c]"></a>wm8978SetPlayVolume</STRONG> (ARM, 52 bytes, Stack size 8 bytes, W99702_WM8978.o(i.wm8978SetPlayVolume))
<BR><BR>[Calls]<UL><LI><a href="#[78a2ed8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WM_Set_DAC_Volume
</UL><BR>[Called By]<UL><LI><a href="#[4a55e3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audioSetPlayVolume
</UL><P><STRONG><a name="[7365414]"></a>wm8978SetRecordVolume</STRONG> (ARM, 52 bytes, Stack size 8 bytes, W99702_WM8978.o(i.wm8978SetRecordVolume))
<BR><BR>[Calls]<UL><LI><a href="#[78a3bf4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WM_Set_ADC_Volume
</UL><BR>[Called By]<UL><LI><a href="#[7365490]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audioSetRecordVolume
</UL><P><STRONG><a name="[7365a14]"></a>wm8978StartPlay</STRONG> (ARM, 700 bytes, Stack size 64 bytes, W99702_WM8978.o(i.wm8978StartPlay))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4c2ee70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_configure
<LI><a href="#[4c2fadc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_create
<LI><a href="#[4c2f8d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_attach
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[78a4790]">&gt&gt</a>&nbsp;&nbsp;&nbsp;IIS_Set_Sample_Frequency
<LI><a href="#[78a4718]">&gt&gt</a>&nbsp;&nbsp;&nbsp;IIS_Set_Data_Format
<LI><a href="#[755f604]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WM8978_DAC_Setup
<LI><a href="#[755f494]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audio_get_clk_cfg
<LI><a href="#[755f420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audio_set_clk
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Called By]<UL><LI><a href="#[7365a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audioStartPlay
</UL><P><STRONG><a name="[7365758]"></a>wm8978StartRecord</STRONG> (ARM, 504 bytes, Stack size 48 bytes, W99702_WM8978.o(i.wm8978StartRecord))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[755f858]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSetDacVolume
<LI><a href="#[78a3774]">&gt&gt</a>&nbsp;&nbsp;&nbsp;iis_init
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4c2ee70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_configure
<LI><a href="#[4c2fadc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_create
<LI><a href="#[4c2f8d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_attach
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[789fa98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WM8978_ADC_Setup
<LI><a href="#[78a4790]">&gt&gt</a>&nbsp;&nbsp;&nbsp;IIS_Set_Sample_Frequency
<LI><a href="#[78a4718]">&gt&gt</a>&nbsp;&nbsp;&nbsp;IIS_Set_Data_Format
<LI><a href="#[755f494]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audio_get_clk_cfg
<LI><a href="#[755f420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audio_set_clk
</UL><BR>[Called By]<UL><LI><a href="#[73657d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audioStartRecord
</UL><P><STRONG><a name="[73658b8]"></a>wm8978StopPlay</STRONG> (ARM, 188 bytes, Stack size 16 bytes, W99702_WM8978.o(i.wm8978StopPlay))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[78a4080]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wait_buf_empty
<LI><a href="#[755f7dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSetHeadphoneVolume
<LI><a href="#[755f760]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSetSpeakerVolume
<LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[4c2f7d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_detach
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Called By]<UL><LI><a href="#[736592c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audioStopPlay
</UL><P><STRONG><a name="[73655f8]"></a>wm8978StopRecord</STRONG> (ARM, 128 bytes, Stack size 8 bytes, W99702_WM8978.o(i.wm8978StopRecord))
<BR><BR>[Calls]<UL><LI><a href="#[73652b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;TwoWire_Write_Data
<LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[4c2f7d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_detach
</UL><BR>[Called By]<UL><LI><a href="#[7365670]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audioStopRecord
</UL><P><STRONG><a name="[5c07868]"></a>wp_on_target</STRONG> (ARM, 88 bytes, Stack size 0 bytes, er_rsm_thread_routines.o(i.wp_on_target))
<BR>[Called By]<UL><LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
</UL><P><STRONG><a name="[79688f0]"></a>wpa_blacklist_add</STRONG> (ARM, 188 bytes, Stack size 40 bytes, wpa_supplicant.o(i.wpa_blacklist_add))
<BR><BR>[Calls]<UL><LI><a href="#[7968968]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_blacklist_get
<LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[8312c98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_disassoc
<LI><a href="#[7977978]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_timeout
</UL><P><STRONG><a name="[79687fc]"></a>wpa_blacklist_clear</STRONG> (ARM, 92 bytes, Stack size 32 bytes, wpa_supplicant.o(i.wpa_blacklist_clear))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[796ef34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
<LI><a href="#[8312b80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_scan_results
</UL><P><STRONG><a name="[7968968]"></a>wpa_blacklist_get</STRONG> (ARM, 68 bytes, Stack size 16 bytes, wpa_supplicant.o(i.wpa_blacklist_get))
<BR><BR>[Calls]<UL><LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
</UL><BR>[Called By]<UL><LI><a href="#[79688f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_blacklist_add
<LI><a href="#[8312530]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_bss
</UL><P><STRONG><a name="[7969630]"></a>wpa_clear_keys</STRONG> (ARM, 304 bytes, Stack size 40 bytes, wpa_supplicant.o(i.wpa_clear_keys))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[79776b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_key
<LI><a href="#[7977630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_mlme_setprotection
</UL><BR>[Called By]<UL><LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[7968388]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deauthenticate
<LI><a href="#[797336c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deinit_iface
<LI><a href="#[7968a64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_disassociate
<LI><a href="#[7967fac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_driver_init
<LI><a href="#[8312d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[8312c98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_disassoc
</UL><P><STRONG><a name="[79b048c]"></a>wpa_config_add_prio_network</STRONG> (ARM, 200 bytes, Stack size 24 bytes, config.o(i.wpa_config_add_prio_network))
<BR><BR>[Calls]<UL><LI><a href="#[7404e10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[7c38514]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
</UL><BR>[Called By]<UL><LI><a href="#[79b05f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read
</UL><P><STRONG><a name="[79b057c]"></a>wpa_config_alloc_empty</STRONG> (ARM, 92 bytes, Stack size 16 bytes, config.o(i.wpa_config_alloc_empty))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[79b03a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_strdup
</UL><BR>[Called By]<UL><LI><a href="#[79b05f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read
<LI><a href="#[797346c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface
</UL><P><STRONG><a name="[9c5c878]"></a>wpa_config_allowed_eap_method</STRONG> (ARM, 92 bytes, Stack size 4 bytes, config.o(i.wpa_config_allowed_eap_method))
<BR>[Called By]<UL><LI><a href="#[8ac79dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_buildNak
<LI><a href="#[8ac6464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_build_expanded_nak
<LI><a href="#[8ac8d0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_GET_METHOD_Enter
</UL><P><STRONG><a name="[79b02d0]"></a>wpa_config_debug_dump_networks</STRONG> (ARM, 116 bytes, Stack size 24 bytes, config.o(i.wpa_config_debug_dump_networks))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7968f58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_ssid_txt
</UL><BR>[Called By]<UL><LI><a href="#[79b05f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read
</UL><P><STRONG><a name="[79b025c]"></a>wpa_config_free</STRONG> (ARM, 132 bytes, Stack size 16 bytes, config.o(i.wpa_config_free))
<BR><BR>[Calls]<UL><LI><a href="#[79afffc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_free_ssid
<LI><a href="#[79aff0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_free_blob
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[79b05f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read
<LI><a href="#[796ef34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
<LI><a href="#[79686f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configuration
</UL><P><STRONG><a name="[79aff0c]"></a>wpa_config_free_blob</STRONG> (ARM, 40 bytes, Stack size 8 bytes, config.o(i.wpa_config_free_blob))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[79b025c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_free
<LI><a href="#[79b2044]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_blob
<LI><a href="#[9c5c598]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_remove_blob
</UL><P><STRONG><a name="[79afffc]"></a>wpa_config_free_ssid</STRONG> (ARM, 300 bytes, Stack size 8 bytes, config.o(i.wpa_config_free_ssid))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[79b025c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_free
<LI><a href="#[79b20c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_network
</UL><P><STRONG><a name="[7966ba8]"></a>wpa_config_get_blob</STRONG> (ARM, 64 bytes, Stack size 16 bytes, config.o(i.wpa_config_get_blob))
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
</UL><BR>[Called By]<UL><LI><a href="#[796e330]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_config_blob
</UL><P><STRONG><a name="[79b05f8]"></a>wpa_config_read</STRONG> (ARM, 1264 bytes, Stack size 304 bytes, config_file.o(i.wpa_config_read))
<BR><BR>[Calls]<UL><LI><a href="#[79b057c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_alloc_empty
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[79b082c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bf_fopen
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[79b20c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_network
<LI><a href="#[79b048c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_add_prio_network
<LI><a href="#[71ec834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[79b2044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_blob
<LI><a href="#[79b0414]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_set_blob
<LI><a href="#[79b03a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_strdup
<LI><a href="#[4fc2130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[79b1fcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_get_line
<LI><a href="#[79b074c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bf_fclose
<LI><a href="#[79b02d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_debug_dump_networks
<LI><a href="#[79b025c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_free
</UL><BR>[Called By]<UL><LI><a href="#[797346c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface
<LI><a href="#[79686f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configuration
</UL><P><STRONG><a name="[9c5c598]"></a>wpa_config_remove_blob</STRONG> (ARM, 100 bytes, Stack size 24 bytes, config.o(i.wpa_config_remove_blob))
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[79aff0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_free_blob
</UL><BR>[Called By]<UL><LI><a href="#[79b0414]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_set_blob
</UL><P><STRONG><a name="[79b0078]"></a>wpa_config_set</STRONG> (ARM, 200 bytes, Stack size 40 bytes, config.o(i.wpa_config_set))
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[79b20c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_network
</UL><P><STRONG><a name="[79b0414]"></a>wpa_config_set_blob</STRONG> (ARM, 36 bytes, Stack size 16 bytes, config.o(i.wpa_config_set_blob))
<BR><BR>[Calls]<UL><LI><a href="#[9c5c598]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_remove_blob
</UL><BR>[Called By]<UL><LI><a href="#[79b05f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read
<LI><a href="#[796e3b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_config_blob
</UL><P><STRONG><a name="[79b00ec]"></a>wpa_config_set_network_defaults</STRONG> (ARM, 52 bytes, Stack size 0 bytes, config.o(i.wpa_config_set_network_defaults))
<BR>[Called By]<UL><LI><a href="#[79b20c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_network
</UL><P><STRONG><a name="[79afe1c]"></a>wpa_config_update_psk</STRONG> (ARM, 76 bytes, Stack size 24 bytes, config.o(i.wpa_config_update_psk))
<BR><BR>[Calls]<UL><LI><a href="#[9c5c614]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1
<LI><a href="#[9c5c9e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_key
</UL><BR>[Called By]<UL><LI><a href="#[79b164c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_validate_network
</UL><P><STRONG><a name="[7967ad4]"></a>wpa_debug_close_file</STRONG> (ARM, 4 bytes, Stack size 0 bytes, common.o(i.wpa_debug_close_file))
<BR>[Called By]<UL><LI><a href="#[50074b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deinit
</UL><P><STRONG><a name="[79679e4]"></a>wpa_debug_open_file</STRONG> (ARM, 8 bytes, Stack size 0 bytes, common.o(i.wpa_debug_open_file))
<BR>[Called By]<UL><LI><a href="#[5007624]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
</UL><P><STRONG><a name="[9c0a39c]"></a>wpa_debug_print_timestamp</STRONG> (ARM, 44 bytes, Stack size 16 bytes, common.o(i.wpa_debug_print_timestamp))
<BR><BR>[Calls]<UL><LI><a href="#[7a5ae98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_get_time
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[9c0c48c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_wpa_hexdump
<LI><a href="#[9c0c004]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_wpa_hexdump_ascii
<LI><a href="#[79b050c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><P><STRONG><a name="[839ba48]"></a>wpa_driver_marvell_get_ssid</STRONG> (ARM, 8 bytes, Stack size 0 bytes, driver_marvell.o(i.wpa_driver_marvell_get_ssid))
<BR><BR>[Calls]<UL><LI><a href="#[839b5cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_ssid
</UL><BR>[Address Reference Count : 1]<UL><LI> driver_marvell.o(.data)
</UL><P><STRONG><a name="[839b9c8]"></a>wpa_driver_marvell_set_wpa</STRONG> (ARM, 92 bytes, Stack size 16 bytes, driver_marvell.o(i.wpa_driver_marvell_set_wpa))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[836bee0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_wpa_ie
</UL><BR>[Called By]<UL><LI><a href="#[836e000]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_associate
<LI><a href="#[836e3ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_deinit
<LI><a href="#[836b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_mlme
<LI><a href="#[836df7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_auth_alg
<LI><a href="#[836e320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_countermeasures
</UL><BR>[Address Reference Count : 1]<UL><LI> driver_marvell.o(.data)
</UL><P><STRONG><a name="[8401a80]"></a>wpa_driver_wext_alternative_ifindex</STRONG> (ARM, 76 bytes, Stack size 16 bytes, driver_wext.o(i.wpa_driver_wext_alternative_ifindex))
<BR><BR>[Calls]<UL><LI><a href="#[5da86ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;if_nametoindex
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
</UL><P><STRONG><a name="[839b2f8]"></a>wpa_driver_wext_deinit</STRONG> (ARM, 132 bytes, Stack size 8 bytes, driver_wext.o(i.wpa_driver_wext_deinit))
<BR><BR>[Calls]<UL><LI><a href="#[7969720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[8401c88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_bssid
<LI><a href="#[8406c44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_send_oper_ifla
<LI><a href="#[9be37d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_unregister_read_sock
<LI><a href="#[9add0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pipe_destroy
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[836e3ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_deinit
<LI><a href="#[836e42c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_init
</UL><P><STRONG><a name="[839b54c]"></a>wpa_driver_wext_get_bssid</STRONG> (ARM, 112 bytes, Stack size 48 bytes, driver_wext.o(i.wpa_driver_wext_get_bssid))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[836e528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_get_bssid
</UL><P><STRONG><a name="[8401b88]"></a>wpa_driver_wext_get_ifflags</STRONG> (ARM, 112 bytes, Stack size 48 bytes, driver_wext.o(i.wpa_driver_wext_get_ifflags))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
</UL><BR>[Called By]<UL><LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
</UL><P><STRONG><a name="[839b4c4]"></a>wpa_driver_wext_get_scan_results</STRONG> (ARM, 1928 bytes, Stack size 168 bytes, driver_wext.o(i.wpa_driver_wext_get_scan_results))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5b5dad8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv10
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[71ec834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[9c5ca58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hexstr2bin
<LI><a href="#[8401a14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;qsort
</UL><BR>[Called By]<UL><LI><a href="#[836e190]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_get_scan_results
</UL><P><STRONG><a name="[839b5cc]"></a>wpa_driver_wext_get_ssid</STRONG> (ARM, 156 bytes, Stack size 48 bytes, driver_wext.o(i.wpa_driver_wext_get_ssid))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
</UL><BR>[Called By]<UL><LI><a href="#[839ba48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_get_ssid
</UL><P><STRONG><a name="[839b3c4]"></a>wpa_driver_wext_init</STRONG> (ARM, 404 bytes, Stack size 48 bytes, driver_wext.o(i.wpa_driver_wext_init))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[75ee8cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pipe_create
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[7967398]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_read_sock
<LI><a href="#[83acfc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_flush_pmkid
<LI><a href="#[839b84c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_mode
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[8401b88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_ifflags
<LI><a href="#[8401b08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_ifflags
<LI><a href="#[8406cc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_range
<LI><a href="#[8401c08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_region
<LI><a href="#[5da86ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;if_nametoindex
<LI><a href="#[8401de4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_kernel_driver_wext_set_param
<LI><a href="#[71ec834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[8401a80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_alternative_ifindex
<LI><a href="#[8406c44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_send_oper_ifla
</UL><BR>[Called By]<UL><LI><a href="#[836e42c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_init
</UL><P><STRONG><a name="[839b6d0]"></a>wpa_driver_wext_scan</STRONG> (ARM, 316 bytes, Stack size 376 bytes, driver_wext.o(i.wpa_driver_wext_scan))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4ced1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memset
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[7969720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[79696a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
</UL><BR>[Called By]<UL><LI><a href="#[836e218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_scan
</UL><P><STRONG><a name="[839b64c]"></a>wpa_driver_wext_scan_timeout</STRONG> (ARM, 40 bytes, Stack size 8 bytes, driver_wext.o(i.wpa_driver_wext_scan_timeout))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7968bd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event
</UL><BR>[Address Reference Count : 4]<UL><LI> driver_marvell.o(i.wpa_driver_marvell_scan)
<LI> driver_wext.o(i.wpa_driver_wext_deinit)
<LI> driver_wext.o(i.wpa_driver_wext_event_wireless)
<LI> driver_wext.o(i.wpa_driver_wext_scan)
</UL><P><STRONG><a name="[8401c88]"></a>wpa_driver_wext_set_bssid</STRONG> (ARM, 140 bytes, Stack size 48 bytes, driver_wext.o(i.wpa_driver_wext_set_bssid))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
</UL><BR>[Called By]<UL><LI><a href="#[839b2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_deinit
</UL><P><STRONG><a name="[839b7cc]"></a>wpa_driver_wext_set_freq</STRONG> (ARM, 116 bytes, Stack size 48 bytes, driver_wext.o(i.wpa_driver_wext_set_freq))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
</UL><BR>[Called By]<UL><LI><a href="#[836e000]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_associate
</UL><P><STRONG><a name="[8401b08]"></a>wpa_driver_wext_set_ifflags</STRONG> (ARM, 100 bytes, Stack size 48 bytes, driver_wext.o(i.wpa_driver_wext_set_ifflags))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
</UL><BR>[Called By]<UL><LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
</UL><P><STRONG><a name="[839b84c]"></a>wpa_driver_wext_set_mode</STRONG> (ARM, 112 bytes, Stack size 48 bytes, driver_wext.o(i.wpa_driver_wext_set_mode))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
</UL><BR>[Called By]<UL><LI><a href="#[836e000]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_associate
<LI><a href="#[836de74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_mode
<LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
</UL><P><STRONG><a name="[839b440]"></a>wpa_driver_wext_set_operstate</STRONG> (ARM, 84 bytes, Stack size 24 bytes, driver_wext.o(i.wpa_driver_wext_set_operstate))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[8406c44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_send_oper_ifla
</UL><BR>[Called By]<UL><LI><a href="#[836def4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_operstate
</UL><P><STRONG><a name="[8401c08]"></a>wpa_driver_wext_set_region</STRONG> (ARM, 108 bytes, Stack size 48 bytes, driver_wext.o(i.wpa_driver_wext_set_region))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
</UL><BR>[Called By]<UL><LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
</UL><P><STRONG><a name="[839b74c]"></a>wpa_driver_wext_set_ssid</STRONG> (ARM, 180 bytes, Stack size 88 bytes, driver_wext.o(i.wpa_driver_wext_set_ssid))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
</UL><BR>[Called By]<UL><LI><a href="#[836e000]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_associate
</UL><P><STRONG><a name="[7968118]"></a>wpa_hexdump</STRONG> (ARM, 28 bytes, Stack size 8 bytes, common.o(i.wpa_hexdump))
<BR><BR>[Calls]<UL><LI><a href="#[9c0c48c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_wpa_hexdump
</UL><BR>[Called By]<UL><LI><a href="#[8ac79dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_buildNak
<LI><a href="#[83ed500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_processKey
<LI><a href="#[7968edc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_set_current
<LI><a href="#[9c8bbfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_eapol_send
<LI><a href="#[9c8bcf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_receive
<LI><a href="#[9c6824c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_bssid
<LI><a href="#[9c67b6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_eap
<LI><a href="#[84029a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless
<LI><a href="#[9d005cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_dump
<LI><a href="#[9d00e70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
<LI><a href="#[9cf8200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_report_ie_mismatch
<LI><a href="#[796802c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
<LI><a href="#[79694b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_rsn_ie
<LI><a href="#[796952c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_wpa_ie
<LI><a href="#[7969434]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie
<LI><a href="#[79691c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie_default
<LI><a href="#[9d004c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_decrypt_key_data
<LI><a href="#[796e4b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_eapol_send
<LI><a href="#[8312afc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_associnfo
<LI><a href="#[9cfbebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_pmk
<LI><a href="#[9cfb384]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_gtk
<LI><a href="#[9cfb828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_ptk
<LI><a href="#[9cfbf38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_parse_ies
<LI><a href="#[9cfb48c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_rsn
<LI><a href="#[9d003b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4
<LI><a href="#[9d0043c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
<LI><a href="#[7968188]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_rx_eapol
<LI><a href="#[9cfbdc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_4
<LI><a href="#[9cfb8a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_4_of_4
</UL><P><STRONG><a name="[7968b60]"></a>wpa_hexdump_ascii</STRONG> (ARM, 28 bytes, Stack size 8 bytes, common.o(i.wpa_hexdump_ascii))
<BR><BR>[Calls]<UL><LI><a href="#[9c0c004]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_wpa_hexdump_ascii
</UL><BR>[Called By]<UL><LI><a href="#[8ac5ec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_buildIdentity
<LI><a href="#[8ac6f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_processNotify
<LI><a href="#[8ac8d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_IDENTITY_Enter
<LI><a href="#[82c8604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_str
<LI><a href="#[7976e14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan
</UL><P><STRONG><a name="[9c5cb38]"></a>wpa_hexdump_ascii_key</STRONG> (ARM, 32 bytes, Stack size 8 bytes, common.o(i.wpa_hexdump_ascii_key))
<BR><BR>[Calls]<UL><LI><a href="#[9c0c004]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_wpa_hexdump_ascii
</UL><BR>[Called By]<UL><LI><a href="#[9c68154]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_psk
<LI><a href="#[82c8604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_str
</UL><P><STRONG><a name="[9c5c9e4]"></a>wpa_hexdump_key</STRONG> (ARM, 32 bytes, Stack size 8 bytes, common.o(i.wpa_hexdump_key))
<BR><BR>[Calls]<UL><LI><a href="#[9c0c48c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_wpa_hexdump
</UL><BR>[Called By]<UL><LI><a href="#[83ed500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_processKey
<LI><a href="#[9c8bc78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_eapol_cb
<LI><a href="#[9c68154]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_psk
<LI><a href="#[9c612dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_wep_key
<LI><a href="#[79afe1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_update_psk
<LI><a href="#[9cfbe48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_pmk_to_ptk
<LI><a href="#[9d004c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_decrypt_key_data
<LI><a href="#[9cfbebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_pmk
<LI><a href="#[9cfb384]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_gtk
<LI><a href="#[9cfb728]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_pairwise_gtk
<LI><a href="#[9cfbf38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_parse_ies
</UL><P><STRONG><a name="[9afb0e0]"></a>wpa_kernel_driver_wext_send_link_event</STRONG> (ARM, 120 bytes, Stack size 16 bytes, driver_wext.o(i.wpa_kernel_driver_wext_send_link_event))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[796840c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fix_size_write
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[51ded60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wireless_send_event
</UL><P><STRONG><a name="[8401de4]"></a>wpa_kernel_driver_wext_set_param</STRONG> (ARM, 12 bytes, Stack size 0 bytes, driver_wext.o(i.wpa_kernel_driver_wext_set_param))
<BR>[Called By]<UL><LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
</UL><P><STRONG><a name="[7969aa0]"></a>wpa_msg</STRONG> (ARM, 152 bytes, Stack size 40 bytes, common.o(i.wpa_msg))
<BR><BR>[Calls]<UL><LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4c78f58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[847a724]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_notify_lower_layer_success
<LI><a href="#[8ac6f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_processNotify
<LI><a href="#[8aaed90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_request
<LI><a href="#[9c8aa08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_candidate_add
<LI><a href="#[9cf696c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_candidate_process
<LI><a href="#[9c8bc78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_eapol_cb
<LI><a href="#[9c8aaf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_init
<LI><a href="#[9c8c180]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_timeout
<LI><a href="#[8ac8e84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_FAILURE_Enter
<LI><a href="#[8ac8d0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_GET_METHOD_Enter
<LI><a href="#[8ac8d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_IDENTITY_Enter
<LI><a href="#[8ac8f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_SUCCESS_Enter
<LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
<LI><a href="#[9cf8200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_report_ie_mismatch
<LI><a href="#[796802c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
<LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[7968dd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_auth_timeout
<LI><a href="#[796904c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_scan
<LI><a href="#[8312d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[8312c98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_disassoc
<LI><a href="#[8312c08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_michael_mic_failure
<LI><a href="#[9cfbebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_pmk
<LI><a href="#[9cfb280]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_key_neg_complete
<LI><a href="#[796e534]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_notify_eapol_done
<LI><a href="#[9d00334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
<LI><a href="#[9d003b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4
<LI><a href="#[79686f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configuration
<LI><a href="#[796979c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_auth_timeout
<LI><a href="#[7968ae4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
<LI><a href="#[7969b0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[79692bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
<LI><a href="#[8311a78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_stop_countermeasures
<LI><a href="#[79770ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_suites_from_ai
<LI><a href="#[79726ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_terminate
<LI><a href="#[7977978]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_timeout
</UL><P><STRONG><a name="[9c0a324]"></a>wpa_msg_register_cb</STRONG> (ARM, 12 bytes, Stack size 0 bytes, common.o(i.wpa_msg_register_cb))
<BR>[Called By]<UL><LI><a href="#[79684f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_init
</UL><P><STRONG><a name="[7969244]"></a>wpa_parse_wpa_ie</STRONG> (ARM, 20 bytes, Stack size 0 bytes, wpa.o(i.wpa_parse_wpa_ie))
<BR><BR>[Calls]<UL><LI><a href="#[9d01260]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie_wpa
<LI><a href="#[9d011e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie_rsn
</UL><BR>[Called By]<UL><LI><a href="#[9c8a904]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_scan_results
<LI><a href="#[796748c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_parse_own_wpa_ie
<LI><a href="#[79692bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
<LI><a href="#[8310b98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ssid_bss_match
</UL><P><STRONG><a name="[79b050c]"></a>wpa_printf</STRONG> (ARM, 64 bytes, Stack size 24 bytes, common.o(i.wpa_printf))
<BR><BR>[Calls]<UL><LI><a href="#[9c0a39c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_debug_print_timestamp
<LI><a href="#[4ba28b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_vprintf
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[8aae438]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_deinit_prev_method
<LI><a href="#[8ac5ec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_buildIdentity
<LI><a href="#[8ac79dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_buildNak
<LI><a href="#[8ac6464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_build_expanded_nak
<LI><a href="#[8479ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_init
<LI><a href="#[8ac906c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_parseEapReq
<LI><a href="#[8ac8f7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_success_workaround
<LI><a href="#[83ee29c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_port_timers_tick
<LI><a href="#[796991c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_eap_fail
<LI><a href="#[796999c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_eap_success
<LI><a href="#[83f68ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_pending
<LI><a href="#[7968e58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_pmkid_attempt
<LI><a href="#[796989c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portControl
<LI><a href="#[7968308]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portEnabled
<LI><a href="#[7968288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portValid
<LI><a href="#[83ed500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_processKey
<LI><a href="#[79680a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_rx_eapol
<LI><a href="#[847a6b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_step
<LI><a href="#[83ed078]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_txLogoff
<LI><a href="#[83ef9a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_txStart
<LI><a href="#[83eda04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_txSuppRsp
<LI><a href="#[836b0e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell2param
<LI><a href="#[839b94c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell_get_subioctl_no
<LI><a href="#[839b8cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell_init_ioctl_numbers
<LI><a href="#[836bc58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell_ioctl
<LI><a href="#[9cf6560]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_add
<LI><a href="#[8354e90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_expire
<LI><a href="#[9c8a984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_get_opportunistic
<LI><a href="#[9c8aa08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_candidate_add
<LI><a href="#[9c8aaf8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_init
<LI><a href="#[9c8bcf4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_receive
<LI><a href="#[8ac8c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_DISCARD_Enter
<LI><a href="#[8ac8e84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_FAILURE_Enter
<LI><a href="#[8ac8d0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_GET_METHOD_Enter
<LI><a href="#[8ac8d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_IDENTITY_Enter
<LI><a href="#[8ac8ba0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_IDLE_Enter
<LI><a href="#[8ac9160]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_INITIALIZE_Enter
<LI><a href="#[8ac8c94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_METHOD_Enter
<LI><a href="#[8ac8e04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_NOTIFICATION_Enter
<LI><a href="#[8ac8b20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_SEND_RESPONSE_Enter
<LI><a href="#[8ac8f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_SUCCESS_Enter
<LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
<LI><a href="#[83f211c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_KEY_RX_KEY_RECEIVE_Enter
<LI><a href="#[83ed80c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_FAIL_Enter
<LI><a href="#[83ed908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_IDLE_Enter
<LI><a href="#[83ed984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_RECEIVE_Enter
<LI><a href="#[83ed888]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_REQUEST_Enter
<LI><a href="#[83ed78c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_SUCCESS_Enter
<LI><a href="#[83f20a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_Step
<LI><a href="#[83ecff4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_AUTHENTICATED_Enter
<LI><a href="#[83ecd68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_AUTHENTICATING_Enter
<LI><a href="#[83ecef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_CONNECTING_Enter
<LI><a href="#[83ecdf0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_DISCONNECTED_Enter
<LI><a href="#[83ecf78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_HELD_Enter
<LI><a href="#[83ece74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_RESTART_Enter
<LI><a href="#[83f219c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_Step
<LI><a href="#[79688f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_blacklist_add
<LI><a href="#[79687fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_blacklist_clear
<LI><a href="#[7975508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_blacklist_del
<LI><a href="#[7969630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_clear_keys
<LI><a href="#[79b02d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_debug_dump_networks
<LI><a href="#[9c67c68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_auth_alg
<LI><a href="#[9c6824c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_bssid
<LI><a href="#[9c62450]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_cipher
<LI><a href="#[9c67b6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_eap
<LI><a href="#[9c67d64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_group
<LI><a href="#[9c68344]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_int
<LI><a href="#[9c67f60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_key_mgmt
<LI><a href="#[9c67e60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_pairwise
<LI><a href="#[9c6805c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_proto
<LI><a href="#[9c68154]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_psk
<LI><a href="#[82c8604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_str
<LI><a href="#[9c612dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_wep_key
<LI><a href="#[79b05f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read
<LI><a href="#[79b2044]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_blob
<LI><a href="#[79b20c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_network
<LI><a href="#[79b0078]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_set
<LI><a href="#[79b164c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_validate_network
<LI><a href="#[836e000]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_associate
<LI><a href="#[836e108]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_deauthenticate
<LI><a href="#[836e084]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_disassociate
<LI><a href="#[836b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_mlme
<LI><a href="#[836e218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_scan
<LI><a href="#[836df7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_auth_alg
<LI><a href="#[836e320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_countermeasures
<LI><a href="#[836e294]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_drop_unencrypted
<LI><a href="#[836e4a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_key
<LI><a href="#[839b9c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_wpa
<LI><a href="#[836bee0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_wpa_ie
<LI><a href="#[8401a80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_alternative_ifindex
<LI><a href="#[8403ccc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_link
<LI><a href="#[8406d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_receive
<LI><a href="#[8403d4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_rtm_newlink
<LI><a href="#[84029a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless
<LI><a href="#[8402700]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless_custom
<LI><a href="#[84025d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless_michaelmicfailure
<LI><a href="#[8402670]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless_pmkidcand
<LI><a href="#[8406cc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_range
<LI><a href="#[839b4c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_scan_results
<LI><a href="#[839b6d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_scan
<LI><a href="#[839b64c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_scan_timeout
<LI><a href="#[8406c44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_send_oper_ifla
<LI><a href="#[839b440]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_operstate
<LI><a href="#[9d005cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_dump
<LI><a href="#[9d00e70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
<LI><a href="#[831229c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_find_assoc_pmkid
<LI><a href="#[9cfdf44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_gen_wpa_ie_rsn
<LI><a href="#[9cfdecc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_gen_wpa_ie_wpa
<LI><a href="#[9afb0e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_kernel_driver_wext_send_link_event
<LI><a href="#[7969aa0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[9d011e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie_rsn
<LI><a href="#[9d01260]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie_wpa
<LI><a href="#[9cf8200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_report_ie_mismatch
<LI><a href="#[7966c20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_aborted_cached
<LI><a href="#[7966d18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_init
<LI><a href="#[9cf6ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_key_request
<LI><a href="#[9cf6be4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_notify_assoc
<LI><a href="#[796748c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_parse_own_wpa_ie
<LI><a href="#[9cffdbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_pmksa_free_cb
<LI><a href="#[796802c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
<LI><a href="#[79694b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_rsn_ie
<LI><a href="#[796952c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_wpa_ie
<LI><a href="#[7969434]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie
<LI><a href="#[50075a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_add_iface
<LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[9cf8490]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_check_group_cipher
<LI><a href="#[796866c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_deinit
<LI><a href="#[7967680]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_wait
<LI><a href="#[7972984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_daemon
<LI><a href="#[9d004c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_decrypt_key_data
<LI><a href="#[797336c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deinit_iface
<LI><a href="#[7967fac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_driver_init
<LI><a href="#[796e4b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_eapol_send
<LI><a href="#[7968bd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event
<LI><a href="#[8312afc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_associnfo
<LI><a href="#[8312c98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_disassoc
<LI><a href="#[8312a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_interface_status
<LI><a href="#[83129e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_pmkid_candidate
<LI><a href="#[8312b80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_scan_results
<LI><a href="#[9cfbebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_pmk
<LI><a href="#[7968204]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_scan_results
<LI><a href="#[7968c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_ssid
<LI><a href="#[7967704]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_global_ctrl_iface_init
<LI><a href="#[9cf8518]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_gtk_tx_bit_workaround
<LI><a href="#[5007624]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
<LI><a href="#[796f2b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_eapol
<LI><a href="#[797346c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface
<LI><a href="#[79733ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface2
<LI><a href="#[796f23c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_wpa
<LI><a href="#[9cfb384]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_gtk
<LI><a href="#[9cfb828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_ptk
<LI><a href="#[9cfb280]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_key_neg_complete
<LI><a href="#[9cfb728]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_pairwise_gtk
<LI><a href="#[9cfbf38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_parse_ies
<LI><a href="#[9d00334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
<LI><a href="#[9cfb48c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_rsn
<LI><a href="#[9cfb404]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_wpa
<LI><a href="#[9d003b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4
<LI><a href="#[9d0043c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
<LI><a href="#[7972630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reconfig
<LI><a href="#[7967dcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_remove_iface
<LI><a href="#[7968188]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_rx_eapol
<LI><a href="#[7976e14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan
<LI><a href="#[83108f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scard_init
<LI><a href="#[8312530]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_bss
<LI><a href="#[8311f84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_config
<LI><a href="#[9cfb304]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_2
<LI><a href="#[9cfbdc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_4
<LI><a href="#[9cfb8a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_4_of_4
<LI><a href="#[796f598]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_driver
<LI><a href="#[7969b0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[79692bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
<LI><a href="#[79769d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_wpa_none_key
<LI><a href="#[8310b98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ssid_bss_match
<LI><a href="#[79770ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_suites_from_ai
<LI><a href="#[9cfb928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_validate_ie
<LI><a href="#[9d00544]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_verify_eapol_key_mic
</UL><P><STRONG><a name="[7966c20]"></a>wpa_sm_aborted_cached</STRONG> (ARM, 44 bytes, Stack size 8 bytes, wpa.o(i.wpa_sm_aborted_cached))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[796e2ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_aborted_cached
</UL><P><STRONG><a name="[7966e70]"></a>wpa_sm_deinit</STRONG> (ARM, 80 bytes, Stack size 8 bytes, wpa.o(i.wpa_sm_deinit))
<BR><BR>[Calls]<UL><LI><a href="#[9cf6c5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_deinit
<LI><a href="#[7969720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[796ef34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
</UL><P><STRONG><a name="[7966d18]"></a>wpa_sm_init</STRONG> (ARM, 124 bytes, Stack size 16 bytes, wpa.o(i.wpa_sm_init))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[9cf6cd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_init
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[796f23c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_wpa
</UL><P><STRONG><a name="[9cf6ebc]"></a>wpa_sm_key_request</STRONG> (ARM, 332 bytes, Stack size 72 bytes, wpa.o(i.wpa_sm_key_request))
<BR><BR>[Calls]<UL><LI><a href="#[9d00f60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_get_bssid
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[9d00ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_alloc_eapol
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9c0a498]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inc_byte_array
<LI><a href="#[9d00e70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
</UL><BR>[Called By]<UL><LI><a href="#[8312c08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_michael_mic_failure
</UL><P><STRONG><a name="[9cf6be4]"></a>wpa_sm_notify_assoc</STRONG> (ARM, 112 bytes, Stack size 16 bytes, wpa.o(i.wpa_sm_notify_assoc))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[7968578]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_deinit
</UL><BR>[Called By]<UL><LI><a href="#[8312d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
</UL><P><STRONG><a name="[7968874]"></a>wpa_sm_notify_disassoc</STRONG> (ARM, 40 bytes, Stack size 8 bytes, wpa.o(i.wpa_sm_notify_disassoc))
<BR><BR>[Calls]<UL><LI><a href="#[7968578]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_deinit
<LI><a href="#[9cff6a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_get_state
</UL><BR>[Called By]<UL><LI><a href="#[8312c98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_disassoc
<LI><a href="#[7977978]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_timeout
</UL><P><STRONG><a name="[796748c]"></a>wpa_sm_parse_own_wpa_ie</STRONG> (ARM, 68 bytes, Stack size 8 bytes, wpa.o(i.wpa_sm_parse_own_wpa_ie))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7969244]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie
</UL><BR>[Called By]<UL><LI><a href="#[831229c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_find_assoc_pmkid
<LI><a href="#[79770ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_suites_from_ai
</UL><P><STRONG><a name="[796802c]"></a>wpa_sm_rx_eapol</STRONG> (ARM, 796 bytes, Stack size 40 bytes, wpa.o(i.wpa_sm_rx_eapol))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9d005cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_dump
<LI><a href="#[9cf6dc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_lower_layer_success
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[9d00544]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_verify_eapol_key_mic
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[9d004c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_decrypt_key_data
<LI><a href="#[9d0043c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
<LI><a href="#[9d003b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4
<LI><a href="#[9d00334]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[7968188]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_rx_eapol
</UL><P><STRONG><a name="[79694b0]"></a>wpa_sm_set_ap_rsn_ie</STRONG> (ARM, 140 bytes, Stack size 16 bytes, wpa.o(i.wpa_sm_set_ap_rsn_ie))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[796c6cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_get_beacon_ie
<LI><a href="#[8312afc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_associnfo
<LI><a href="#[79695a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_non_wpa_policy
<LI><a href="#[79692bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
</UL><P><STRONG><a name="[796952c]"></a>wpa_sm_set_ap_wpa_ie</STRONG> (ARM, 140 bytes, Stack size 16 bytes, wpa.o(i.wpa_sm_set_ap_wpa_ie))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[796c6cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_get_beacon_ie
<LI><a href="#[8312afc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_associnfo
<LI><a href="#[79695a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_non_wpa_policy
<LI><a href="#[79692bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
</UL><P><STRONG><a name="[7969434]"></a>wpa_sm_set_assoc_wpa_ie</STRONG> (ARM, 140 bytes, Stack size 16 bytes, wpa.o(i.wpa_sm_set_assoc_wpa_ie))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[8312afc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_associnfo
<LI><a href="#[79695a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_non_wpa_policy
</UL><P><STRONG><a name="[79691c0]"></a>wpa_sm_set_assoc_wpa_ie_default</STRONG> (ARM, 204 bytes, Stack size 32 bytes, wpa.o(i.wpa_sm_set_assoc_wpa_ie_default))
<BR><BR>[Calls]<UL><LI><a href="#[9cfdf44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_gen_wpa_ie_rsn
<LI><a href="#[9cfdecc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_gen_wpa_ie_wpa
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[79692bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
</UL><P><STRONG><a name="[7968cd0]"></a>wpa_sm_set_config</STRONG> (ARM, 20 bytes, Stack size 0 bytes, wpa.o(i.wpa_sm_set_config))
<BR><BR>[Calls]<UL><LI><a href="#[9cf6b64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_notify_reconfig
</UL><BR>[Called By]<UL><LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[7968388]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deauthenticate
<LI><a href="#[7968a64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_disassociate
<LI><a href="#[79686f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configuration
<LI><a href="#[8311f84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_config
</UL><P><STRONG><a name="[79671c0]"></a>wpa_sm_set_eapol</STRONG> (ARM, 12 bytes, Stack size 0 bytes, wpa.o(i.wpa_sm_set_eapol))
<BR>[Called By]<UL><LI><a href="#[796ef34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
<LI><a href="#[79733ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface2
</UL><P><STRONG><a name="[79685f0]"></a>wpa_sm_set_fast_reauth</STRONG> (ARM, 12 bytes, Stack size 0 bytes, wpa.o(i.wpa_sm_set_fast_reauth))
<BR>[Called By]<UL><LI><a href="#[79733ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface2
<LI><a href="#[79686f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configuration
</UL><P><STRONG><a name="[7967238]"></a>wpa_sm_set_ifname</STRONG> (ARM, 16 bytes, Stack size 0 bytes, wpa.o(i.wpa_sm_set_ifname))
<BR>[Called By]<UL><LI><a href="#[79733ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface2
</UL><P><STRONG><a name="[7967148]"></a>wpa_sm_set_own_addr</STRONG> (ARM, 20 bytes, Stack size 0 bytes, wpa.o(i.wpa_sm_set_own_addr))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[79733ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface2
</UL><P><STRONG><a name="[79693bc]"></a>wpa_sm_set_param</STRONG> (ARM, 152 bytes, Stack size 0 bytes, wpa.o(i.wpa_sm_set_param))
<BR>[Called By]<UL><LI><a href="#[79733ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface2
<LI><a href="#[79695a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_non_wpa_policy
<LI><a href="#[79692bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
</UL><P><STRONG><a name="[796914c]"></a>wpa_sm_set_pmk</STRONG> (ARM, 16 bytes, Stack size 0 bytes, wpa.o(i.wpa_sm_set_pmk))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[79692bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
</UL><P><STRONG><a name="[79690cc]"></a>wpa_sm_set_pmk_from_pmksa</STRONG> (ARM, 44 bytes, Stack size 0 bytes, wpa.o(i.wpa_sm_set_pmk_from_pmksa))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
</UL><BR>[Called By]<UL><LI><a href="#[9cfbebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_pmk
<LI><a href="#[79692bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
</UL><P><STRONG><a name="[79670cc]"></a>wpa_sm_set_scard_ctx</STRONG> (ARM, 24 bytes, Stack size 0 bytes, wpa.o(i.wpa_sm_set_scard_ctx))
<BR><BR>[Calls]<UL><LI><a href="#[796704c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_register_scard_ctx
</UL><BR>[Called By]<UL><LI><a href="#[796ef34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
</UL><P><STRONG><a name="[9c5c520]"></a>wpa_snprintf_hex</STRONG> (ARM, 28 bytes, Stack size 8 bytes, common.o(i.wpa_snprintf_hex))
<BR><BR>[Calls]<UL><LI><a href="#[9c0b354]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_wpa_snprintf_hex
</UL><BR>[Called By]<UL><LI><a href="#[9c62f1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_string_hex
</UL><P><STRONG><a name="[7968f58]"></a>wpa_ssid_txt</STRONG> (ARM, 100 bytes, Stack size 16 bytes, common.o(i.wpa_ssid_txt))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[79b02d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_debug_dump_networks
<LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[8312530]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_bss
</UL><P><STRONG><a name="[50075a4]"></a>wpa_supplicant_add_iface</STRONG> (ARM, 180 bytes, Stack size 16 bytes, wpa_supplicant.o(i.wpa_supplicant_add_iface))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[797346c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface
<LI><a href="#[79733ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface2
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[797336c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deinit_iface
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[4a55a8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_main
</UL><P><STRONG><a name="[7968fcc]"></a>wpa_supplicant_associate</STRONG> (ARM, 1500 bytes, Stack size 256 bytes, wpa_supplicant.o(i.wpa_supplicant_associate))
<BR><BR>[Calls]<UL><LI><a href="#[7968f58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_ssid_txt
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[796904c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_scan
<LI><a href="#[7969434]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7968edc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_set_current
<LI><a href="#[7968e58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_pmkid_attempt
<LI><a href="#[79692bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
<LI><a href="#[79695a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_non_wpa_policy
<LI><a href="#[7969630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_clear_keys
<LI><a href="#[7976b40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_mode
<LI><a href="#[7976ac8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cipher_suite2driver
<LI><a href="#[7976a54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_set_wep_key
<LI><a href="#[79769d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_wpa_none_key
<LI><a href="#[797694c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_drop_unencrypted
<LI><a href="#[7969b0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[7968dd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_auth_timeout
<LI><a href="#[796979c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_auth_timeout
<LI><a href="#[79768d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_get_capa
<LI><a href="#[7968d48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_invalidate_cached_session
<LI><a href="#[7968cd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_config
<LI><a href="#[7969a1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_initiate_eapol
</UL><BR>[Called By]<UL><LI><a href="#[8312b80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_scan_results
<LI><a href="#[7976e14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan
</UL><P><STRONG><a name="[7968dd0]"></a>wpa_supplicant_cancel_auth_timeout</STRONG> (ARM, 52 bytes, Stack size 8 bytes, wpa_supplicant.o(i.wpa_supplicant_cancel_auth_timeout))
<BR><BR>[Calls]<UL><LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[7969720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[7975508]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_blacklist_del
</UL><BR>[Called By]<UL><LI><a href="#[796da54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_wpa_supplicant_cancel_auth_timeout
<LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[796ef34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
<LI><a href="#[8312d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[796e534]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_notify_eapol_done
</UL><P><STRONG><a name="[796904c]"></a>wpa_supplicant_cancel_scan</STRONG> (ARM, 40 bytes, Stack size 8 bytes, wpa_supplicant.o(i.wpa_supplicant_cancel_scan))
<BR><BR>[Calls]<UL><LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[7969720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
</UL><BR>[Called By]<UL><LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[796ef34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
<LI><a href="#[8312d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
</UL><P><STRONG><a name="[796866c]"></a>wpa_supplicant_ctrl_iface_deinit</STRONG> (ARM, 116 bytes, Stack size 16 bytes, ctrl_iface_udp.o(i.wpa_supplicant_ctrl_iface_deinit))
<BR><BR>[Calls]<UL><LI><a href="#[9be37d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_unregister_read_sock
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7967e4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_sleep
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[796ef34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
<LI><a href="#[79686f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configuration
</UL><P><STRONG><a name="[79684f4]"></a>wpa_supplicant_ctrl_iface_init</STRONG> (ARM, 224 bytes, Stack size 32 bytes, ctrl_iface_udp.o(i.wpa_supplicant_ctrl_iface_init))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[7a5ad64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_get_random
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[7967398]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_read_sock
<LI><a href="#[9c0a324]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg_register_cb
</UL><BR>[Called By]<UL><LI><a href="#[79733ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface2
<LI><a href="#[79686f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configuration
</UL><P><STRONG><a name="[7967680]"></a>wpa_supplicant_ctrl_iface_wait</STRONG> (ARM, 40 bytes, Stack size 8 bytes, ctrl_iface_udp.o(i.wpa_supplicant_ctrl_iface_wait))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[9be35f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_wait_for_read_sock
</UL><BR>[Called By]<UL><LI><a href="#[500752c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_run
</UL><P><STRONG><a name="[7968388]"></a>wpa_supplicant_deauthenticate</STRONG> (ARM, 140 bytes, Stack size 16 bytes, wpa_supplicant.o(i.wpa_supplicant_deauthenticate))
<BR><BR>[Calls]<UL><LI><a href="#[7969b0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[7969630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_clear_keys
<LI><a href="#[7968cd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_config
<LI><a href="#[7969820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_config
<LI><a href="#[7968308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portEnabled
<LI><a href="#[7968288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portValid
</UL><BR>[Called By]<UL><LI><a href="#[796de4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_wpa_supplicant_deauthenticate
<LI><a href="#[797336c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deinit_iface
<LI><a href="#[8312c08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_michael_mic_failure
</UL><P><STRONG><a name="[50074b0]"></a>wpa_supplicant_deinit</STRONG> (ARM, 108 bytes, Stack size 8 bytes, wpa_supplicant.o(i.wpa_supplicant_deinit))
<BR><BR>[Calls]<UL><LI><a href="#[7967dcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_remove_iface
<LI><a href="#[7967cc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_global_ctrl_iface_deinit
<LI><a href="#[7967c40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_peer_unregister_methods
<LI><a href="#[7967bcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_destroy
<LI><a href="#[7967b50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_daemonize_terminate
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[7967ad4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_debug_close_file
</UL><BR>[Called By]<UL><LI><a href="#[5007624]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
<LI><a href="#[4a55a8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_main
</UL><P><STRONG><a name="[7968a64]"></a>wpa_supplicant_disassociate</STRONG> (ARM, 156 bytes, Stack size 24 bytes, wpa_supplicant.o(i.wpa_supplicant_disassociate))
<BR><BR>[Calls]<UL><LI><a href="#[7969b0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[7969630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_clear_keys
<LI><a href="#[79689e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_mark_disassoc
<LI><a href="#[7968cd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_config
<LI><a href="#[7969820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_config
</UL><BR>[Called By]<UL><LI><a href="#[796ddc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_wpa_supplicant_disassociate
<LI><a href="#[8312d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[79686f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configuration
<LI><a href="#[7977978]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_timeout
</UL><P><STRONG><a name="[7967fac]"></a>wpa_supplicant_driver_init</STRONG> (ARM, 504 bytes, Stack size 48 bytes, wpa_supplicant.o(i.wpa_supplicant_driver_init))
<BR><BR>[Calls]<UL><LI><a href="#[797383c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_get_mac_addr
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[7967f30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;l2_packet_get_own_addr
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7967ebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;l2_packet_init
<LI><a href="#[7967e4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_sleep
<LI><a href="#[79737c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_wpa
<LI><a href="#[79768d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_get_capa
<LI><a href="#[7969630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_clear_keys
<LI><a href="#[7973748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_countermeasures
<LI><a href="#[797694c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_drop_unencrypted
<LI><a href="#[7968ae4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
</UL><BR>[Called By]<UL><LI><a href="#[8312a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_interface_status
<LI><a href="#[79733ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface2
</UL><P><STRONG><a name="[7968bd8]"></a>wpa_supplicant_event</STRONG> (ARM, 104 bytes, Stack size 0 bytes, events.o(i.wpa_supplicant_event))
<BR><BR>[Calls]<UL><LI><a href="#[8312d1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[8312c98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_disassoc
<LI><a href="#[8312c08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_michael_mic_failure
<LI><a href="#[8312b80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_scan_results
<LI><a href="#[8312afc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_associnfo
<LI><a href="#[8312a70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_interface_status
<LI><a href="#[83129e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_pmkid_candidate
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[8403ccc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_link
<LI><a href="#[84029a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless
<LI><a href="#[8402700]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless_custom
<LI><a href="#[84025d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless_michaelmicfailure
<LI><a href="#[8402670]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless_pmkidcand
<LI><a href="#[839b64c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_scan_timeout
<LI><a href="#[7976e14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan
</UL><P><STRONG><a name="[7968204]"></a>wpa_supplicant_get_scan_results</STRONG> (ARM, 240 bytes, Stack size 16 bytes, wpa_supplicant.o(i.wpa_supplicant_get_scan_results))
<BR><BR>[Calls]<UL><LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[7404e10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;realloc
</UL><BR>[Called By]<UL><LI><a href="#[8312b80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_scan_results
<LI><a href="#[796db54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_beacon_ie
</UL><P><STRONG><a name="[7968c54]"></a>wpa_supplicant_get_ssid</STRONG> (ARM, 328 bytes, Stack size 56 bytes, wpa_supplicant.o(i.wpa_supplicant_get_ssid))
<BR><BR>[Calls]<UL><LI><a href="#[7976600]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_get_bssid
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
</UL><BR>[Called By]<UL><LI><a href="#[796dccc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_wpa_supplicant_get_ssid
<LI><a href="#[7976e14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan
<LI><a href="#[8311f84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_config
</UL><P><STRONG><a name="[7967cc0]"></a>wpa_supplicant_global_ctrl_iface_deinit</STRONG> (ARM, 44 bytes, Stack size 8 bytes, ctrl_iface_udp.o(i.wpa_supplicant_global_ctrl_iface_deinit))
<BR><BR>[Calls]<UL><LI><a href="#[9be37d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_unregister_read_sock
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[50074b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deinit
</UL><P><STRONG><a name="[7967704]"></a>wpa_supplicant_global_ctrl_iface_init</STRONG> (ARM, 252 bytes, Stack size 32 bytes, ctrl_iface_udp.o(i.wpa_supplicant_global_ctrl_iface_init))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[7a5ad64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_get_random
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4ced118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bind
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[7967398]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_read_sock
</UL><BR>[Called By]<UL><LI><a href="#[5007624]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
</UL><P><STRONG><a name="[5007624]"></a>wpa_supplicant_init</STRONG> (ARM, 352 bytes, Stack size 16 bytes, wpa_supplicant.o(i.wpa_supplicant_init))
<BR><BR>[Calls]<UL><LI><a href="#[79679e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_debug_open_file
<LI><a href="#[7967964]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_peer_register_methods
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[79b03a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_strdup
<LI><a href="#[7967790]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_init
<LI><a href="#[7967704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_global_ctrl_iface_init
<LI><a href="#[7972984]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_daemon
<LI><a href="#[50074b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deinit
</UL><BR>[Called By]<UL><LI><a href="#[4a55a8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_main
</UL><P><STRONG><a name="[7969a1c]"></a>wpa_supplicant_initiate_eapol</STRONG> (ARM, 272 bytes, Stack size 40 bytes, wpa_supplicant.o(i.wpa_supplicant_initiate_eapol))
<BR><BR>[Calls]<UL><LI><a href="#[796999c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_eap_success
<LI><a href="#[796991c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_eap_fail
<LI><a href="#[796989c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portControl
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[7969820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_config
</UL><BR>[Called By]<UL><LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[7976e14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan
<LI><a href="#[8311f84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_config
</UL><P><STRONG><a name="[4a55a8c]"></a>wpa_supplicant_main</STRONG> (ARM, 404 bytes, Stack size 64 bytes, main.o(i.wpa_supplicant_main))
<BR><BR>[Calls]<UL><LI><a href="#[500770c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_program_init
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[4bba590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;open
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[5007624]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5007b20]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usage
<LI><a href="#[50075a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_add_iface
<LI><a href="#[500752c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_run
<LI><a href="#[50074b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deinit
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[5007438]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_program_deinit
</UL><BR>[Called By]<UL><LI><a href="#[4a55b04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_thread
</UL><P><STRONG><a name="[79689e0]"></a>wpa_supplicant_mark_disassoc</STRONG> (ARM, 92 bytes, Stack size 8 bytes, events.o(i.wpa_supplicant_mark_disassoc))
<BR><BR>[Calls]<UL><LI><a href="#[7969b0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[7968308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portEnabled
<LI><a href="#[7968288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portValid
<LI><a href="#[796999c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_eap_success
</UL><BR>[Called By]<UL><LI><a href="#[7968a64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_disassociate
<LI><a href="#[8312c98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_disassoc
<LI><a href="#[8312a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_interface_status
</UL><P><STRONG><a name="[79686f4]"></a>wpa_supplicant_reload_configuration</STRONG> (ARM, 364 bytes, Stack size 24 bytes, wpa_supplicant.o(i.wpa_supplicant_reload_configuration))
<BR><BR>[Calls]<UL><LI><a href="#[7968a64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_disassociate
<LI><a href="#[79b05f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_read
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[796866c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_deinit
<LI><a href="#[7968d48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_invalidate_cached_session
<LI><a href="#[796999c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_eap_success
<LI><a href="#[7969820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_config
<LI><a href="#[7968cd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_config
<LI><a href="#[79685f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_fast_reauth
<LI><a href="#[7968578]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_deinit
<LI><a href="#[79b025c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_free
<LI><a href="#[79684f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_init
<LI><a href="#[7968ae4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
</UL><BR>[Called By]<UL><LI><a href="#[7972630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reconfig
</UL><P><STRONG><a name="[7967dcc]"></a>wpa_supplicant_remove_iface</STRONG> (ARM, 108 bytes, Stack size 8 bytes, wpa_supplicant.o(i.wpa_supplicant_remove_iface))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[797336c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deinit_iface
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[50074b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deinit
</UL><P><STRONG><a name="[796979c]"></a>wpa_supplicant_req_auth_timeout</STRONG> (ARM, 148 bytes, Stack size 24 bytes, wpa_supplicant.o(i.wpa_supplicant_req_auth_timeout))
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[7969720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[79696a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
</UL><BR>[Called By]<UL><LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[8312d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[7968188]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_rx_eapol
</UL><P><STRONG><a name="[7968ae4]"></a>wpa_supplicant_req_scan</STRONG> (ARM, 88 bytes, Stack size 24 bytes, wpa_supplicant.o(i.wpa_supplicant_req_scan))
<BR><BR>[Calls]<UL><LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[7969720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[79696a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
</UL><BR>[Called By]<UL><LI><a href="#[796ded0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_wpa_supplicant_req_scan
<LI><a href="#[7967fac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_driver_init
<LI><a href="#[8312c98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_disassoc
<LI><a href="#[8312b80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_scan_results
<LI><a href="#[79686f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configuration
<LI><a href="#[7976e14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan
<LI><a href="#[8311a78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_stop_countermeasures
<LI><a href="#[7977978]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_timeout
</UL><P><STRONG><a name="[500752c]"></a>wpa_supplicant_run</STRONG> (ARM, 184 bytes, Stack size 16 bytes, wpa_supplicant.o(i.wpa_supplicant_run))
<BR><BR>[Calls]<UL><LI><a href="#[7972984]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_daemon
<LI><a href="#[7967680]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_wait
<LI><a href="#[79675fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_signal_terminate
<LI><a href="#[7967578]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_signal_reconfig
<LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4c2c128]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_init
<LI><a href="#[79725a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_register_reconfig
<LI><a href="#[7967508]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_run
</UL><BR>[Called By]<UL><LI><a href="#[4a55a8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_main
</UL><P><STRONG><a name="[7968188]"></a>wpa_supplicant_rx_eapol</STRONG> (ARM, 288 bytes, Stack size 40 bytes, wpa_supplicant.o(i.wpa_supplicant_rx_eapol))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[796979c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_auth_timeout
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[79680a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_rx_eapol
<LI><a href="#[796802c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_driver_init)
</UL><P><STRONG><a name="[83108f0]"></a>wpa_supplicant_scard_init</STRONG> (ARM, 240 bytes, Stack size 16 bytes, events.o(i.wpa_supplicant_scard_init))
<BR><BR>[Calls]<UL><LI><a href="#[8310874]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_sm_get_eap_methods
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[8312d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[8312b80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_scan_results
</UL><P><STRONG><a name="[79695a8]"></a>wpa_supplicant_set_non_wpa_policy</STRONG> (ARM, 220 bytes, Stack size 16 bytes, wpa_supplicant.o(i.wpa_supplicant_set_non_wpa_policy))
<BR><BR>[Calls]<UL><LI><a href="#[796952c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_wpa_ie
<LI><a href="#[79694b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_rsn_ie
<LI><a href="#[7969434]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie
<LI><a href="#[79693bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_param
<LI><a href="#[796933c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_clear_current
</UL><BR>[Called By]<UL><LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[8311f84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_config
</UL><P><STRONG><a name="[7969b0c]"></a>wpa_supplicant_set_state</STRONG> (ARM, 376 bytes, Stack size 64 bytes, wpa_supplicant.o(i.wpa_supplicant_set_state))
<BR><BR>[Calls]<UL><LI><a href="#[7969b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_state_txt
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[58d2b34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wsp_init_interface
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[58d2ac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wsp_set_ip_addr
<LI><a href="#[4c2be18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_signal
<LI><a href="#[7977eb8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_operstate
<LI><a href="#[58d2bac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wsp_connected_callback
<LI><a href="#[58d2c28]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wsp_connecting_callback
</UL><BR>[Called By]<UL><LI><a href="#[796dfd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_wpa_supplicant_set_state
<LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[7968388]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deauthenticate
<LI><a href="#[7968a64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_disassociate
<LI><a href="#[8312d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[79689e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_mark_disassoc
<LI><a href="#[796e534]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_notify_eapol_done
<LI><a href="#[7976e14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan
</UL><P><STRONG><a name="[79692bc]"></a>wpa_supplicant_set_suites</STRONG> (ARM, 892 bytes, Stack size 80 bytes, wpa_supplicant.o(i.wpa_supplicant_set_suites))
<BR><BR>[Calls]<UL><LI><a href="#[7969244]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[79770ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_suites_from_ai
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[79693bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_param
<LI><a href="#[796952c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_wpa_ie
<LI><a href="#[79694b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_rsn_ie
<LI><a href="#[79691c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie_default
<LI><a href="#[796914c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_pmk
<LI><a href="#[79690cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_pmk_from_pmksa
</UL><BR>[Called By]<UL><LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[8311f84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_config
</UL><P><STRONG><a name="[4a55a10]"></a>wpa_supplicant_start</STRONG> (ARM, 68 bytes, Stack size 24 bytes, CameraTest.o(i.wpa_supplicant_start))
<BR><BR>[Calls]<UL><LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
</UL><BR>[Called By]<UL><LI><a href="#[4a55678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;main
</UL><P><STRONG><a name="[7969b8c]"></a>wpa_supplicant_state_txt</STRONG> (ARM, 116 bytes, Stack size 0 bytes, wpa_supplicant.o(i.wpa_supplicant_state_txt))
<BR>[Called By]<UL><LI><a href="#[7969b0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
</UL><P><STRONG><a name="[4a55b04]"></a>wpa_thread</STRONG> (ARM, 12 bytes, Stack size 0 bytes, CameraTest.o(i.wpa_thread))
<BR><BR>[Calls]<UL><LI><a href="#[4a55a8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_main
</UL><BR>[Address Reference Count : 1]<UL><LI> CameraTest.o(i.wpa_supplicant_start)
</UL><P><STRONG><a name="[7a37a90]"></a>wpro_resp</STRONG> (ARM, 48 bytes, Stack size 8 bytes, upnp.o(i.wpro_resp))
<BR><BR>[Calls]<UL><LI><a href="#[50a236c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;recv
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[811935c]"></a>write_access_log</STRONG> (ARM, 504 bytes, Stack size 168 bytes, access_log.o(i.write_access_log))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
<LI><a href="#[891dbd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_uread4
<LI><a href="#[4cece7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_ntoa
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[544d544]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gmtime_r
<LI><a href="#[544d118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_libc_time_normalize_structtm
<LI><a href="#[891db10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strftime
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Called By]<UL><LI><a href="#[81800a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_unknown
<LI><a href="#[80eb610]">&lt&lt</a>&nbsp;&nbsp;&nbsp;log_request
</UL><P><STRONG><a name="[81ec3b8]"></a>write_body</STRONG> (ARM, 340 bytes, Stack size 40 bytes, read.o(i.write_body))
<BR><BR>[Calls]<UL><LI><a href="#[77abff4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_get
</UL><BR>[Called By]<UL><LI><a href="#[77ac390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_body
<LI><a href="#[77ac400]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_header
</UL><P><STRONG><a name="[58d2bac]"></a>wsp_connected_callback</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wlan0.o(i.wsp_connected_callback))
<BR><BR>[Calls]<UL><LI><a href="#[727b338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledSetNetwork
</UL><BR>[Called By]<UL><LI><a href="#[7969b0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
</UL><P><STRONG><a name="[58d2c28]"></a>wsp_connecting_callback</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wlan0.o(i.wsp_connecting_callback))
<BR><BR>[Calls]<UL><LI><a href="#[727b338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledSetNetwork
</UL><BR>[Called By]<UL><LI><a href="#[7969b0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
</UL><P><STRONG><a name="[4deed40]"></a>wsp_get_config_state</STRONG> (ARM, 68 bytes, Stack size 0 bytes, wpa_supplicant.o(i.wsp_get_config_state))
<BR>[Called By]<UL><LI><a href="#[4e4b2cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetIP
<LI><a href="#[4e4b754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetWlan
<LI><a href="#[71ed4c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;netstatRequest
</UL><P><STRONG><a name="[58d2b34]"></a>wsp_init_interface</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wlan0.o(i.wsp_init_interface))
<BR><BR>[Calls]<UL><LI><a href="#[4e4db00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;InitNetInterface
</UL><BR>[Called By]<UL><LI><a href="#[7969b0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
</UL><P><STRONG><a name="[7968480]"></a>wsp_reconfig</STRONG> (ARM, 44 bytes, Stack size 8 bytes, wpa_supplicant.o(i.wsp_reconfig))
<BR><BR>[Calls]<UL><LI><a href="#[796840c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fix_size_write
</UL><BR>[Called By]<UL><LI><a href="#[4def2a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_set_network_ip
<LI><a href="#[79b089c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_set_wireless_config
</UL><P><STRONG><a name="[58d2ac0]"></a>wsp_set_ip_addr</STRONG> (ARM, 20 bytes, Stack size 8 bytes, wlan0.o(i.wsp_set_ip_addr))
<BR><BR>[Calls]<UL><LI><a href="#[4dee770]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetIP
<LI><a href="#[4e4cd00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;upnp_refresh
</UL><BR>[Called By]<UL><LI><a href="#[796facc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reconfig_receiver
<LI><a href="#[7969b0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
</UL><P><STRONG><a name="[4dee8b8]"></a>wsp_set_network_adhoc</STRONG> (ARM, 260 bytes, Stack size 40 bytes, config_file.o(i.wsp_set_network_adhoc))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[79b089c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wsp_set_wireless_config
</UL><BR>[Called By]<UL><LI><a href="#[4dee9b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlan
</UL><P><STRONG><a name="[4def2a0]"></a>wsp_set_network_ip</STRONG> (ARM, 84 bytes, Stack size 16 bytes, wpa_supplicant.o(i.wsp_set_network_ip))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[7968480]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wsp_reconfig
</UL><BR>[Called By]<UL><LI><a href="#[4e4b340]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_SetIP
<LI><a href="#[71eccb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbIPRequest
</UL><P><STRONG><a name="[4dee934]"></a>wsp_set_network_managed</STRONG> (ARM, 252 bytes, Stack size 32 bytes, config_file.o(i.wsp_set_network_managed))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[79b089c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wsp_set_wireless_config
</UL><BR>[Called By]<UL><LI><a href="#[4dee9b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetWlan
</UL><P><STRONG><a name="[79b089c]"></a>wsp_set_wireless_config</STRONG> (ARM, 60 bytes, Stack size 8 bytes, wpa_supplicant.o(i.wsp_set_wireless_config))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[7968480]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wsp_reconfig
</UL><BR>[Called By]<UL><LI><a href="#[4dee8b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_set_network_adhoc
<LI><a href="#[4dee934]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wsp_set_network_managed
</UL><P><STRONG><a name="[71ecc40]"></a>wsp_wait_network_ip</STRONG> (ARM, 112 bytes, Stack size 16 bytes, wpa_supplicant.o(i.wsp_wait_network_ip))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4c2bc14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_timed_wait
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[71eccb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbIPRequest
</UL><P><STRONG><a name="[71ee9ac]"></a>xdrInt</STRONG> (ARM, 140 bytes, Stack size 8 bytes, vp_com.o(i.xdrInt))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
</UL><BR>[Called By]<UL><LI><a href="#[71ed534]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_getPPP
<LI><a href="#[71ed684]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_setPPP
<LI><a href="#[71ee7e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrIterStru
<LI><a href="#[71ee58c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrUserSettingStru
<LI><a href="#[71ee148]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdremailSettingStru
<LI><a href="#[71ee058]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrftpSettingStru
<LI><a href="#[71ee23c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrimageSettingStru
<LI><a href="#[71edb98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrinitialInfoStru
<LI><a href="#[71edf68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdripSettingStru
<LI><a href="#[71ee67c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrpointerArrayStru
<LI><a href="#[71ee330]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrrequestStatusStru
<LI><a href="#[71edd78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrsystemSettingStru
<LI><a href="#[71ed7d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrwlanAPArrayStru
</UL><P><STRONG><a name="[71ee7e0]"></a>xdrIterStru</STRONG> (ARM, 68 bytes, Stack size 16 bytes, vp_com.o(i.xdrIterStru))
<BR><BR>[Calls]<UL><LI><a href="#[71ee9ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrInt
</UL><BR>[Called By]<UL><LI><a href="#[71edb98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrinitialInfoStru
</UL><P><STRONG><a name="[71ee770]"></a>xdrString</STRONG> (ARM, 104 bytes, Stack size 16 bytes, vp_com.o(i.xdrString))
<BR><BR>[Calls]<UL><LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
</UL><BR>[Called By]<UL><LI><a href="#[71ed214]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbCustomRequest
<LI><a href="#[71ee58c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrUserSettingStru
<LI><a href="#[71ee148]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdremailSettingStru
<LI><a href="#[71ee058]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrftpSettingStru
<LI><a href="#[71edb98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrinitialInfoStru
<LI><a href="#[71ee4a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrlogonReqStru
<LI><a href="#[71ee67c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrpointerArrayStru
<LI><a href="#[71ee330]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrrequestStatusStru
<LI><a href="#[71edd78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrsystemSettingStru
<LI><a href="#[71ed8c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrwlanAPEntryStru
<LI><a href="#[71edc88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrwlanSettingStru
</UL><P><STRONG><a name="[71eea18]"></a>xdrStringLenth</STRONG> (ARM, 28 bytes, Stack size 8 bytes, vp_com.o(i.xdrStringLenth))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
</UL><BR>[Called By]<UL><LI><a href="#[71edc10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrinitialInfoLenth
<LI><a href="#[71ee6f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrpointerArrayLenth
<LI><a href="#[71ee424]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrrequestStatusLenth
<LI><a href="#[71ed93c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrwlanAPEntryLenth
<LI><a href="#[71edd00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrwlanSettingLenth
</UL><P><STRONG><a name="[71ee8c4]"></a>xdrUnsignedInt</STRONG> (ARM, 140 bytes, Stack size 8 bytes, vp_com.o(i.xdrUnsignedInt))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
</UL><BR>[Called By]<UL><LI><a href="#[71ece7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;firmwareRequst
<LI><a href="#[71ed4c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;netstatRequest
<LI><a href="#[71edf68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdripSettingStru
<LI><a href="#[71ed8c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrwlanAPEntryStru
<LI><a href="#[71edc88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrwlanSettingStru
</UL><P><STRONG><a name="[71ee58c]"></a>xdrUserSettingStru</STRONG> (ARM, 128 bytes, Stack size 16 bytes, vp_com.o(i.xdrUserSettingStru))
<BR><BR>[Calls]<UL><LI><a href="#[71ee9ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrInt
<LI><a href="#[71ee770]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrString
</UL><BR>[Called By]<UL><LI><a href="#[71ecb5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;authRequest
</UL><P><STRONG><a name="[71ee148]"></a>xdremailSettingStru</STRONG> (ARM, 128 bytes, Stack size 16 bytes, vp_com.o(i.xdremailSettingStru))
<BR><BR>[Calls]<UL><LI><a href="#[71ee9ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrInt
<LI><a href="#[71ee770]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrString
</UL><BR>[Called By]<UL><LI><a href="#[71ecd9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailRequest
</UL><P><STRONG><a name="[71ee058]"></a>xdrftpSettingStru</STRONG> (ARM, 112 bytes, Stack size 16 bytes, vp_com.o(i.xdrftpSettingStru))
<BR><BR>[Calls]<UL><LI><a href="#[71ee9ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrInt
<LI><a href="#[71ee770]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrString
</UL><BR>[Called By]<UL><LI><a href="#[71ecd2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FTPRequest
</UL><P><STRONG><a name="[71ee23c]"></a>xdrimageSettingStru</STRONG> (ARM, 96 bytes, Stack size 16 bytes, vp_com.o(i.xdrimageSettingStru))
<BR><BR>[Calls]<UL><LI><a href="#[71ee9ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrInt
</UL><BR>[Called By]<UL><LI><a href="#[71ecbcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;imageRequest
</UL><P><STRONG><a name="[71edc10]"></a>xdrinitialInfoLenth</STRONG> (ARM, 68 bytes, Stack size 16 bytes, vp_com.o(i.xdrinitialInfoLenth))
<BR><BR>[Calls]<UL><LI><a href="#[71ee6f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrpointerArrayLenth
<LI><a href="#[71edd00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrwlanSettingLenth
<LI><a href="#[71eea18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrStringLenth
</UL><BR>[Called By]<UL><LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
</UL><P><STRONG><a name="[71edb98]"></a>xdrinitialInfoStru</STRONG> (ARM, 288 bytes, Stack size 24 bytes, vp_com.o(i.xdrinitialInfoStru))
<BR><BR>[Calls]<UL><LI><a href="#[71ee9ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrInt
<LI><a href="#[71ee7e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrIterStru
<LI><a href="#[71ee67c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrpointerArrayStru
<LI><a href="#[71edf68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdripSettingStru
<LI><a href="#[71edc88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrwlanSettingStru
<LI><a href="#[71edd00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrwlanSettingLenth
<LI><a href="#[71ee770]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrString
</UL><BR>[Called By]<UL><LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
</UL><P><STRONG><a name="[71edf68]"></a>xdripSettingStru</STRONG> (ARM, 128 bytes, Stack size 16 bytes, vp_com.o(i.xdripSettingStru))
<BR><BR>[Calls]<UL><LI><a href="#[71ee9ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrInt
<LI><a href="#[71ee8c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrUnsignedInt
</UL><BR>[Called By]<UL><LI><a href="#[71ed450]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getIPInfo
<LI><a href="#[71eccb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbIPRequest
<LI><a href="#[71edb98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrinitialInfoStru
</UL><P><STRONG><a name="[71ee4a0]"></a>xdrlogonReqStru</STRONG> (ARM, 48 bytes, Stack size 16 bytes, vp_com.o(i.xdrlogonReqStru))
<BR><BR>[Calls]<UL><LI><a href="#[71ee770]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrString
</UL><BR>[Called By]<UL><LI><a href="#[71eca78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;logonRequest
</UL><P><STRONG><a name="[71ee6f4]"></a>xdrpointerArrayLenth</STRONG> (ARM, 60 bytes, Stack size 16 bytes, vp_com.o(i.xdrpointerArrayLenth))
<BR><BR>[Calls]<UL><LI><a href="#[71eea18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrStringLenth
</UL><BR>[Called By]<UL><LI><a href="#[71edc10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrinitialInfoLenth
</UL><P><STRONG><a name="[71ee67c]"></a>xdrpointerArrayStru</STRONG> (ARM, 88 bytes, Stack size 16 bytes, vp_com.o(i.xdrpointerArrayStru))
<BR><BR>[Calls]<UL><LI><a href="#[71ee9ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrInt
<LI><a href="#[71ee770]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrString
</UL><BR>[Called By]<UL><LI><a href="#[71edb98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrinitialInfoStru
</UL><P><STRONG><a name="[71ee424]"></a>xdrrequestStatusLenth</STRONG> (ARM, 32 bytes, Stack size 8 bytes, vp_com.o(i.xdrrequestStatusLenth))
<BR><BR>[Calls]<UL><LI><a href="#[71eea18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrStringLenth
<LI><a href="#[71ee3ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WRGetProductVersion
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
<LI><a href="#[71ed6f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;statusReply
</UL><P><STRONG><a name="[71ee330]"></a>xdrrequestStatusStru</STRONG> (ARM, 80 bytes, Stack size 24 bytes, vp_com.o(i.xdrrequestStatusStru))
<BR><BR>[Calls]<UL><LI><a href="#[71ee3ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WRGetProductVersion
<LI><a href="#[71ee9ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrInt
<LI><a href="#[71ee770]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrString
</UL><BR>[Called By]<UL><LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
<LI><a href="#[71ed6f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;statusReply
</UL><P><STRONG><a name="[71edd78]"></a>xdrsystemSettingStru</STRONG> (ARM, 96 bytes, Stack size 16 bytes, vp_com.o(i.xdrsystemSettingStru))
<BR><BR>[Calls]<UL><LI><a href="#[71ee9ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrInt
<LI><a href="#[71ee770]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrString
</UL><BR>[Called By]<UL><LI><a href="#[71ecf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;systemRequest
</UL><P><STRONG><a name="[71ed84c]"></a>xdrwlanAPArrayLenth</STRONG> (ARM, 60 bytes, Stack size 24 bytes, vp_com.o(i.xdrwlanAPArrayLenth))
<BR><BR>[Calls]<UL><LI><a href="#[71ed93c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrwlanAPEntryLenth
</UL><BR>[Called By]<UL><LI><a href="#[71ed3d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;freshWlanRequest
</UL><P><STRONG><a name="[71ed7d4]"></a>xdrwlanAPArrayStru</STRONG> (ARM, 96 bytes, Stack size 24 bytes, vp_com.o(i.xdrwlanAPArrayStru))
<BR><BR>[Calls]<UL><LI><a href="#[71ee9ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrInt
<LI><a href="#[71ed8c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrwlanAPEntryStru
<LI><a href="#[71ed93c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrwlanAPEntryLenth
</UL><BR>[Called By]<UL><LI><a href="#[71ed3d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;freshWlanRequest
</UL><P><STRONG><a name="[71ed93c]"></a>xdrwlanAPEntryLenth</STRONG> (ARM, 20 bytes, Stack size 8 bytes, vp_com.o(i.xdrwlanAPEntryLenth))
<BR><BR>[Calls]<UL><LI><a href="#[71eea18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrStringLenth
</UL><BR>[Called By]<UL><LI><a href="#[71ed84c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrwlanAPArrayLenth
<LI><a href="#[71ed7d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrwlanAPArrayStru
</UL><P><STRONG><a name="[71ed8c4]"></a>xdrwlanAPEntryStru</STRONG> (ARM, 96 bytes, Stack size 16 bytes, vp_com.o(i.xdrwlanAPEntryStru))
<BR><BR>[Calls]<UL><LI><a href="#[71ee8c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrUnsignedInt
<LI><a href="#[71ee770]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrString
</UL><BR>[Called By]<UL><LI><a href="#[71ed7d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrwlanAPArrayStru
</UL><P><STRONG><a name="[71edd00]"></a>xdrwlanSettingLenth</STRONG> (ARM, 108 bytes, Stack size 16 bytes, vp_com.o(i.xdrwlanSettingLenth))
<BR><BR>[Calls]<UL><LI><a href="#[71eea18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrStringLenth
</UL><BR>[Called By]<UL><LI><a href="#[71edc10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrinitialInfoLenth
<LI><a href="#[71edb98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrinitialInfoStru
</UL><P><STRONG><a name="[71edc88]"></a>xdrwlanSettingStru</STRONG> (ARM, 160 bytes, Stack size 16 bytes, vp_com.o(i.xdrwlanSettingStru))
<BR><BR>[Calls]<UL><LI><a href="#[71ee8c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrUnsignedInt
<LI><a href="#[71ee770]">&gt&gt</a>&nbsp;&nbsp;&nbsp;xdrString
</UL><BR>[Called By]<UL><LI><a href="#[71ed1a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbWlanRequest
<LI><a href="#[71edb98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;xdrinitialInfoStru
</UL><P><STRONG><a name="[81997c8]"></a>yy_create_buffer</STRONG> (ARM, 92 bytes, Stack size 24 bytes, conf_scan.o(i.yy_create_buffer))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[8199a10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;scanner_error
<LI><a href="#[81998ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;yy_init_buffer
</UL><BR>[Called By]<UL><LI><a href="#[81996ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yylex
<LI><a href="#[8199758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yyrestart
</UL><P><STRONG><a name="[8199920]"></a>yy_flush_buffer</STRONG> (ARM, 72 bytes, Stack size 0 bytes, conf_scan.o(i.yy_flush_buffer))
<BR><BR>[Calls]<UL><LI><a href="#[8199994]">&gt&gt</a>&nbsp;&nbsp;&nbsp;yy_load_buffer_state
</UL><BR>[Called By]<UL><LI><a href="#[81998ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yy_init_buffer
</UL><P><STRONG><a name="[81998ac]"></a>yy_init_buffer</STRONG> (ARM, 72 bytes, Stack size 8 bytes, conf_scan.o(i.yy_init_buffer))
<BR><BR>[Calls]<UL><LI><a href="#[8199920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;yy_flush_buffer
<LI><a href="#[8199840]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fileno
<LI><a href="#[4bfe510]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isatty
</UL><BR>[Called By]<UL><LI><a href="#[81997c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yy_create_buffer
<LI><a href="#[8199758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yyrestart
</UL><P><STRONG><a name="[8199994]"></a>yy_load_buffer_state</STRONG> (ARM, 48 bytes, Stack size 0 bytes, conf_scan.o(i.yy_load_buffer_state))
<BR>[Called By]<UL><LI><a href="#[8199920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yy_flush_buffer
<LI><a href="#[81996ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yylex
<LI><a href="#[8199758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yyrestart
</UL><P><STRONG><a name="[81996ec]"></a>yylex</STRONG> (ARM, 1004 bytes, Stack size 40 bytes, conf_scan.o(i.yylex))
<BR><BR>[Calls]<UL><LI><a href="#[81997c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;yy_create_buffer
<LI><a href="#[8199994]">&gt&gt</a>&nbsp;&nbsp;&nbsp;yy_load_buffer_state
<LI><a href="#[4dee704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[8199614]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fwrite
<LI><a href="#[819b404]">&gt&gt</a>&nbsp;&nbsp;&nbsp;yy_get_previous_state
<LI><a href="#[819b38c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;yy_try_NUL_trans
<LI><a href="#[819b314]">&gt&gt</a>&nbsp;&nbsp;&nbsp;yy_get_next_buffer
<LI><a href="#[8199a10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;scanner_error
</UL><BR>[Called By]<UL><LI><a href="#[7f3e3f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_next_token
</UL><P><STRONG><a name="[8199758]"></a>yyrestart</STRONG> (ARM, 60 bytes, Stack size 16 bytes, conf_scan.o(i.yyrestart))
<BR><BR>[Calls]<UL><LI><a href="#[81997c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;yy_create_buffer
<LI><a href="#[81998ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;yy_init_buffer
<LI><a href="#[8199994]">&gt&gt</a>&nbsp;&nbsp;&nbsp;yy_load_buffer_state
</UL><BR>[Called By]<UL><LI><a href="#[819b314]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yy_get_next_buffer
</UL><P><STRONG><a name="[74baa30]"></a>Cyg_Mboxt2<void*, 10>::wakeup_putter()</STRONG> (ARM, 96 bytes, Stack size 8 bytes, mbox.o(t.wakeup_putter__19Cyg_Mboxt2__tPvX10YFv))
<BR><BR>[Calls]<UL><LI><a href="#[7509ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::dequeue()
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
</UL><BR>[Called By]<UL><LI><a href="#[4c2db7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::get()
<LI><a href="#[4c2da8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::get(unsigned long long)
<LI><a href="#[4c2d9a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Mbox::tryget()
</UL><P><STRONG><a name="[4f74894]"></a>_d2f</STRONG> (ARM, 436 bytes, Stack size 24 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Calls]<UL><LI><a href="#[8f60ca8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;d2f_uncommon
<LI><a href="#[8f60c38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;d2f_roundup
<LI><a href="#[8f60bc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;d2f_roundeven
<LI><a href="#[8f60b54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;d2f_rounded
<LI><a href="#[8f60ae0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;d2f_underflow
<LI><a href="#[8f60a6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;d2f_overflow
<LI><a href="#[8f6065c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
<LI><a href="#[8f607bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fp_trapveneer
<LI><a href="#[8f60830]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__funder
<LI><a href="#[8f60918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f609fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;d2f_naninf
<LI><a href="#[8f6098c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;d2f_renorm
<LI><a href="#[8f60d6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;d2f_main
<LI><a href="#[8f608a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[8f60748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL><BR>[Called By]<UL><LI><a href="#[84c0170]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vfscanf
<LI><a href="#[4f73dbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;clamp_angle
<LI><a href="#[8335700]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_distance_between_waypoints
<LI><a href="#[83355e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mark_waypoints_as_good_and_bad_using_dist
<LI><a href="#[5c07b40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;move_rovio_towards_target
<LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f73f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_waypoint
<LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
<LI><a href="#[4f740d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_replay_path_between_rooms
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
<LI><a href="#[4f749e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_rovio_pose
</UL><P><STRONG><a name="[8f606d4]"></a>__fpl_inf_d2f</STRONG> (ARM, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f), UNUSED)
<P><STRONG><a name="[4f745fc]"></a>_dadd</STRONG> (ARM, 492 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Calls]<UL><LI><a href="#[8f5fa74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dadd_naninf
<LI><a href="#[8f5fa08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[8f5f994]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dadd_swapped
<LI><a href="#[8f5f920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dadd_uncommon
<LI><a href="#[8f5f8ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dadd_bigshift
<LI><a href="#[8f5f83c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dadd_carry
<LI><a href="#[8f60918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f5fe58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dadd_nocarry
<LI><a href="#[8f5f7bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dadd_check_overflow_exact
<LI><a href="#[8f5fde4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dadd_roundeven
<LI><a href="#[8f5fd68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dadd_check_overflow_inx
<LI><a href="#[8f5f74c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dadd_bzero
<LI><a href="#[8f5fcf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dadd_doadd
<LI><a href="#[8f5f6d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;daddsub_denorm
<LI><a href="#[8f5ef38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[8f60748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[8f5f668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dadd_twoinf
<LI><a href="#[8f5f5f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;drsb_naninf
<LI><a href="#[8f5fc8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd1
<LI><a href="#[8f5f588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dsub_naninf
<LI><a href="#[8f5f514]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dsub_swapped
<LI><a href="#[8f5f4a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dsub_uncommon
<LI><a href="#[8f5f42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dsub_bigshift
<LI><a href="#[8f5f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dsub_borrow
<LI><a href="#[8f5f348]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dsub_hugeshift
<LI><a href="#[8f5fc18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dsub_noborrow
<LI><a href="#[8f5f2d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dsub_renormalize
<LI><a href="#[8f5f260]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dsub_ex_one
<LI><a href="#[8f5fb34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dsub_retzero
<LI><a href="#[8f5f1ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dsub_renormbig
<LI><a href="#[8f5f178]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dsub_renormed
<LI><a href="#[8f5eec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__dunder
<LI><a href="#[8f5f108]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dsub_denorm
<LI><a href="#[8f5f098]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dsub_bzero
<LI><a href="#[8f5f020]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dsub_both_denorm
<LI><a href="#[8f5fba8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dsub_dosub
<LI><a href="#[8f5ee58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__dunder_d
<LI><a href="#[8f5efb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dsub_twoinf
</UL><BR>[Called By]<UL><LI><a href="#[5c89038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cvt(double, int, int, char*, int, char*, char*)
<LI><a href="#[7416038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__ieee754_sqrt
<LI><a href="#[7412658]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__ieee754_atan2
<LI><a href="#[740f5e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[740f56c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[740f658]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[5cc2994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_rem_pio2
<LI><a href="#[5ce5894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rint
<LI><a href="#[5cc6628]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_atan
<LI><a href="#[84edca8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_floor
<LI><a href="#[84edd1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;scalbn
<LI><a href="#[8c6c42c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapGenChallenge
<LI><a href="#[8a61c88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_strtod
<LI><a href="#[5775c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPDataToTime
<LI><a href="#[5774410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;UnpackNTP
<LI><a href="#[4f73dbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;clamp_angle
<LI><a href="#[5774564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;current_time
<LI><a href="#[83355e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mark_waypoints_as_good_and_bad_using_dist
<LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[7a3b2bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_recv_response
<LI><a href="#[4f749e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_rovio_pose
</UL><P><STRONG><a name="[8f5ede4]"></a>__fpl_inf_dadd</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<P><STRONG><a name="[4f74668]"></a>_drsb</STRONG> (ARM, 68 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[7412658]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__ieee754_atan2
<LI><a href="#[740f5e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[740f56c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[740f658]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[5cc2994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_rem_pio2
<LI><a href="#[5cc6628]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_atan
<LI><a href="#[5774480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PackNTP
<LI><a href="#[57745d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;convert_time
<LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f749e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_rovio_pose
</UL><P><STRONG><a name="[4f73c68]"></a>_dsub</STRONG> (ARM, 644 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f747b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_cos
<LI><a href="#[4f746d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_sin
<LI><a href="#[7416038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__ieee754_sqrt
<LI><a href="#[7412658]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__ieee754_atan2
<LI><a href="#[740f5e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[740f56c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[740f658]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[5cc2994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_rem_pio2
<LI><a href="#[5ce5894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rint
<LI><a href="#[5c88fb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_modf
<LI><a href="#[5cc6628]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_atan
<LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
<LI><a href="#[5775c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPDataToTime
<LI><a href="#[5774480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PackNTP
<LI><a href="#[4f73dbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;clamp_angle
<LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f73f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_waypoint
<LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[8f5ed70]"></a>__fpl_inf_dsub</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<P><STRONG><a name="[8f5ef38]"></a>__fpl_dcheck_NaN2</STRONG> (ARM, 64 bytes, Stack size 8 bytes, dcheck.o(x$fpl$dcheck))
<BR><BR>[Calls]<UL><LI><a href="#[8f70654]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dcheck_except
<LI><a href="#[8f705dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[8f60918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
</UL><BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[8f5c2ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
<LI><a href="#[4f73bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[4f74748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dmul
</UL><P><STRONG><a name="[8f608a0]"></a>__fpl_dcheck_NaN1</STRONG> (ARM, 24 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[8f60918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f705dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL><BR>[Called By]<UL><LI><a href="#[4f74894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[4e4cde8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[77e7298]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[7a377e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_ufrom_d
</UL><P><STRONG><a name="[8f5c2ec]"></a>__fpl_dcmp_InfNaN</STRONG> (ARM, 104 bytes, Stack size 4 bytes, dcmpin.o(x$fpl$dcmpinfnan))
<BR><BR>[Calls]<UL><LI><a href="#[8f6fde4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dcmp_found_NaN
<LI><a href="#[8f60748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[8f6fd74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dcmp_neg
<LI><a href="#[8f6fd00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dcmp_clear_v
<LI><a href="#[8f60918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f5ef38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL><BR>[Called By]<UL><LI><a href="#[74125ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[4f741d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[4f73d50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL><P><STRONG><a name="[8f6fc8c]"></a>__fpl_inf_dcmp</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<P><STRONG><a name="[8f6d4f0]"></a>__32__fpl_fcmp_InfNaN</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fcmpin.o(x$fpl$dcmpinfnan))
<BR><BR>[Calls]<UL><LI><a href="#[8f6d6c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fcmp_found_NaN
<LI><a href="#[8f60748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL><BR>[Called By]<UL><LI><a href="#[4f73e98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fcmpge
<LI><a href="#[4f73f7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL><P><STRONG><a name="[8f7295c]"></a>__fpl_fcmp_InfNaN</STRONG> (ARM, 76 bytes, Stack size 0 bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<P><STRONG><a name="[8f6d56c]"></a>__fpl_inf_fcmp</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f6d654]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fcmp_neg
<LI><a href="#[8f6d5e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fcmp_clear_v
</UL><P><STRONG><a name="[5cc9f44]"></a>_drdiv</STRONG> (ARM, 32 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Calls]<UL><LI><a href="#[8f5d9bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ddiv_entry
</UL><BR>[Called By]<UL><LI><a href="#[7416038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__ieee754_sqrt
<LI><a href="#[5cc6628]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_atan
<LI><a href="#[8a61c88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_strtod
</UL><P><STRONG><a name="[4f73bfc]"></a>_ddiv</STRONG> (ARM, 680 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Calls]<UL><LI><a href="#[8f5d94c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ddiv_naninf
<LI><a href="#[8f5d8d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ddiv_zerodenorm
<LI><a href="#[8f5d374]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ddiv_mantissas
<LI><a href="#[8f5d868]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ddiv_exact
<LI><a href="#[8f5db64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ddiv_rounded
<LI><a href="#[8f5d7f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ddiv_outflow
<LI><a href="#[8f5eec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__dunder
<LI><a href="#[8f60918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f5d784]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ddiv_azero
<LI><a href="#[8f5d710]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ddiv_divbyzero
<LI><a href="#[8f5d69c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ddiv_renorm_op2
<LI><a href="#[8f5d628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ddiv_renorm_op1
<LI><a href="#[8f5daf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ddiv_normalised
<LI><a href="#[8f5d5b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ddiv_ivo_pop
<LI><a href="#[8f5da7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ddiv_done_op2
<LI><a href="#[8f5ef38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[8f60748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[8f5d540]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ddiv_xoverinf
<LI><a href="#[8f5d4d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ddiv_ivo
</UL><BR>[Called By]<UL><LI><a href="#[5c89038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cvt(double, int, int, char*, int, char*, char*)
<LI><a href="#[7412658]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__ieee754_atan2
<LI><a href="#[9ac1488]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_drand48
<LI><a href="#[5c07b40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;move_rovio_towards_target
<LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
<LI><a href="#[77e8878]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtcp_send
</UL><P><STRONG><a name="[8f5d3e8]"></a>__fpl_inf_ddiv</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<P><STRONG><a name="[8f5d374]"></a>ddiv_mantissas</STRONG> (ARM, 600 bytes, Stack size 28 bytes, ddiv.o(x$fpl$ddiv))
<BR>[Called By]<UL><LI><a href="#[4f73bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL><P><STRONG><a name="[74125ec]"></a>_dcmpeq</STRONG> (ARM, 124 bytes, Stack size 0 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Calls]<UL><LI><a href="#[8f5c4d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpeq_negative
<LI><a href="#[8f5c458]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpeq_check_NaNInf_pos
<LI><a href="#[8f5c3e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dcmpeq_InfNaN
<LI><a href="#[8f5c364]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpeq_check_NaNInf_neg
<LI><a href="#[8f5c2ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL><BR>[Called By]<UL><LI><a href="#[4f74900]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_atan2
<LI><a href="#[5c89330]">&lt&lt</a>&nbsp;&nbsp;&nbsp;round(double, int*, char*, char*, char, char*)
<LI><a href="#[5c89038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cvt(double, int, int, char*, int, char*, char*)
<LI><a href="#[740f5e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[7415ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_standard
<LI><a href="#[5cc2994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_rem_pio2
<LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
<LI><a href="#[5775c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPDataToTime
</UL><P><STRONG><a name="[4e4cde8]"></a>_dfix</STRONG> (ARM, 160 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Calls]<UL><LI><a href="#[8f5bd54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dfix_negative
<LI><a href="#[8f5bce4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dfix_ivo
<LI><a href="#[8f608a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[8f60918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f60748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL><BR>[Called By]<UL><LI><a href="#[5c89038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cvt(double, int, int, char*, int, char*, char*)
<LI><a href="#[740f5e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[740f56c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[740f658]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[5cc2994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_rem_pio2
<LI><a href="#[4e4d418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_MemDebug
<LI><a href="#[5774480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PackNTP
<LI><a href="#[57745d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;convert_time
<LI><a href="#[7a3ac64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_max_age
<LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f749e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_rovio_pose
</UL><P><STRONG><a name="[8f5bb8c]"></a>__fpl_inf_dfix</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dfix.o(x$fpl$dfix), UNUSED)
<P><STRONG><a name="[77e7298]"></a>_dfixu</STRONG> (ARM, 160 bytes, Stack size 8 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Calls]<UL><LI><a href="#[8f5b184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dfixu_negative
<LI><a href="#[8f5b114]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dfixu_ivo
<LI><a href="#[8f608a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[8f60918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f60748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL><BR>[Called By]<UL><LI><a href="#[8c6c42c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapGenChallenge
<LI><a href="#[77e8878]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtcp_send
</UL><P><STRONG><a name="[8f5afb8]"></a>__fpl_inf_dfixu</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<P><STRONG><a name="[8f59958]"></a>_dfltu</STRONG> (ARM, 12 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f599c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__dflt_normalise
</UL><P><STRONG><a name="[4f74974]"></a>_dflt</STRONG> (ARM, 48 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR>[Called By]<UL><LI><a href="#[5c89330]">&lt&lt</a>&nbsp;&nbsp;&nbsp;round(double, int*, char*, char*, char, char*)
<LI><a href="#[740f5e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[9ac1488]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_drand48
<LI><a href="#[5cc2994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_rem_pio2
<LI><a href="#[8a61c88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_strtod
<LI><a href="#[5774480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PackNTP
<LI><a href="#[5774410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;UnpackNTP
<LI><a href="#[57745d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;convert_time
<LI><a href="#[5774564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;current_time
<LI><a href="#[7a3ac64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_max_age
<LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f73f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_waypoint
<LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
<LI><a href="#[4f740d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_replay_path_between_rooms
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
<LI><a href="#[77e8878]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtcp_send
<LI><a href="#[7a3b2bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_recv_response
<LI><a href="#[4f749e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_rovio_pose
</UL><P><STRONG><a name="[8f599c4]"></a>__dflt_normalise</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR>[Called By]<UL><LI><a href="#[8f59958]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dfltu
<LI><a href="#[4f74828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_f2d
</UL><P><STRONG><a name="[7a37858]"></a>_ll_uto_d</STRONG> (ARM, 8 bytes, Stack size 0 bytes, dfltll_clz.o(x$fpl$dfltll))
<BR><BR>[Calls]<UL><LI><a href="#[8f59500]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dfltll_normalise
</UL><BR>[Called By]<UL><LI><a href="#[7a3b2bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_recv_response
</UL><P><STRONG><a name="[8f59490]"></a>_ll_sto_d</STRONG> (ARM, 116 bytes, Stack size 8 bytes, dfltll_clz.o(x$fpl$dfltll), UNUSED)
<P><STRONG><a name="[4f741d4]"></a>_dcmpge</STRONG> (ARM, 124 bytes, Stack size 0 bytes, dgeqf.o(x$fpl$dgeqf))
<BR><BR>[Calls]<UL><LI><a href="#[8f58fbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpge_negative
<LI><a href="#[8f58f3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpge_check_NaNInf_pos
<LI><a href="#[8f58ec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dcmpge_InfNaN
<LI><a href="#[8f58e48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpge_check_NaNInf_neg
<LI><a href="#[8f5c2ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL><BR>[Called By]<UL><LI><a href="#[5c89330]">&lt&lt</a>&nbsp;&nbsp;&nbsp;round(double, int*, char*, char*, char, char*)
<LI><a href="#[7416038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__ieee754_sqrt
<LI><a href="#[7415ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_standard
<LI><a href="#[5cc2994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_rem_pio2
<LI><a href="#[5cc6628]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_atan
<LI><a href="#[84edca8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_floor
<LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
<LI><a href="#[5775c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPDataToTime
<LI><a href="#[4f73dbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;clamp_angle
<LI><a href="#[80eb4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_PLAY
<LI><a href="#[83355e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mark_waypoints_as_good_and_bad_using_dist
<LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f73f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_waypoint
<LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
<LI><a href="#[4f73cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rotate_rovio_by_angle
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[4f73d50]"></a>_dcmple</STRONG> (ARM, 124 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Calls]<UL><LI><a href="#[8f5891c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmple_negative
<LI><a href="#[8f5889c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmple_check_NaNInf_pos
<LI><a href="#[8f58828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dcmple_InfNaN
<LI><a href="#[8f587a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmple_check_NaNInf_neg
<LI><a href="#[8f5c2ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL><BR>[Called By]<UL><LI><a href="#[4f74240]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_sqrt
<LI><a href="#[5c89038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cvt(double, int, int, char*, int, char*, char*)
<LI><a href="#[7415ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_standard
<LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
<LI><a href="#[5774480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PackNTP
<LI><a href="#[4f73dbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;clamp_angle
<LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f73f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_waypoint
<LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
<LI><a href="#[4f73cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rotate_rovio_by_angle
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[4f74748]"></a>_dmul</STRONG> (ARM, 680 bytes, Stack size 16 bytes, dmul_mull.o(x$fpl$dmul))
<BR><BR>[Calls]<UL><LI><a href="#[8f58124]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dmul_naninf
<LI><a href="#[8f580b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dmul_zerodenorm
<LI><a href="#[8f58040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dmul_exact
<LI><a href="#[8f582cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dmul_rounded
<LI><a href="#[8f57fcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dmul_outflow
<LI><a href="#[8f5eec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__dunder
<LI><a href="#[8f60918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f57f5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dmul_zero
<LI><a href="#[8f57ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dmul_renorm_op2
<LI><a href="#[8f57e74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dmul_renorm_op1
<LI><a href="#[8f58258]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dmul_normalised
<LI><a href="#[8f581e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dmul_done_op2
<LI><a href="#[8f5ef38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[8f60748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[8f57e04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dmul_ivo
</UL><BR>[Called By]<UL><LI><a href="#[5c89330]">&lt&lt</a>&nbsp;&nbsp;&nbsp;round(double, int*, char*, char*, char, char*)
<LI><a href="#[5c89038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cvt(double, int, int, char*, int, char*, char*)
<LI><a href="#[7416038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__ieee754_sqrt
<LI><a href="#[740f5e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[740f56c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[740f658]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[7415ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_standard
<LI><a href="#[5cc2994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_rem_pio2
<LI><a href="#[5c88fb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_modf
<LI><a href="#[5cc6628]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_atan
<LI><a href="#[84edd1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;scalbn
<LI><a href="#[8c6c42c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapGenChallenge
<LI><a href="#[8a61c88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_strtod
<LI><a href="#[8d09e70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exp10(unsigned int)
<LI><a href="#[5775c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPDataToTime
<LI><a href="#[5774480]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PackNTP
<LI><a href="#[5774410]">&lt&lt</a>&nbsp;&nbsp;&nbsp;UnpackNTP
<LI><a href="#[57745d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;convert_time
<LI><a href="#[5774564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;current_time
<LI><a href="#[7a3ac64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_max_age
<LI><a href="#[83355e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mark_waypoints_as_good_and_bad_using_dist
<LI><a href="#[77e8878]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtcp_send
<LI><a href="#[7a3b2bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_recv_response
<LI><a href="#[4f749e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_rovio_pose
</UL><P><STRONG><a name="[8f57d90]"></a>__fpl_inf_dmul</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dmul_mull.o(x$fpl$dmul), UNUSED)
<P><STRONG><a name="[8f5eec8]"></a>__dunder</STRONG> (ARM, 356 bytes, Stack size 24 bytes, dunder.o(x$fpl$dunder))
<BR><BR>[Calls]<UL><LI><a href="#[8f6065c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
<LI><a href="#[8f6f6a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dunder_trap
<LI><a href="#[8f6f628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dunder_stickyonly
<LI><a href="#[8f6f5b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dunder_roundbit
<LI><a href="#[8f6f540]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dunder_hiword
<LI><a href="#[8f6f4cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dunder_hiloword
<LI><a href="#[8f6f458]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dunder_round
<LI><a href="#[8f6f760]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dunder_rerounded
<LI><a href="#[8f6f3e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dunder_roundeven
<LI><a href="#[8f6f7d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dunder_roundup
<LI><a href="#[8f607bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fp_trapveneer
</UL><BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[4f73bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[4f74748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dmul
</UL><P><STRONG><a name="[8f5ee58]"></a>__dunder_d</STRONG> (ARM, 204 bytes, Stack size 24 bytes, dunder.o(x$fpl$dunder))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f60918]"></a>__fpl_exception</STRONG> (ARM, 320 bytes, Stack size 40 bytes, except.o(x$fpl$exception))
<BR><BR>[Calls]<UL><LI><a href="#[8f6065c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
<LI><a href="#[8f6ea88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;underflow
<LI><a href="#[8f6ea18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;overflow
<LI><a href="#[8f6e9ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inexact
<LI><a href="#[8f6e938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;divide_by_zero
<LI><a href="#[8f6e8c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;return_NaN
<LI><a href="#[8f607bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fp_trapveneer
<LI><a href="#[8f6e858]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ovf_return
<LI><a href="#[8f6e7e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;return_result
<LI><a href="#[8f6e774]">&gt&gt</a>&nbsp;&nbsp;&nbsp;return_Inf
<LI><a href="#[8f705dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL><BR>[Called By]<UL><LI><a href="#[4f74894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[8f5ef38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[8f608a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[8f5c2ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
<LI><a href="#[8f6d6c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fcmp_found_NaN
<LI><a href="#[4f73bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[4e4cde8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[77e7298]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[4f74748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[8f564c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[8f57310]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[5a87954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[4db4e7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[82cae94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ffixu
<LI><a href="#[4db4ca4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[8f60830]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__funder
<LI><a href="#[7a377e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_ufrom_d
</UL><P><STRONG><a name="[4f74828]"></a>_f2d</STRONG> (ARM, 100 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Calls]<UL><LI><a href="#[8f573fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_f2d_uncommon
<LI><a href="#[8f57388]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_f2d_Inf_or_NaN
<LI><a href="#[8f599c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__dflt_normalise
<LI><a href="#[8f57310]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[8f60748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL><BR>[Called By]<UL><LI><a href="#[7415ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__kernel_standard
<LI><a href="#[4f73dbc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;clamp_angle
<LI><a href="#[8335700]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_distance_between_waypoints
<LI><a href="#[4fc24d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_report
<LI><a href="#[83355e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mark_waypoints_as_good_and_bad_using_dist
<LI><a href="#[5c07b40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;move_rovio_towards_target
<LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f73f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_waypoint
<LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
<LI><a href="#[5ad0bec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;print_labeled_dense_waypoints
<LI><a href="#[4f73cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rotate_rovio_by_angle
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
<LI><a href="#[4f749e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;update_rovio_pose
</UL><P><STRONG><a name="[8f5729c]"></a>__fpl_inf_f2d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d), UNUSED)
<P><STRONG><a name="[5a878e8]"></a>_fadd</STRONG> (ARM, 328 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR><BR>[Calls]<UL><LI><a href="#[8f56b04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fadd_naninf
<LI><a href="#[8f56a98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[8f56a24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fadd_uncommon
<LI><a href="#[8f569b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fadd_carry
<LI><a href="#[8f60918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f56df0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fadd_roundeven
<LI><a href="#[8f56d80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fadd_ovf
<LI><a href="#[8f56944]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fadd_bzero
<LI><a href="#[8f56d10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fadd_doadd
<LI><a href="#[8f56454]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__funder_d
<LI><a href="#[8f564c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[8f60748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
<LI><a href="#[8f568d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fadd_twoinf
<LI><a href="#[8f56864]">&gt&gt</a>&nbsp;&nbsp;&nbsp;frsb_naninf
<LI><a href="#[8f56ca4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fadd1
<LI><a href="#[8f567f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsub_naninf
<LI><a href="#[8f56780]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsub_uncommon
<LI><a href="#[8f5670c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsub_renorm_0
<LI><a href="#[8f56694]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsub_renorm_orunder
<LI><a href="#[8f56620]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsub_roundeven
<LI><a href="#[8f565ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsub_underflow
<LI><a href="#[8f56c34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsub_bzero
<LI><a href="#[8f56bc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsub_dosub
<LI><a href="#[8f5653c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsub_twoinf
</UL><BR>[Called By]<UL><LI><a href="#[8335700]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_distance_between_waypoints
<LI><a href="#[83355e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mark_waypoints_as_good_and_bad_using_dist
<LI><a href="#[5c078dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;start_nav_to_waypoint
</UL><P><STRONG><a name="[8f563e0]"></a>__fpl_inf_fadd</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<P><STRONG><a name="[8335510]"></a>_frsb</STRONG> (ARM, 52 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[83355e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mark_waypoints_as_good_and_bad_using_dist
</UL><P><STRONG><a name="[4f73e2c]"></a>_fsub</STRONG> (ARM, 352 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[8335700]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_distance_between_waypoints
<LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f73f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_waypoint
<LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[8f5636c]"></a>__fpl_inf_fsub</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<P><STRONG><a name="[8f564c4]"></a>__fpl_fcheck_NaN2</STRONG> (ARM, 36 bytes, Stack size 0 bytes, fcheck.o(x$fpl$fcheck))
<BR><BR>[Calls]<UL><LI><a href="#[8f60918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f705dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL><BR>[Called By]<UL><LI><a href="#[8f6d6c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fcmp_found_NaN
<LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[5a87954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[4db4ca4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fmul
</UL><P><STRONG><a name="[8f57310]"></a>__fpl_fcheck_NaN1</STRONG> (ARM, 24 bytes, Stack size 0 bytes, fcheck1.o(x$fpl$fcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[8f60918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f705dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL><BR>[Called By]<UL><LI><a href="#[4f74828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[4db4e7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[82cae94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ffixu
</UL><P><STRONG><a name="[4db4ee8]"></a>_frdiv</STRONG> (ARM, 16 bytes, Stack size 0 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Calls]<UL><LI><a href="#[8f751c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fdiv1
</UL><BR>[Called By]<UL><LI><a href="#[5ad0b64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_path_waypoints_after_clustering
<LI><a href="#[83355e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mark_waypoints_as_good_and_bad_using_dist
<LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[5c078dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;start_nav_to_waypoint
<LI><a href="#[4db5ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_linkstat
</UL><P><STRONG><a name="[5a87954]"></a>_fdiv</STRONG> (ARM, 464 bytes, Stack size 4 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f7514c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fdiv_uncommon
<LI><a href="#[8f750d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fdiv_overflow
<LI><a href="#[8f60830]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__funder
<LI><a href="#[8f60918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f75064]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fdiv_inf_NaN
<LI><a href="#[8f74ff0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fdiv_divbyzero
<LI><a href="#[8f74f08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_normalise2
<LI><a href="#[8f7527c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fdiv_div
<LI><a href="#[8f564c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[8f60748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL><P><STRONG><a name="[8f74e94]"></a>__fpl_inf_fdiv</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<P><STRONG><a name="[4db4e7c]"></a>_ffix</STRONG> (ARM, 100 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix))
<BR><BR>[Calls]<UL><LI><a href="#[8f7459c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ffix_negative
<LI><a href="#[8f7452c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ffix_ivo
<LI><a href="#[8f57310]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[8f60918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f60748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL><BR>[Called By]<UL><LI><a href="#[5c07b40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;move_rovio_towards_target
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
<LI><a href="#[5c078dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;start_nav_to_waypoint
<LI><a href="#[4db5f78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_change
<LI><a href="#[4db5ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_linkstat
</UL><P><STRONG><a name="[8f743d4]"></a>__fpl_inf_ffix</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix), UNUSED)
<P><STRONG><a name="[82cae94]"></a>_ffixu</STRONG> (ARM, 88 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu))
<BR><BR>[Calls]<UL><LI><a href="#[8f73aa4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ffixu_negative
<LI><a href="#[8f73a34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ffixu_ivo
<LI><a href="#[8f57310]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[8f60918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f60748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL><BR>[Called By]<UL><LI><a href="#[5ad0b64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_path_waypoints_after_clustering
</UL><P><STRONG><a name="[8f738d8]"></a>__fpl_inf_ffixu</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu), UNUSED)
<P><STRONG><a name="[833557c]"></a>_ffltu</STRONG> (ARM, 8 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt))
<BR><BR>[Calls]<UL><LI><a href="#[8f72fcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fflt_normalise
</UL><BR>[Called By]<UL><LI><a href="#[83355e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mark_waypoints_as_good_and_bad_using_dist
</UL><P><STRONG><a name="[4db4f54]"></a>_fflt</STRONG> (ARM, 52 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt))
<BR>[Called By]<UL><LI><a href="#[8335678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;compute_neighboring_wp_distances
<LI><a href="#[5ad0b64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_path_waypoints_after_clustering
<LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[5c078dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;start_nav_to_waypoint
<LI><a href="#[4db5f78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_change
<LI><a href="#[4db5ff8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_linkstat
</UL><P><STRONG><a name="[8f72fcc]"></a>__fflt_normalise</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt))
<BR>[Called By]<UL><LI><a href="#[833557c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ffltu
</UL><P><STRONG><a name="[4f73e98]"></a>_fcmpge</STRONG> (ARM, 100 bytes, Stack size 0 bytes, fgeqf.o(x$fpl$fgeqf))
<BR><BR>[Calls]<UL><LI><a href="#[8f72b48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fcmpge_negative
<LI><a href="#[8f72ac8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fcmpge_NaNInf_check_pos
<LI><a href="#[8f72a54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fcmpge_InfNaN
<LI><a href="#[8f729d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fcmpge_NaNInf_check_neg
<LI><a href="#[8f6d4f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__32__fpl_fcmp_InfNaN
</UL><BR>[Called By]<UL><LI><a href="#[83355e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mark_waypoints_as_good_and_bad_using_dist
<LI><a href="#[4f73f04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_waypoint
<LI><a href="#[4f73cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rotate_rovio_by_angle
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[4f73f7c]"></a>_fcmple</STRONG> (ARM, 100 bytes, Stack size 0 bytes, fleqf.o(x$fpl$fleqf))
<BR><BR>[Calls]<UL><LI><a href="#[8f72454]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fcmple_negative
<LI><a href="#[8f723d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fcmple_NaNInf_check_pos
<LI><a href="#[8f72360]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fcmple_InfNaN
<LI><a href="#[8f722e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fcmple_NaNInf_check_neg
<LI><a href="#[8f6d4f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__32__fpl_fcmp_InfNaN
</UL><BR>[Called By]<UL><LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[4f735c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_play_current_path
<LI><a href="#[4f740d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_replay_path_between_rooms
<LI><a href="#[4f73cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rotate_rovio_by_angle
<LI><a href="#[4f74418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rovio_home
</UL><P><STRONG><a name="[4db4ca4]"></a>_fmul</STRONG> (ARM, 296 bytes, Stack size 0 bytes, fmul_mull.o(x$fpl$fmul))
<BR><BR>[Calls]<UL><LI><a href="#[8f71d68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmul_uncommon
<LI><a href="#[8f71cf4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmul_overflow
<LI><a href="#[8f60830]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__funder
<LI><a href="#[8f60918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f71c80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmul_inf_NaN
<LI><a href="#[8f74f08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_normalise2
<LI><a href="#[8f564c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[8f60748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL><BR>[Called By]<UL><LI><a href="#[8335678]">&lt&lt</a>&nbsp;&nbsp;&nbsp;compute_neighboring_wp_distances
<LI><a href="#[8335700]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_distance_between_waypoints
<LI><a href="#[5ad0b64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;get_path_waypoints_after_clustering
<LI><a href="#[83355e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mark_waypoints_as_good_and_bad_using_dist
<LI><a href="#[4f74158]">&lt&lt</a>&nbsp;&nbsp;&nbsp;nsp_follow_max_mag_spot
<LI><a href="#[5c078dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;start_nav_to_waypoint
<LI><a href="#[4db5f78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_change
</UL><P><STRONG><a name="[8f71c0c]"></a>__fpl_inf_fmul</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fmul_mull.o(x$fpl$fmul), UNUSED)
<P><STRONG><a name="[8f74f08]"></a>__fpl_normalise2</STRONG> (ARM, 80 bytes, Stack size 4 bytes, fnorm2_clz.o(x$fpl$fnorm2))
<BR><BR>[Calls]<UL><LI><a href="#[8f6d038]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fnorm_b
</UL><BR>[Called By]<UL><LI><a href="#[5a87954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[4db4ca4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fmul
</UL><P><STRONG><a name="[8f60830]"></a>__funder</STRONG> (ARM, 232 bytes, Stack size 24 bytes, funder.o(x$fpl$funder))
<BR><BR>[Calls]<UL><LI><a href="#[8f6065c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
<LI><a href="#[8f6cc2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;funder_trap
<LI><a href="#[8f6cbb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_funder_lostmant
<LI><a href="#[8f6cb40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_funder_exact
<LI><a href="#[8f6cac8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_funder_rerounded
<LI><a href="#[8f60918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f6ca50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_funder_returninx
<LI><a href="#[8f607bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fp_trapveneer
</UL><BR>[Called By]<UL><LI><a href="#[4f74894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[5a87954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[4db4ca4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fmul
</UL><P><STRONG><a name="[8f56454]"></a>__funder_d</STRONG> (ARM, 132 bytes, Stack size 24 bytes, funder.o(x$fpl$funder))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[7a377e8]"></a>_ll_ufrom_d</STRONG> (ARM, 168 bytes, Stack size 0 bytes, dfixull.o(x$fpl$llufromd))
<BR><BR>[Calls]<UL><LI><a href="#[8f5a580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ll_ufrom_d_neg
<LI><a href="#[8f5a50c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ll_ufrom_d_ivo
<LI><a href="#[8f608a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[8f60918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f60748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL><BR>[Called By]<UL><LI><a href="#[7a3b2bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_recv_response
</UL><P><STRONG><a name="[8f5a3a0]"></a>__fpl_inf_ll_ufrom_d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dfixull.o(x$fpl$llufromd), UNUSED)
<P><STRONG><a name="[8f705dc]"></a>__fpl_return_NaN</STRONG> (ARM, 144 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[8f6c120]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
<LI><a href="#[8f6ada8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;return_fpnan
<LI><a href="#[8f6ad38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;return_zero
<LI><a href="#[8f6acc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;return_umaxint
</UL><BR>[Called By]<UL><LI><a href="#[8f5ef38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[8f608a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[8f60918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f564c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[8f57310]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL><P><STRONG><a name="[8f607bc]"></a>_fp_trapveneer</STRONG> (ARM, 36 bytes, Stack size 16 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Calls]<UL><LI><a href="#[8f6c194]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fp_trap
<LI><a href="#[8f6c120]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL><BR>[Called By]<UL><LI><a href="#[4f74894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[8f5eec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__dunder
<LI><a href="#[8f60918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f60830]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__funder
</UL><P><STRONG><a name="[8f6c120]"></a>__fpl_cmpreturn</STRONG> (ARM, 128 bytes, Stack size 24 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Calls]<UL><LI><a href="#[8f6c2f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cmp_boolean
<LI><a href="#[8f6c280]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cmp_generic
<LI><a href="#[8f6c204]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cmp_specflags_unordered
<LI><a href="#[8f6065c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL><BR>[Called By]<UL><LI><a href="#[8f705dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[8f607bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fp_trapveneer
</UL><P><STRONG><a name="[5d61ba8]"></a>reset_vector</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect))
<BR><BR>[Calls]<UL><LI><a href="#[5d5f3cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;start
</UL><BR>[Address Reference Count : 1]<UL><LI> vectors.o(Vect)
</UL><P><STRONG><a name="[5d61b38]"></a>warm_reset</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect), UNUSED)
<P><STRONG><a name="[5d61ac8]"></a>_start_hang</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d61ac8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_start_hang
</UL><BR>[Called By]<UL><LI><a href="#[5d61ac8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_start_hang
</UL><P><STRONG><a name="[5d619dc]"></a>undefined_instruction</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect))
<BR><BR>[Calls]<UL><LI><a href="#[5d61804]">&gt&gt</a>&nbsp;&nbsp;&nbsp;call_exception_handler
</UL><BR>[Address Reference Count : 1]<UL><LI> vectors.o(Vect)
</UL><P><STRONG><a name="[5d61964]"></a>software_interrupt</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect))
<BR><BR>[Calls]<UL><LI><a href="#[5d61804]">&gt&gt</a>&nbsp;&nbsp;&nbsp;call_exception_handler
</UL><BR>[Address Reference Count : 1]<UL><LI> vectors.o(Vect)
</UL><P><STRONG><a name="[5d618f0]"></a>abort_prefetch</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect))
<BR><BR>[Calls]<UL><LI><a href="#[5d61804]">&gt&gt</a>&nbsp;&nbsp;&nbsp;call_exception_handler
</UL><BR>[Address Reference Count : 1]<UL><LI> vectors.o(Vect)
</UL><P><STRONG><a name="[5d61880]"></a>abort_data</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect))
<BR><BR>[Calls]<UL><LI><a href="#[5d61804]">&gt&gt</a>&nbsp;&nbsp;&nbsp;call_exception_handler
</UL><BR>[Address Reference Count : 1]<UL><LI> vectors.o(Vect)
</UL><P><STRONG><a name="[5d61804]"></a>call_exception_handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect))
<BR><BR>[Calls]<UL><LI><a href="#[79f6b5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;exception_handler
</UL><BR>[Called By]<UL><LI><a href="#[5d619dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;undefined_instruction
<LI><a href="#[5d61964]">&lt&lt</a>&nbsp;&nbsp;&nbsp;software_interrupt
<LI><a href="#[5d618f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;abort_prefetch
<LI><a href="#[5d61880]">&lt&lt</a>&nbsp;&nbsp;&nbsp;abort_data
</UL><P><STRONG><a name="[5d61788]"></a>return_from_exception</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect), UNUSED)
<BR>[Called By]<UL><LI><a href="#[5d615cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;spurious_IRQ
</UL><P><STRONG><a name="[5d61720]"></a>FIQ</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect))
<BR>[Address Reference Count : 1]<UL><LI> vectors.o(Vect)
</UL><P><STRONG><a name="[5d616b8]"></a>IRQ</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect))
<BR>[Address Reference Count : 1]<UL><LI> vectors.o(Vect)
</UL><P><STRONG><a name="[5d61640]"></a>handle_IRQ_or_FIQ</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50943c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_IRQ_handler
<LI><a href="#[79f6ae4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_spurious_IRQ
<LI><a href="#[5d615cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spurious_IRQ
</UL><P><STRONG><a name="[5d615cc]"></a>spurious_IRQ</STRONG> (ARM, 0 bytes, Stack size 0 bytes, vectors.o(Vect), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[501e958]">&gt&gt</a>&nbsp;&nbsp;&nbsp;interrupt_end
<LI><a href="#[5d61788]">&gt&gt</a>&nbsp;&nbsp;&nbsp;return_from_exception
</UL><BR>[Called By]<UL><LI><a href="#[5d61640]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_IRQ_or_FIQ
</UL><P><STRONG><a name="[73eb960]"></a>__C</STRONG> (ARM, 8 bytes, Stack size 0 bytes, sched.o(C$$ctor))
<BR><BR>[Calls]<UL><LI><a href="#[750a5b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Scheduler_Implementation::Cyg_Scheduler_Implementation()
</UL><BR>[Address Reference Count : 1]<UL><LI> sched.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[73db484]"></a>__C</STRONG> (ARM, 24 bytes, Stack size 0 bytes, except.o(C$$ctor))
<BR>[Address Reference Count : 1]<UL><LI> except.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[501f198]"></a>__C</STRONG> (ARM, 16 bytes, Stack size 0 bytes, intr.o(C$$ctor))
<BR>[Address Reference Count : 1]<UL><LI> intr.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[4c8db84]"></a>__C</STRONG> (ARM, 8 bytes, Stack size 0 bytes, clock.o(C$$ctor))
<BR><BR>[Calls]<UL><LI><a href="#[4c8d268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_RealTimeClock::Cyg_RealTimeClock()
</UL><BR>[Address Reference Count : 1]<UL><LI> clock.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[502597c]"></a>__C</STRONG> (ARM, 20 bytes, Stack size 0 bytes, thread.o(C$$ctor))
<BR><BR>[Calls]<UL><LI><a href="#[750a4a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vecmap1c(void*, void*, int, void (*)(void*))
</UL><BR>[Address Reference Count : 1]<UL><LI> thread.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[5d21bec]"></a>__C</STRONG> (ARM, 72 bytes, Stack size 8 bytes, heaps.o(C$$ctor))
<BR><BR>[Calls]<UL><LI><a href="#[5d17880]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mempool_dlmalloc_Implementation::Cyg_Mempool_dlmalloc_Implementation(unsigned char*, int, unsigned int)
</UL><BR>[Address Reference Count : 1]<UL><LI> heaps.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[5061104]"></a>__C</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ioinit.o(C$$ctor))
<BR><BR>[Calls]<UL><LI><a href="#[4bf4b5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_init
</UL><BR>[Address Reference Count : 1]<UL><LI> ioinit.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[50584e0]"></a>__C</STRONG> (ARM, 40 bytes, Stack size 8 bytes, fd.o(C$$ctor))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c568]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::Cyg_Mutex()
<LI><a href="#[750a4a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vecmap1c(void*, void*, int, void (*)(void*))
</UL><BR>[Address Reference Count : 1]<UL><LI> fd.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[5061a68]"></a>__C</STRONG> (ARM, 60 bytes, Stack size 8 bytes, misc.o(C$$ctor))
<BR><BR>[Calls]<UL><LI><a href="#[750a4a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vecmap1c(void*, void*, int, void (*)(void*))
<LI><a href="#[5081190]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Fileio_Init_Class::Cyg_Fileio_Init_Class()
</UL><BR>[Address Reference Count : 1]<UL><LI> misc.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[4ce7a5c]"></a>__C</STRONG> (ARM, 32 bytes, Stack size 8 bytes, select.o(C$$ctor))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c568]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::Cyg_Mutex()
<LI><a href="#[4c2c098]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::Cyg_Condition_Variable(Cyg_Mutex&)
</UL><BR>[Address Reference Count : 1]<UL><LI> select.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[853c3c0]"></a>__C</STRONG> (ARM, 44 bytes, Stack size 8 bytes, siginit.o(C$$ctor))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c568]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::Cyg_Mutex()
</UL><BR>[Address Reference Count : 1]<UL><LI> siginit.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[8a908a8]"></a>__C</STRONG> (ARM, 56 bytes, Stack size 16 bytes, mainthrd.o(C$$ctor))
<BR><BR>[Calls]<UL><LI><a href="#[4c30fd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::Cyg_Thread(unsigned int, void (*)(unsigned int), unsigned int, char*, unsigned int, unsigned int)
<LI><a href="#[5d5fb14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_iso_c_start
</UL><BR>[Address Reference Count : 1]<UL><LI> mainthrd.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[8572058]"></a>__C</STRONG> (ARM, 88 bytes, Stack size 24 bytes, stdin.o(C$$ctor))
<BR><BR>[Calls]<UL><LI><a href="#[5084518]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_libc_stdio_find_filename
<LI><a href="#[5084474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::Cyg_StdioStream(int, Cyg_StdioStream::OpenMode, int, int, int, unsigned int, unsigned char*)
</UL><BR>[Address Reference Count : 1]<UL><LI> stdin.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[5d3107c]"></a>__C</STRONG> (ARM, 8 bytes, Stack size 0 bytes, stdiofiles.o(C$$ctor))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c568]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::Cyg_Mutex()
</UL><BR>[Address Reference Count : 1]<UL><LI> stdiofiles.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[5d40c3c]"></a>__C</STRONG> (ARM, 88 bytes, Stack size 24 bytes, stdout.o(C$$ctor))
<BR><BR>[Calls]<UL><LI><a href="#[5084518]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_libc_stdio_find_filename
<LI><a href="#[5084474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::Cyg_StdioStream(int, Cyg_StdioStream::OpenMode, int, int, int, unsigned int, unsigned char*)
</UL><BR>[Address Reference Count : 1]<UL><LI> stdout.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[508480c]"></a>__C</STRONG> (ARM, 88 bytes, Stack size 24 bytes, stderr.o(C$$ctor))
<BR><BR>[Calls]<UL><LI><a href="#[5084518]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_libc_stdio_find_filename
<LI><a href="#[5084474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::Cyg_StdioStream(int, Cyg_StdioStream::OpenMode, int, int, int, unsigned int, unsigned char*)
</UL><BR>[Address Reference Count : 1]<UL><LI> stderr.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[49d2a28]"></a>__C</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wallclock.o(C$$ctor))
<BR><BR>[Calls]<UL><LI><a href="#[49d2890]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_WallClock::Cyg_WallClock()
</UL><BR>[Address Reference Count : 1]<UL><LI> wallclock.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[4ba3010]"></a>__C</STRONG> (ARM, 4 bytes, Stack size 0 bytes, diag.o(C$$ctor))
<BR><BR>[Calls]<UL><LI><a href="#[4ba24d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_if_diag_init
</UL><BR>[Address Reference Count : 1]<UL><LI> diag.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[4d1ef88]"></a>__C</STRONG> (ARM, 4 bytes, Stack size 0 bytes, tcpip_init.o(C$$ctor))
<BR><BR>[Calls]<UL><LI><a href="#[4d1ee1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_init
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_init.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[50a2a5c]"></a>__C</STRONG> (ARM, 20 bytes, Stack size 0 bytes, socket.o(C$$ctor))
<BR><BR>[Calls]<UL><LI><a href="#[750a4a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vecmap1c(void*, void*, int, void (*)(void*))
</UL><BR>[Address Reference Count : 1]<UL><LI> socket.o(C$$pi_ctorvec)
</UL><P><STRONG><a name="[73eb848]"></a>__D</STRONG> (ARM, 24 bytes, Stack size 0 bytes, sched.o(C$$dtor))
<BR><BR>[Calls]<UL><LI><a href="#[73eb034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vecmap1ci(void*, void*, int, void (*)(void*, int))
</UL><BR>[Address Reference Count : 1]<UL><LI> sched.o(C$$pi_dtorvec)
</UL><P><STRONG><a name="[501f080]"></a>__D</STRONG> (ARM, 4 bytes, Stack size 0 bytes, intr.o(C$$dtor))
<BR>[Address Reference Count : 1]<UL><LI> intr.o(C$$pi_dtorvec)
</UL><P><STRONG><a name="[4c8da38]"></a>__D</STRONG> (ARM, 108 bytes, Stack size 8 bytes, clock.o(C$$dtor))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f950]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Interrupt::~Cyg_Interrupt()
</UL><BR>[Address Reference Count : 1]<UL><LI> clock.o(C$$pi_dtorvec)
</UL><P><STRONG><a name="[502588c]"></a>__D</STRONG> (ARM, 20 bytes, Stack size 0 bytes, thread.o(C$$dtor))
<BR><BR>[Calls]<UL><LI><a href="#[73eb034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vecmap1ci(void*, void*, int, void (*)(void*, int))
</UL><BR>[Address Reference Count : 1]<UL><LI> thread.o(C$$pi_dtorvec)
</UL><P><STRONG><a name="[5d21a5c]"></a>__D</STRONG> (ARM, 184 bytes, Stack size 24 bytes, heaps.o(C$$dtor))
<BR><BR>[Calls]<UL><LI><a href="#[7509ab4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_ThreadQueue_Implementation::dequeue()
<LI><a href="#[74eb464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::wake()
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
</UL><BR>[Address Reference Count : 1]<UL><LI> heaps.o(C$$pi_dtorvec)
</UL><P><STRONG><a name="[50583f0]"></a>__D</STRONG> (ARM, 48 bytes, Stack size 8 bytes, fd.o(C$$dtor))
<BR><BR>[Calls]<UL><LI><a href="#[73eb034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vecmap1ci(void*, void*, int, void (*)(void*, int))
<LI><a href="#[4c2c478]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::~Cyg_Mutex()
</UL><BR>[Address Reference Count : 1]<UL><LI> fd.o(C$$pi_dtorvec)
</UL><P><STRONG><a name="[5061978]"></a>__D</STRONG> (ARM, 60 bytes, Stack size 8 bytes, misc.o(C$$dtor))
<BR><BR>[Calls]<UL><LI><a href="#[73eb034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vecmap1ci(void*, void*, int, void (*)(void*, int))
</UL><BR>[Address Reference Count : 1]<UL><LI> misc.o(C$$pi_dtorvec)
</UL><P><STRONG><a name="[4ce7944]"></a>__D</STRONG> (ARM, 32 bytes, Stack size 8 bytes, select.o(C$$dtor))
<BR><BR>[Calls]<UL><LI><a href="#[4c2bf98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::~Cyg_Condition_Variable()
<LI><a href="#[4c2c478]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::~Cyg_Mutex()
</UL><BR>[Address Reference Count : 1]<UL><LI> select.o(C$$pi_dtorvec)
</UL><P><STRONG><a name="[853c2d0]"></a>__D</STRONG> (ARM, 12 bytes, Stack size 0 bytes, siginit.o(C$$dtor))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c478]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::~Cyg_Mutex()
</UL><BR>[Address Reference Count : 1]<UL><LI> siginit.o(C$$pi_dtorvec)
</UL><P><STRONG><a name="[8a90718]"></a>__D</STRONG> (ARM, 12 bytes, Stack size 0 bytes, mainthrd.o(C$$dtor))
<BR><BR>[Calls]<UL><LI><a href="#[4c30d78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Thread::~Cyg_Thread()
</UL><BR>[Address Reference Count : 1]<UL><LI> mainthrd.o(C$$pi_dtorvec)
</UL><P><STRONG><a name="[8571ec8]"></a>__D</STRONG> (ARM, 152 bytes, Stack size 16 bytes, stdin.o(C$$dtor))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[746a0dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::flush_output_unlocked()
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4c2c478]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::~Cyg_Mutex()
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Address Reference Count : 1]<UL><LI> stdin.o(C$$pi_dtorvec)
</UL><P><STRONG><a name="[5d30ec4]"></a>__D</STRONG> (ARM, 12 bytes, Stack size 0 bytes, stdiofiles.o(C$$dtor))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c478]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::~Cyg_Mutex()
</UL><BR>[Address Reference Count : 1]<UL><LI> stdiofiles.o(C$$pi_dtorvec)
</UL><P><STRONG><a name="[5d40aac]"></a>__D</STRONG> (ARM, 152 bytes, Stack size 16 bytes, stdout.o(C$$dtor))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[746a0dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::flush_output_unlocked()
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4c2c478]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::~Cyg_Mutex()
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Address Reference Count : 1]<UL><LI> stdout.o(C$$pi_dtorvec)
</UL><P><STRONG><a name="[508467c]"></a>__D</STRONG> (ARM, 152 bytes, Stack size 16 bytes, stderr.o(C$$dtor))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[746a0dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::flush_output_unlocked()
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4c2c478]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::~Cyg_Mutex()
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Address Reference Count : 1]<UL><LI> stderr.o(C$$pi_dtorvec)
</UL><P><STRONG><a name="[50a2944]"></a>__D</STRONG> (ARM, 20 bytes, Stack size 0 bytes, socket.o(C$$dtor))
<BR><BR>[Calls]<UL><LI><a href="#[73eb034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vecmap1ci(void*, void*, int, void (*)(void*, int))
</UL><BR>[Address Reference Count : 1]<UL><LI> socket.o(C$$pi_dtorvec)
</UL><P><STRONG><a name="[4ba4f4c]"></a>_diag_write_char(char, void**)</STRONG> (ARM, 4 bytes, Stack size 0 bytes, diag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ba2f10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_write_char
</UL><BR>[Address Reference Count : 1]<UL><LI> diag.o(.data)
</UL><P><STRONG><a name="[4ba40b8]"></a>_cvt(unsigned long long, char*, long, char*)</STRONG> (ARM, 204 bytes, Stack size 120 bytes, diag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[4ba4034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_vprintf(void (*)(char, void**), void**, const char*, int**)
</UL><P><STRONG><a name="[4ba4034]"></a>_vprintf(void (*)(char, void**), void**, const char*, int**)</STRONG> (ARM, 2076 bytes, Stack size 152 bytes, diag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ba2f10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_write_char
<LI><a href="#[4ba2c50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_write_long_num
<LI><a href="#[4ba40b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_cvt(unsigned long long, char*, long, char*)
<LI><a href="#[4ba2a84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_shift_l
</UL><BR>[Called By]<UL><LI><a href="#[4ba2a10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_sprintf
<LI><a href="#[4ba299c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_snprintf
<LI><a href="#[4ba2928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_vsprintf
<LI><a href="#[4a56250]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ba28b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;diag_vprintf
</UL><P><STRONG><a name="[4ba3d20]"></a>_sputc(char, void**)</STRONG> (ARM, 64 bytes, Stack size 0 bytes, diag.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> diag.o(.text)
</UL><P><STRONG><a name="[4bffcac]"></a>readwritev(int, const CYG_IOVEC_TAG*, int, int)</STRONG> (ARM, 412 bytes, Stack size 176 bytes, io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
<LI><a href="#[4bfeb1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_lock
<LI><a href="#[4bfeaa8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4bba36c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[4bba524]">&lt&lt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[4bfea3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;readv
<LI><a href="#[4bfe9d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;writev
</UL><P><STRONG><a name="[4c8e9b0]"></a>construct_converter(Cyg_Clock::converter*, unsigned long long, unsigned long long, unsigned long long, unsigned long long)</STRONG> (ARM, 1856 bytes, Stack size 80 bytes, clock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[4c8d694]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Clock::get_other_to_clock_converter(unsigned long long, Cyg_Clock::converter*)
<LI><a href="#[4c8d5ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Cyg_Clock::get_clock_to_other_converter(unsigned long long, Cyg_Clock::converter*)
</UL><P><STRONG><a name="[4cb83cc]"></a>cyg_pselect(int, fd_set*, fd_set*, fd_set*, timeval*, const int*)</STRONG> (ARM, 892 bytes, Stack size 192 bytes, select.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ce783c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_timeval_to_ticks
<LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4bfec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_get
<LI><a href="#[4bfeb90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4c2bb7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::wait_inner(Cyg_Mutex*, unsigned long long)
<LI><a href="#[4c2be8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Condition_Variable::wait_inner(Cyg_Mutex*)
<LI><a href="#[4c310dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;static Cyg_Scheduler::unlock_inner(unsigned int)
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><BR>[Called By]<UL><LI><a href="#[4bba3d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;select
</UL><P><STRONG><a name="[4d33f28]"></a>w99702_eth_deliver</STRONG> (ARM, 236 bytes, Stack size 32 bytes, w99702_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4d33eb4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_eth_poll
</UL><BR>[Address Reference Count : 1]<UL><LI> w99702_ether.o(.data)
</UL><P><STRONG><a name="[4d33dc4]"></a>w99702_eth_init</STRONG> (ARM, 372 bytes, Stack size 40 bytes, w99702_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2ccf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_init
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
</UL><BR>[Address Reference Count : 1]<UL><LI> w99702_ether.o(netdev)
</UL><P><STRONG><a name="[4d341ec]"></a>w99702_eth_start</STRONG> (ARM, 112 bytes, Stack size 16 bytes, w99702_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d32190]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_open
<LI><a href="#[4d32118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetMacPacketFilter
</UL><BR>[Address Reference Count : 1]<UL><LI> w99702_ether.o(.data)
</UL><P><STRONG><a name="[4d34178]"></a>w99702_eth_stop</STRONG> (ARM, 32 bytes, Stack size 0 bytes, w99702_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d320a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_close
</UL><BR>[Address Reference Count : 1]<UL><LI> w99702_ether.o(.data)
</UL><P><STRONG><a name="[4d34100]"></a>w99702_eth_control</STRONG> (ARM, 388 bytes, Stack size 40 bytes, w99702_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4d31f4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_set_mac_address
<LI><a href="#[4d31ed8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><BR>[Address Reference Count : 1]<UL><LI> w99702_ether.o(.data)
</UL><P><STRONG><a name="[4d34088]"></a>w99702_eth_can_send</STRONG> (ARM, 204 bytes, Stack size 24 bytes, w99702_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4c2ca1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_maskbits
<LI><a href="#[4c2c92c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_wait
</UL><BR>[Address Reference Count : 1]<UL><LI> w99702_ether.o(.data)
</UL><P><STRONG><a name="[4d34014]"></a>w99702_eth_send</STRONG> (ARM, 76 bytes, Stack size 16 bytes, w99702_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d31e64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_tx_packet
</UL><BR>[Address Reference Count : 1]<UL><LI> w99702_ether.o(.data)
</UL><P><STRONG><a name="[4d33fa0]"></a>w99702_eth_recv</STRONG> (ARM, 232 bytes, Stack size 40 bytes, w99702_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d31dec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ProcessRxedPacket
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Address Reference Count : 1]<UL><LI> w99702_ether.o(.data)
</UL><P><STRONG><a name="[4d33eb4]"></a>w99702_eth_poll</STRONG> (ARM, 4 bytes, Stack size 0 bytes, w99702_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d33f28]">&gt&gt</a>&nbsp;&nbsp;&nbsp;w99702_eth_deliver
</UL><BR>[Address Reference Count : 1]<UL><LI> w99702_ether.o(.data)
</UL><P><STRONG><a name="[4d33e38]"></a>w99702_eth_int_vector</STRONG> (ARM, 8 bytes, Stack size 0 bytes, w99702_ether.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> w99702_ether.o(.data)
</UL><P><STRONG><a name="[4d33580]"></a>wlan_init_thread</STRONG> (ARM, 244 bytes, Stack size 32 bytes, w99702_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d31d78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;INIT_WBFAT_FS (Weak Reference)
<LI><a href="#[4d31d04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_fmi_init
<LI><a href="#[4d31c90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;coremodule_init
<LI><a href="#[4d31c18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_init_module
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Address Reference Count : 1]<UL><LI> w99702_ether.o(.text)
</UL><P><STRONG><a name="[7534184]"></a>set_debug_comm</STRONG> (ARM, 200 bytes, Stack size 24 bytes, hal_if.o(.text))
<BR>[Called By]<UL><LI><a href="#[7531cfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hal_if_init
</UL><BR>[Address Reference Count : 1]<UL><LI> hal_if.o(.text)
</UL><P><STRONG><a name="[7533f30]"></a>set_console_comm</STRONG> (ARM, 124 bytes, Stack size 4 bytes, hal_if.o(.text))
<BR>[Called By]<UL><LI><a href="#[7531cfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hal_if_init
</UL><BR>[Address Reference Count : 1]<UL><LI> hal_if.o(.text)
</UL><P><STRONG><a name="[7533bdc]"></a>cyg_hal_diag_mangler_gdb_flush</STRONG> (ARM, 388 bytes, Stack size 48 bytes, hal_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7533b64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__call_COMM_IF_PUTC
<LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
<LI><a href="#[7531f68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_hal_is_break
</UL><BR>[Called By]<UL><LI><a href="#[7533498]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_gdb_putc
<LI><a href="#[75335a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_gdb_write
<LI><a href="#[753338c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_gdb_control
</UL><P><STRONG><a name="[75325d4]"></a>delay_us</STRONG> (ARM, 152 bytes, Stack size 40 bytes, hal_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7531c0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_clock_read
</UL><BR>[Address Reference Count : 1]<UL><LI> hal_if.o(.text)
</UL><P><STRONG><a name="[75326b8]"></a>reset</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hal_if.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hal_if.o(.text)
</UL><P><STRONG><a name="[7532644]"></a>kill_by_reset</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hal_if.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hal_if.o(.text)
</UL><P><STRONG><a name="[7532724]"></a>nop_service</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hal_if.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hal_if.o(.text)
</UL><P><STRONG><a name="[7532560]"></a>flush_icache</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hal_if.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hal_if.o(.text)
</UL><P><STRONG><a name="[75324ec]"></a>flush_dcache</STRONG> (ARM, 4 bytes, Stack size 0 bytes, hal_if.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hal_if.o(.text)
</UL><P><STRONG><a name="[7533414]"></a>cyg_hal_diag_mangler_gdb_getc</STRONG> (ARM, 84 bytes, Stack size 24 bytes, hal_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> hal_if.o(.text)
</UL><P><STRONG><a name="[7533498]"></a>cyg_hal_diag_mangler_gdb_putc</STRONG> (ARM, 48 bytes, Stack size 0 bytes, hal_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7533bdc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_gdb_flush
</UL><BR>[Address Reference Count : 1]<UL><LI> hal_if.o(.text)
</UL><P><STRONG><a name="[75335a0]"></a>cyg_hal_diag_mangler_gdb_write</STRONG> (ARM, 84 bytes, Stack size 24 bytes, hal_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7533bdc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_gdb_flush
</UL><BR>[Address Reference Count : 1]<UL><LI> hal_if.o(.text)
</UL><P><STRONG><a name="[753351c]"></a>cyg_hal_diag_mangler_gdb_read</STRONG> (ARM, 104 bytes, Stack size 32 bytes, hal_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> hal_if.o(.text)
</UL><P><STRONG><a name="[753338c]"></a>cyg_hal_diag_mangler_gdb_control</STRONG> (ARM, 20 bytes, Stack size 8 bytes, hal_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7533bdc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_gdb_flush
</UL><BR>[Address Reference Count : 1]<UL><LI> hal_if.o(.text)
</UL><P><STRONG><a name="[7532bdc]"></a>cyg_hal_diag_mangler_null_getc</STRONG> (ARM, 84 bytes, Stack size 24 bytes, hal_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> hal_if.o(.text)
</UL><P><STRONG><a name="[7532c60]"></a>cyg_hal_diag_mangler_null_putc</STRONG> (ARM, 12 bytes, Stack size 0 bytes, hal_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7533b64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__call_COMM_IF_PUTC
</UL><BR>[Address Reference Count : 1]<UL><LI> hal_if.o(.text)
</UL><P><STRONG><a name="[7532d68]"></a>cyg_hal_diag_mangler_null_write</STRONG> (ARM, 44 bytes, Stack size 16 bytes, hal_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7533b64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__call_COMM_IF_PUTC
</UL><BR>[Address Reference Count : 1]<UL><LI> hal_if.o(.text)
</UL><P><STRONG><a name="[7532ce4]"></a>cyg_hal_diag_mangler_null_read</STRONG> (ARM, 220 bytes, Stack size 32 bytes, hal_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> hal_if.o(.text)
</UL><P><STRONG><a name="[7532b54]"></a>cyg_hal_diag_mangler_null_control</STRONG> (ARM, 8 bytes, Stack size 0 bytes, hal_if.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hal_if.o(.text)
</UL><P><STRONG><a name="[5058da0]"></a>fp_ucount_dec(CYG_FILE_TAG*)</STRONG> (ARM, 228 bytes, Stack size 24 bytes, fd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4ca9ecc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_lock
<LI><a href="#[4ca9e58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_fs_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4bfe57c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_fd_assign
<LI><a href="#[4bfe960]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_fd_free
<LI><a href="#[4bfeb90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_fp_free
<LI><a href="#[5058248]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dup
<LI><a href="#[50581dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dup2
</UL><P><STRONG><a name="[50a3a30]"></a>cyg_sock_unlock(CYG_FILE_TAG*)</STRONG> (ARM, 92 bytes, Stack size 8 bytes, socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4bfeaa8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_unlock
</UL><BR>[Called By]<UL><LI><a href="#[50a2590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;accept
<LI><a href="#[4ced118]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bind
<LI><a href="#[50a2524]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[50a24b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getpeername
<LI><a href="#[7317a3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getsockname
<LI><a href="#[50a2444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getsockopt
<LI><a href="#[73179d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;listen
<LI><a href="#[50a23d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;recvmsg
<LI><a href="#[4cecf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;recvfrom
<LI><a href="#[50a2300]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendmsg
<LI><a href="#[4cecfd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendto
<LI><a href="#[4ced344]">&lt&lt</a>&nbsp;&nbsp;&nbsp;setsockopt
<LI><a href="#[50a2224]">&lt&lt</a>&nbsp;&nbsp;&nbsp;shutdown
</UL><P><STRONG><a name="[50a39ac]"></a>cyg_sock_lock(CYG_FILE_TAG*)</STRONG> (ARM, 92 bytes, Stack size 8 bytes, socket.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4bfeb1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_file_lock
</UL><BR>[Called By]<UL><LI><a href="#[50a2590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;accept
<LI><a href="#[4ced118]">&lt&lt</a>&nbsp;&nbsp;&nbsp;bind
<LI><a href="#[50a2524]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[50a24b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getpeername
<LI><a href="#[7317a3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getsockname
<LI><a href="#[50a2444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getsockopt
<LI><a href="#[73179d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;listen
<LI><a href="#[50a23d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;recvmsg
<LI><a href="#[4cecf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;recvfrom
<LI><a href="#[50a2300]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendmsg
<LI><a href="#[4cecfd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sendto
<LI><a href="#[4ced344]">&lt&lt</a>&nbsp;&nbsp;&nbsp;setsockopt
<LI><a href="#[50a2224]">&lt&lt</a>&nbsp;&nbsp;&nbsp;shutdown
</UL><P><STRONG><a name="[50daf08]"></a>dhcp_size</STRONG> (ARM, 116 bytes, Stack size 0 bytes, dhcp_prot.o(.text))
<BR>[Called By]<UL><LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
</UL><P><STRONG><a name="[50dad00]"></a>dhcp_size_for_send</STRONG> (ARM, 152 bytes, Stack size 0 bytes, dhcp_prot.o(.text))
<BR>[Called By]<UL><LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
</UL><P><STRONG><a name="[50dac8c]"></a>set_fixed_tag</STRONG> (ARM, 192 bytes, Stack size 8 bytes, dhcp_prot.o(.text))
<BR>[Called By]<UL><LI><a href="#[50da510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;set_default_dhcp_tags
<LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
</UL><P><STRONG><a name="[50dab2c]"></a>unset_tag</STRONG> (ARM, 144 bytes, Stack size 4 bytes, dhcp_prot.o(.text))
<BR>[Called By]<UL><LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
</UL><P><STRONG><a name="[50da510]"></a>set_default_dhcp_tags</STRONG> (ARM, 204 bytes, Stack size 12 bytes, dhcp_prot.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[50dac8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_fixed_tag
</UL><BR>[Called By]<UL><LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
</UL><P><STRONG><a name="[511a5d0]"></a>free_hent</STRONG> (ARM, 100 bytes, Stack size 16 bytes, dns.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[5119b6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_answer
<LI><a href="#[51193f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyaddr
<LI><a href="#[511937c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[5119a04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;thread_destructor
</UL><P><STRONG><a name="[511a010]"></a>send_recv</STRONG> (ARM, 316 bytes, Stack size 80 bytes, dns.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[4bba3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
</UL><BR>[Called By]<UL><LI><a href="#[51193f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyaddr
<LI><a href="#[511937c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyname
</UL><P><STRONG><a name="[5119cd0]"></a>build_query</STRONG> (ARM, 328 bytes, Stack size 40 bytes, dns.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[51193f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyaddr
<LI><a href="#[511937c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyname
</UL><P><STRONG><a name="[5119b6c]"></a>parse_answer</STRONG> (ARM, 900 bytes, Stack size 48 bytes, dns.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[511a5d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free_hent
<LI><a href="#[5119464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;real_name
</UL><BR>[Called By]<UL><LI><a href="#[51193f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyaddr
<LI><a href="#[511937c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gethostbyname
</UL><P><STRONG><a name="[5119a04]"></a>thread_destructor</STRONG> (ARM, 32 bytes, Stack size 8 bytes, dns.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_get_data
<LI><a href="#[511a5d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free_hent
</UL><BR>[Address Reference Count : 1]<UL><LI> dns.o(.text)
</UL><P><STRONG><a name="[5139b64]"></a>cyg_netint</STRONG> (ARM, 76 bytes, Stack size 16 bytes, tcpip_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a54da0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;force_net_dev_linked
<LI><a href="#[4c2c92c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_wait
<LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[5137c60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;arpintr
<LI><a href="#[5137bf4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ipintr
<LI><a href="#[5137b88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pppintr
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_support.o(.text)
</UL><P><STRONG><a name="[5139bd4]"></a>cyg_ktime_func</STRONG> (ARM, 100 bytes, Stack size 16 bytes, tcpip_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_support.o(.text)
</UL><P><STRONG><a name="[51396c8]"></a>_mask</STRONG> (ARM, 148 bytes, Stack size 24 bytes, tcpip_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ba2a10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_sprintf
</UL><BR>[Called By]<UL><LI><a href="#[5137e8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;show_network_tables
<LI><a href="#[5139734]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dumpentry
</UL><P><STRONG><a name="[5139734]"></a>_dumpentry</STRONG> (ARM, 336 bytes, Stack size 56 bytes, tcpip_support.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137aa8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_inet_ntop
<LI><a href="#[51396c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_mask
<LI><a href="#[5137a34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;if_indextoname
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_support.o(.text)
</UL><P><STRONG><a name="[516edb8]"></a>rt_reinit_rtdelete</STRONG> (ARM, 52 bytes, Stack size 16 bytes, route.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516da78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtrequest
</UL><BR>[Address Reference Count : 1]<UL><LI> route.o(.text)
</UL><P><STRONG><a name="[51851fc]"></a>eth_drv_send</STRONG> (ARM, 896 bytes, Stack size 312 bytes, eth_drv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51841cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifplock
<LI><a href="#[5184158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifpunlock
<LI><a href="#[5184ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__call_vv_CYGNUM_CALL_IF_SET_CONSOLE_COMM
<LI><a href="#[5184f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__call_vv_CYGNUM_CALL_IF_FLASH_CFG_OP
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[4ba2740]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_dump_buf
</UL><BR>[Called By]<UL><LI><a href="#[5185590]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_tx_done
<LI><a href="#[5184714]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_start
</UL><BR>[Address Reference Count : 1]<UL><LI> eth_drv.o(.text)
</UL><P><STRONG><a name="[5185678]"></a>eth_drv_init</STRONG> (ARM, 116 bytes, Stack size 16 bytes, eth_drv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[51840e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;if_attach
<LI><a href="#[5184074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ether_ifattach
</UL><BR>[Address Reference Count : 1]<UL><LI> eth_drv.o(.data)
</UL><P><STRONG><a name="[5185590]"></a>eth_drv_tx_done</STRONG> (ARM, 44 bytes, Stack size 0 bytes, eth_drv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51851fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eth_drv_send
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Address Reference Count : 1]<UL><LI> eth_drv.o(.data)
</UL><P><STRONG><a name="[5185604]"></a>eth_drv_recv</STRONG> (ARM, 1400 bytes, Stack size 320 bytes, eth_drv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183ebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retryhdr
<LI><a href="#[5184ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__call_vv_CYGNUM_CALL_IF_SET_CONSOLE_COMM
<LI><a href="#[5184f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__call_vv_CYGNUM_CALL_IF_FLASH_CFG_OP
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5183de4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retry
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[5183d74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_clalloc
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[4ba2740]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_dump_buf
<LI><a href="#[5183d04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ether_input
</UL><BR>[Address Reference Count : 1]<UL><LI> eth_drv.o(.data)
</UL><P><STRONG><a name="[5184b38]"></a>eth_drv_ioctl</STRONG> (ARM, 712 bytes, Stack size 32 bytes, eth_drv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d66c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splnet
<LI><a href="#[5183b2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ether_ioctl
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5183ab8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eth_packet_send
<LI><a href="#[5184714]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eth_drv_start
<LI><a href="#[5183a48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;arp_ifinit
<LI><a href="#[51839cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wireless_process_ioctl
</UL><BR>[Address Reference Count : 1]<UL><LI> eth_drv.o(.text)
</UL><P><STRONG><a name="[5184714]"></a>eth_drv_start</STRONG> (ARM, 76 bytes, Stack size 16 bytes, eth_drv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51851fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eth_drv_send
</UL><BR>[Called By]<UL><LI><a href="#[5184b38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_ioctl
</UL><P><STRONG><a name="[51dfea8]"></a>wlan_cmd_802_11_set_wep</STRONG> (ARM, 1108 bytes, Stack size 32 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51dedd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_debug_printf
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL><BR>[Called By]<UL><LI><a href="#[51de908]">&lt&lt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><P><STRONG><a name="[51df798]"></a>DownloadCommandToStation</STRONG> (ARM, 852 bytes, Stack size 48 bytes, wlan_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51dda0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_reenable_host_interrupt
<LI><a href="#[51dedd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_debug_printf
<LI><a href="#[51dea70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;CleanupAndInsertCmd
<LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[51ddd60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_host_to_card
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4c2e1b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_initialize
<LI><a href="#[4c2dfc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_enable
<LI><a href="#[4c2decc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_disable
<LI><a href="#[51dd994]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_set_bus_clock
<LI><a href="#[51dee50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_iwevcustom_event
</UL><BR>[Called By]<UL><LI><a href="#[51dde50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ExecuteNextCommand
</UL><P><STRONG><a name="[51b6884]"></a>wlan_service_main_thread</STRONG> (ARM, 1392 bytes, Stack size 48 bytes, wlan_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2ccf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_init
<LI><a href="#[51b5398]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wmm_lists_empty
<LI><a href="#[4c2c92c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_wait
<LI><a href="#[4a0359c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_self
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51b5320]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_get_int_status
<LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[51b52a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_exit_deep_sleep
<LI><a href="#[51b522c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_process_rx_command
<LI><a href="#[5183c94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eth_drv_dsr
<LI><a href="#[51b51b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_read_event_cause
<LI><a href="#[51b5138]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_process_event
<LI><a href="#[51ddc74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PSConfirmSleep
<LI><a href="#[51dde50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ExecuteNextCommand
<LI><a href="#[51b50c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;handle_send
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_main.o(.text)
</UL><P><STRONG><a name="[51b626c]"></a>wlan_remove_card</STRONG> (ARM, 492 bytes, Stack size 56 bytes, wlan_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2bd18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_broadcast
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
<LI><a href="#[51ddec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PSWakeup
<LI><a href="#[51b52a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_exit_deep_sleep
<LI><a href="#[4ced1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memset
<LI><a href="#[51ded60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wireless_send_event
<LI><a href="#[51b504c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_disable_host_int
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[5183c94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eth_drv_dsr
<LI><a href="#[51b57cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sbi_unregister_dev
<LI><a href="#[51b4fd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_free_adapter
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_main.o(.text)
</UL><P><STRONG><a name="[5250e48]"></a>wlan_set_encode_nonwpa</STRONG> (ARM, 1340 bytes, Stack size 96 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[4d32118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetMacPacketFilter
<LI><a href="#[52aadc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendDeauthentication
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[525055c]"></a>get_active_data_rates</STRONG> (ARM, 268 bytes, Stack size 16 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[525266c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_range
<LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[5252428]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_rate
</UL><P><STRONG><a name="[5252a0c]"></a>wlan_config_commit</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wlan_wext.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[5252998]"></a>wlan_get_name</STRONG> (ARM, 188 bytes, Stack size 40 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[52aad5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;toupper
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[52528b0]"></a>wlan_get_freq</STRONG> (ARM, 184 bytes, Stack size 16 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[52aaf2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_cfp_by_band_and_channel
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[52525f8]"></a>wlan_get_wap</STRONG> (ARM, 72 bytes, Stack size 8 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[5252510]"></a>wlan_set_nick</STRONG> (ARM, 84 bytes, Stack size 8 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[525249c]"></a>wlan_get_nick</STRONG> (ARM, 72 bytes, Stack size 16 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[5252340]"></a>wlan_set_rts</STRONG> (ARM, 172 bytes, Stack size 32 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[52522cc]"></a>wlan_get_rts</STRONG> (ARM, 172 bytes, Stack size 24 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[5252258]"></a>wlan_set_frag</STRONG> (ARM, 172 bytes, Stack size 32 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[52521e4]"></a>wlan_get_frag</STRONG> (ARM, 168 bytes, Stack size 24 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[52527c8]"></a>wlan_get_mode</STRONG> (ARM, 52 bytes, Stack size 0 bytes, wlan_wext.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[5251fa0]"></a>wlan_get_encode</STRONG> (ARM, 892 bytes, Stack size 48 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[52520fc]"></a>wlan_get_txpow</STRONG> (ARM, 204 bytes, Stack size 24 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[5252088]"></a>wlan_set_retry</STRONG> (ARM, 164 bytes, Stack size 24 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[5252014]"></a>wlan_get_retry</STRONG> (ARM, 160 bytes, Stack size 32 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[525266c]"></a>wlan_get_range</STRONG> (ARM, 1152 bytes, Stack size 64 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[525055c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_active_data_rates
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[52aace4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_get_state_11d
<LI><a href="#[52aac74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;chan_2_freq
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[5251f2c]"></a>wlan_set_power</STRONG> (ARM, 320 bytes, Stack size 16 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51ddec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PSWakeup
<LI><a href="#[51ddf38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PSSleep
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[5251eb8]"></a>wlan_get_power</STRONG> (ARM, 64 bytes, Stack size 0 bytes, wlan_wext.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[5252754]"></a>wlan_set_sens</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wlan_wext.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[52526e0]"></a>wlan_get_sens</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wlan_wext.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[5252924]"></a>wlan_set_freq</STRONG> (ARM, 1268 bytes, Stack size 72 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[52aaf2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_cfp_by_band_and_channel
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[52a9f94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;StopAdhocNetwork
<LI><a href="#[52a9f18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendSpecificSSIDScan
<LI><a href="#[52a9ea4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;FindSSIDInList
<LI><a href="#[52a9e2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;JoinAdhocNetwork
<LI><a href="#[52a9db4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;StartAdhocNetwork
<LI><a href="#[4d32118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetMacPacketFilter
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[5252428]"></a>wlan_set_rate</STRONG> (ARM, 556 bytes, Stack size 56 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[525055c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_active_data_rates
<LI><a href="#[52a9d3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;data_rate_to_index
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[52523b4]"></a>wlan_get_rate</STRONG> (ARM, 140 bytes, Stack size 24 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[525283c]"></a>wlan_set_mode</STRONG> (ARM, 656 bytes, Stack size 32 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51ddec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PSWakeup
<LI><a href="#[52aadc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SendDeauthentication
<LI><a href="#[52a9f94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;StopAdhocNetwork
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[4d32118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetMacPacketFilter
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[5252170]"></a>wlan_set_txpow</STRONG> (ARM, 540 bytes, Stack size 32 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aafb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Is_Command_Allowed
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[52aba74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_radio_ioctl
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[5252584]"></a>wlan_get_essid</STRONG> (ARM, 268 bytes, Stack size 24 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Address Reference Count : 1]<UL><LI> wlan_wext.o(.constdata)
</UL><P><STRONG><a name="[52aba74]"></a>wlan_radio_ioctl</STRONG> (ARM, 140 bytes, Stack size 24 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
<LI><a href="#[5252170]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_set_txpow
</UL><P><STRONG><a name="[52aba00]"></a>wlan_get_snr</STRONG> (ARM, 584 bytes, Stack size 64 bytes, wlan_wext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[51de908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PrepareAndSendCommand
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
</UL><BR>[Called By]<UL><LI><a href="#[4d31ed8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_do_ioctl
</UL><P><STRONG><a name="[5334140]"></a>sdio_wait_for_interrupt</STRONG> (ARM, 252 bytes, Stack size 24 bytes, sdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[53217b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;trigger_dma_write
<LI><a href="#[5321748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;complete_io
</UL><P><STRONG><a name="[5333150]"></a>sdio_initialize_ireg</STRONG> (ARM, 108 bytes, Stack size 8 bytes, sdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[53217b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;trigger_dma_write
<LI><a href="#[5321748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;complete_io
</UL><P><STRONG><a name="[533349c]"></a>check_iomem_args</STRONG> (ARM, 144 bytes, Stack size 16 bytes, sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[5330f08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_write_iomem
<LI><a href="#[5330e94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_read_iomem
</UL><P><STRONG><a name="[53323b8]"></a>register_sdiohost</STRONG> (ARM, 560 bytes, Stack size 40 bytes, sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[7223a84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiInstallSDIOFunc
<LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[5330ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_read_ioreg
</UL><BR>[Called By]<UL><LI><a href="#[532139c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sdio_register
</UL><P><STRONG><a name="[5331648]"></a>pwr_set_clk</STRONG> (ARM, 1332 bytes, Stack size 12 bytes, sdio.o(.text))
<BR>[Called By]<UL><LI><a href="#[4d31d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_fmi_init
</UL><P><STRONG><a name="[75f08ec]"></a>tcp_serial_init</STRONG> (ARM, 192 bytes, Stack size 16 bytes, tcp_serial.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e4a0ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_init
<LI><a href="#[75eec78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_cond_init
<LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Address Reference Count : 1]<UL><LI> tcp_serial.o(devtab)
</UL><P><STRONG><a name="[75f0874]"></a>tcp_serial_lookup</STRONG> (ARM, 32 bytes, Stack size 8 bytes, tcp_serial.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tcp_serial.o(devtab)
</UL><P><STRONG><a name="[75f0a58]"></a>tcp_serial_set_config</STRONG> (ARM, 48 bytes, Stack size 0 bytes, tcp_serial.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tcp_serial.o(.data)
</UL><P><STRONG><a name="[75f09dc]"></a>tcp_serial_start_xmit</STRONG> (ARM, 24 bytes, Stack size 0 bytes, tcp_serial.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tcp_serial.o(.data)
</UL><P><STRONG><a name="[75f0960]"></a>tcp_serial_stop_xmit</STRONG> (ARM, 16 bytes, Stack size 0 bytes, tcp_serial.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tcp_serial.o(.data)
</UL><P><STRONG><a name="[75ef8b0]"></a>tcp_serial_thread</STRONG> (ARM, 2524 bytes, Stack size 1160 bytes, tcp_serial.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4bba3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[75eeb88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_serial_send_cmd
<LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[75ef838]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_serial_close_fd
<LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[75eeb14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_cond_signal
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[511937c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[50a2524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[75eea98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_options_init
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[75eea28]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_up
<LI><a href="#[75ee9b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_down
<LI><a href="#[75ee93c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_wait_down
</UL><BR>[Address Reference Count : 1]<UL><LI> tcp_serial.o(.text)
</UL><P><STRONG><a name="[75ef7c0]"></a>tcp_serial_thread1</STRONG> (ARM, 48 bytes, Stack size 16 bytes, tcp_serial.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[75eeb88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_serial_send_cmd
<LI><a href="#[75ee858]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_cond_wait
</UL><BR>[Address Reference Count : 1]<UL><LI> tcp_serial.o(.text)
</UL><P><STRONG><a name="[75ef838]"></a>tcp_serial_close_fd</STRONG> (ARM, 84 bytes, Stack size 16 bytes, tcp_serial.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[75ef8b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcp_serial_thread
</UL><P><STRONG><a name="[5c89330]"></a>round(double, int*, char*, char*, char, char*)</STRONG> (ARM, 308 bytes, Stack size 40 bytes, vfnprintf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74125ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[5c88fb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__softfp_modf
<LI><a href="#[4f74974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dflt
<LI><a href="#[4f741d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL><BR>[Called By]<UL><LI><a href="#[5c89038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cvt(double, int, int, char*, int, char*, char*)
</UL><P><STRONG><a name="[5c89038]"></a>cvt(double, int, int, char*, int, char*, char*)</STRONG> (ARM, 2008 bytes, Stack size 392 bytes, vfnprintf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c88f44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;finite
<LI><a href="#[5c88fb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__softfp_modf
<LI><a href="#[74125ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[4f73bfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4e4cde8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[4f73d50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[5c89330]">&gt&gt</a>&nbsp;&nbsp;&nbsp;round(double, int*, char*, char*, char, char*)
<LI><a href="#[7415f50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isnan
</UL><BR>[Called By]<UL><LI><a href="#[746a16c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vfnprintf
</UL><P><STRONG><a name="[5d51138]"></a>serial_init</STRONG> (ARM, 176 bytes, Stack size 24 bytes, serial.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4c2c128]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_init
<LI><a href="#[4ce7738]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_selinit
</UL><BR>[Address Reference Count : 1]<UL><LI> serial.o(.data)
</UL><P><STRONG><a name="[5d513f0]"></a>serial_write</STRONG> (ARM, 428 bytes, Stack size 48 bytes, serial.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[4c2bf24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_wait
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> serial.o(.data)
</UL><P><STRONG><a name="[5d51380]"></a>serial_read</STRONG> (ARM, 320 bytes, Stack size 40 bytes, serial.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[4c2bf24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_wait
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> serial.o(.data)
</UL><P><STRONG><a name="[5d5130c]"></a>serial_select</STRONG> (ARM, 120 bytes, Stack size 8 bytes, serial.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ce76c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_selrecord
</UL><BR>[Address Reference Count : 1]<UL><LI> serial.o(.data)
</UL><P><STRONG><a name="[5d51294]"></a>serial_get_config</STRONG> (ARM, 660 bytes, Stack size 32 bytes, serial.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[4c2be18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_signal
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[4c2bf24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_wait
</UL><BR>[Address Reference Count : 1]<UL><LI> serial.o(.data)
</UL><P><STRONG><a name="[5d5121c]"></a>serial_set_config</STRONG> (ARM, 172 bytes, Stack size 16 bytes, serial.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> serial.o(.data)
</UL><P><STRONG><a name="[5d510c4]"></a>serial_xmt_char</STRONG> (ARM, 216 bytes, Stack size 24 bytes, serial.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2bd18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_broadcast
<LI><a href="#[4ce7650]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_selwakeup
</UL><BR>[Address Reference Count : 1]<UL><LI> serial.o(.data)
</UL><P><STRONG><a name="[5d51050]"></a>serial_rcv_char</STRONG> (ARM, 128 bytes, Stack size 16 bytes, serial.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ce7650]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_selwakeup
<LI><a href="#[4c2be18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_signal
</UL><BR>[Address Reference Count : 1]<UL><LI> serial.o(.data)
</UL><P><STRONG><a name="[5d50fd8]"></a>serial_data_rcv_req</STRONG> (ARM, 116 bytes, Stack size 8 bytes, serial.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> serial.o(.data)
</UL><P><STRONG><a name="[5d50f5c]"></a>serial_data_rcv_done</STRONG> (ARM, 100 bytes, Stack size 16 bytes, serial.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2be18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_signal
<LI><a href="#[4ce7650]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_selwakeup
</UL><BR>[Address Reference Count : 1]<UL><LI> serial.o(.data)
</UL><P><STRONG><a name="[5d50ee4]"></a>serial_data_xmt_req</STRONG> (ARM, 100 bytes, Stack size 4 bytes, serial.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> serial.o(.data)
</UL><P><STRONG><a name="[5d50e68]"></a>serial_data_xmt_done</STRONG> (ARM, 140 bytes, Stack size 16 bytes, serial.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2bd18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_broadcast
<LI><a href="#[4ce7650]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_selwakeup
</UL><BR>[Address Reference Count : 1]<UL><LI> serial.o(.data)
</UL><P><STRONG><a name="[5d511a8]"></a>serial_ioctl</STRONG> (ARM, 8 bytes, Stack size 0 bytes, serial.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> serial.o(.data)
</UL><P><STRONG><a name="[5d79bc0]"></a>cyg_hal_plf_serial_init_channel</STRONG> (ARM, 252 bytes, Stack size 16 bytes, hal_diag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[501e7f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_interrupt_mask
</UL><BR>[Called By]<UL><LI><a href="#[7531c80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_plf_comms_init
</UL><P><STRONG><a name="[5d79050]"></a>cyg_hal_plf_serial_write</STRONG> (ARM, 60 bytes, Stack size 4 bytes, hal_diag.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hal_diag.o(.text)
</UL><P><STRONG><a name="[5d78fd4]"></a>cyg_hal_plf_serial_read</STRONG> (ARM, 44 bytes, Stack size 16 bytes, hal_diag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5d78cdc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_hal_plf_serial_getc
</UL><BR>[Address Reference Count : 1]<UL><LI> hal_diag.o(.text)
</UL><P><STRONG><a name="[5d78f54]"></a>cyg_hal_plf_serial_control</STRONG> (ARM, 132 bytes, Stack size 32 bytes, hal_diag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[501e6f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_interrupt_acknowledge
<LI><a href="#[501e774]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_interrupt_unmask
<LI><a href="#[501e7f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_interrupt_mask
</UL><BR>[Address Reference Count : 1]<UL><LI> hal_diag.o(.text)
</UL><P><STRONG><a name="[5d78ed8]"></a>cyg_hal_plf_serial_isr</STRONG> (ARM, 108 bytes, Stack size 32 bytes, hal_diag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7531f68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_hal_is_break
<LI><a href="#[501e6f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_interrupt_acknowledge
</UL><BR>[Address Reference Count : 1]<UL><LI> hal_diag.o(.text)
</UL><P><STRONG><a name="[5daa760]"></a>do_alarm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, timeout.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
</UL><BR>[Address Reference Count : 1]<UL><LI> timeout.o(.text)
</UL><P><STRONG><a name="[5daa6ec]"></a>alarm_thread</STRONG> (ARM, 264 bytes, Stack size 40 bytes, timeout.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2c92c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_wait
<LI><a href="#[5daa484]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splinternal
<LI><a href="#[5183b9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eth_drv_run_deliveries
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4c2e1b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_initialize
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Address Reference Count : 1]<UL><LI> timeout.o(.text)
</UL><P><STRONG><a name="[7acf06c]"></a>rt_setif</STRONG> (ARM, 412 bytes, Stack size 32 bytes, rtsock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d7c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithnet
<LI><a href="#[516d74c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifaof_ifpforaddr
<LI><a href="#[7ace520]">&gt&gt</a>&nbsp;&nbsp;&nbsp;if_withname
<LI><a href="#[516d838]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithaddr
<LI><a href="#[516d924]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifa_ifwithroute
<LI><a href="#[516dcb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifafree
</UL><BR>[Called By]<UL><LI><a href="#[7ace920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_output
</UL><P><STRONG><a name="[7acf000]"></a>rt_msg2</STRONG> (ARM, 340 bytes, Stack size 40 bytes, rtsock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[5138f6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_free
<LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
</UL><BR>[Called By]<UL><LI><a href="#[7ace920]">&lt&lt</a>&nbsp;&nbsp;&nbsp;route_output
</UL><P><STRONG><a name="[7aceea4]"></a>rt_msg1</STRONG> (ARM, 240 bytes, Stack size 40 bytes, rtsock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a91748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_gethdr
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[7ace604]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_copyback
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Called By]<UL><LI><a href="#[516da08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_missmsg
<LI><a href="#[7ace440]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_ifmsg
<LI><a href="#[516d214]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rt_newaddrmsg
</UL><P><STRONG><a name="[7b2d1f4]"></a>rn_satsifies_leaf</STRONG> (ARM, 140 bytes, Stack size 4 bytes, radix.o(.text))
<BR>[Called By]<UL><LI><a href="#[7b2c834]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_match
</UL><P><STRONG><a name="[7b2cdbc]"></a>rn_new_radix_mask</STRONG> (ARM, 124 bytes, Stack size 16 bytes, radix.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51390dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_malloc
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
</UL><BR>[Called By]<UL><LI><a href="#[7b2c674]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rn_addroute
</UL><P><STRONG><a name="[7b30bcc]"></a>arprequest</STRONG> (ARM, 264 bytes, Stack size 56 bytes, if_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a91748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_gethdr
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
</UL><BR>[Called By]<UL><LI><a href="#[7b2f9a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arp_rtrequest
<LI><a href="#[7af4310]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arpresolve
<LI><a href="#[5183a48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arp_ifinit
</UL><P><STRONG><a name="[7b3070c]"></a>in_arpinput</STRONG> (ARM, 836 bytes, Stack size 80 bytes, if_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[743b118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcmp
<LI><a href="#[7b3077c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;arplookup
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Called By]<UL><LI><a href="#[5137c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arpintr
<LI><a href="#[7b2f8c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_revarpinput
</UL><P><STRONG><a name="[7b309cc]"></a>arptimer</STRONG> (ARM, 244 bytes, Stack size 40 bytes, if_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[516d0c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;timeout
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[516da78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtrequest
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Address Reference Count : 1]<UL><LI> if_ether.o(.text)
</UL><P><STRONG><a name="[7b3077c]"></a>arplookup</STRONG> (ARM, 136 bytes, Stack size 8 bytes, if_ether.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516dae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtalloc1
</UL><BR>[Called By]<UL><LI><a href="#[7af4310]">&lt&lt</a>&nbsp;&nbsp;&nbsp;arpresolve
<LI><a href="#[7b3070c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_arpinput
</UL><P><STRONG><a name="[7bec6f0]"></a>HandleDisconnectEvent</STRONG> (ARM, 164 bytes, Stack size 16 bytes, wlan_cmdresp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7bec660]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MacEventDisconnected
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4c2e1b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_initialize
</UL><BR>[Called By]<UL><LI><a href="#[51b5138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_process_event
</UL><P><STRONG><a name="[7c3a4bc]"></a>get_common_rates</STRONG> (ARM, 340 bytes, Stack size 64 bytes, wlan_join.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[51de80c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_associate
<LI><a href="#[51de600]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_cmd_802_11_ad_hoc_join
</UL><P><STRONG><a name="[7c624f4]"></a>IsNetworkCompatible</STRONG> (ARM, 724 bytes, Stack size 40 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[7c38784]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FindBSSIDInList
<LI><a href="#[52a9ea4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FindSSIDInList
<LI><a href="#[7c387f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FindBestSSIDInList
</UL><P><STRONG><a name="[7c61d44]"></a>wlan_scan_setup_scan_config</STRONG> (ARM, 1076 bytes, Stack size 80 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[52aace4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_get_state_11d
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[7bb1bd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_get_scan_type_11d
</UL><BR>[Called By]<UL><LI><a href="#[7c6050c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_scan_networks
</UL><P><STRONG><a name="[7c60c54]"></a>InterpretBSSDescriptionWithIE</STRONG> (ARM, 1696 bytes, Stack size 104 bytes, wlan_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL><BR>[Called By]<UL><LI><a href="#[7bec560]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_ret_802_11_scan
</UL><P><STRONG><a name="[7c85094]"></a>sbi_prog_firmware_image</STRONG> (ARM, 736 bytes, Stack size 64 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7c84e88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mv_sdio_read_scratch
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[7c84e08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mv_sdio_poll_card_status
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[5330f08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_write_iomem
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[51b5a9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;udelay
</UL><BR>[Called By]<UL><LI><a href="#[7c83178]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_prog_firmware
<LI><a href="#[7c01438]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_prog_helper
</UL><P><STRONG><a name="[7c84d88]"></a>sbi_download_wlan_fw_image</STRONG> (ARM, 1288 bytes, Stack size 72 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5330ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_read_ioreg
<LI><a href="#[51b5a9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;udelay
<LI><a href="#[7c84e08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mv_sdio_poll_card_status
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[5330f08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_write_iomem
</UL><BR>[Called By]<UL><LI><a href="#[7c013b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_prog_firmware_w_helper
</UL><P><STRONG><a name="[7c84864]"></a>sbi_add_card</STRONG> (ARM, 48 bytes, Stack size 8 bytes, if_sdio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> if_sdio.o(.text)
</UL><P><STRONG><a name="[7c847f0]"></a>sbi_remove_card</STRONG> (ARM, 32 bytes, Stack size 0 bytes, if_sdio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> if_sdio.o(.text)
</UL><P><STRONG><a name="[7c84e88]"></a>mv_sdio_read_scratch</STRONG> (ARM, 164 bytes, Stack size 24 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5330ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_read_ioreg
</UL><BR>[Called By]<UL><LI><a href="#[7c85094]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_prog_firmware_image
<LI><a href="#[51b5320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_get_int_status
<LI><a href="#[7c0133c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_verify_fw_download
</UL><P><STRONG><a name="[7c84e08]"></a>mv_sdio_poll_card_status</STRONG> (ARM, 140 bytes, Stack size 24 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5330ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sdio_read_ioreg
<LI><a href="#[51b5a9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;udelay
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[7c85094]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_prog_firmware_image
<LI><a href="#[7c84d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_download_wlan_fw_image
<LI><a href="#[51b5320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_get_int_status
<LI><a href="#[51ddd60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sbi_host_to_card
</UL><P><STRONG><a name="[7c8477c]"></a>sbi_interrupt</STRONG> (ARM, 20 bytes, Stack size 8 bytes, if_sdio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51b55e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wlan_interrupt
</UL><BR>[Address Reference Count : 1]<UL><LI> if_sdio.o(.text)
</UL><P><STRONG><a name="[9ade690]"></a>pipe_write</STRONG> (ARM, 432 bytes, Stack size 56 bytes, pipelib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4c2bd18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_broadcast
<LI><a href="#[4ce7650]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_selwakeup
<LI><a href="#[4c2bf24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_wait
<LI><a href="#[4c2bc14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_timed_wait
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> pipelib.o(.data)
</UL><P><STRONG><a name="[9ade620]"></a>pipe_read</STRONG> (ARM, 408 bytes, Stack size 56 bytes, pipelib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4c2bd18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_broadcast
<LI><a href="#[4ce7650]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_selwakeup
<LI><a href="#[4c2bf24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_wait
<LI><a href="#[4c2bc14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_timed_wait
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> pipelib.o(.data)
</UL><P><STRONG><a name="[9ade5b0]"></a>pipe_select</STRONG> (ARM, 152 bytes, Stack size 24 bytes, pipelib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4ce76c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_selrecord
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> pipelib.o(.data)
</UL><P><STRONG><a name="[9ade53c]"></a>pipe_get_config</STRONG> (ARM, 172 bytes, Stack size 24 bytes, pipelib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4c2bd18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_broadcast
<LI><a href="#[4ce7650]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_selwakeup
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> pipelib.o(.data)
</UL><P><STRONG><a name="[9ade4c8]"></a>pipe_set_config</STRONG> (ARM, 8 bytes, Stack size 0 bytes, pipelib.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> pipelib.o(.data)
</UL><P><STRONG><a name="[9ade458]"></a>pipe_ioctl</STRONG> (ARM, 92 bytes, Stack size 0 bytes, pipelib.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> pipelib.o(.data)
</UL><P><STRONG><a name="[9ac639c]"></a>dodefaultroute</STRONG> (ARM, 352 bytes, Stack size 144 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[9ac344c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_cifdefaultroute
<LI><a href="#[9ac32ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sys_cleanup
<LI><a href="#[9ac1ec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifdefaultroute
</UL><P><STRONG><a name="[9ac6500]"></a>wait_input_alarm</STRONG> (ARM, 28 bytes, Stack size 8 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30b10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_release
</UL><BR>[Address Reference Count : 1]<UL><LI> sys-ecos.o(.text)
</UL><P><STRONG><a name="[9ac3ea4]"></a>cyg_ppp_tx_thread</STRONG> (ARM, 128 bytes, Stack size 16 bytes, sys-ecos.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[4c2d1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_wait
<LI><a href="#[9ac1328]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppstart
<LI><a href="#[4c30f64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_exit
</UL><BR>[Address Reference Count : 1]<UL><LI> sys-ecos.o(.text)
</UL><P><STRONG><a name="[9a8a72c]"></a>ppp_ccp</STRONG> (ARM, 708 bytes, Stack size 32 bytes, if_ppp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Called By]<UL><LI><a href="#[9a89f98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_dequeue
<LI><a href="#[9a8a5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ppp_inproc
</UL><P><STRONG><a name="[9a8a5cc]"></a>ppp_inproc</STRONG> (ARM, 2264 bytes, Stack size 72 bytes, if_ppp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[9a8a72c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ppp_ccp
<LI><a href="#[9a89e9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sl_uncompress_tcp
<LI><a href="#[9a89e18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sl_uncompress_tcp_core
<LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183ebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retryhdr
<LI><a href="#[5183d74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_clalloc
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[5138c98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_free
<LI><a href="#[7a9151c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_copydata
<LI><a href="#[4c2cb10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_flag_setbits
<LI><a href="#[51841cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifplock
<LI><a href="#[5184158]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ifpunlock
<LI><a href="#[5138620]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getmicrotime
</UL><BR>[Called By]<UL><LI><a href="#[5137b88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppintr
</UL><P><STRONG><a name="[9a8ac48]"></a>pppsioctl</STRONG> (ARM, 620 bytes, Stack size 32 bytes, if_ppp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Address Reference Count : 1]<UL><LI> if_ppp.o(.text)
</UL><P><STRONG><a name="[82c4744]"></a>delay</STRONG> (ARM, 28 bytes, Stack size 0 bytes, audio_driver.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[82c4474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_i2c_write
<LI><a href="#[82c4390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dev_wm8978_init
<LI><a href="#[82c44fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;if_iis_init
<LI><a href="#[82c3df4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_reset_i2s
</UL><P><STRONG><a name="[82c44fc]"></a>if_iis_init</STRONG> (ARM, 112 bytes, Stack size 4 bytes, audio_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82c4744]">&gt&gt</a>&nbsp;&nbsp;&nbsp;delay
</UL><BR>[Called By]<UL><LI><a href="#[82c4318]">&lt&lt</a>&nbsp;&nbsp;&nbsp;audio_device_init
</UL><P><STRONG><a name="[83dfd3c]"></a>fopen_inner(int, Cyg_StdioStream::OpenMode, int, int)</STRONG> (ARM, 376 bytes, Stack size 88 bytes, fopen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2c400]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::lock()
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4bfe740]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fstat
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[5084474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_StdioStream::Cyg_StdioStream(int, Cyg_StdioStream::OpenMode, int, int, int, unsigned int, unsigned char*)
<LI><a href="#[4c2c290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Cyg_Mutex::unlock()
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[83df7c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fopen
<LI><a href="#[83df758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fdopen
</UL><P><STRONG><a name="[83dfa24]"></a>process_mode(const char*, Cyg_StdioStream::OpenMode*, int*, int*)</STRONG> (ARM, 140 bytes, Stack size 8 bytes, fopen.o(.text), UNUSED)
<BR>[Called By]<UL><LI><a href="#[83df7c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fopen
<LI><a href="#[83df758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fdopen
</UL><P><STRONG><a name="[85846bc]"></a>tty_init</STRONG> (ARM, 28 bytes, Stack size 0 bytes, tty.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tty.o(devtab)
</UL><P><STRONG><a name="[858464c]"></a>tty_lookup</STRONG> (ARM, 20 bytes, Stack size 0 bytes, tty.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tty.o(devtab)
</UL><P><STRONG><a name="[85848f4]"></a>tty_write</STRONG> (ARM, 260 bytes, Stack size 104 bytes, tty.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bba1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;uart_is_sys_msg_suppressed
<LI><a href="#[4bf4918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_write
<LI><a href="#[4ba2ea0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcom_write
</UL><BR>[Address Reference Count : 1]<UL><LI> tty.o(.data)
</UL><P><STRONG><a name="[8584884]"></a>tty_read</STRONG> (ARM, 400 bytes, Stack size 40 bytes, tty.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bf48a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_read
<LI><a href="#[4bf4918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_write
</UL><BR>[Address Reference Count : 1]<UL><LI> tty.o(.data)
</UL><P><STRONG><a name="[8584814]"></a>tty_select</STRONG> (ARM, 12 bytes, Stack size 0 bytes, tty.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bf474c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_select
</UL><BR>[Address Reference Count : 1]<UL><LI> tty.o(.data)
</UL><P><STRONG><a name="[85847a0]"></a>tty_get_config</STRONG> (ARM, 80 bytes, Stack size 8 bytes, tty.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a034a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_get_config
</UL><BR>[Address Reference Count : 1]<UL><LI> tty.o(.data)
</UL><P><STRONG><a name="[858472c]"></a>tty_set_config</STRONG> (ARM, 72 bytes, Stack size 8 bytes, tty.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bba670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_set_config
</UL><BR>[Address Reference Count : 1]<UL><LI> tty.o(.data)
</UL><P><STRONG><a name="[859570c]"></a>haldiag_init</STRONG> (ARM, 8 bytes, Stack size 0 bytes, haldiag.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> haldiag.o(devtab)
</UL><P><STRONG><a name="[8595954]"></a>haldiag_putc</STRONG> (ARM, 20 bytes, Stack size 8 bytes, haldiag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ba2e24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_if_diag_write_char
</UL><BR>[Address Reference Count : 1]<UL><LI> haldiag.o(.data)
</UL><P><STRONG><a name="[85958e0]"></a>haldiag_getc</STRONG> (ARM, 20 bytes, Stack size 8 bytes, haldiag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7531d6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hal_if_diag_read_char
</UL><BR>[Address Reference Count : 1]<UL><LI> haldiag.o(.data)
</UL><P><STRONG><a name="[8595868]"></a>haldiag_set_config</STRONG> (ARM, 16 bytes, Stack size 0 bytes, haldiag.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> haldiag.o(.data)
</UL><P><STRONG><a name="[85aa4c0]"></a>dev_mount(cyg_fstab_entry*, cyg_mtab_entry*)</STRONG> (ARM, 8 bytes, Stack size 0 bytes, devfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> devfs.o(fstab)
</UL><P><STRONG><a name="[85aa43c]"></a>dev_umount(cyg_mtab_entry*)</STRONG> (ARM, 8 bytes, Stack size 0 bytes, devfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> devfs.o(fstab)
</UL><P><STRONG><a name="[85aa3a4]"></a>dev_open(cyg_mtab_entry*, unsigned int, const char*, int, CYG_FILE_TAG*)</STRONG> (ARM, 236 bytes, Stack size 24 bytes, devfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bba6e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_lookup
<LI><a href="#[4bba670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_set_config
</UL><BR>[Address Reference Count : 1]<UL><LI> devfs.o(fstab)
</UL><P><STRONG><a name="[85aa31c]"></a>dev_unlink(cyg_mtab_entry*, unsigned int, const char*)</STRONG> (ARM, 8 bytes, Stack size 0 bytes, devfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> devfs.o(fstab)
</UL><P><STRONG><a name="[85aa294]"></a>dev_mkdir(cyg_mtab_entry*, unsigned int, const char*)</STRONG> (ARM, 8 bytes, Stack size 0 bytes, devfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> devfs.o(fstab)
</UL><P><STRONG><a name="[85aa20c]"></a>dev_rmdir(cyg_mtab_entry*, unsigned int, const char*)</STRONG> (ARM, 8 bytes, Stack size 0 bytes, devfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> devfs.o(fstab)
</UL><P><STRONG><a name="[85aa180]"></a>dev_rename(cyg_mtab_entry*, unsigned int, const char*, unsigned int, const char*)</STRONG> (ARM, 8 bytes, Stack size 0 bytes, devfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> devfs.o(fstab)
</UL><P><STRONG><a name="[85aa0f4]"></a>dev_link(cyg_mtab_entry*, unsigned int, const char*, unsigned int, const char*, int)</STRONG> (ARM, 8 bytes, Stack size 0 bytes, devfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> devfs.o(fstab)
</UL><P><STRONG><a name="[85aa05c]"></a>dev_opendir(cyg_mtab_entry*, unsigned int, const char*, CYG_FILE_TAG*)</STRONG> (ARM, 8 bytes, Stack size 0 bytes, devfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> devfs.o(fstab)
</UL><P><STRONG><a name="[85a9fd0]"></a>dev_chdir(cyg_mtab_entry*, unsigned int, const char*, unsigned int*)</STRONG> (ARM, 8 bytes, Stack size 0 bytes, devfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> devfs.o(fstab)
</UL><P><STRONG><a name="[85a9f44]"></a>dev_stat(cyg_mtab_entry*, unsigned int, const char*, stat*)</STRONG> (ARM, 100 bytes, Stack size 16 bytes, devfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bba6e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_lookup
</UL><BR>[Address Reference Count : 1]<UL><LI> devfs.o(fstab)
</UL><P><STRONG><a name="[85a9eb4]"></a>dev_getinfo(cyg_mtab_entry*, unsigned int, const char*, int, void*, int)</STRONG> (ARM, 8 bytes, Stack size 0 bytes, devfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> devfs.o(fstab)
</UL><P><STRONG><a name="[85a9e24]"></a>dev_setinfo(cyg_mtab_entry*, unsigned int, const char*, int, void*, int)</STRONG> (ARM, 8 bytes, Stack size 0 bytes, devfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> devfs.o(fstab)
</UL><P><STRONG><a name="[85aaa2c]"></a>dev_fo_read(CYG_FILE_TAG*, CYG_UIO_TAG*)</STRONG> (ARM, 180 bytes, Stack size 24 bytes, devfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bf47c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_bread
<LI><a href="#[4bf48a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_read
</UL><BR>[Address Reference Count : 1]<UL><LI> devfs.o(.data)
</UL><P><STRONG><a name="[85aa998]"></a>dev_fo_write(CYG_FILE_TAG*, CYG_UIO_TAG*)</STRONG> (ARM, 180 bytes, Stack size 24 bytes, devfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bf4834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_bwrite
<LI><a href="#[4bf4918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_write
</UL><BR>[Address Reference Count : 1]<UL><LI> devfs.o(.data)
</UL><P><STRONG><a name="[85aa910]"></a>dev_fo_lseek(CYG_FILE_TAG*, long*, int)</STRONG> (ARM, 12 bytes, Stack size 0 bytes, devfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> devfs.o(.data)
</UL><P><STRONG><a name="[85aa888]"></a>dev_fo_ioctl(CYG_FILE_TAG*, unsigned int, unsigned int)</STRONG> (ARM, 8 bytes, Stack size 0 bytes, devfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bf4500]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_ioctl
</UL><BR>[Address Reference Count : 1]<UL><LI> devfs.o(.data)
</UL><P><STRONG><a name="[85aa800]"></a>dev_fo_select(CYG_FILE_TAG*, int, unsigned int)</STRONG> (ARM, 8 bytes, Stack size 0 bytes, devfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bf474c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_select
</UL><BR>[Address Reference Count : 1]<UL><LI> devfs.o(.data)
</UL><P><STRONG><a name="[85aa77c]"></a>dev_fo_fsync(CYG_FILE_TAG*, int)</STRONG> (ARM, 32 bytes, Stack size 8 bytes, devfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a034a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_get_config
</UL><BR>[Address Reference Count : 1]<UL><LI> devfs.o(.data)
</UL><P><STRONG><a name="[85aa6f8]"></a>dev_fo_close(CYG_FILE_TAG*)</STRONG> (ARM, 8 bytes, Stack size 0 bytes, devfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> devfs.o(.data)
</UL><P><STRONG><a name="[85aa66c]"></a>dev_fo_fstat(CYG_FILE_TAG*, stat*)</STRONG> (ARM, 60 bytes, Stack size 0 bytes, devfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> devfs.o(.data)
</UL><P><STRONG><a name="[85aa5e0]"></a>dev_fo_getinfo(CYG_FILE_TAG*, int, void*, int)</STRONG> (ARM, 28 bytes, Stack size 8 bytes, devfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a034a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_get_config
</UL><BR>[Address Reference Count : 1]<UL><LI> devfs.o(.data)
</UL><P><STRONG><a name="[85aa554]"></a>dev_fo_setinfo(CYG_FILE_TAG*, int, void*, int)</STRONG> (ARM, 28 bytes, Stack size 8 bytes, devfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bba670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_set_config
</UL><BR>[Address Reference Count : 1]<UL><LI> devfs.o(.data)
</UL><P><STRONG><a name="[85c3a3c]"></a>romfs_find</STRONG> (ARM, 376 bytes, Stack size 36 bytes, romfs.o(.text))
<BR>[Called By]<UL><LI><a href="#[85c41e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;romfs_open
<LI><a href="#[85c4174]">&lt&lt</a>&nbsp;&nbsp;&nbsp;romfs_opendir
<LI><a href="#[85c4104]">&lt&lt</a>&nbsp;&nbsp;&nbsp;romfs_chdir
<LI><a href="#[85c4094]">&lt&lt</a>&nbsp;&nbsp;&nbsp;romfs_stat
<LI><a href="#[85c4020]">&lt&lt</a>&nbsp;&nbsp;&nbsp;romfs_getinfo
</UL><P><STRONG><a name="[85c42cc]"></a>romfs_mount</STRONG> (ARM, 168 bytes, Stack size 16 bytes, romfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52aaaac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sscanf
</UL><BR>[Address Reference Count : 1]<UL><LI> romfs.o(fstab)
</UL><P><STRONG><a name="[85c4258]"></a>romfs_umount</STRONG> (ARM, 16 bytes, Stack size 0 bytes, romfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> romfs.o(fstab)
</UL><P><STRONG><a name="[85c41e8]"></a>romfs_open</STRONG> (ARM, 192 bytes, Stack size 44 bytes, romfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85c3a3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;romfs_find
</UL><BR>[Address Reference Count : 1]<UL><LI> romfs.o(fstab)
</UL><P><STRONG><a name="[85c4174]"></a>romfs_opendir</STRONG> (ARM, 124 bytes, Stack size 40 bytes, romfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85c3a3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;romfs_find
</UL><BR>[Address Reference Count : 1]<UL><LI> romfs.o(fstab)
</UL><P><STRONG><a name="[85c4104]"></a>romfs_chdir</STRONG> (ARM, 108 bytes, Stack size 36 bytes, romfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85c3a3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;romfs_find
</UL><BR>[Address Reference Count : 1]<UL><LI> romfs.o(fstab)
</UL><P><STRONG><a name="[85c4094]"></a>romfs_stat</STRONG> (ARM, 196 bytes, Stack size 40 bytes, romfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85c3a3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;romfs_find
</UL><BR>[Address Reference Count : 1]<UL><LI> romfs.o(fstab)
</UL><P><STRONG><a name="[85c4020]"></a>romfs_getinfo</STRONG> (ARM, 100 bytes, Stack size 40 bytes, romfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85c3a3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;romfs_find
<LI><a href="#[85c30b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;romfs_pathconf
</UL><BR>[Address Reference Count : 1]<UL><LI> romfs.o(fstab)
</UL><P><STRONG><a name="[85c3fac]"></a>romfs_setinfo</STRONG> (ARM, 8 bytes, Stack size 0 bytes, romfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> romfs.o(fstab)
</UL><P><STRONG><a name="[85c47d4]"></a>romfs_fo_read</STRONG> (ARM, 224 bytes, Stack size 48 bytes, romfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Address Reference Count : 1]<UL><LI> romfs.o(.data)
</UL><P><STRONG><a name="[85c4760]"></a>romfs_fo_lseek</STRONG> (ARM, 92 bytes, Stack size 0 bytes, romfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> romfs.o(.data)
</UL><P><STRONG><a name="[85c46ec]"></a>romfs_fo_ioctl</STRONG> (ARM, 8 bytes, Stack size 0 bytes, romfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> romfs.o(.data)
</UL><P><STRONG><a name="[85c4678]"></a>romfs_fo_fsync</STRONG> (ARM, 8 bytes, Stack size 0 bytes, romfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> romfs.o(.data)
</UL><P><STRONG><a name="[85c4604]"></a>romfs_fo_close</STRONG> (ARM, 16 bytes, Stack size 0 bytes, romfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> romfs.o(.data)
</UL><P><STRONG><a name="[85c4590]"></a>romfs_fo_fstat</STRONG> (ARM, 108 bytes, Stack size 0 bytes, romfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> romfs.o(.data)
</UL><P><STRONG><a name="[85c4518]"></a>romfs_fo_getinfo</STRONG> (ARM, 24 bytes, Stack size 0 bytes, romfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85c30b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;romfs_pathconf
</UL><BR>[Address Reference Count : 1]<UL><LI> romfs.o(.data)
</UL><P><STRONG><a name="[85c44a0]"></a>romfs_fo_setinfo</STRONG> (ARM, 8 bytes, Stack size 0 bytes, romfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> romfs.o(.data)
</UL><P><STRONG><a name="[85c43b4]"></a>romfs_fo_dirread</STRONG> (ARM, 184 bytes, Stack size 20 bytes, romfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> romfs.o(.data)
</UL><P><STRONG><a name="[85c433c]"></a>romfs_fo_dirlseek</STRONG> (ARM, 40 bytes, Stack size 0 bytes, romfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> romfs.o(.data)
</UL><P><STRONG><a name="[85c30b8]"></a>romfs_pathconf</STRONG> (ARM, 248 bytes, Stack size 0 bytes, romfs.o(.text))
<BR>[Called By]<UL><LI><a href="#[85c4020]">&lt&lt</a>&nbsp;&nbsp;&nbsp;romfs_getinfo
<LI><a href="#[85c4518]">&lt&lt</a>&nbsp;&nbsp;&nbsp;romfs_fo_getinfo
</UL><P><STRONG><a name="[85e8764]"></a>findbuffer_node</STRONG> (ARM, 176 bytes, Stack size 32 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[7404e10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Called By]<UL><LI><a href="#[85e81a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_direntry
<LI><a href="#[85e812c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;del_direntry
<LI><a href="#[85e8048]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_direntry
<LI><a href="#[85e92fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_fo_read
<LI><a href="#[85e9288]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_fo_write
<LI><a href="#[85e8e68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_fo_dirread
</UL><P><STRONG><a name="[85e81a0]"></a>find_direntry</STRONG> (ARM, 328 bytes, Stack size 56 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e8764]">&gt&gt</a>&nbsp;&nbsp;&nbsp;findbuffer_node
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
</UL><BR>[Called By]<UL><LI><a href="#[85e812c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;del_direntry
<LI><a href="#[85e7df8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_find
</UL><P><STRONG><a name="[85e812c]"></a>del_direntry</STRONG> (ARM, 156 bytes, Stack size 32 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e81a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_direntry
<LI><a href="#[85e8764]">&gt&gt</a>&nbsp;&nbsp;&nbsp;findbuffer_node
<LI><a href="#[85e80bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dec_refcnt
</UL><BR>[Called By]<UL><LI><a href="#[85e80bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dec_refcnt
<LI><a href="#[85e8c28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_unlink
<LI><a href="#[85e8bb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_mkdir
<LI><a href="#[85e8b48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_rmdir
<LI><a href="#[85e8ad4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_rename
</UL><P><STRONG><a name="[85e80bc]"></a>dec_refcnt</STRONG> (ARM, 160 bytes, Stack size 16 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e812c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;del_direntry
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[85e812c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;del_direntry
<LI><a href="#[85e8980]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_chdir
<LI><a href="#[85e90b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_fo_close
</UL><P><STRONG><a name="[85e8048]"></a>add_direntry</STRONG> (ARM, 304 bytes, Stack size 64 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e8764]">&gt&gt</a>&nbsp;&nbsp;&nbsp;findbuffer_node
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[5081044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_timestamp
</UL><BR>[Called By]<UL><LI><a href="#[85e8d80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_mount
<LI><a href="#[85e8c9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_open
<LI><a href="#[85e8bb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_mkdir
<LI><a href="#[85e8ad4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_rename
<LI><a href="#[85e8a64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_link
</UL><P><STRONG><a name="[85e7df8]"></a>ramfs_find</STRONG> (ARM, 208 bytes, Stack size 24 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e81a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_direntry
</UL><BR>[Called By]<UL><LI><a href="#[85e8c9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_open
<LI><a href="#[85e8c28]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_unlink
<LI><a href="#[85e8bb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_mkdir
<LI><a href="#[85e8b48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_rmdir
<LI><a href="#[85e8ad4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_rename
<LI><a href="#[85e8a64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_link
<LI><a href="#[85e89f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_opendir
<LI><a href="#[85e8980]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_chdir
<LI><a href="#[85e8910]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_stat
<LI><a href="#[85e889c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_getinfo
</UL><P><STRONG><a name="[85e8d80]"></a>ramfs_mount</STRONG> (ARM, 104 bytes, Stack size 16 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e7ba8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;alloc_node
<LI><a href="#[85e8048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_direntry
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Address Reference Count : 1]<UL><LI> ramfs.o(fstab)
</UL><P><STRONG><a name="[85e8d0c]"></a>ramfs_umount</STRONG> (ARM, 60 bytes, Stack size 8 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Address Reference Count : 1]<UL><LI> ramfs.o(fstab)
</UL><P><STRONG><a name="[85e8c9c]"></a>ramfs_open</STRONG> (ARM, 320 bytes, Stack size 48 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e7df8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ramfs_find
<LI><a href="#[85e7ba8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;alloc_node
<LI><a href="#[85e8048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_direntry
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[5081044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_timestamp
</UL><BR>[Address Reference Count : 1]<UL><LI> ramfs.o(fstab)
</UL><P><STRONG><a name="[85e8c28]"></a>ramfs_unlink</STRONG> (ARM, 100 bytes, Stack size 32 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e7df8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ramfs_find
<LI><a href="#[85e812c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;del_direntry
</UL><BR>[Address Reference Count : 1]<UL><LI> ramfs.o(fstab)
</UL><P><STRONG><a name="[85e8bb8]"></a>ramfs_mkdir</STRONG> (ARM, 308 bytes, Stack size 56 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e7df8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ramfs_find
<LI><a href="#[85e7ba8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;alloc_node
<LI><a href="#[85e8048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_direntry
<LI><a href="#[85e812c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;del_direntry
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Address Reference Count : 1]<UL><LI> ramfs.o(fstab)
</UL><P><STRONG><a name="[85e8b48]"></a>ramfs_rmdir</STRONG> (ARM, 100 bytes, Stack size 32 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e7df8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ramfs_find
<LI><a href="#[85e812c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;del_direntry
</UL><BR>[Address Reference Count : 1]<UL><LI> ramfs.o(fstab)
</UL><P><STRONG><a name="[85e8ad4]"></a>ramfs_rename</STRONG> (ARM, 356 bytes, Stack size 64 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e7df8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ramfs_find
<LI><a href="#[85e812c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;del_direntry
<LI><a href="#[85e8048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_direntry
<LI><a href="#[5081044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_timestamp
</UL><BR>[Address Reference Count : 1]<UL><LI> ramfs.o(fstab)
</UL><P><STRONG><a name="[85e8a64]"></a>ramfs_link</STRONG> (ARM, 228 bytes, Stack size 64 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e7df8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ramfs_find
<LI><a href="#[85e8048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_direntry
<LI><a href="#[5081044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_timestamp
</UL><BR>[Address Reference Count : 1]<UL><LI> ramfs.o(fstab)
</UL><P><STRONG><a name="[85e89f0]"></a>ramfs_opendir</STRONG> (ARM, 140 bytes, Stack size 40 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e7df8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ramfs_find
</UL><BR>[Address Reference Count : 1]<UL><LI> ramfs.o(fstab)
</UL><P><STRONG><a name="[85e8980]"></a>ramfs_chdir</STRONG> (ARM, 136 bytes, Stack size 32 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e7df8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ramfs_find
<LI><a href="#[85e80bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dec_refcnt
</UL><BR>[Address Reference Count : 1]<UL><LI> ramfs.o(fstab)
</UL><P><STRONG><a name="[85e8910]"></a>ramfs_stat</STRONG> (ARM, 156 bytes, Stack size 40 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e7df8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ramfs_find
</UL><BR>[Address Reference Count : 1]<UL><LI> ramfs.o(fstab)
</UL><P><STRONG><a name="[85e889c]"></a>ramfs_getinfo</STRONG> (ARM, 96 bytes, Stack size 40 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e7df8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ramfs_find
<LI><a href="#[85e7004]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ramfs_pathconf
</UL><BR>[Address Reference Count : 1]<UL><LI> ramfs.o(fstab)
</UL><P><STRONG><a name="[85e8828]"></a>ramfs_setinfo</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ramfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ramfs.o(fstab)
</UL><P><STRONG><a name="[85e92fc]"></a>ramfs_fo_read</STRONG> (ARM, 260 bytes, Stack size 56 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e8764]">&gt&gt</a>&nbsp;&nbsp;&nbsp;findbuffer_node
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[5081044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_timestamp
</UL><BR>[Address Reference Count : 1]<UL><LI> ramfs.o(.data)
</UL><P><STRONG><a name="[85e9288]"></a>ramfs_fo_write</STRONG> (ARM, 288 bytes, Stack size 56 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e8764]">&gt&gt</a>&nbsp;&nbsp;&nbsp;findbuffer_node
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[5081044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_timestamp
</UL><BR>[Address Reference Count : 1]<UL><LI> ramfs.o(.data)
</UL><P><STRONG><a name="[85e9214]"></a>ramfs_fo_lseek</STRONG> (ARM, 92 bytes, Stack size 0 bytes, ramfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ramfs.o(.data)
</UL><P><STRONG><a name="[85e91a0]"></a>ramfs_fo_ioctl</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ramfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ramfs.o(.data)
</UL><P><STRONG><a name="[85e912c]"></a>ramfs_fo_fsync</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ramfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ramfs.o(.data)
</UL><P><STRONG><a name="[85e90b8]"></a>ramfs_fo_close</STRONG> (ARM, 28 bytes, Stack size 8 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e80bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dec_refcnt
</UL><BR>[Address Reference Count : 1]<UL><LI> ramfs.o(.data)
</UL><P><STRONG><a name="[85e9044]"></a>ramfs_fo_fstat</STRONG> (ARM, 80 bytes, Stack size 0 bytes, ramfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ramfs.o(.data)
</UL><P><STRONG><a name="[85e8fcc]"></a>ramfs_fo_getinfo</STRONG> (ARM, 24 bytes, Stack size 0 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e7004]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ramfs_pathconf
</UL><BR>[Address Reference Count : 1]<UL><LI> ramfs.o(.data)
</UL><P><STRONG><a name="[85e8f54]"></a>ramfs_fo_setinfo</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ramfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ramfs.o(.data)
</UL><P><STRONG><a name="[85e8e68]"></a>ramfs_fo_dirread</STRONG> (ARM, 348 bytes, Stack size 48 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e8764]">&gt&gt</a>&nbsp;&nbsp;&nbsp;findbuffer_node
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Address Reference Count : 1]<UL><LI> ramfs.o(.data)
</UL><P><STRONG><a name="[85e8df0]"></a>ramfs_fo_dirlseek</STRONG> (ARM, 40 bytes, Stack size 0 bytes, ramfs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ramfs.o(.data)
</UL><P><STRONG><a name="[85e7ba8]"></a>alloc_node</STRONG> (ARM, 112 bytes, Stack size 16 bytes, ramfs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[5081044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_timestamp
</UL><BR>[Called By]<UL><LI><a href="#[85e8d80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_mount
<LI><a href="#[85e8c9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_open
<LI><a href="#[85e8bb8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_mkdir
</UL><P><STRONG><a name="[85e7004]"></a>ramfs_pathconf</STRONG> (ARM, 248 bytes, Stack size 0 bytes, ramfs.o(.text))
<BR>[Called By]<UL><LI><a href="#[85e889c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_getinfo
<LI><a href="#[85e8fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ramfs_fo_getinfo
</UL><P><STRONG><a name="[86039d4]"></a>termios_init</STRONG> (ARM, 8 bytes, Stack size 0 bytes, termiostty.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> termiostty.o(devtab)
<LI> termiostty.o(devtab)
</UL><P><STRONG><a name="[8603960]"></a>termios_lookup</STRONG> (ARM, 520 bytes, Stack size 48 bytes, termiostty.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4a034a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_get_config
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Address Reference Count : 2]<UL><LI> termiostty.o(devtab)
<LI> termiostty.o(devtab)
</UL><P><STRONG><a name="[8603a48]"></a>termios_ioctl</STRONG> (ARM, 8 bytes, Stack size 0 bytes, termiostty.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> termiostty.o(.data)
</UL><P><STRONG><a name="[8603c94]"></a>termios_write</STRONG> (ARM, 228 bytes, Stack size 144 bytes, termiostty.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bf4918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_write
</UL><BR>[Called By]<UL><LI><a href="#[8603c20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_read
</UL><BR>[Address Reference Count : 1]<UL><LI> termiostty.o(.data)
</UL><P><STRONG><a name="[8603c20]"></a>termios_read</STRONG> (ARM, 1092 bytes, Stack size 96 bytes, termiostty.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a034a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_get_config
<LI><a href="#[4bf48a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_read
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4bf4918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_write
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[9be34f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_libc_signals_lock_do_lock
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[9be33f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_libc_signals_lock_do_unlock
<LI><a href="#[853c0d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_libc_signals_default_handler
<LI><a href="#[8603c94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;termios_write
</UL><BR>[Address Reference Count : 1]<UL><LI> termiostty.o(.data)
</UL><P><STRONG><a name="[8603bac]"></a>termios_select</STRONG> (ARM, 12 bytes, Stack size 0 bytes, termiostty.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bf474c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_select
</UL><BR>[Address Reference Count : 1]<UL><LI> termiostty.o(.data)
</UL><P><STRONG><a name="[8603b34]"></a>termios_get_config</STRONG> (ARM, 120 bytes, Stack size 24 bytes, termiostty.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[4a034a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_get_config
</UL><BR>[Address Reference Count : 1]<UL><LI> termiostty.o(.data)
</UL><P><STRONG><a name="[8603abc]"></a>termios_set_config</STRONG> (ARM, 160 bytes, Stack size 24 bytes, termiostty.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bba670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_set_config
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4a034a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_get_config
<LI><a href="#[8602808]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_attr
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> termiostty.o(.data)
</UL><P><STRONG><a name="[8602808]"></a>set_attr</STRONG> (ARM, 1128 bytes, Stack size 56 bytes, termiostty.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a034a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_get_config
<LI><a href="#[4bba670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_set_config
</UL><BR>[Called By]<UL><LI><a href="#[8603abc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;termios_set_config
</UL><P><STRONG><a name="[860c4dc]"></a>w99702_serial_init</STRONG> (ARM, 428 bytes, Stack size 32 bytes, w99702_serial_with_ints.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4c2fadc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_create
<LI><a href="#[4c2f8d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_attach
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[860ba74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;w99702_serial_config_port
</UL><BR>[Address Reference Count : 2]<UL><LI> w99702_serial_with_ints.o(devtab)
<LI> w99702_serial_with_ints.o(devtab)
</UL><P><STRONG><a name="[860c460]"></a>w99702_serial_lookup</STRONG> (ARM, 32 bytes, Stack size 8 bytes, w99702_serial_with_ints.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> w99702_serial_with_ints.o(devtab)
<LI> w99702_serial_with_ints.o(devtab)
</UL><P><STRONG><a name="[860c83c]"></a>w99702_serial_set_config</STRONG> (ARM, 68 bytes, Stack size 8 bytes, w99702_serial_with_ints.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[860ba74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;w99702_serial_config_port
</UL><BR>[Address Reference Count : 1]<UL><LI> w99702_serial_with_ints.o(.data)
</UL><P><STRONG><a name="[860c7bc]"></a>w99702_serial_start_xmit</STRONG> (ARM, 32 bytes, Stack size 0 bytes, w99702_serial_with_ints.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> w99702_serial_with_ints.o(.data)
</UL><P><STRONG><a name="[860c740]"></a>w99702_serial_stop_xmit</STRONG> (ARM, 24 bytes, Stack size 0 bytes, w99702_serial_with_ints.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> w99702_serial_with_ints.o(.data)
</UL><P><STRONG><a name="[860ba74]"></a>w99702_serial_config_port</STRONG> (ARM, 208 bytes, Stack size 24 bytes, w99702_serial_with_ints.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[860c4dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_serial_init
<LI><a href="#[860c83c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;w99702_serial_set_config
</UL><P><STRONG><a name="[860bb6c]"></a>w99702_serial_DSR</STRONG> (ARM, 288 bytes, Stack size 16 bytes, w99702_serial_with_ints.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hi_uart_log_read
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
</UL><BR>[Address Reference Count : 1]<UL><LI> w99702_serial_with_ints.o(.text)
</UL><P><STRONG><a name="[860baf4]"></a>w99702_serial_ISR</STRONG> (ARM, 32 bytes, Stack size 8 bytes, w99702_serial_with_ints.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[4c2ef7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_acknowledge
</UL><BR>[Address Reference Count : 1]<UL><LI> w99702_serial_with_ints.o(.text)
</UL><P><STRONG><a name="[869e90c]"></a>in_lifaddr_ioctl</STRONG> (ARM, 984 bytes, Stack size 104 bytes, in.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[869e6bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_len2mask
<LI><a href="#[4ced040]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bcopy
<LI><a href="#[869e31c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;in_control
</UL><BR>[Called By]<UL><LI><a href="#[869e31c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_control
</UL><P><STRONG><a name="[869e6bc]"></a>in_len2mask</STRONG> (ARM, 92 bytes, Stack size 16 bytes, in.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
</UL><BR>[Called By]<UL><LI><a href="#[869e90c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;in_lifaddr_ioctl
</UL><P><STRONG><a name="[872efdc]"></a>pppgetm</STRONG> (ARM, 348 bytes, Stack size 40 bytes, ppp_io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5138e78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_alloc
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5183ebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_retryhdr
<LI><a href="#[5183d74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_clalloc
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
</UL><BR>[Called By]<UL><LI><a href="#[9ac2f24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppopen
<LI><a href="#[9ac2e34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppptioctl
<LI><a href="#[9ac2734]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppinput
</UL><P><STRONG><a name="[872eba8]"></a>pppasyncstart</STRONG> (ARM, 1268 bytes, Stack size 120 bytes, ppp_io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a034a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_get_config
<LI><a href="#[9a89f98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_dequeue
<LI><a href="#[5138620]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getmicrotime
<LI><a href="#[4bf4918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_write
<LI><a href="#[872eb3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spltty
<LI><a href="#[872df70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;splxtty
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[5138c98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_net_mbuf_free
<LI><a href="#[4a0359c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_self
<LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><BR>[Called By]<UL><LI><a href="#[9ac1328]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppstart
</UL><BR>[Address Reference Count : 1]<UL><LI> ppp_io.o(.text)
</UL><P><STRONG><a name="[872e8f0]"></a>pppasyncsetmtu</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ppp_io.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ppp_io.o(.text)
</UL><P><STRONG><a name="[872e964]"></a>pppasyncrelinq</STRONG> (ARM, 88 bytes, Stack size 16 bytes, ppp_io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[872eb3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spltty
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[872df70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;splxtty
</UL><BR>[Called By]<UL><LI><a href="#[872def8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppclose
</UL><BR>[Address Reference Count : 1]<UL><LI> ppp_io.o(.text)
</UL><P><STRONG><a name="[872e9d8]"></a>pppasyncctlp</STRONG> (ARM, 60 bytes, Stack size 16 bytes, ppp_io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[872eb3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spltty
<LI><a href="#[4a0359c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_self
<LI><a href="#[4c30b10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_release
<LI><a href="#[872df70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;splxtty
</UL><BR>[Address Reference Count : 1]<UL><LI> ppp_io.o(.text)
</UL><P><STRONG><a name="[872e1f0]"></a>ppplogchar</STRONG> (ARM, 132 bytes, Stack size 8 bytes, ppp_io.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ba2834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_vdump_buf_with_offset
</UL><BR>[Called By]<UL><LI><a href="#[9ac2734]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppinput
</UL><P><STRONG><a name="[874c9b8]"></a>pr_log</STRONG> (ARM, 144 bytes, Stack size 296 bytes, pppd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[874a6d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_vfmtmsg
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Address Reference Count : 1]<UL><LI> pppd.o(.text)
</UL><P><STRONG><a name="[8796b88]"></a>ipcp_init</STRONG> (ARM, 204 bytes, Stack size 16 bytes, ipcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8794efc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_init
</UL><BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[879694c]"></a>ipcp_open</STRONG> (ARM, 16 bytes, Stack size 0 bytes, ipcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8794e84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_open
</UL><BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[87968dc]"></a>ipcp_close</STRONG> (ARM, 16 bytes, Stack size 0 bytes, ipcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8794e0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_close
</UL><BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[8796a30]"></a>ipcp_lowerup</STRONG> (ARM, 16 bytes, Stack size 0 bytes, ipcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8794d94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_lowerup
</UL><BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[87969bc]"></a>ipcp_lowerdown</STRONG> (ARM, 16 bytes, Stack size 0 bytes, ipcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8794d18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_lowerdown
</UL><BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[8796b18]"></a>ipcp_input</STRONG> (ARM, 16 bytes, Stack size 0 bytes, ipcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8794ca0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_input
</UL><BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[8796aa4]"></a>ipcp_protrej</STRONG> (ARM, 16 bytes, Stack size 0 bytes, ipcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8794d18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_lowerdown
</UL><BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[8797234]"></a>ipcp_resetci</STRONG> (ARM, 156 bytes, Stack size 8 bytes, ipcp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[87971c4]"></a>ipcp_cilen</STRONG> (ARM, 256 bytes, Stack size 4 bytes, ipcp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[8797154]"></a>ipcp_addci</STRONG> (ARM, 356 bytes, Stack size 12 bytes, ipcp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[87970e4]"></a>ipcp_ackci</STRONG> (ARM, 376 bytes, Stack size 8 bytes, ipcp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[8797074]"></a>ipcp_nakci</STRONG> (ARM, 1164 bytes, Stack size 84 bytes, ipcp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[8797004]"></a>ipcp_rejci</STRONG> (ARM, 480 bytes, Stack size 48 bytes, ipcp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[8796f94]"></a>ipcp_reqci</STRONG> (ARM, 1768 bytes, Stack size 72 bytes, ipcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[87967f0]"></a>ip_check_options</STRONG> (ARM, 96 bytes, Stack size 16 bytes, ipcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[511937c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[8794c28]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_bad_ip_adrs
</UL><BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[879677c]"></a>ip_demand_conf</STRONG> (ARM, 296 bytes, Stack size 16 bytes, ipcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac1dd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_GetMask
<LI><a href="#[9ac1fb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifaddr
<LI><a href="#[9ac2110]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifup
<LI><a href="#[9ac2098]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifnpmode
<LI><a href="#[9ac1ec0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifdefaultroute
<LI><a href="#[9ac1e48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifproxyarp
<LI><a href="#[9ac1f3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ip_ntoa
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
</UL><BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[8796f28]"></a>ipcp_up</STRONG> (ARM, 704 bytes, Stack size 24 bytes, ipcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8794bb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_np_up
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[8794e0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_close
<LI><a href="#[8794b38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_ip_addr
<LI><a href="#[9ac1f3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ip_ntoa
<LI><a href="#[9ac2184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifvjcomp
<LI><a href="#[9ac1dd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_GetMask
<LI><a href="#[9ac1fb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifaddr
<LI><a href="#[9ac2110]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifup
<LI><a href="#[9ac2098]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifnpmode
<LI><a href="#[9ac1ec0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifdefaultroute
<LI><a href="#[9ac1e48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifproxyarp
</UL><BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[8796eb8]"></a>ipcp_down</STRONG> (ARM, 168 bytes, Stack size 24 bytes, ipcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8794ac4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_np_down
<LI><a href="#[9ac2184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifvjcomp
<LI><a href="#[9ac2024]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_sifdown
<LI><a href="#[9ac34c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_cifproxyarp
<LI><a href="#[9ac344c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_cifdefaultroute
<LI><a href="#[9ac33d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_cifaddr
</UL><BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[8796e44]"></a>ipcp_finished</STRONG> (ARM, 12 bytes, Stack size 0 bytes, ipcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8794a4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_np_finished
</UL><BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[8796868]"></a>ipcp_printpkt</STRONG> (ARM, 1080 bytes, Stack size 40 bytes, ipcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8769fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_print_string
</UL><BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[8796708]"></a>ip_active_pkt</STRONG> (ARM, 136 bytes, Stack size 0 bytes, ipcp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ipcp.o(.data)
</UL><P><STRONG><a name="[8a7b628]"></a>do_format(unsigned char, unsigned int, char*, const tm*)</STRONG> (ARM, 2100 bytes, Stack size 16 bytes, strftime.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[891db10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strftime
</UL><BR>[Called By]<UL><LI><a href="#[891db10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;strftime
</UL><P><STRONG><a name="[8b1c3bc]"></a>bsd_init</STRONG> (ARM, 8 bytes, Stack size 0 bytes, tcpip_sockio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(nstab)
</UL><P><STRONG><a name="[8b1c34c]"></a>bsd_socket</STRONG> (ARM, 112 bytes, Stack size 16 bytes, tcpip_sockio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8aa4df0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socreate
<LI><a href="#[4ce7738]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_selinit
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(nstab)
</UL><P><STRONG><a name="[8b1cc88]"></a>bsd_bind</STRONG> (ARM, 72 bytes, Stack size 16 bytes, tcpip_sockio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8b1a640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sockargs
<LI><a href="#[8aa4d84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sobind
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b1cc18]"></a>bsd_connect</STRONG> (ARM, 240 bytes, Stack size 32 bytes, tcpip_sockio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8b1a640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sockargs
<LI><a href="#[8aa4ae8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soconnect
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[7a71478]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_tsleep
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b1cba8]"></a>bsd_accept</STRONG> (ARM, 472 bytes, Stack size 40 bytes, tcpip_sockio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[7a71478]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_tsleep
<LI><a href="#[863eaf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soqremque
<LI><a href="#[51391c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_panic
<LI><a href="#[4ce7738]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_selinit
<LI><a href="#[516d2f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_get
<LI><a href="#[8aa4b58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soaccept
<LI><a href="#[51384d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;copyout
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b1cb38]"></a>bsd_listen</STRONG> (ARM, 8 bytes, Stack size 0 bytes, tcpip_sockio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8aa4d14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;solisten
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b1cac8]"></a>bsd_getname</STRONG> (ARM, 188 bytes, Stack size 32 bytes, tcpip_sockio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a916d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_getclr
<LI><a href="#[51384d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;copyout
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b1ca54]"></a>bsd_shutdown</STRONG> (ARM, 8 bytes, Stack size 0 bytes, tcpip_sockio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8aa492c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soshutdown
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b1c9e0]"></a>bsd_getsockopt</STRONG> (ARM, 128 bytes, Stack size 24 bytes, tcpip_sockio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8aa484c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sogetopt
<LI><a href="#[51384d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;copyout
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b1c96c]"></a>bsd_setsockopt</STRONG> (ARM, 368 bytes, Stack size 56 bytes, tcpip_sockio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[516d2f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_get
<LI><a href="#[5183f2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[5183d74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_clalloc
<LI><a href="#[5138938]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mtocl
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
<LI><a href="#[5138468]">&gt&gt</a>&nbsp;&nbsp;&nbsp;copyin
<LI><a href="#[516d288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_free
<LI><a href="#[8aa48bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sosetopt
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b1c8fc]"></a>bsd_sendmsg</STRONG> (ARM, 356 bytes, Stack size 64 bytes, tcpip_sockio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8b1a640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sockargs
<LI><a href="#[8aa4a0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sosend
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b1c88c]"></a>bsd_recvmsg</STRONG> (ARM, 504 bytes, Stack size 64 bytes, tcpip_sockio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8aa499c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soreceive
<LI><a href="#[51384d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;copyout
<LI><a href="#[5184008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;m_freem
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b1c81c]"></a>bsd_read</STRONG> (ARM, 44 bytes, Stack size 16 bytes, tcpip_sockio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8aa499c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soreceive
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b1c7ac]"></a>bsd_write</STRONG> (ARM, 44 bytes, Stack size 16 bytes, tcpip_sockio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8aa4a0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sosend
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b1c73c]"></a>bsd_lseek</STRONG> (ARM, 8 bytes, Stack size 0 bytes, tcpip_sockio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b1c6cc]"></a>bsd_ioctl</STRONG> (ARM, 348 bytes, Stack size 8 bytes, tcpip_sockio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7ad55b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ifioctl
<LI><a href="#[516d4b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtioctl
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b1c65c]"></a>bsd_select</STRONG> (ARM, 368 bytes, Stack size 24 bytes, tcpip_sockio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5137ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[5137b18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_splx
<LI><a href="#[4ce76c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_selrecord
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b1c5ec]"></a>bsd_fsync</STRONG> (ARM, 8 bytes, Stack size 0 bytes, tcpip_sockio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b1c57c]"></a>bsd_close</STRONG> (ARM, 40 bytes, Stack size 8 bytes, tcpip_sockio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8aa4bc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soclose
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b1c50c]"></a>bsd_fstat</STRONG> (ARM, 68 bytes, Stack size 16 bytes, tcpip_sockio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
</UL><BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b1c49c]"></a>bsd_getinfo</STRONG> (ARM, 8 bytes, Stack size 0 bytes, tcpip_sockio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b1c42c]"></a>bsd_setinfo</STRONG> (ARM, 8 bytes, Stack size 0 bytes, tcpip_sockio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tcpip_sockio.o(.data)
</UL><P><STRONG><a name="[8b29ae4]"></a>udp_notify</STRONG> (ARM, 68 bytes, Stack size 8 bytes, udp_usrreq.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[863ec40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sowakeup
</UL><BR>[Address Reference Count : 1]<UL><LI> udp_usrreq.o(.text)
</UL><P><STRONG><a name="[8bf2038]"></a>lcp_init</STRONG> (ARM, 252 bytes, Stack size 16 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8794efc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_init
</UL><BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[8bf2364]"></a>lcp_finished</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[874a314]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_link_terminated
</UL><BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[8bf1fc8]"></a>lcp_input</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8794ca0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_input
</UL><BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[8bf22f4]"></a>lcp_extcode</STRONG> (ARM, 644 bytes, Stack size 24 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[8befcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_sdata
</UL><BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[8bf1f58]"></a>lcp_protrej</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8befc30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_protreject
</UL><BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[8bf27c8]"></a>lcp_resetci</STRONG> (ARM, 116 bytes, Stack size 8 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8befbbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_magic
<LI><a href="#[8befb44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_reset
</UL><BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[8bf2758]"></a>lcp_cilen</STRONG> (ARM, 236 bytes, Stack size 0 bytes, lcp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[8bf26e8]"></a>lcp_addci</STRONG> (ARM, 572 bytes, Stack size 32 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
</UL><BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[8bf2678]"></a>lcp_ackci</STRONG> (ARM, 636 bytes, Stack size 8 bytes, lcp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[8bf2608]"></a>lcp_nakci</STRONG> (ARM, 1588 bytes, Stack size 72 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8befbbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_magic
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[871a5b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_close
</UL><BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[8bf2598]"></a>lcp_rejci</STRONG> (ARM, 832 bytes, Stack size 44 bytes, lcp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[8bf2528]"></a>lcp_reqci</STRONG> (ARM, 1476 bytes, Stack size 64 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8befbbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_magic
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[8bf24bc]"></a>lcp_up</STRONG> (ARM, 840 bytes, Stack size 40 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac2554]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_send_config
<LI><a href="#[9ac23e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_recv_config
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[871a5b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_close
<LI><a href="#[8befcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_sdata
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[71ed36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[871a4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
<LI><a href="#[8befac4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_link_established
</UL><BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[8bf244c]"></a>lcp_down</STRONG> (ARM, 180 bytes, Stack size 24 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[876a044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_untimeout
<LI><a href="#[8befa4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_link_down
<LI><a href="#[9ac2554]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_send_config
<LI><a href="#[9ac23e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppp_recv_config
</UL><BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[8bf23d8]"></a>lcp_starting</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8bef9d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_link_required
</UL><BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[8bf1ee4]"></a>lcp_printpkt</STRONG> (ARM, 1216 bytes, Stack size 40 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8769fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_print_string
</UL><BR>[Address Reference Count : 1]<UL><LI> lcp.o(.data)
</UL><P><STRONG><a name="[8bf0700]"></a>LcpEchoTimeout</STRONG> (ARM, 28 bytes, Stack size 0 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8bf02cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;LcpEchoCheck
</UL><BR>[Address Reference Count : 1]<UL><LI> lcp.o(.text)
</UL><P><STRONG><a name="[8bf02cc]"></a>LcpEchoCheck</STRONG> (ARM, 308 bytes, Stack size 24 bytes, lcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[871a5b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_close
<LI><a href="#[8befcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_sdata
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[71ed36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[871a4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
</UL><BR>[Called By]<UL><LI><a href="#[8bf0700]">&lt&lt</a>&nbsp;&nbsp;&nbsp;LcpEchoTimeout
</UL><P><STRONG><a name="[8c23000]"></a>upap_init</STRONG> (ARM, 76 bytes, Stack size 0 bytes, upap.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> upap.o(.data)
</UL><P><STRONG><a name="[8c2298c]"></a>upap_sauthreq</STRONG> (ARM, 208 bytes, Stack size 24 bytes, upap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9ac2a00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_output
<LI><a href="#[871a4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
</UL><BR>[Called By]<UL><LI><a href="#[8c21bec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_upap_authwithpeer
<LI><a href="#[8c22ea8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_lowerup
<LI><a href="#[8c22918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_timeout
</UL><P><STRONG><a name="[8c22ea8]"></a>upap_lowerup</STRONG> (ARM, 108 bytes, Stack size 16 bytes, upap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8c2298c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;upap_sauthreq
<LI><a href="#[871a4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
</UL><BR>[Address Reference Count : 1]<UL><LI> upap.o(.data)
</UL><P><STRONG><a name="[8c22e34]"></a>upap_lowerdown</STRONG> (ARM, 84 bytes, Stack size 8 bytes, upap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[876a044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_untimeout
</UL><BR>[Address Reference Count : 1]<UL><LI> upap.o(.data)
</UL><P><STRONG><a name="[8c22f1c]"></a>upap_protrej</STRONG> (ARM, 288 bytes, Stack size 16 bytes, upap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[8c21af0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_withpeer_fail
<LI><a href="#[8c21a74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_peer_fail
<LI><a href="#[876a044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_untimeout
</UL><BR>[Address Reference Count : 1]<UL><LI> upap.o(.data)
</UL><P><STRONG><a name="[8c22f90]"></a>upap_input</STRONG> (ARM, 696 bytes, Stack size 56 bytes, upap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[8c21af0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_withpeer_fail
<LI><a href="#[8c21de4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;upap_sresp
<LI><a href="#[8c219f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_check_passwd
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[8c21978]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_peer_success
<LI><a href="#[8c21a74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_peer_fail
<LI><a href="#[876a044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_untimeout
<LI><a href="#[8c218f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_withpeer_success
</UL><BR>[Address Reference Count : 1]<UL><LI> upap.o(.data)
</UL><P><STRONG><a name="[8c22dc0]"></a>upap_printpkt</STRONG> (ARM, 500 bytes, Stack size 40 bytes, upap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8769fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_print_string
</UL><BR>[Address Reference Count : 1]<UL><LI> upap.o(.data)
</UL><P><STRONG><a name="[8c22918]"></a>upap_timeout</STRONG> (ARM, 124 bytes, Stack size 8 bytes, upap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8c2298c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;upap_sauthreq
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[8c21af0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_withpeer_fail
</UL><BR>[Address Reference Count : 1]<UL><LI> upap.o(.text)
</UL><P><STRONG><a name="[8c225d4]"></a>upap_reqtimeout</STRONG> (ARM, 44 bytes, Stack size 8 bytes, upap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8c21a74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_peer_fail
</UL><BR>[Address Reference Count : 1]<UL><LI> upap.o(.text)
</UL><P><STRONG><a name="[8c21de4]"></a>upap_sresp</STRONG> (ARM, 120 bytes, Stack size 16 bytes, upap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9ac2a00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_output
</UL><BR>[Called By]<UL><LI><a href="#[8c22f90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upap_input
</UL><P><STRONG><a name="[8c2af5c]"></a>network_phase</STRONG> (ARM, 148 bytes, Stack size 24 bytes, auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[871a5b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_close
</UL><BR>[Called By]<UL><LI><a href="#[8befac4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_link_established
<LI><a href="#[8c21978]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_peer_success
<LI><a href="#[8c218f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_withpeer_success
</UL><P><STRONG><a name="[8c2a6f0]"></a>connect_time_expired</STRONG> (ARM, 60 bytes, Stack size 8 bytes, auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[871a5b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_close
</UL><BR>[Address Reference Count : 1]<UL><LI> auth.o(.text)
</UL><P><STRONG><a name="[8c2a76c]"></a>check_idle</STRONG> (ARM, 184 bytes, Stack size 16 bytes, auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac21fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_get_idle_time
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[871a5b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_lcp_close
<LI><a href="#[871a4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
</UL><BR>[Address Reference Count : 1]<UL><LI> auth.o(.text)
</UL><P><STRONG><a name="[8c49b78]"></a>ccp_init</STRONG> (ARM, 208 bytes, Stack size 8 bytes, ccp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8794efc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_init
</UL><BR>[Address Reference Count : 1]<UL><LI> ccp.o(.data)
</UL><P><STRONG><a name="[8c4a1ac]"></a>ccp_resetci</STRONG> (ARM, 468 bytes, Stack size 48 bytes, ccp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac2370]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ccp_test
</UL><BR>[Called By]<UL><LI><a href="#[8c49944]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_open
</UL><BR>[Address Reference Count : 1]<UL><LI> ccp.o(.data)
</UL><P><STRONG><a name="[8c49944]"></a>ccp_open</STRONG> (ARM, 128 bytes, Stack size 16 bytes, ccp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac22f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ccp_flags_set
<LI><a href="#[8c4a1ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ccp_resetci
<LI><a href="#[8794e84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_open
</UL><BR>[Address Reference Count : 1]<UL><LI> ccp.o(.data)
</UL><P><STRONG><a name="[8c498d4]"></a>ccp_close</STRONG> (ARM, 48 bytes, Stack size 16 bytes, ccp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac22f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ccp_flags_set
<LI><a href="#[8794e0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_close
</UL><BR>[Address Reference Count : 1]<UL><LI> ccp.o(.data)
</UL><P><STRONG><a name="[8c49a28]"></a>ccp_lowerup</STRONG> (ARM, 16 bytes, Stack size 0 bytes, ccp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8794d94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_lowerup
</UL><BR>[Address Reference Count : 1]<UL><LI> ccp.o(.data)
</UL><P><STRONG><a name="[8c499b4]"></a>ccp_lowerdown</STRONG> (ARM, 16 bytes, Stack size 0 bytes, ccp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8794d18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_lowerdown
</UL><BR>[Address Reference Count : 1]<UL><LI> ccp.o(.data)
</UL><P><STRONG><a name="[8c49b08]"></a>ccp_input</STRONG> (ARM, 280 bytes, Stack size 24 bytes, ccp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8794ca0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_input
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[9ac22f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ccp_flags_set
<LI><a href="#[8794e0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_close
</UL><BR>[Address Reference Count : 1]<UL><LI> ccp.o(.data)
</UL><P><STRONG><a name="[8c49dc0]"></a>ccp_extcode</STRONG> (ARM, 120 bytes, Stack size 8 bytes, ccp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[876a044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_untimeout
<LI><a href="#[8befcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_sdata
</UL><BR>[Address Reference Count : 1]<UL><LI> ccp.o(.data)
</UL><P><STRONG><a name="[8c49a98]"></a>ccp_protrej</STRONG> (ARM, 40 bytes, Stack size 8 bytes, ccp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac22f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ccp_flags_set
<LI><a href="#[8794d18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_lowerdown
</UL><BR>[Address Reference Count : 1]<UL><LI> ccp.o(.data)
</UL><P><STRONG><a name="[8c4a13c]"></a>ccp_cilen</STRONG> (ARM, 92 bytes, Stack size 0 bytes, ccp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ccp.o(.data)
</UL><P><STRONG><a name="[8c4a0cc]"></a>ccp_addci</STRONG> (ARM, 564 bytes, Stack size 40 bytes, ccp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac2370]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ccp_test
</UL><BR>[Address Reference Count : 1]<UL><LI> ccp.o(.data)
</UL><P><STRONG><a name="[8c4a05c]"></a>ccp_ackci</STRONG> (ARM, 440 bytes, Stack size 8 bytes, ccp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ccp.o(.data)
</UL><P><STRONG><a name="[8c49fec]"></a>ccp_nakci</STRONG> (ARM, 400 bytes, Stack size 36 bytes, ccp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ccp.o(.data)
</UL><P><STRONG><a name="[8c49f7c]"></a>ccp_rejci</STRONG> (ARM, 556 bytes, Stack size 28 bytes, ccp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ccp.o(.data)
</UL><P><STRONG><a name="[8c49f0c]"></a>ccp_reqci</STRONG> (ARM, 1136 bytes, Stack size 72 bytes, ccp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac2370]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ccp_test
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Address Reference Count : 1]<UL><LI> ccp.o(.data)
</UL><P><STRONG><a name="[8c3a778]"></a>method_name</STRONG> (ARM, 436 bytes, Stack size 16 bytes, ccp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Called By]<UL><LI><a href="#[8c49ea0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ccp_up
</UL><P><STRONG><a name="[8c49ea0]"></a>ccp_up</STRONG> (ARM, 480 bytes, Stack size 80 bytes, ccp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac22f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ccp_flags_set
<LI><a href="#[8c3a778]">&gt&gt</a>&nbsp;&nbsp;&nbsp;method_name
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Address Reference Count : 1]<UL><LI> ccp.o(.data)
</UL><P><STRONG><a name="[8c49e30]"></a>ccp_down</STRONG> (ARM, 68 bytes, Stack size 16 bytes, ccp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[876a044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_untimeout
<LI><a href="#[9ac22f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ccp_flags_set
</UL><BR>[Address Reference Count : 1]<UL><LI> ccp.o(.data)
</UL><P><STRONG><a name="[8c49860]"></a>ccp_printpkt</STRONG> (ARM, 748 bytes, Stack size 40 bytes, ccp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8769fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_print_string
</UL><BR>[Address Reference Count : 1]<UL><LI> ccp.o(.data)
</UL><P><STRONG><a name="[8c497ec]"></a>ccp_datainput</STRONG> (ARM, 304 bytes, Stack size 24 bytes, ccp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac2278]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ccp_fatal_error
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[9ac22f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ccp_flags_set
<LI><a href="#[8794e0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_close
<LI><a href="#[8befcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_sdata
<LI><a href="#[871a4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
</UL><BR>[Address Reference Count : 1]<UL><LI> ccp.o(.data)
</UL><P><STRONG><a name="[8c48e14]"></a>ccp_rack_timeout</STRONG> (ARM, 120 bytes, Stack size 16 bytes, ccp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8befcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_sdata
<LI><a href="#[871a4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
</UL><BR>[Address Reference Count : 1]<UL><LI> ccp.o(.text)
</UL><P><STRONG><a name="[8c6cc88]"></a>ChapInit</STRONG> (ARM, 72 bytes, Stack size 16 bytes, chap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
</UL><BR>[Address Reference Count : 1]<UL><LI> chap.o(.data)
</UL><P><STRONG><a name="[8c6c520]"></a>ChapSendChallenge</STRONG> (ARM, 184 bytes, Stack size 32 bytes, chap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9ac2a00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_output
<LI><a href="#[871a4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
</UL><BR>[Called By]<UL><LI><a href="#[8c29a34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ChapAuthPeer
<LI><a href="#[8c6cb30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapLowerUp
<LI><a href="#[8c6c4a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapChallengeTimeout
<LI><a href="#[8c6be18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapRechallenge
</UL><P><STRONG><a name="[8c6c42c]"></a>ChapGenChallenge</STRONG> (ARM, 152 bytes, Stack size 24 bytes, chap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac1488]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_drand48
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[77e7298]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dfixu
</UL><BR>[Called By]<UL><LI><a href="#[8c29a34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ChapAuthPeer
<LI><a href="#[8c6cb30]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapLowerUp
<LI><a href="#[8c6be18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapRechallenge
</UL><P><STRONG><a name="[8c6cb30]"></a>ChapLowerUp</STRONG> (ARM, 100 bytes, Stack size 16 bytes, chap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8c6c42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ChapGenChallenge
<LI><a href="#[8c6c520]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ChapSendChallenge
</UL><BR>[Address Reference Count : 1]<UL><LI> chap.o(.data)
</UL><P><STRONG><a name="[8c6cabc]"></a>ChapLowerDown</STRONG> (ARM, 116 bytes, Stack size 8 bytes, chap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[876a044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_untimeout
</UL><BR>[Called By]<UL><LI><a href="#[8c6cba0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapProtocolReject
</UL><BR>[Address Reference Count : 1]<UL><LI> chap.o(.data)
</UL><P><STRONG><a name="[8c6cba0]"></a>ChapProtocolReject</STRONG> (ARM, 96 bytes, Stack size 16 bytes, chap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8c21a74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_peer_fail
<LI><a href="#[8c21af0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_withpeer_fail
<LI><a href="#[8c6cabc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ChapLowerDown
</UL><BR>[Address Reference Count : 1]<UL><LI> chap.o(.data)
</UL><P><STRONG><a name="[8c6ba5c]"></a>ChapSendStatus</STRONG> (ARM, 232 bytes, Stack size 280 bytes, chap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9ac2a00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_output
</UL><BR>[Called By]<UL><LI><a href="#[8c6cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapInput
</UL><P><STRONG><a name="[8c6cc18]"></a>ChapInput</STRONG> (ARM, 1540 bytes, Stack size 664 bytes, chap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[876a044]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_untimeout
<LI><a href="#[8c21af0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_withpeer_fail
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[8c298bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_get_secret
<LI><a href="#[7843940]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MD5Init
<LI><a href="#[78438d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MD5Update
<LI><a href="#[7843860]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MD5Final
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[8c6b804]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ChapSendResponse
<LI><a href="#[8c6ba5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ChapSendStatus
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[8c21978]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_peer_success
<LI><a href="#[871a4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
<LI><a href="#[8c21a74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_peer_fail
<LI><a href="#[8c218f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_withpeer_success
</UL><BR>[Address Reference Count : 1]<UL><LI> chap.o(.data)
</UL><P><STRONG><a name="[8c6ca48]"></a>ChapPrintPkt</STRONG> (ARM, 452 bytes, Stack size 32 bytes, chap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8769fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_print_string
</UL><BR>[Address Reference Count : 1]<UL><LI> chap.o(.data)
</UL><P><STRONG><a name="[8c6c4a4]"></a>ChapChallengeTimeout</STRONG> (ARM, 128 bytes, Stack size 8 bytes, chap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8c6c520]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ChapSendChallenge
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[8c21a74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_auth_peer_fail
</UL><BR>[Address Reference Count : 1]<UL><LI> chap.o(.text)
</UL><P><STRONG><a name="[8c6b804]"></a>ChapSendResponse</STRONG> (ARM, 192 bytes, Stack size 32 bytes, chap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9ac2a00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_output
<LI><a href="#[871a4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
</UL><BR>[Called By]<UL><LI><a href="#[8c6cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapInput
<LI><a href="#[8c6bda0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ChapResponseTimeout
</UL><P><STRONG><a name="[8c6bda0]"></a>ChapResponseTimeout</STRONG> (ARM, 16 bytes, Stack size 0 bytes, chap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8c6b804]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ChapSendResponse
</UL><BR>[Address Reference Count : 1]<UL><LI> chap.o(.text)
</UL><P><STRONG><a name="[8c6be18]"></a>ChapRechallenge</STRONG> (ARM, 48 bytes, Stack size 8 bytes, chap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8c6c42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ChapGenChallenge
<LI><a href="#[8c6c520]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ChapSendChallenge
</UL><BR>[Address Reference Count : 1]<UL><LI> chap.o(.text)
</UL><P><STRONG><a name="[8c9775c]"></a>chat_alarm</STRONG> (ARM, 12 bytes, Stack size 0 bytes, chat.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c30b10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_release
</UL><BR>[Address Reference Count : 1]<UL><LI> chat.o(.text)
</UL><P><STRONG><a name="[8c976e4]"></a>cyg_ppp_chat_send</STRONG> (ARM, 228 bytes, Stack size 32 bytes, chat.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4bf4918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_write
</UL><BR>[Called By]<UL><LI><a href="#[874a4fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_chat
</UL><P><STRONG><a name="[8ca6744]"></a>fsm_timeout</STRONG> (ARM, 388 bytes, Stack size 16 bytes, fsm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8befcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_sdata
<LI><a href="#[871a4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
<LI><a href="#[9ac3628]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_syslog
<LI><a href="#[8ca66d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsm_sconfreq
</UL><BR>[Address Reference Count : 1]<UL><LI> fsm.o(.text)
</UL><P><STRONG><a name="[8ca66d0]"></a>fsm_sconfreq</STRONG> (ARM, 268 bytes, Stack size 24 bytes, fsm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8befcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_sdata
<LI><a href="#[871a4fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_timeout
</UL><BR>[Called By]<UL><LI><a href="#[8ca6744]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsm_timeout
<LI><a href="#[8794d94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_lowerup
<LI><a href="#[8794e84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_open
<LI><a href="#[8794ca0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_fsm_input
</UL><P><STRONG><a name="[8d09e70]"></a>exp10(unsigned int)</STRONG> (ARM, 104 bytes, Stack size 16 bytes, strtod.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8d09e70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;exp10(unsigned int)
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
</UL><BR>[Called By]<UL><LI><a href="#[8a61c88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__softfp_strtod
<LI><a href="#[8d09e70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;exp10(unsigned int)
</UL><P><STRONG><a name="[8f46ef0]"></a>_llsdiv_nonega</STRONG> (ARM, 0 bytes, Stack size 0 bytes, llsdiv.o(.text))
<BR>[Called By]<UL><LI><a href="#[9b5e798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_sdiv
</UL><P><STRONG><a name="[8f46e7c]"></a>_llsdiv_nonegb</STRONG> (ARM, 0 bytes, Stack size 0 bytes, llsdiv.o(.text))
<BR>[Called By]<UL><LI><a href="#[9b5e798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_sdiv
</UL><P><STRONG><a name="[8f46e08]"></a>_llsdiv_nonegq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, llsdiv.o(.text))
<BR>[Called By]<UL><LI><a href="#[9b5e798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_sdiv
</UL><P><STRONG><a name="[8f46d94]"></a>_llsdiv_nonegr</STRONG> (ARM, 0 bytes, Stack size 0 bytes, llsdiv.o(.text))
<BR>[Called By]<UL><LI><a href="#[9b5e798]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_sdiv
</UL><P><STRONG><a name="[8f46668]"></a>_llsrdv_nonega</STRONG> (ARM, 0 bytes, Stack size 0 bytes, llsrdv.o(.text))
<BR>[Called By]<UL><LI><a href="#[9b5e808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_srdv
</UL><P><STRONG><a name="[8f465f4]"></a>_llsrdv_nonegb</STRONG> (ARM, 0 bytes, Stack size 0 bytes, llsrdv.o(.text))
<BR>[Called By]<UL><LI><a href="#[9b5e808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_srdv
</UL><P><STRONG><a name="[8f46580]"></a>_llsrdv_nonegq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, llsrdv.o(.text))
<BR>[Called By]<UL><LI><a href="#[9b5e808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_srdv
</UL><P><STRONG><a name="[8f4650c]"></a>_llsrdv_nonegr</STRONG> (ARM, 0 bytes, Stack size 0 bytes, llsrdv.o(.text))
<BR>[Called By]<UL><LI><a href="#[9b5e808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_srdv
</UL><P><STRONG><a name="[8f16234]"></a>_ll_udiv_small_nosh32</STRONG> (ARM, 0 bytes, Stack size 0 bytes, lludiv5.o(.text))
<BR>[Called By]<UL><LI><a href="#[49e6c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><P><STRONG><a name="[8f36044]"></a>_ll_udiv_small_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, lludiv5.o(.text))
<BR>[Called By]<UL><LI><a href="#[49e6c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><P><STRONG><a name="[8f06400]"></a>_ll_udiv_small_loopdone</STRONG> (ARM, 0 bytes, Stack size 0 bytes, lludiv5.o(.text))
<BR>[Called By]<UL><LI><a href="#[49e6c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><P><STRONG><a name="[8f260f8]"></a>_ll_udiv_big_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, lludiv5.o(.text))
<BR>[Called By]<UL><LI><a href="#[49e6c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><P><STRONG><a name="[8f063b8]"></a>_ll_udiv_big_loopdone</STRONG> (ARM, 0 bytes, Stack size 0 bytes, lludiv5.o(.text))
<BR>[Called By]<UL><LI><a href="#[49e6c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><P><STRONG><a name="[8f64dc4]"></a>_Bytes</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR>[Called By]<UL><LI><a href="#[4ced2d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><P><STRONG><a name="[8f64954]"></a>_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memclr_w.o(.text))
<BR>[Called By]<UL><LI><a href="#[4ced184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
</UL><P><STRONG><a name="[8f643d8]"></a>_memcpy_dest_aligned</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR>[Called By]<UL><LI><a href="#[4a561e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><P><STRONG><a name="[8f64594]"></a>_memcpy_src1_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR>[Called By]<UL><LI><a href="#[4a561e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><P><STRONG><a name="[8f6451c]"></a>_memcpy_src2_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR>[Called By]<UL><LI><a href="#[4a561e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><P><STRONG><a name="[8f644a4]"></a>_memcpy_src3_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR>[Called By]<UL><LI><a href="#[4a561e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><P><STRONG><a name="[8f63dec]"></a>_memcpy_aligned_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy_w.o(.text))
<BR>[Called By]<UL><LI><a href="#[4d32034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
</UL><P><STRONG><a name="[8f63d28]"></a>_memcpy_small</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy_w.o(.text))
<BR>[Called By]<UL><LI><a href="#[4d32034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
</UL><P><STRONG><a name="[8f6397c]"></a>_memmove_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memmove.o(.text))
<BR>[Called By]<UL><LI><a href="#[7338e98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL><P><STRONG><a name="[8f63520]"></a>_align_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memmove_w.o(.text))
<BR>[Called By]<UL><LI><a href="#[7c38514]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
</UL><P><STRONG><a name="[8f634d0]"></a>_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memmove_w.o(.text))
<BR>[Called By]<UL><LI><a href="#[7c38514]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
</UL><P><STRONG><a name="[50d9bb8]"></a>alarm_function</STRONG> (ARM, 32 bytes, Stack size 0 bytes, dhcp_prot.o(.text_4))
<BR><BR>[Calls]<UL><LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><BR>[Address Reference Count : 1]<UL><LI> dhcp_prot.o(i.new_lease)
</UL><P><STRONG><a name="[5d6d9e4]"></a>outer_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, w99702_dcache.o(MEM_INIT), UNUSED)
<BR>[Called By]<UL><LI><a href="#[5d6d974]">&lt&lt</a>&nbsp;&nbsp;&nbsp;inner_loop
</UL><P><STRONG><a name="[5d6d974]"></a>inner_loop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, w99702_dcache.o(MEM_INIT), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d6d974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inner_loop
<LI><a href="#[5d6d9e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;outer_loop
</UL><BR>[Called By]<UL><LI><a href="#[5d6d974]">&lt&lt</a>&nbsp;&nbsp;&nbsp;inner_loop
</UL><P><STRONG><a name="[588acf0]"></a>AddDDNS</STRONG> (ARM, 132 bytes, Stack size 32 bytes, HttpClient.o(i.AddDDNS))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[57167b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjFinal
<LI><a href="#[57163bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteNode
<LI><a href="#[5716588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddSelectFD
</UL><BR>[Address Reference Count : 2]<UL><LI> HttpClient.o(i.DDNS_Do_CheckIP)
<LI> HttpClient.o(i.Do_DNS)
</UL><P><STRONG><a name="[57755a8]"></a>AddNTP</STRONG> (ARM, 100 bytes, Stack size 24 bytes, Ntp.o(i.AddNTP))
<BR><BR>[Calls]<UL><LI><a href="#[57167b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjFinal
<LI><a href="#[57163bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteNode
<LI><a href="#[5716588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;AddSelectFD
</UL><BR>[Address Reference Count : 1]<UL><LI> Ntp.o(i.NtpSetTime)
</UL><P><STRONG><a name="[56dec34]"></a>Buffer_Assign</STRONG> (ARM, 140 bytes, Stack size 16 bytes, CameraCtl.o(i.Buffer_Assign))
<BR><BR>[Calls]<UL><LI><a href="#[56dbbd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_server_size
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[56dbb5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtsp_server_init
<LI><a href="#[56dbae4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_rtspmem_size
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[56dba70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtsp_mem_init
</UL><BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
</UL><P><STRONG><a name="[595132c]"></a>BuildFileInfo</STRONG> (ARM, 192 bytes, Stack size 24 bytes, mail.o(i.BuildFileInfo))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Called By]<UL><LI><a href="#[5950900]">&lt&lt</a>&nbsp;&nbsp;&nbsp;AddBufferFileList
</UL><P><STRONG><a name="[8e6ecbc]"></a>Chebps</STRONG> (ARM, 232 bytes, Stack size 20 bytes, az_lsp.o(i.Chebps))
<BR>[Called By]<UL><LI><a href="#[8dff5d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Az_lsp
</UL><P><STRONG><a name="[588a770]"></a>CkIP_RequestOver</STRONG> (ARM, 28 bytes, Stack size 0 bytes, HttpClient.o(i.CkIP_RequestOver))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Address Reference Count : 1]<UL><LI> HttpClient.o(i.DDNS_Do_CheckIP)
</UL><P><STRONG><a name="[588a7e8]"></a>CkIP_Response_dnsomatic</STRONG> (ARM, 292 bytes, Stack size 24 bytes, HttpClient.o(i.CkIP_Response_dnsomatic))
<BR><BR>[Calls]<UL><LI><a href="#[588741c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpString2IP
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[58876ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DDNS_Update_IP
</UL><BR>[Address Reference Count : 1]<UL><LI> HttpClient.o(i.DDNS_Do_CheckIP)
</UL><P><STRONG><a name="[588a864]"></a>CkIP_Response_dyndns</STRONG> (ARM, 308 bytes, Stack size 32 bytes, HttpClient.o(i.CkIP_Response_dyndns))
<BR><BR>[Calls]<UL><LI><a href="#[588741c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpString2IP
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[58876ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DDNS_Update_IP
</UL><BR>[Address Reference Count : 1]<UL><LI> HttpClient.o(i.DDNS_Do_CheckIP)
</UL><P><STRONG><a name="[59b4b0c]"></a>CompareEmbedPatten</STRONG> (ARM, 256 bytes, Stack size 24 bytes, HttpServer.o(i.CompareEmbedPatten))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
</UL><BR>[Called By]<UL><LI><a href="#[77ac064]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RunEmbedFun
</UL><P><STRONG><a name="[55397dc]"></a>Config_SubNotFound</STRONG> (ARM, 8 bytes, Stack size 0 bytes, Register.o(i.Config_SubNotFound))
<BR>[Address Reference Count : 2]<UL><LI> Register.o(i.CreateSubCmdRunStruct)
<LI> Register.o(i.Http_CommonCmdRun)
</UL><P><STRONG><a name="[82a3410]"></a>CreateInnerDescription</STRONG> (ARM, 252 bytes, Stack size 24 bytes, C_MultiPart.o(i.CreateInnerDescription))
<BR><BR>[Calls]<UL><LI><a href="#[785f888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_New
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[59c9bcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetTrimString
</UL><BR>[Called By]<UL><LI><a href="#[825cc18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseDescriptionLine
</UL><P><STRONG><a name="[588add0]"></a>DDNSRequestOver</STRONG> (ARM, 24 bytes, Stack size 0 bytes, HttpClient.o(i.DDNSRequestOver))
<BR>[Address Reference Count : 1]<UL><LI> HttpClient.o(i.Do_DNS)
</UL><P><STRONG><a name="[588ad5c]"></a>DDNSResponse</STRONG> (ARM, 280 bytes, Stack size 40 bytes, HttpClient.o(i.DDNSResponse))
<BR><BR>[Calls]<UL><LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
</UL><BR>[Address Reference Count : 1]<UL><LI> HttpClient.o(i.Do_DNS)
</UL><P><STRONG><a name="[786d4ec]"></a>DELAY</STRONG> (ARM, 76 bytes, Stack size 4 bytes, powerctrl.o(i.DELAY))
<BR>[Called By]<UL><LI><a href="#[4d844a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_set_clk
</UL><P><STRONG><a name="[59b5a40]"></a>DecorateAccessName</STRONG> (ARM, 108 bytes, Stack size 16 bytes, HttpServer.o(i.DecorateAccessName))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[785f888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_New
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Called By]<UL><LI><a href="#[55371e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpIsRegisterEmbedFunEx
<LI><a href="#[4e4d7c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpRegisterEmbedFunEx
</UL><P><STRONG><a name="[78b9468]"></a>Delay</STRONG> (ARM, 20 bytes, Stack size 0 bytes, W99702_ADDA.o(i.Delay))
<BR>[Called By]<UL><LI><a href="#[78b9cf0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;adda_init
</UL><P><STRONG><a name="[78a4ea0]"></a>Delay</STRONG> (ARM, 24 bytes, Stack size 0 bytes, W99702_WM8978.o(i.Delay))
<BR>[Called By]<UL><LI><a href="#[73652b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;TwoWire_Write_Data
<LI><a href="#[78a3774]">&lt&lt</a>&nbsp;&nbsp;&nbsp;iis_init
</UL><P><STRONG><a name="[56dcec0]"></a>FillCameraData</STRONG> (ARM, 392 bytes, Stack size 168 bytes, CameraCtl.o(i.FillCameraData))
<BR><BR>[Calls]<UL><LI><a href="#[56debe4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mytime
<LI><a href="#[56db9f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpIsDisconnect
<LI><a href="#[4e4c794]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetSendDataOverFun
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4dee308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBodyString
<LI><a href="#[4e49d40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBody
<LI><a href="#[5456f70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerNotify
<LI><a href="#[562be84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetRunTimeState
<LI><a href="#[4eab5a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetWebCamStateString
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Address Reference Count : 2]<UL><LI> CameraCtl.o(i.FillCameraData)
<LI> CameraCtl.o(i.Http_GetCameraData)
</UL><P><STRONG><a name="[57e87cc]"></a>FillFirmwareData</STRONG> (ARM, 176 bytes, Stack size 152 bytes, Upload.o(i.FillFirmwareData))
<BR><BR>[Calls]<UL><LI><a href="#[4e4c9d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;usiMyRead
<LI><a href="#[4e4c794]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetSendDataOverFun
<LI><a href="#[4e49d40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBody
</UL><BR>[Address Reference Count : 2]<UL><LI> Upload.o(i.FillFirmwareData)
<LI> Upload.o(i.Http_GetFirmware)
</UL><P><STRONG><a name="[4e4ff50]"></a>FillTestSpeedData</STRONG> (ARM, 44 bytes, Stack size 8 bytes, LibIPCamera.o(i.FillTestSpeedData))
<BR><BR>[Calls]<UL><LI><a href="#[4e49d40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBody
<LI><a href="#[4e4c794]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetSendDataOverFun
</UL><BR>[Address Reference Count : 2]<UL><LI> LibIPCamera.o(i.FillTestSpeedData)
<LI> LibIPCamera.o(i.Http_TestSpeed)
</UL><P><STRONG><a name="[58896dc]"></a>FillURLCGIData</STRONG> (ARM, 252 bytes, Stack size 32 bytes, HttpClient.o(i.FillURLCGIData))
<BR><BR>[Calls]<UL><LI><a href="#[4e4c794]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetSendDataOverFun
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4e49d40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBody
<LI><a href="#[4e4c6a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetHeader
<LI><a href="#[4dee308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBodyString
<LI><a href="#[4c2be18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_signal
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> HttpClient.o(i.Http_SendHttpRequest)
</UL><P><STRONG><a name="[72f0b98]"></a>Get_Dev_Dpr_In</STRONG> (ARM, 272 bytes, Stack size 16 bytes, vp_usb.o(i.Get_Dev_Dpr_In))
<BR>[Called By]<UL><LI><a href="#[72f2ab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USB_ISR_CtlIn
</UL><P><STRONG><a name="[8ecc720]"></a>Get_lsp_pol</STRONG> (ARM, 228 bytes, Stack size 40 bytes, lsp_az.o(i.Get_lsp_pol))
<BR><BR>[Calls]<UL><LI><a href="#[8d54e30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_msu
<LI><a href="#[8cdefa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_Extract
</UL><BR>[Called By]<UL><LI><a href="#[8dac5d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Lsp_Az
</UL><P><STRONG><a name="[553b324]"></a>HTN</STRONG> (ARM, 52 bytes, Stack size 24 bytes, Register.o(i.HTN))
<BR><BR>[Calls]<UL><LI><a href="#[4dee308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBodyString
</UL><BR>[Called By]<UL><LI><a href="#[553772c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;DumpJsObj
</UL><P><STRONG><a name="[772e630]"></a>Http_WebFile_AddData</STRONG> (ARM, 176 bytes, Stack size 24 bytes, web_files.o(i.Http_WebFile_AddData))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4e49d40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBody
<LI><a href="#[4e4c794]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetSendDataOverFun
</UL><BR>[Address Reference Count : 2]<UL><LI> web_files.o(i.Http_WebFile)
<LI> web_files.o(i.Http_WebFile_AddData)
</UL><P><STRONG><a name="[78a4718]"></a>IIS_Set_Data_Format</STRONG> (ARM, 36 bytes, Stack size 0 bytes, W99702_WM8978.o(i.IIS_Set_Data_Format))
<BR>[Called By]<UL><LI><a href="#[7365a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartPlay
<LI><a href="#[7365758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartRecord
</UL><P><STRONG><a name="[78a4790]"></a>IIS_Set_Sample_Frequency</STRONG> (ARM, 124 bytes, Stack size 0 bytes, W99702_WM8978.o(i.IIS_Set_Sample_Frequency))
<BR>[Called By]<UL><LI><a href="#[7365a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartPlay
<LI><a href="#[7365758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartRecord
</UL><P><STRONG><a name="[87f9c58]"></a>ImaMashChannel</STRONG> (ARM, 436 bytes, Stack size 80 bytes, ima_rw.o(i.ImaMashChannel))
<BR><BR>[Calls]<UL><LI><a href="#[88191e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ImaMashS
</UL><BR>[Called By]<UL><LI><a href="#[7dcd968]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ImaBlockMashI
</UL><P><STRONG><a name="[88191e0]"></a>ImaMashS</STRONG> (ARM, 332 bytes, Stack size 40 bytes, ima_rw.o(i.ImaMashS))
<BR><BR>[Calls]<UL><LI><a href="#[7476728]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fflush
</UL><BR>[Called By]<UL><LI><a href="#[87f9c58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ImaMashChannel
</UL><P><STRONG><a name="[82a371c]"></a>InsertBufferSeg</STRONG> (ARM, 128 bytes, Stack size 24 bytes, C_MultiPart.o(i.InsertBufferSeg))
<BR><BR>[Calls]<UL><LI><a href="#[59c9028]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpInsertNodeAfter
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[57163bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteNode
</UL><BR>[Called By]<UL><LI><a href="#[5536c38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSplitBuffer
</UL><P><STRONG><a name="[8edb494]"></a>Lag_max</STRONG> (ARM, 316 bytes, Stack size 32 bytes, pitch_ol.o(i.Lag_max))
<BR><BR>[Calls]<UL><LI><a href="#[8e221f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vad_tone_detection
<LI><a href="#[8d46244]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Inv_sqrt
</UL><BR>[Called By]<UL><LI><a href="#[8e0e888]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pitch_ol
</UL><P><STRONG><a name="[89f6fc8]"></a>MD5Transform</STRONG> (ARM, 2540 bytes, Stack size 88 bytes, md5.o(i.MD5Transform))
<BR>[Called By]<UL><LI><a href="#[89f7018]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MD5Update
<LI><a href="#[89f677c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;md5_vector
</UL><P><STRONG><a name="[89f7018]"></a>MD5Update</STRONG> (ARM, 200 bytes, Stack size 24 bytes, md5.o(i.MD5Update))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[89f6fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MD5Transform
</UL><BR>[Called By]<UL><LI><a href="#[89f677c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;md5_vector
</UL><P><STRONG><a name="[57e90dc]"></a>MPClean</STRONG> (ARM, 200 bytes, Stack size 40 bytes, Upload.o(i.MPClean))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[57e7cf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gcd
</UL><BR>[Called By]<UL><LI><a href="#[57e7c80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MPTestWriteFlash
<LI><a href="#[57e7c0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ProcessUpdate
</UL><P><STRONG><a name="[57e8e64]"></a>MPTestBoundary</STRONG> (ARM, 164 bytes, Stack size 16 bytes, Upload.o(i.MPTestBoundary))
<BR><BR>[Calls]<UL><LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
</UL><BR>[Called By]<UL><LI><a href="#[57e7c0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ProcessUpdate
</UL><P><STRONG><a name="[8f0f0c4]"></a>MR475_quant_store_results</STRONG> (ARM, 164 bytes, Stack size 24 bytes, qgain475.o(i.MR475_quant_store_results))
<BR><BR>[Calls]<UL><LI><a href="#[8f0ec34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_shrsq
<LI><a href="#[8d99304]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Log2
<LI><a href="#[8d93efc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gc_pred_update
</UL><BR>[Called By]<UL><LI><a href="#[8de33d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR475_gain_quant
</UL><P><STRONG><a name="[8f23f68]"></a>MR795_gain_code_quant3</STRONG> (ARM, 864 bytes, Stack size 112 bytes, qgain795.o(i.MR795_gain_code_quant3))
<BR><BR>[Calls]<UL><LI><a href="#[8cdefa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_Extract
<LI><a href="#[8f0ebc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Mac_32_16
<LI><a href="#[8f23a48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Mac_32
</UL><BR>[Called By]<UL><LI><a href="#[8de327c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR795_gain_quant
</UL><P><STRONG><a name="[8f23ee8]"></a>MR795_gain_code_quant_mod</STRONG> (ARM, 908 bytes, Stack size 104 bytes, qgain795.o(i.MR795_gain_code_quant_mod))
<BR><BR>[Calls]<UL><LI><a href="#[8cd626c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sqrt_l_exp
<LI><a href="#[8cdefa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;L_Extract
<LI><a href="#[8f0ebc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Mac_32_16
<LI><a href="#[8f23a48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Mac_32
</UL><BR>[Called By]<UL><LI><a href="#[8de327c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;MR795_gain_quant
</UL><P><STRONG><a name="[5775c18]"></a>NTPDataToTime</STRONG> (ARM, 392 bytes, Stack size 112 bytes, Ntp.o(i.NTPDataToTime))
<BR><BR>[Calls]<UL><LI><a href="#[4f73c68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[74125ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4f741d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[5774564]">&gt&gt</a>&nbsp;&nbsp;&nbsp;current_time
<LI><a href="#[57745d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;convert_time
<LI><a href="#[544d544]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gmtime_r
<LI><a href="#[544d118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_libc_time_normalize_structtm
<LI><a href="#[5773ffc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;asctime_r
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4e4a1d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetCheckedTime
</UL><BR>[Called By]<UL><LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
</UL><P><STRONG><a name="[8ec7778]"></a>Norm_Corr</STRONG> (ARM, 1748 bytes, Stack size 152 bytes, pitch_fr.o(i.Norm_Corr))
<BR><BR>[Calls]<UL><LI><a href="#[8cc5054]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Convolve
<LI><a href="#[8d46244]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Inv_sqrt
</UL><BR>[Called By]<UL><LI><a href="#[8d737c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pitch_fr
</UL><P><STRONG><a name="[72f0c80]"></a>Outp_Byte</STRONG> (ARM, 84 bytes, Stack size 0 bytes, vp_usb.o(i.Outp_Byte))
<BR>[Called By]<UL><LI><a href="#[72f2ab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USB_ISR_CtlIn
<LI><a href="#[72f0c0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Vender_Data_In
<LI><a href="#[72f2b2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Vender_Data_Out
</UL><P><STRONG><a name="[59cafcc]"></a>PT</STRONG> (ARM, 12 bytes, Stack size 0 bytes, C_String.o(i.PT))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Address Reference Count : 1]<UL><LI> C_String.o(i.httpDumpXML)
</UL><P><STRONG><a name="[59c9f44]"></a>PTN</STRONG> (ARM, 56 bytes, Stack size 24 bytes, C_String.o(i.PTN))
<BR>[Called By]<UL><LI><a href="#[59caf5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__DumpXML
</UL><P><STRONG><a name="[59b4f90]"></a>ParseAuthorization</STRONG> (ARM, 136 bytes, Stack size 24 bytes, HttpServer.o(i.ParseAuthorization))
<BR><BR>[Calls]<UL><LI><a href="#[743b184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[59af2e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;base64decode
<LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
</UL><BR>[Called By]<UL><LI><a href="#[59af808]">&lt&lt</a>&nbsp;&nbsp;&nbsp;auth_required
<LI><a href="#[5642438]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpGetCurrentUser
</UL><P><STRONG><a name="[72f2778]"></a>SDRAM_USB_Transfer</STRONG> (ARM, 604 bytes, Stack size 8 bytes, vp_usb.o(i.SDRAM_USB_Transfer))
<BR><BR>[Calls]<UL><LI><a href="#[7242958]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Read_GPIO7
</UL><BR>[Called By]<UL><LI><a href="#[71ecfd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBWrite
<LI><a href="#[72ed200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbHandlerDSR
</UL><P><STRONG><a name="[8a11a68]"></a>SHA1Final</STRONG> (ARM, 252 bytes, Stack size 24 bytes, sha1.o(i.SHA1Final))
<BR><BR>[Calls]<UL><LI><a href="#[8a11ad8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SHA1Update
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
</UL><BR>[Called By]<UL><LI><a href="#[8a100ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sha1_vector
</UL><P><STRONG><a name="[8a10b6c]"></a>SHA1Transform</STRONG> (ARM, 5564 bytes, Stack size 88 bytes, sha1.o(i.SHA1Transform))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
</UL><BR>[Called By]<UL><LI><a href="#[8a11ad8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SHA1Update
</UL><P><STRONG><a name="[8a11ad8]"></a>SHA1Update</STRONG> (ARM, 176 bytes, Stack size 24 bytes, sha1.o(i.SHA1Update))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[8a10b6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SHA1Transform
</UL><BR>[Called By]<UL><LI><a href="#[8a11a68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SHA1Final
<LI><a href="#[8a100ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sha1_vector
</UL><P><STRONG><a name="[82a348c]"></a>SeperatorDescriptionLine</STRONG> (ARM, 64 bytes, Stack size 0 bytes, C_MultiPart.o(i.SeperatorDescriptionLine))
<BR>[Address Reference Count : 1]<UL><LI> C_MultiPart.o(i.httpParseDescriptionLine)
</UL><P><STRONG><a name="[73ab514]"></a>Swap32</STRONG> (ARM, 32 bytes, Stack size 0 bytes, sd.o(i.Swap32))
<BR>[Called By]<UL><LI><a href="#[73a7f88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fmiSDResponse2
</UL><P><STRONG><a name="[7700938]"></a>TestNet_ThreadInit</STRONG> (ARM, 156 bytes, Stack size 32 bytes, TestNetServer.o(i.TestNet_ThreadInit))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4e4d500]">&gt&gt</a>&nbsp;&nbsp;&nbsp;create_listen_socket
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[4e4a984]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_EnableTestNet
</UL><P><STRONG><a name="[5887c20]"></a>URLCGI_DelFD</STRONG> (ARM, 148 bytes, Stack size 32 bytes, HttpClient.o(i.URLCGI_DelFD))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[57167b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ObjFinal
<LI><a href="#[57163bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteNode
<LI><a href="#[4c2c020]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_destroy
<LI><a href="#[4c2c4f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_destroy
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Address Reference Count : 1]<UL><LI> HttpClient.o(i.URLCGI_RequestOver)
</UL><P><STRONG><a name="[5889844]"></a>URLCGI_HTTPCRequestOver</STRONG> (ARM, 28 bytes, Stack size 8 bytes, HttpClient.o(i.URLCGI_HTTPCRequestOver))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Address Reference Count : 1]<UL><LI> HttpClient.o(i.Http_SendHttpRequest)
</UL><P><STRONG><a name="[58897c8]"></a>URLCGI_HTTPCResponse</STRONG> (ARM, 148 bytes, Stack size 32 bytes, HttpClient.o(i.URLCGI_HTTPCResponse))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4c2bf24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_wait
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> HttpClient.o(i.Http_SendHttpRequest)
</UL><P><STRONG><a name="[5889750]"></a>URLCGI_RequestOver</STRONG> (ARM, 60 bytes, Stack size 8 bytes, HttpClient.o(i.URLCGI_RequestOver))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[57165f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;InsertCustomProcess
</UL><BR>[Address Reference Count : 1]<UL><LI> HttpClient.o(i.Http_SendHttpRequest)
</UL><P><STRONG><a name="[71f3fe8]"></a>USBWrite_Again</STRONG> (ARM, 116 bytes, Stack size 40 bytes, vp_com.o(i.USBWrite_Again))
<BR><BR>[Calls]<UL><LI><a href="#[71ecfd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USBWrite
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[71ed3d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;freshWlanRequest
<LI><a href="#[71ed450]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getIPInfo
<LI><a href="#[71ecaec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;initRequest
<LI><a href="#[71ed4c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;netstatRequest
<LI><a href="#[71eca04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;processClient
<LI><a href="#[71ed6f4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;statusReply
<LI><a href="#[71ed534]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcom_getPPP
</UL><P><STRONG><a name="[72f2d00]"></a>USB_All_Flag_Clear</STRONG> (ARM, 48 bytes, Stack size 0 bytes, vp_usb.o(i.USB_All_Flag_Clear))
<BR>[Called By]<UL><LI><a href="#[72ed274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBHandler
<LI><a href="#[72f2d78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USB_ISR_Dev_Des
<LI><a href="#[72f2c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USB_ISR_Str_Des
<LI><a href="#[72f2ba0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USB_ISR_Vendor_Cmd
</UL><P><STRONG><a name="[72f2c8c]"></a>USB_Cmd_Parsing</STRONG> (ARM, 104 bytes, Stack size 0 bytes, vp_usb.o(i.USB_Cmd_Parsing))
<BR>[Called By]<UL><LI><a href="#[72ed274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBHandler
<LI><a href="#[72f2d78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USB_ISR_Dev_Des
<LI><a href="#[72f2c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USB_ISR_Str_Des
<LI><a href="#[72f2ba0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USB_ISR_Vendor_Cmd
</UL><P><STRONG><a name="[72f2ab8]"></a>USB_ISR_CtlIn</STRONG> (ARM, 132 bytes, Stack size 16 bytes, vp_usb.o(i.USB_ISR_CtlIn))
<BR><BR>[Calls]<UL><LI><a href="#[72f0c80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Outp_Byte
<LI><a href="#[72f0c0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Vender_Data_In
<LI><a href="#[72f0b98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Get_Dev_Dpr_In
</UL><BR>[Called By]<UL><LI><a href="#[72ed274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBHandler
</UL><P><STRONG><a name="[72f2d78]"></a>USB_ISR_Dev_Des</STRONG> (ARM, 104 bytes, Stack size 8 bytes, vp_usb.o(i.USB_ISR_Dev_Des))
<BR><BR>[Calls]<UL><LI><a href="#[72f2d00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USB_All_Flag_Clear
<LI><a href="#[72f2c8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USB_Cmd_Parsing
</UL><BR>[Called By]<UL><LI><a href="#[72ed274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBHandler
</UL><P><STRONG><a name="[72f2a40]"></a>USB_ISR_Reset_End</STRONG> (ARM, 124 bytes, Stack size 0 bytes, vp_usb.o(i.USB_ISR_Reset_End))
<BR>[Called By]<UL><LI><a href="#[72ed274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBHandler
</UL><P><STRONG><a name="[72f2c18]"></a>USB_ISR_Str_Des</STRONG> (ARM, 196 bytes, Stack size 8 bytes, vp_usb.o(i.USB_ISR_Str_Des))
<BR><BR>[Calls]<UL><LI><a href="#[72f2d00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USB_All_Flag_Clear
<LI><a href="#[72f2c8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USB_Cmd_Parsing
</UL><BR>[Called By]<UL><LI><a href="#[72ed274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBHandler
</UL><P><STRONG><a name="[72f2ba0]"></a>USB_ISR_Vendor_Cmd</STRONG> (ARM, 244 bytes, Stack size 12 bytes, vp_usb.o(i.USB_ISR_Vendor_Cmd))
<BR><BR>[Calls]<UL><LI><a href="#[72f2d00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USB_All_Flag_Clear
<LI><a href="#[72f2c8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;USB_Cmd_Parsing
</UL><BR>[Called By]<UL><LI><a href="#[72ed274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBHandler
</UL><P><STRONG><a name="[72f303c]"></a>USB_Setup_Endpoint</STRONG> (ARM, 444 bytes, Stack size 32 bytes, vp_usb.o(i.USB_Setup_Endpoint))
<BR>[Called By]<UL><LI><a href="#[72ed2e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USB_Init
</UL><P><STRONG><a name="[4a03d24]"></a>UartWriteTrigger</STRONG> (ARM, 20 bytes, Stack size 0 bytes, UartTest.o(i.UartWriteTrigger))
<BR>[Called By]<UL><LI><a href="#[4a54a54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tsUartTestHandler
</UL><P><STRONG><a name="[72f0c0c]"></a>Vender_Data_In</STRONG> (ARM, 312 bytes, Stack size 20 bytes, vp_usb.o(i.Vender_Data_In))
<BR><BR>[Calls]<UL><LI><a href="#[72f0c80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Outp_Byte
</UL><BR>[Called By]<UL><LI><a href="#[72f2ab8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USB_ISR_CtlIn
</UL><P><STRONG><a name="[72f2b2c]"></a>Vender_Data_Out</STRONG> (ARM, 476 bytes, Stack size 24 bytes, vp_usb.o(i.Vender_Data_Out))
<BR><BR>[Calls]<UL><LI><a href="#[72f0c80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Outp_Byte
</UL><BR>[Called By]<UL><LI><a href="#[72ed274]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBHandler
</UL><P><STRONG><a name="[8ef9aa0]"></a>Vq_subvec</STRONG> (ARM, 356 bytes, Stack size 68 bytes, q_plsf_5.o(i.Vq_subvec))
<BR>[Called By]<UL><LI><a href="#[8dff564]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Q_plsf_5
</UL><P><STRONG><a name="[8f05204]"></a>Vq_subvec3</STRONG> (ARM, 424 bytes, Stack size 52 bytes, q_plsf_3.o(i.Vq_subvec3))
<BR>[Called By]<UL><LI><a href="#[8dbdce8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Q_plsf_3
</UL><P><STRONG><a name="[8f05194]"></a>Vq_subvec4</STRONG> (ARM, 288 bytes, Stack size 64 bytes, q_plsf_3.o(i.Vq_subvec4))
<BR>[Called By]<UL><LI><a href="#[8dbdce8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Q_plsf_3
</UL><P><STRONG><a name="[78a3bf4]"></a>WM_Set_ADC_Volume</STRONG> (ARM, 72 bytes, Stack size 8 bytes, W99702_WM8978.o(i.WM_Set_ADC_Volume))
<BR><BR>[Calls]<UL><LI><a href="#[73652b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;TwoWire_Write_Data
</UL><BR>[Called By]<UL><LI><a href="#[789fa98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WM8978_ADC_Setup
<LI><a href="#[7365414]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978SetRecordVolume
</UL><P><STRONG><a name="[78a2ed8]"></a>WM_Set_DAC_Volume</STRONG> (ARM, 188 bytes, Stack size 24 bytes, W99702_WM8978.o(i.WM_Set_DAC_Volume))
<BR><BR>[Calls]<UL><LI><a href="#[755f858]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSetDacVolume
<LI><a href="#[755f7dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSetHeadphoneVolume
<LI><a href="#[755f760]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audioSetSpeakerVolume
<LI><a href="#[73652b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;TwoWire_Write_Data
</UL><BR>[Called By]<UL><LI><a href="#[736550c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978SetPlayVolume
</UL><P><STRONG><a name="[7a3d390]"></a>XML_Analysis</STRONG> (ARM, 132 bytes, Stack size 32 bytes, upnp.o(i.XML_Analysis))
<BR><BR>[Calls]<UL><LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[7a38c8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_control_url
<LI><a href="#[7a38c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_event_url
<LI><a href="#[7a39184]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_port_param
<LI><a href="#[7a38d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_scpdurl
<LI><a href="#[7a37b78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gena_recv_notify
</UL><P><STRONG><a name="[59caf5c]"></a>__DumpXML</STRONG> (ARM, 624 bytes, Stack size 40 bytes, C_String.o(i.__DumpXML))
<BR><BR>[Calls]<UL><LI><a href="#[59c9f44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;PTN
<LI><a href="#[59c9b50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpGetWebStyleString
<LI><a href="#[785f7c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_Free
<LI><a href="#[59caf5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__DumpXML
</UL><BR>[Called By]<UL><LI><a href="#[59caf5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__DumpXML
<LI><a href="#[5537648]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpDumpXML
</UL><P><STRONG><a name="[59cb84c]"></a>__InsertXML</STRONG> (ARM, 100 bytes, Stack size 16 bytes, C_String.o(i.__InsertXML))
<BR><BR>[Calls]<UL><LI><a href="#[59c92f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__CreateXML
<LI><a href="#[57163bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpDeleteNode
</UL><BR>[Called By]<UL><LI><a href="#[5537c38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpAppendXML
</UL><P><STRONG><a name="[7ede18c]"></a>__IsScalingOK</STRONG> (ARM, 164 bytes, Stack size 24 bytes, scaling.o(i.__IsScalingOK))
<BR><BR>[Calls]<UL><LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[537dadc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;EvaluateScalingSize
</UL><P><STRONG><a name="[82a3790]"></a>__SeperatorByString</STRONG> (ARM, 72 bytes, Stack size 4 bytes, C_MultiPart.o(i.__SeperatorByString))
<BR>[Address Reference Count : 1]<UL><LI> C_MultiPart.o(i.httpSplitBuffer)
</UL><P><STRONG><a name="[83f171c]"></a>__bswap_16</STRONG> (ARM, 16 bytes, Stack size 0 bytes, eapol_sm.o(i.__bswap_16))
<BR>[Called By]<UL><LI><a href="#[83ed500]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_processKey
<LI><a href="#[79680a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_rx_eapol
</UL><P><STRONG><a name="[8aaeb34]"></a>__bswap_16</STRONG> (ARM, 16 bytes, Stack size 0 bytes, eap.o(i.__bswap_16))
<BR>[Called By]<UL><LI><a href="#[8ac5ec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_buildIdentity
<LI><a href="#[8ac79dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_buildNak
<LI><a href="#[8ac6464]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_build_expanded_nak
<LI><a href="#[8ac906c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_parseEapReq
<LI><a href="#[8ac6f18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_processNotify
<LI><a href="#[8ac8d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_IDENTITY_Enter
<LI><a href="#[8ac8e04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_NOTIFICATION_Enter
</UL><P><STRONG><a name="[7533b64]"></a>__call_COMM_IF_PUTC</STRONG> (ARM, 80 bytes, Stack size 24 bytes, hal_if.o(i.__call_COMM_IF_PUTC))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Called By]<UL><LI><a href="#[7533bdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_gdb_flush
<LI><a href="#[4ba2e24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hal_if_diag_write_char
<LI><a href="#[7532c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_null_putc
<LI><a href="#[7532d68]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_null_write
</UL><P><STRONG><a name="[5184f6c]"></a>__call_vv_CYGNUM_CALL_IF_FLASH_CFG_OP</STRONG> (ARM, 104 bytes, Stack size 32 bytes, eth_drv.o(i.__call_vv_CYGNUM_CALL_IF_FLASH_CFG_OP))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Called By]<UL><LI><a href="#[51851fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_send
<LI><a href="#[5185604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_recv
</UL><P><STRONG><a name="[7533624]"></a>__call_vv_CYGNUM_CALL_IF_SET_CONSOLE_COMM</STRONG> (ARM, 80 bytes, Stack size 16 bytes, hal_if.o(i.__call_vv_CYGNUM_CALL_IF_SET_CONSOLE_COMM))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Called By]<UL><LI><a href="#[7531ee4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_gdb_init
<LI><a href="#[7531e60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_hal_diag_mangler_null_init
<LI><a href="#[4ba24d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hal_if_diag_init
</UL><P><STRONG><a name="[5184ff8]"></a>__call_vv_CYGNUM_CALL_IF_SET_CONSOLE_COMM</STRONG> (ARM, 80 bytes, Stack size 16 bytes, eth_drv.o(i.__call_vv_CYGNUM_CALL_IF_SET_CONSOLE_COMM))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Called By]<UL><LI><a href="#[51851fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_send
<LI><a href="#[5185604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eth_drv_recv
</UL><P><STRONG><a name="[9b6401c]"></a>__fclose</STRONG> (ARM, 312 bytes, Stack size 56 bytes, WBFAT_FOP.o(i.__fclose))
<BR><BR>[Calls]<UL><LI><a href="#[9b7fec0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_flush_sector_cache
<LI><a href="#[9b7fb54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsAllocateSector
<LI><a href="#[9b5e62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_set_dire_info
<LI><a href="#[9b5e5b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_set_dire_mtime
<LI><a href="#[765d568]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsIORead
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[765d64c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsIOWrite
<LI><a href="#[9b7fae0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsFreeSector
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[765d82c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_flush_iow_cache
</UL><BR>[Address Reference Count : 1]<UL><LI> WBFAT_FOP.o(.data)
</UL><P><STRONG><a name="[9b63ed0]"></a>__fget_stat</STRONG> (ARM, 312 bytes, Stack size 0 bytes, WBFAT_FOP.o(i.__fget_stat))
<BR>[Address Reference Count : 1]<UL><LI> WBFAT_FOP.o(.data)
</UL><P><STRONG><a name="[9b63d08]"></a>__find_close</STRONG> (ARM, 8 bytes, Stack size 0 bytes, WBFAT_FOP.o(i.__find_close))
<BR>[Address Reference Count : 1]<UL><LI> WBFAT_FOP.o(.data)
</UL><P><STRONG><a name="[9b63dec]"></a>__find_first</STRONG> (ARM, 60 bytes, Stack size 0 bytes, WBFAT_FOP.o(i.__find_first))
<BR><BR>[Calls]<UL><LI><a href="#[9b600e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_fileEx
</UL><BR>[Address Reference Count : 1]<UL><LI> WBFAT_FOP.o(.data)
</UL><P><STRONG><a name="[9b63d7c]"></a>__find_next</STRONG> (ARM, 8 bytes, Stack size 0 bytes, WBFAT_FOP.o(i.__find_next))
<BR><BR>[Calls]<UL><LI><a href="#[9b600e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_fileEx
</UL><BR>[Address Reference Count : 1]<UL><LI> WBFAT_FOP.o(.data)
</UL><P><STRONG><a name="[9b63c98]"></a>__fioctl</STRONG> (ARM, 8 bytes, Stack size 0 bytes, WBFAT_FOP.o(i.__fioctl))
<BR>[Address Reference Count : 1]<UL><LI> WBFAT_FOP.o(.data)
</UL><P><STRONG><a name="[9b64168]"></a>__fopen</STRONG> (ARM, 1152 bytes, Stack size 1072 bytes, WBFAT_FOP.o(i.__fopen))
<BR><BR>[Calls]<UL><LI><a href="#[9b5e720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_search_file
<LI><a href="#[9b5e6a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4ced1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memset
<LI><a href="#[9b6408c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fwrite
<LI><a href="#[9b63f40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fseek
<LI><a href="#[9b5e9e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_update_first_cluster
<LI><a href="#[9b5e878]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_reclaim_clusters
<LI><a href="#[9b7fec0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_flush_sector_cache
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[9b5ebcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_read_fat_table
</UL><BR>[Address Reference Count : 1]<UL><LI> WBFAT_FOP.o(.data)
</UL><P><STRONG><a name="[9b640fc]"></a>__fread</STRONG> (ARM, 1164 bytes, Stack size 88 bytes, WBFAT_FOP.o(i.__fread))
<BR><BR>[Calls]<UL><LI><a href="#[9b61570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;alloc_rw_buff
<LI><a href="#[765d64c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsIOWrite
<LI><a href="#[9b5e808]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_srdv
<LI><a href="#[765d568]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsIORead
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9b5ebcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_read_fat_table
<LI><a href="#[9b5e798]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[9b5f45c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_file
<LI><a href="#[9b5e4c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_next_dir_entry
</UL><BR>[Address Reference Count : 1]<UL><LI> WBFAT_FOP.o(.data)
</UL><P><STRONG><a name="[9b63f40]"></a>__fseek</STRONG> (ARM, 548 bytes, Stack size 48 bytes, WBFAT_FOP.o(i.__fseek))
<BR><BR>[Calls]<UL><LI><a href="#[9b5e808]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_srdv
<LI><a href="#[9b5ebcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_read_fat_table
</UL><BR>[Called By]<UL><LI><a href="#[9b64168]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fopen
<LI><a href="#[9b5f45c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_file
<LI><a href="#[9b600e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_fileEx
</UL><BR>[Address Reference Count : 1]<UL><LI> WBFAT_FOP.o(.data)
</UL><P><STRONG><a name="[9b63e60]"></a>__fset_stat</STRONG> (ARM, 376 bytes, Stack size 48 bytes, WBFAT_FOP.o(i.__fset_stat))
<BR><BR>[Calls]<UL><LI><a href="#[9b7fb54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsAllocateSector
<LI><a href="#[9b5e62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_set_dire_info
<LI><a href="#[765d568]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsIORead
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[765d64c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsIOWrite
<LI><a href="#[9b7fae0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsFreeSector
</UL><BR>[Address Reference Count : 1]<UL><LI> WBFAT_FOP.o(.data)
</UL><P><STRONG><a name="[9b63fac]"></a>__fsizing</STRONG> (ARM, 704 bytes, Stack size 48 bytes, WBFAT_FOP.o(i.__fsizing))
<BR><BR>[Calls]<UL><LI><a href="#[9b5e808]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_srdv
<LI><a href="#[9b5e9e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_update_first_cluster
<LI><a href="#[9b5e878]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_reclaim_clusters
<LI><a href="#[9b7fec0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_flush_sector_cache
<LI><a href="#[9b5e968]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_allocate_cluster
<LI><a href="#[9b5ebcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_read_fat_table
<LI><a href="#[9b5ea60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_write_fat_table
</UL><BR>[Address Reference Count : 1]<UL><LI> WBFAT_FOP.o(.data)
</UL><P><STRONG><a name="[9b6408c]"></a>__fwrite</STRONG> (ARM, 1292 bytes, Stack size 80 bytes, WBFAT_FOP.o(i.__fwrite))
<BR><BR>[Calls]<UL><LI><a href="#[9b61570]">&gt&gt</a>&nbsp;&nbsp;&nbsp;alloc_rw_buff
<LI><a href="#[9b5e808]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_srdv
<LI><a href="#[9b5ebcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_read_fat_table
<LI><a href="#[9b5e968]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_allocate_cluster
<LI><a href="#[765d64c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsIOWrite
<LI><a href="#[765d568]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsIORead
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9b5e798]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[9b64168]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fopen
</UL><BR>[Address Reference Count : 1]<UL><LI> WBFAT_FOP.o(.data)
</UL><P><STRONG><a name="[53581b8]"></a>__lcmFillBuffer</STRONG> (ARM, 92 bytes, Stack size 48 bytes, vp_lcm.o(i.__lcmFillBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[537ef34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vgfxLock
<LI><a href="#[537dcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gfxSetDestSurface
<LI><a href="#[5355708]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gfxFillSolidRect
<LI><a href="#[537ee48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vgfxWaitEngineReady
<LI><a href="#[537edd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vgfxUnlock
</UL><BR>[Called By]<UL><LI><a href="#[5355c60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmFillLCMBuffer
<LI><a href="#[5355b24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vlcmFillOSDBuffer
</UL><P><STRONG><a name="[75802c8]"></a>__pllEvalPLLCON</STRONG> (ARM, 148 bytes, Stack size 64 bytes, pll.o(i.__pllEvalPLLCON))
<BR><BR>[Calls]<UL><LI><a href="#[7580054]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pllTry
</UL><BR>[Called By]<UL><LI><a href="#[4d84510]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pllEvalPLLCON
</UL><P><STRONG><a name="[734df90]"></a>__pwr_delay</STRONG> (ARM, 24 bytes, Stack size 0 bytes, ecos_power.o(i.__pwr_delay))
<BR>[Called By]<UL><LI><a href="#[734d780]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pwr_system_power_saving
</UL><P><STRONG><a name="[7561350]"></a>__vauRecord_ALAW_OR_ULAW</STRONG> (ARM, 228 bytes, Stack size 48 bytes, vp_audio.o(i.__vauRecord_ALAW_OR_ULAW))
<BR><BR>[Calls]<UL><LI><a href="#[755f164]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufEncAudioNew
<LI><a href="#[755e2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;EncodeLAW
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7560bc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vauRecord_AttachBuffer
</UL><BR>[Called By]<UL><LI><a href="#[75620ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnRecord
</UL><P><STRONG><a name="[756144c]"></a>__vauRecord_AMR_or_PCM</STRONG> (ARM, 128 bytes, Stack size 24 bytes, vp_audio.o(i.__vauRecord_AMR_or_PCM))
<BR><BR>[Calls]<UL><LI><a href="#[755f164]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufEncAudioNew
<LI><a href="#[755e3b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;amrEncode
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[7560bc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vauRecord_AttachBuffer
</UL><BR>[Called By]<UL><LI><a href="#[75620ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnRecord
</UL><P><STRONG><a name="[7560bc8]"></a>__vauRecord_AttachBuffer</STRONG> (ARM, 76 bytes, Stack size 8 bytes, vp_audio.o(i.__vauRecord_AttachBuffer))
<BR><BR>[Calls]<UL><LI><a href="#[7560048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauLock
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4efdcf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listAttach
<LI><a href="#[75600b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauUnlock
<LI><a href="#[755e24c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;iothread_EventNotify
</UL><BR>[Called By]<UL><LI><a href="#[7561350]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauRecord_ALAW_OR_ULAW
<LI><a href="#[756144c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauRecord_AMR_or_PCM
<LI><a href="#[75613d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vauRecord_IMA_ADPCM
</UL><P><STRONG><a name="[75613d0]"></a>__vauRecord_IMA_ADPCM</STRONG> (ARM, 200 bytes, Stack size 40 bytes, vp_audio.o(i.__vauRecord_IMA_ADPCM))
<BR><BR>[Calls]<UL><LI><a href="#[755f164]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufEncAudioNew
<LI><a href="#[755f1d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;imaadpcmSamplePerBlock
<LI><a href="#[755e338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;imaadpcmBlockEnc
<LI><a href="#[7560bc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vauRecord_AttachBuffer
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[75620ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnRecord
</UL><P><STRONG><a name="[75663a4]"></a>__vauThread_OnWaitFrame</STRONG> (ARM, 4 bytes, Stack size 0 bytes, vp_audio.o(i.__vauThread_OnWaitFrame))
<BR><BR>[Calls]<UL><LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><BR>[Address Reference Count : 2]<UL><LI> vp_audio.o(i.vauStartPlay)
<LI> vp_audio.o(i.vauStartRecord)
</UL><P><STRONG><a name="[545e690]"></a>__vcptEnable</STRONG> (ARM, 304 bytes, Stack size 112 bytes, vp_thread_capture.o(i.__vcptEnable))
<BR><BR>[Calls]<UL><LI><a href="#[545b3b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptGetYSize
<LI><a href="#[545b340]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptGetUVSize
<LI><a href="#[5456cd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capInitialWaitInt
<LI><a href="#[5456c5c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capImageTransform
<LI><a href="#[545da20]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptSetSourceRotate
</UL><BR>[Called By]<UL><LI><a href="#[545a790]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_vcptSensorInit
<LI><a href="#[5457754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStop
</UL><P><STRONG><a name="[545ed38]"></a>__vcptThread_OnWaitFrame</STRONG> (ARM, 4 bytes, Stack size 0 bytes, vp_thread_capture.o(i.__vcptThread_OnWaitFrame))
<BR><BR>[Calls]<UL><LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_thread_capture.o(i.vcptWaitPrevMsg)
</UL><P><STRONG><a name="[5380228]"></a>__vdRefreshLcm</STRONG> (ARM, 304 bytes, Stack size 48 bytes, vp_video.o(i.__vdRefreshLcm))
<BR><BR>[Calls]<UL><LI><a href="#[537de14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmTryLock
<LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[537ef34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vgfxLock
<LI><a href="#[537dd9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gfxSetSrcSurface
<LI><a href="#[537dd24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmGetLCMBuffer
<LI><a href="#[537dcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gfxSetDestSurface
<LI><a href="#[537dc3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gfxPutImage
<LI><a href="#[537ee48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vgfxWaitEngineReady
<LI><a href="#[537edd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vgfxUnlock
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
<LI><a href="#[537dbc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmStartRefresh
<LI><a href="#[537db54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmUnlock
</UL><BR>[Called By]<UL><LI><a href="#[53c3828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnRefreshLcm
</UL><P><STRONG><a name="[88a3780]"></a>_delfile</STRONG> (ARM, 8 bytes, Stack size 0 bytes, WBFAT_LDISK.o(i._delfile))
<BR><BR>[Calls]<UL><LI><a href="#[889f5cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_delete_file
</UL><BR>[Address Reference Count : 1]<UL><LI> WBFAT_LDISK.o(.data)
</UL><P><STRONG><a name="[4f2b04c]"></a>_mcuRecv</STRONG> (ARM, 364 bytes, Stack size 40 bytes, MCU.o(i._mcuRecv))
<BR><BR>[Calls]<UL><LI><a href="#[4bba444]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hi_uart_read
<LI><a href="#[4f2a058]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_mcuSendCommand_Error
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4f2979c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcuReportError
<LI><a href="#[4f292a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledClearError
</UL><BR>[Called By]<UL><LI><a href="#[4eaa53c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuSendCommand
<LI><a href="#[4f2955c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuSendCommand_NoResponse
<LI><a href="#[4f2ad58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;prdTask_ReadMCU
</UL><P><STRONG><a name="[4f2afdc]"></a>_mcuSend</STRONG> (ARM, 116 bytes, Stack size 24 bytes, MCU.o(i._mcuSend))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4f2979c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcuReportError
<LI><a href="#[4f2a058]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_mcuSendCommand_Error
<LI><a href="#[4bba5fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hi_uart_write
</UL><BR>[Called By]<UL><LI><a href="#[4eaa53c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuSendCommand
<LI><a href="#[4f2955c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuSendCommand_NoResponse
</UL><P><STRONG><a name="[4f2a058]"></a>_mcuSendCommand_Error</STRONG> (ARM, 172 bytes, Stack size 32 bytes, MCU.o(i._mcuSendCommand_Error))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4f2979c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcuReportError
<LI><a href="#[4a54f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledError
</UL><BR>[Called By]<UL><LI><a href="#[4f2b04c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_mcuRecv
<LI><a href="#[4f2afdc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_mcuSend
</UL><P><STRONG><a name="[88a3714]"></a>_mkdir</STRONG> (ARM, 128 bytes, Stack size 16 bytes, WBFAT_LDISK.o(i._mkdir))
<BR><BR>[Calls]<UL><LI><a href="#[9baf2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsOpenFile
<LI><a href="#[9baf3ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsCloseFile
<LI><a href="#[765d82c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_flush_iow_cache
</UL><BR>[Address Reference Count : 1]<UL><LI> WBFAT_LDISK.o(.data)
</UL><P><STRONG><a name="[88a363c]"></a>_move</STRONG> (ARM, 40 bytes, Stack size 16 bytes, WBFAT_LDISK.o(i._move))
<BR><BR>[Calls]<UL><LI><a href="#[889f2f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
</UL><BR>[Address Reference Count : 1]<UL><LI> WBFAT_LDISK.o(.data)
</UL><P><STRONG><a name="[88a36a8]"></a>_rmdir</STRONG> (ARM, 8 bytes, Stack size 0 bytes, WBFAT_LDISK.o(i._rmdir))
<BR><BR>[Calls]<UL><LI><a href="#[889f5cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_delete_file
</UL><BR>[Address Reference Count : 1]<UL><LI> WBFAT_LDISK.o(.data)
</UL><P><STRONG><a name="[545a790]"></a>_vcptSensorInit</STRONG> (ARM, 240 bytes, Stack size 48 bytes, vp_thread_capture.o(i._vcptSensorInit))
<BR><BR>[Calls]<UL><LI><a href="#[5456af8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dspSetSensorInit
<LI><a href="#[5456a80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dspInitialization
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[5457498]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptSetContrastBright
<LI><a href="#[5457588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptSetFrequency
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[54576e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capInit
<LI><a href="#[5457678]">&gt&gt</a>&nbsp;&nbsp;&nbsp;capClkRatio
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[545e690]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vcptEnable
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
</UL><BR>[Called By]<UL><LI><a href="#[545dd10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptSensorInit
</UL><P><STRONG><a name="[88a35c8]"></a>_volume_label</STRONG> (ARM, 8 bytes, Stack size 0 bytes, WBFAT_LDISK.o(i._volume_label))
<BR>[Address Reference Count : 1]<UL><LI> WBFAT_LDISK.o(.data)
</UL><P><STRONG><a name="[796dadc]"></a>_wpa_alloc_eapol</STRONG> (ARM, 40 bytes, Stack size 16 bytes, wpa_supplicant.o(i._wpa_alloc_eapol))
<BR><BR>[Calls]<UL><LI><a href="#[796d5fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_alloc_eapol
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_wpa)
</UL><P><STRONG><a name="[796dbd8]"></a>_wpa_ether_send</STRONG> (ARM, 28 bytes, Stack size 8 bytes, wpa_supplicant.o(i._wpa_ether_send))
<BR><BR>[Calls]<UL><LI><a href="#[796d588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_ether_send
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_wpa)
</UL><P><STRONG><a name="[9c0c48c]"></a>_wpa_hexdump</STRONG> (ARM, 136 bytes, Stack size 24 bytes, common.o(i._wpa_hexdump))
<BR><BR>[Calls]<UL><LI><a href="#[9c0a39c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_debug_print_timestamp
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[7968118]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[9c5c9e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_key
</UL><P><STRONG><a name="[9c0c004]"></a>_wpa_hexdump_ascii</STRONG> (ARM, 336 bytes, Stack size 40 bytes, common.o(i._wpa_hexdump_ascii))
<BR><BR>[Calls]<UL><LI><a href="#[9c0a39c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_debug_print_timestamp
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[79d85c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isprint
</UL><BR>[Called By]<UL><LI><a href="#[7968b60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_ascii
<LI><a href="#[9c5cb38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_ascii_key
</UL><P><STRONG><a name="[9c0b354]"></a>_wpa_snprintf_hex</STRONG> (ARM, 144 bytes, Stack size 56 bytes, common.o(i._wpa_snprintf_hex))
<BR><BR>[Calls]<UL><LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
</UL><BR>[Called By]<UL><LI><a href="#[9c5c520]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_snprintf_hex
</UL><P><STRONG><a name="[796da54]"></a>_wpa_supplicant_cancel_auth_timeout</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wpa_supplicant.o(i._wpa_supplicant_cancel_auth_timeout))
<BR><BR>[Calls]<UL><LI><a href="#[7968dd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_auth_timeout
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_wpa)
</UL><P><STRONG><a name="[796de4c]"></a>_wpa_supplicant_deauthenticate</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wpa_supplicant.o(i._wpa_supplicant_deauthenticate))
<BR><BR>[Calls]<UL><LI><a href="#[7968388]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deauthenticate
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_wpa)
</UL><P><STRONG><a name="[796ddc8]"></a>_wpa_supplicant_disassociate</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wpa_supplicant.o(i._wpa_supplicant_disassociate))
<BR><BR>[Calls]<UL><LI><a href="#[7968a64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_disassociate
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_wpa)
</UL><P><STRONG><a name="[796dccc]"></a>_wpa_supplicant_get_ssid</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wpa_supplicant.o(i._wpa_supplicant_get_ssid))
<BR><BR>[Calls]<UL><LI><a href="#[7968c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_ssid
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_wpa)
</UL><P><STRONG><a name="[796df50]"></a>_wpa_supplicant_get_state</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wpa_supplicant.o(i._wpa_supplicant_get_state))
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_wpa)
</UL><P><STRONG><a name="[796ded0]"></a>_wpa_supplicant_req_scan</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wpa_supplicant.o(i._wpa_supplicant_req_scan))
<BR><BR>[Calls]<UL><LI><a href="#[7968ae4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_wpa)
</UL><P><STRONG><a name="[796dfd0]"></a>_wpa_supplicant_set_state</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wpa_supplicant.o(i._wpa_supplicant_set_state))
<BR><BR>[Calls]<UL><LI><a href="#[7969b0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_wpa)
</UL><P><STRONG><a name="[5927c58]"></a>add_config</STRONG> (ARM, 104 bytes, Stack size 16 bytes, rtspserver.o(i.add_config))
<BR><BR>[Calls]<UL><LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Called By]<UL><LI><a href="#[5924774]">&lt&lt</a>&nbsp;&nbsp;&nbsp;RtspThreadRun
</UL><P><STRONG><a name="[80357e0]"></a>add_to_list</STRONG> (ARM, 56 bytes, Stack size 0 bytes, event.o(i.add_to_list))
<BR>[Called By]<UL><LI><a href="#[8034904]">&lt&lt</a>&nbsp;&nbsp;&nbsp;locked_get_next_event
<LI><a href="#[8031f80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_soft_queue
<LI><a href="#[8031d38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soft_queue_add
</UL><P><STRONG><a name="[78ba170]"></a>adda_get_sampling_rate</STRONG> (ARM, 116 bytes, Stack size 0 bytes, W99702_ADDA.o(i.adda_get_sampling_rate))
<BR>[Called By]<UL><LI><a href="#[736539c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;adcSetRecordVolume
<LI><a href="#[73656e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;adcStartRecord
<LI><a href="#[73659a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dacStartPlay
</UL><P><STRONG><a name="[78b9cf0]"></a>adda_init</STRONG> (ARM, 176 bytes, Stack size 8 bytes, W99702_ADDA.o(i.adda_init))
<BR><BR>[Calls]<UL><LI><a href="#[78b9468]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Delay
</UL><BR>[Called By]<UL><LI><a href="#[73656e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;adcStartRecord
<LI><a href="#[73659a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dacStartPlay
</UL><P><STRONG><a name="[9b61570]"></a>alloc_rw_buff</STRONG> (ARM, 96 bytes, Stack size 8 bytes, WBFAT_FOP.o(i.alloc_rw_buff))
<BR><BR>[Calls]<UL><LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Called By]<UL><LI><a href="#[9b640fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fread
<LI><a href="#[9b6408c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fwrite
</UL><P><STRONG><a name="[9b81430]"></a>allocate_drive_number</STRONG> (ARM, 296 bytes, Stack size 32 bytes, WBFAT_DISK.o(i.allocate_drive_number))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[722374c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiGetpDisk
</UL><BR>[Called By]<UL><LI><a href="#[9b80034]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsAllocateDisk
</UL><P><STRONG><a name="[7566b1c]"></a>auSplitter_DelData</STRONG> (ARM, 56 bytes, Stack size 16 bytes, vp_audio.o(i.auSplitter_DelData))
<BR><BR>[Calls]<UL><LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL><BR>[Called By]<UL><LI><a href="#[755fc10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauDecode
<LI><a href="#[7566b94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnPlay
</UL><P><STRONG><a name="[7562580]"></a>auSplitter_GetFrame</STRONG> (ARM, 180 bytes, Stack size 48 bytes, vp_audio.o(i.auSplitter_GetFrame))
<BR><BR>[Calls]<UL><LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
</UL><BR>[Called By]<UL><LI><a href="#[7566b94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauThread_OnPlay
</UL><P><STRONG><a name="[5a683cc]"></a>base64BufferSize</STRONG> (ARM, 44 bytes, Stack size 8 bytes, libmail.o(i.base64BufferSize))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
</UL><BR>[Called By]<UL><LI><a href="#[5a67d20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;createMailData
<LI><a href="#[5a64c88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;encodeBase64
<LI><a href="#[5a680ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailLogin
</UL><P><STRONG><a name="[5a66654]"></a>buildTime</STRONG> (ARM, 196 bytes, Stack size 96 bytes, libmail.o(i.buildTime))
<BR><BR>[Calls]<UL><LI><a href="#[4e4a244]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetCheckedTime
<LI><a href="#[544d544]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gmtime_r
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Called By]<UL><LI><a href="#[5a67d20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;createMailData
</UL><P><STRONG><a name="[8e927e0]"></a>build_code</STRONG> (ARM, 868 bytes, Stack size 48 bytes, c4_17pf.o(i.build_code))
<BR><BR>[Calls]<UL><LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Called By]<UL><LI><a href="#[8d58568]">&lt&lt</a>&nbsp;&nbsp;&nbsp;code_4i40_17bits
</UL><P><STRONG><a name="[88a0ffc]"></a>build_ldir_entry</STRONG> (ARM, 224 bytes, Stack size 32 bytes, WBFAT_LDISK.o(i.build_ldir_entry))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4ced1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memset
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
</UL><P><STRONG><a name="[72ef418]"></a>callRestDSR</STRONG> (ARM, 148 bytes, Stack size 16 bytes, vp_usb.o(i.callRestDSR))
<BR><BR>[Calls]<UL><LI><a href="#[72f2704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;copy_mem_to_usb
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
</UL><BR>[Called By]<UL><LI><a href="#[72f1f1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbread
</UL><P><STRONG><a name="[88a17f8]"></a>check_dir_empty</STRONG> (ARM, 280 bytes, Stack size 56 bytes, WBFAT_LDISK.o(i.check_dir_empty))
<BR><BR>[Calls]<UL><LI><a href="#[9baee50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsGetFilePosition
<LI><a href="#[9baf108]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsFileSeek
<LI><a href="#[9baf258]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsReadFile
</UL><BR>[Called By]<UL><LI><a href="#[889f5cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_delete_file
</UL><P><STRONG><a name="[88f5948]"></a>check_out_fat_sector</STRONG> (ARM, 784 bytes, Stack size 64 bytes, WBFAT_SECTOR_CACHE.o(i.check_out_fat_sector))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4a0359c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_self
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[765d568]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsIORead
</UL><BR>[Called By]<UL><LI><a href="#[9b5eb50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_check_out_sec
</UL><P><STRONG><a name="[7a3b3ac]"></a>checkip</STRONG> (ARM, 96 bytes, Stack size 40 bytes, upnp.o(i.checkip))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
</UL><BR>[Called By]<UL><LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[7976ac8]"></a>cipher_suite2driver</STRONG> (ARM, 72 bytes, Stack size 0 bytes, wpa_supplicant.o(i.cipher_suite2driver))
<BR>[Called By]<UL><LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
</UL><P><STRONG><a name="[4dd624c]"></a>clr_flag</STRONG> (ARM, 176 bytes, Stack size 48 bytes, System.o(i.clr_flag))
<BR><BR>[Calls]<UL><LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
</UL><BR>[Called By]<UL><LI><a href="#[4e4db00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InitNetInterface
</UL><P><STRONG><a name="[8163cf8]"></a>convert_uyvy_to_rgb24</STRONG> (ARM, 120 bytes, Stack size 16 bytes, stream.o(i.convert_uyvy_to_rgb24))
<BR><BR>[Calls]<UL><LI><a href="#[780fc3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_frame
<LI><a href="#[816281c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;uyvy2rgb
<LI><a href="#[7ff7e40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;unref_frame
<LI><a href="#[780fb4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;deliver_frame_to_stream
</UL><BR>[Address Reference Count : 1]<UL><LI> stream.o(i.connect_to_stream)
</UL><P><STRONG><a name="[72f2704]"></a>copy_mem_to_usb</STRONG> (ARM, 124 bytes, Stack size 24 bytes, vp_usb.o(i.copy_mem_to_usb))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[72ef418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;callRestDSR
<LI><a href="#[72ed200]">&lt&lt</a>&nbsp;&nbsp;&nbsp;usbHandlerDSR
</UL><P><STRONG><a name="[5a67d20]"></a>createMailData</STRONG> (ARM, 780 bytes, Stack size 664 bytes, libmail.o(i.createMailData))
<BR><BR>[Calls]<UL><LI><a href="#[5a66654]">&gt&gt</a>&nbsp;&nbsp;&nbsp;buildTime
<LI><a href="#[5a665e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;encodeSubject
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[5a683cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;base64BufferSize
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[5a64c88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;encodeBase64
</UL><BR>[Called By]<UL><LI><a href="#[59509ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;createMail
</UL><P><STRONG><a name="[73197a8]"></a>create_listen_socket</STRONG> (ARM, 380 bytes, Stack size 64 bytes, boa.o(i.create_listen_socket))
<BR><BR>[Calls]<UL><LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4ced344]">&gt&gt</a>&nbsp;&nbsp;&nbsp;setsockopt
<LI><a href="#[4ced118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bind
<LI><a href="#[7317a3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getsockname
<LI><a href="#[4cece7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_ntoa
<LI><a href="#[73179d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listen
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[73180f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpdStartEx3
</UL><P><STRONG><a name="[784465c]"></a>create_nonce</STRONG> (ARM, 208 bytes, Stack size 48 bytes, http-auth.o(i.create_nonce))
<BR><BR>[Calls]<UL><LI><a href="#[78437f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;random_id
<LI><a href="#[78448dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[784377c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;random_bytes
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[784492c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;md5_hash
</UL><BR>[Called By]<UL><LI><a href="#[7843a24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_digest_challenge
</UL><P><STRONG><a name="[9b5f3e0]"></a>creation_time_compare</STRONG> (ARM, 140 bytes, Stack size 0 bytes, WBFAT_FOP.o(i.creation_time_compare))
<BR>[Called By]<UL><LI><a href="#[9b600e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_fileEx
</UL><P><STRONG><a name="[544e3e4]"></a>cyg_libc_time_year_is_leap</STRONG> (ARM, 72 bytes, Stack size 16 bytes, vp_info.o(i.cyg_libc_time_year_is_leap))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[821ccd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gmtime_r
<LI><a href="#[544d628]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mktime
</UL><P><STRONG><a name="[8d7d890]"></a>decompress10</STRONG> (ARM, 152 bytes, Stack size 20 bytes, d8_31pf.o(i.decompress10))
<BR>[Called By]<UL><LI><a href="#[8cd68b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;dec_8i40_31bits
</UL><P><STRONG><a name="[5a68004]"></a>deleteSplitString</STRONG> (ARM, 84 bytes, Stack size 16 bytes, libmail.o(i.deleteSplitString))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[5950b40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pushMail
</UL><P><STRONG><a name="[80d0784]"></a>delim</STRONG> (ARM, 56 bytes, Stack size 4 bytes, pmsg.o(i.delim))
<BR>[Called By]<UL><LI><a href="#[80cf474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_pmsg
</UL><P><STRONG><a name="[8180324]"></a>do_accept</STRONG> (ARM, 624 bytes, Stack size 56 bytes, tcp.o(i.do_accept))
<BR><BR>[Calls]<UL><LI><a href="#[50a2590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;accept
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[4cece7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_ntoa
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[817fc18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_rtsp_mem
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[77e75d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_fd_event
<LI><a href="#[77e74e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_event_enabled
<LI><a href="#[4ced344]">&gt&gt</a>&nbsp;&nbsp;&nbsp;setsockopt
</UL><BR>[Address Reference Count : 1]<UL><LI> tcp.o(i.tcp_listen)
</UL><P><STRONG><a name="[8aae438]"></a>eap_deinit_prev_method</STRONG> (ARM, 88 bytes, Stack size 16 bytes, eap.o(i.eap_deinit_prev_method))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[847a068]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_invalidate_cached_session
<LI><a href="#[8479f84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_deinit
<LI><a href="#[8ac8d0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_GET_METHOD_Enter
<LI><a href="#[8ac9160]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_INITIALIZE_Enter
</UL><P><STRONG><a name="[8ac79dc]"></a>eap_sm_buildNak</STRONG> (ARM, 360 bytes, Stack size 48 bytes, eap.o(i.eap_sm_buildNak))
<BR><BR>[Calls]<UL><LI><a href="#[8ac5fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_get_config
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[83c2a14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_peer_get_methods
<LI><a href="#[8ac6464]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_sm_build_expanded_nak
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[9c5c878]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_allowed_eap_method
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[8aaeb34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__bswap_16
</UL><BR>[Called By]<UL><LI><a href="#[8ac8d0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_GET_METHOD_Enter
</UL><P><STRONG><a name="[8ac6464]"></a>eap_sm_build_expanded_nak</STRONG> (ARM, 396 bytes, Stack size 40 bytes, eap.o(i.eap_sm_build_expanded_nak))
<BR><BR>[Calls]<UL><LI><a href="#[8ac5fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_get_config
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[9c5c878]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_allowed_eap_method
<LI><a href="#[8aaeb34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__bswap_16
</UL><BR>[Called By]<UL><LI><a href="#[8ac79dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_buildNak
</UL><P><STRONG><a name="[8aadecc]"></a>eap_sm_decision_txt</STRONG> (ARM, 40 bytes, Stack size 0 bytes, eap.o(i.eap_sm_decision_txt))
<BR>[Called By]<UL><LI><a href="#[8ac8c94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_METHOD_Enter
</UL><P><STRONG><a name="[8aade50]"></a>eap_sm_method_state_txt</STRONG> (ARM, 80 bytes, Stack size 0 bytes, eap.o(i.eap_sm_method_state_txt))
<BR>[Called By]<UL><LI><a href="#[8ac8c94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_METHOD_Enter
</UL><P><STRONG><a name="[8ac906c]"></a>eap_sm_parseEapReq</STRONG> (ARM, 452 bytes, Stack size 40 bytes, eap.o(i.eap_sm_parseEapReq))
<BR><BR>[Calls]<UL><LI><a href="#[8aaeb34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__bswap_16
<LI><a href="#[89f677c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;md5_vector
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
</UL><P><STRONG><a name="[8ac6f18]"></a>eap_sm_processNotify</STRONG> (ARM, 156 bytes, Stack size 32 bytes, eap.o(i.eap_sm_processNotify))
<BR><BR>[Calls]<UL><LI><a href="#[8aaeb34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__bswap_16
<LI><a href="#[7968b60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_ascii
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[79d85c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;isprint
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[8ac8e04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_NOTIFICATION_Enter
</UL><P><STRONG><a name="[8aaed90]"></a>eap_sm_request</STRONG> (ARM, 476 bytes, Stack size 48 bytes, eap.o(i.eap_sm_request))
<BR><BR>[Calls]<UL><LI><a href="#[8ac5fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_get_config
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
</UL><BR>[Called By]<UL><LI><a href="#[8ac5f44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_request_identity
</UL><P><STRONG><a name="[8ac8f7c]"></a>eap_success_workaround</STRONG> (ARM, 100 bytes, Stack size 8 bytes, eap.o(i.eap_success_workaround))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
</UL><P><STRONG><a name="[8aab858]"></a>eapol_get_bool</STRONG> (ARM, 20 bytes, Stack size 0 bytes, eap.o(i.eapol_get_bool))
<BR>[Called By]<UL><LI><a href="#[847a724]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_notify_lower_layer_success
<LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
</UL><P><STRONG><a name="[8ac90e4]"></a>eapol_get_eapReqData</STRONG> (ARM, 20 bytes, Stack size 0 bytes, eap.o(i.eapol_get_eapReqData))
<BR>[Called By]<UL><LI><a href="#[8ac8d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_IDENTITY_Enter
<LI><a href="#[8ac8c94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_METHOD_Enter
<LI><a href="#[8ac8e04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_NOTIFICATION_Enter
<LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
</UL><P><STRONG><a name="[8ac8ff8]"></a>eapol_get_int</STRONG> (ARM, 20 bytes, Stack size 0 bytes, eap.o(i.eapol_get_int))
<BR>[Called By]<UL><LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
</UL><P><STRONG><a name="[83f1b9c]"></a>eapol_port_control</STRONG> (ARM, 40 bytes, Stack size 0 bytes, eapol_sm.o(i.eapol_port_control))
<BR>[Called By]<UL><LI><a href="#[796989c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portControl
</UL><P><STRONG><a name="[83ee29c]"></a>eapol_port_timers_tick</STRONG> (ARM, 176 bytes, Stack size 16 bytes, eapol_sm.o(i.eapol_port_timers_tick))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[79696a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
<LI><a href="#[847a6b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_step
</UL><BR>[Address Reference Count : 3]<UL><LI> eapol_sm.o(i.eapol_port_timers_tick)
<LI> eapol_sm.o(i.eapol_sm_deinit)
<LI> eapol_sm.o(i.eapol_sm_init)
</UL><P><STRONG><a name="[8aae6b8]"></a>eapol_set_bool</STRONG> (ARM, 20 bytes, Stack size 0 bytes, eap.o(i.eapol_set_bool))
<BR>[Called By]<UL><LI><a href="#[847a724]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_notify_lower_layer_success
<LI><a href="#[8479f10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_abort
<LI><a href="#[8ac8c18]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_DISCARD_Enter
<LI><a href="#[8ac8e84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_FAILURE_Enter
<LI><a href="#[8ac9160]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_INITIALIZE_Enter
<LI><a href="#[8ac8b20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_SEND_RESPONSE_Enter
<LI><a href="#[8ac8f00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_SUCCESS_Enter
</UL><P><STRONG><a name="[8ac8074]"></a>eapol_set_int</STRONG> (ARM, 20 bytes, Stack size 0 bytes, eap.o(i.eapol_set_int))
<BR>[Called By]<UL><LI><a href="#[8ac9160]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_INITIALIZE_Enter
<LI><a href="#[8ac8b20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_SEND_RESPONSE_Enter
</UL><P><STRONG><a name="[83f6c4c]"></a>eapol_sm_get_bool</STRONG> (ARM, 136 bytes, Stack size 0 bytes, eapol_sm.o(i.eapol_sm_get_bool))
<BR>[Address Reference Count : 1]<UL><LI> eapol_sm.o(.data)
</UL><P><STRONG><a name="[83f6cc4]"></a>eapol_sm_get_config</STRONG> (ARM, 12 bytes, Stack size 0 bytes, eapol_sm.o(i.eapol_sm_get_config))
<BR>[Address Reference Count : 1]<UL><LI> eapol_sm.o(.data)
</UL><P><STRONG><a name="[83f6968]"></a>eapol_sm_get_config_blob</STRONG> (ARM, 36 bytes, Stack size 0 bytes, eapol_sm.o(i.eapol_sm_get_config_blob))
<BR>[Address Reference Count : 1]<UL><LI> eapol_sm.o(.data)
</UL><P><STRONG><a name="[83f6a68]"></a>eapol_sm_get_eapReqData</STRONG> (ARM, 36 bytes, Stack size 0 bytes, eapol_sm.o(i.eapol_sm_get_eapReqData))
<BR>[Address Reference Count : 1]<UL><LI> eapol_sm.o(.data)
</UL><P><STRONG><a name="[83f6b5c]"></a>eapol_sm_get_int</STRONG> (ARM, 28 bytes, Stack size 0 bytes, eapol_sm.o(i.eapol_sm_get_int))
<BR>[Address Reference Count : 1]<UL><LI> eapol_sm.o(.data)
</UL><P><STRONG><a name="[83f68ec]"></a>eapol_sm_notify_pending</STRONG> (ARM, 68 bytes, Stack size 8 bytes, eapol_sm.o(i.eapol_sm_notify_pending))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[847a6b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_step
</UL><BR>[Address Reference Count : 1]<UL><LI> eapol_sm.o(.data)
</UL><P><STRONG><a name="[83ed500]"></a>eapol_sm_processKey</STRONG> (ARM, 976 bytes, Stack size 216 bytes, eapol_sm.o(i.eapol_sm_processKey))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[83f171c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__bswap_16
<LI><a href="#[9cf6dc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_lower_layer_success
<LI><a href="#[9cf65d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_get_key
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[9cf67ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hmac_md5
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[8479e30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rc4
<LI><a href="#[9c5c9e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_key
</UL><BR>[Called By]<UL><LI><a href="#[83f211c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_KEY_RX_KEY_RECEIVE_Enter
</UL><P><STRONG><a name="[83f6bd4]"></a>eapol_sm_set_bool</STRONG> (ARM, 128 bytes, Stack size 0 bytes, eapol_sm.o(i.eapol_sm_set_bool))
<BR>[Address Reference Count : 1]<UL><LI> eapol_sm.o(.data)
</UL><P><STRONG><a name="[83f69e8]"></a>eapol_sm_set_config_blob</STRONG> (ARM, 32 bytes, Stack size 0 bytes, eapol_sm.o(i.eapol_sm_set_config_blob))
<BR>[Address Reference Count : 1]<UL><LI> eapol_sm.o(.data)
</UL><P><STRONG><a name="[83f6ae4]"></a>eapol_sm_set_int</STRONG> (ARM, 20 bytes, Stack size 0 bytes, eapol_sm.o(i.eapol_sm_set_int))
<BR>[Address Reference Count : 1]<UL><LI> eapol_sm.o(.data)
</UL><P><STRONG><a name="[83f202c]"></a>eapol_sm_step_timeout</STRONG> (ARM, 8 bytes, Stack size 0 bytes, eapol_sm.o(i.eapol_sm_step_timeout))
<BR><BR>[Calls]<UL><LI><a href="#[847a6b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_step
</UL><BR>[Address Reference Count : 2]<UL><LI> eapol_sm.o(i.eapol_sm_deinit)
<LI> eapol_sm.o(i.eapol_sm_step)
</UL><P><STRONG><a name="[83ed078]"></a>eapol_sm_txLogoff</STRONG> (ARM, 76 bytes, Stack size 8 bytes, eapol_sm.o(i.eapol_sm_txLogoff))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[83f219c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_Step
</UL><P><STRONG><a name="[83ef9a4]"></a>eapol_sm_txStart</STRONG> (ARM, 76 bytes, Stack size 8 bytes, eapol_sm.o(i.eapol_sm_txStart))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[8354880]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_request_reauth
<LI><a href="#[83ecef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_CONNECTING_Enter
</UL><P><STRONG><a name="[83eda04]"></a>eapol_sm_txSuppRsp</STRONG> (ARM, 148 bytes, Stack size 16 bytes, eapol_sm.o(i.eapol_sm_txSuppRsp))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[8479e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_get_eapRespData
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[83f20a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_Step
</UL><P><STRONG><a name="[9be6e98]"></a>eloop_get_sock_table</STRONG> (ARM, 44 bytes, Stack size 0 bytes, eloop.o(i.eloop_get_sock_table))
<BR>[Called By]<UL><LI><a href="#[9be38d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_register_sock
<LI><a href="#[9be37d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_unregister_read_sock
</UL><P><STRONG><a name="[9be3d7c]"></a>eloop_handle_alarm</STRONG> (ARM, 32 bytes, Stack size 8 bytes, eloop.o(i.eloop_handle_alarm))
<BR><BR>[Calls]<UL><LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4e4a4f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;exit
</UL><BR>[Address Reference Count : 1]<UL><LI> eloop.o(i.eloop_handle_signal)
</UL><P><STRONG><a name="[9be60c4]"></a>eloop_handle_signal</STRONG> (ARM, 140 bytes, Stack size 16 bytes, eloop.o(i.eloop_handle_signal))
<BR><BR>[Calls]<UL><LI><a href="#[9be36ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;signal
<LI><a href="#[5007780]">&gt&gt</a>&nbsp;&nbsp;&nbsp;alarm
</UL><BR>[Address Reference Count : 1]<UL><LI> eloop.o(i.eloop_register_signal)
</UL><P><STRONG><a name="[9be5990]"></a>eloop_process_pending_signals</STRONG> (ARM, 136 bytes, Stack size 16 bytes, eloop.o(i.eloop_process_pending_signals))
<BR><BR>[Calls]<UL><LI><a href="#[5007780]">&gt&gt</a>&nbsp;&nbsp;&nbsp;alarm
</UL><BR>[Called By]<UL><LI><a href="#[7967508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_run
</UL><P><STRONG><a name="[9be6e18]"></a>eloop_sock_table_add_sock</STRONG> (ARM, 172 bytes, Stack size 24 bytes, eloop.o(i.eloop_sock_table_add_sock))
<BR><BR>[Calls]<UL><LI><a href="#[7404e10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[9be38d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_register_sock
</UL><P><STRONG><a name="[9be5484]"></a>eloop_sock_table_destroy</STRONG> (ARM, 16 bytes, Stack size 0 bytes, eloop.o(i.eloop_sock_table_destroy))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[7967bcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_destroy
</UL><P><STRONG><a name="[9be5910]"></a>eloop_sock_table_dispatch</STRONG> (ARM, 124 bytes, Stack size 24 bytes, eloop.o(i.eloop_sock_table_dispatch))
<BR>[Called By]<UL><LI><a href="#[7967508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_run
</UL><P><STRONG><a name="[9be6978]"></a>eloop_sock_table_remove_sock</STRONG> (ARM, 124 bytes, Stack size 8 bytes, eloop.o(i.eloop_sock_table_remove_sock))
<BR><BR>[Calls]<UL><LI><a href="#[7c38514]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
</UL><BR>[Called By]<UL><LI><a href="#[9be37d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_unregister_read_sock
</UL><P><STRONG><a name="[9be5a14]"></a>eloop_sock_table_set_fds</STRONG> (ARM, 112 bytes, Stack size 8 bytes, eloop.o(i.eloop_sock_table_set_fds))
<BR>[Called By]<UL><LI><a href="#[7967508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eloop_run
</UL><P><STRONG><a name="[5a665e0]"></a>encodeSubject</STRONG> (ARM, 324 bytes, Stack size 48 bytes, libmail.o(i.encodeSubject))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[5a64c88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;encodeBase64
</UL><BR>[Called By]<UL><LI><a href="#[5a67d20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;createMailData
</UL><P><STRONG><a name="[7810fa0]"></a>end_block</STRONG> (ARM, 376 bytes, Stack size 32 bytes, input-v4l.o(i.end_block))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[780fcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_exchanger
<LI><a href="#[780fc3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_frame
<LI><a href="#[780fbc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;exchange_frame
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
</UL><BR>[Address Reference Count : 1]<UL><LI> input-v4l.o(i.v4l_init)
</UL><P><STRONG><a name="[7f60688]"></a>end_block</STRONG> (ARM, 204 bytes, Stack size 24 bytes, input-oss.o(i.end_block))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[8031f80]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_soft_queue
<LI><a href="#[8031cc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_softqueue_event
<LI><a href="#[7f5f7d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_audio_ring
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
</UL><BR>[Address Reference Count : 1]<UL><LI> input-oss.o(i.oss_init)
</UL><P><STRONG><a name="[808dd38]"></a>end_block</STRONG> (ARM, 40 bytes, Stack size 8 bytes, live.o(i.end_block))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
</UL><BR>[Address Reference Count : 1]<UL><LI> live.o(i.live_init)
</UL><P><STRONG><a name="[8953fa0]"></a>end_block</STRONG> (ARM, 172 bytes, Stack size 32 bytes, encoder-mpeg4.o(i.end_block))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[780fcac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_exchanger
<LI><a href="#[4a55998]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_create
<LI><a href="#[4a55920]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_resume
</UL><BR>[Address Reference Count : 1]<UL><LI> encoder-mpeg4.o(i.mpeg4_init)
</UL><P><STRONG><a name="[8d466c8]"></a>energy_new</STRONG> (ARM, 732 bytes, Stack size 16 bytes, agc.o(i.energy_new))
<BR>[Called By]<UL><LI><a href="#[8cf34d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;agc
<LI><a href="#[8cd6194]">&lt&lt</a>&nbsp;&nbsp;&nbsp;agc2
</UL><P><STRONG><a name="[7ff9720]"></a>exchanger_read</STRONG> (ARM, 192 bytes, Stack size 24 bytes, frame.o(i.exchanger_read))
<BR><BR>[Calls]<UL><LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> frame.o(i.new_exchanger)
</UL><P><STRONG><a name="[7319734]"></a>fdset_update</STRONG> (ARM, 472 bytes, Stack size 40 bytes, boa.o(i.fdset_update))
<BR><BR>[Calls]<UL><LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[7317b20]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free_request
<LI><a href="#[7317aac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ready_request
</UL><BR>[Called By]<UL><LI><a href="#[73180f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpdStartEx3
</UL><P><STRONG><a name="[732b1c4]"></a>ffSearch</STRONG> (ARM, 12 bytes, Stack size 0 bytes, flash_file.o(i.ffSearch))
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
</UL><BR>[Address Reference Count : 1]<UL><LI> flash_file.o(i.ffGetFile)
</UL><P><STRONG><a name="[8e4c740]"></a>filter3</STRONG> (ARM, 80 bytes, Stack size 8 bytes, vad1.o(i.filter3))
<BR>[Called By]<UL><LI><a href="#[8e4ca24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;filter_bank
</UL><P><STRONG><a name="[8e4ca24]"></a>filter_bank</STRONG> (ARM, 980 bytes, Stack size 384 bytes, vad1.o(i.filter_bank))
<BR><BR>[Calls]<UL><LI><a href="#[8e4c740]">&gt&gt</a>&nbsp;&nbsp;&nbsp;filter3
<LI><a href="#[8e4c6c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;level_calculation
</UL><BR>[Called By]<UL><LI><a href="#[8cc57c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vad1
</UL><P><STRONG><a name="[7a38c8c]"></a>find_control_url</STRONG> (ARM, 204 bytes, Stack size 16 bytes, upnp.o(i.find_control_url))
<BR><BR>[Calls]<UL><LI><a href="#[7a3d390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;XML_Analysis
<LI><a href="#[71ec834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL><BR>[Called By]<UL><LI><a href="#[7a391f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_serv_xml
</UL><P><STRONG><a name="[7a3acd8]"></a>find_descurl</STRONG> (ARM, 176 bytes, Stack size 16 bytes, upnp.o(i.find_descurl))
<BR><BR>[Calls]<UL><LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Called By]<UL><LI><a href="#[7a3b2bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_recv_response
</UL><P><STRONG><a name="[7a38c18]"></a>find_event_url</STRONG> (ARM, 204 bytes, Stack size 16 bytes, upnp.o(i.find_event_url))
<BR><BR>[Calls]<UL><LI><a href="#[7a3d390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;XML_Analysis
<LI><a href="#[71ec834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL><BR>[Called By]<UL><LI><a href="#[7a391f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_serv_xml
</UL><P><STRONG><a name="[9b5f45c]"></a>find_file</STRONG> (ARM, 608 bytes, Stack size 608 bytes, WBFAT_FOP.o(i.find_file))
<BR><BR>[Calls]<UL><LI><a href="#[9b640fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fread
<LI><a href="#[9b63f40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fseek
<LI><a href="#[9b5e4c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_next_dir_entry
<LI><a href="#[9b5e354]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_sdir_name
<LI><a href="#[9b5e2dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsAsciiToUnicode
<LI><a href="#[9b5e264]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeCopyStr
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[9b5e1e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeWildCardCompare
</UL><BR>[Called By]<UL><LI><a href="#[9b600e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_fileEx
</UL><P><STRONG><a name="[9b600e4]"></a>find_fileEx</STRONG> (ARM, 1632 bytes, Stack size 48 bytes, WBFAT_FOP.o(i.find_fileEx))
<BR><BR>[Calls]<UL><LI><a href="#[9b5f45c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_file
<LI><a href="#[9b63f40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fseek
<LI><a href="#[9b5f3e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;creation_time_compare
<LI><a href="#[9baf664]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeNonCaseCompare
<LI><a href="#[9b5f360]">&gt&gt</a>&nbsp;&nbsp;&nbsp;modification_time_compare
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
</UL><BR>[Called By]<UL><LI><a href="#[9b63dec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__find_first
<LI><a href="#[9b63d7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__find_next
</UL><P><STRONG><a name="[88a10e8]"></a>find_free_dir_entry</STRONG> (ARM, 264 bytes, Stack size 64 bytes, WBFAT_LDISK.o(i.find_free_dir_entry))
<BR><BR>[Calls]<UL><LI><a href="#[9baf108]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsFileSeek
<LI><a href="#[9baf7d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsHandleToDescriptor
<LI><a href="#[9baf258]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsReadFile
</UL><BR>[Called By]<UL><LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
</UL><P><STRONG><a name="[88cc0b8]"></a>find_last_dot</STRONG> (ARM, 56 bytes, Stack size 0 bytes, WBFAT_LIB.o(i.find_last_dot))
<BR>[Called By]<UL><LI><a href="#[9b5e1e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsUnicodeWildCardCompare
</UL><P><STRONG><a name="[7a3ac64]"></a>find_max_age</STRONG> (ARM, 116 bytes, Stack size 8 bytes, upnp.o(i.find_max_age))
<BR><BR>[Calls]<UL><LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[4fc2130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[4f74974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dflt
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4e4cde8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dfix
</UL><BR>[Called By]<UL><LI><a href="#[7a3b248]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_adv_srch
<LI><a href="#[7a3b2bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_recv_response
</UL><P><STRONG><a name="[7a39184]"></a>find_port_param</STRONG> (ARM, 512 bytes, Stack size 88 bytes, upnp.o(i.find_port_param))
<BR><BR>[Calls]<UL><LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[7a3d390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;XML_Analysis
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
</UL><BR>[Called By]<UL><LI><a href="#[7a3a280]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_xml
</UL><P><STRONG><a name="[80eab3c]"></a>find_rtsp_location</STRONG> (ARM, 388 bytes, Stack size 32 bytes, rtsp.o(i.find_rtsp_location))
<BR><BR>[Calls]<UL><LI><a href="#[743b184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[743afd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strrchr
<LI><a href="#[71ec834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[4dee704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
</UL><BR>[Called By]<UL><LI><a href="#[80eb59c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_DESCRIBE
<LI><a href="#[80eb528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_SETUP
<LI><a href="#[80eb444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_TEARDOWN
</UL><P><STRONG><a name="[7a38d04]"></a>find_scpdurl</STRONG> (ARM, 204 bytes, Stack size 16 bytes, upnp.o(i.find_scpdurl))
<BR><BR>[Calls]<UL><LI><a href="#[7a3d390]">&gt&gt</a>&nbsp;&nbsp;&nbsp;XML_Analysis
<LI><a href="#[71ec834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL><BR>[Called By]<UL><LI><a href="#[7a391f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;req_serv_xml
</UL><P><STRONG><a name="[7a3b334]"></a>flush_upnp_struct</STRONG> (ARM, 396 bytes, Stack size 24 bytes, upnp.o(i.flush_upnp_struct))
<BR><BR>[Calls]<UL><LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
</UL><BR>[Called By]<UL><LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[7efe5a8]"></a>fontDrawPixelDefault</STRONG> (ARM, 56 bytes, Stack size 8 bytes, font.o(i.fontDrawPixelDefault))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Address Reference Count : 1]<UL><LI> font.o(i.fontSetFont)
</UL><P><STRONG><a name="[7efe048]"></a>fontDrawPixelDummy</STRONG> (ARM, 4 bytes, Stack size 0 bytes, font.o(i.fontDrawPixelDummy))
<BR>[Address Reference Count : 1]<UL><LI> font.o(i.fontGetSizeEx)
</UL><P><STRONG><a name="[7efd5b4]"></a>fontGetCharSize</STRONG> (ARM, 152 bytes, Stack size 36 bytes, font.o(i.fontGetCharSize))
<BR>[Called By]<UL><LI><a href="#[7efe2c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fontPrint1
</UL><P><STRONG><a name="[7efe2c4]"></a>fontPrint1</STRONG> (ARM, 424 bytes, Stack size 72 bytes, font.o(i.fontPrint1))
<BR><BR>[Calls]<UL><LI><a href="#[7efd5b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fontGetCharSize
</UL><BR>[Called By]<UL><LI><a href="#[7efd038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fontPrintEx
</UL><P><STRONG><a name="[7efe334]"></a>fontPrint2</STRONG> (ARM, 356 bytes, Stack size 48 bytes, font.o(i.fontPrint2))
<BR>[Called By]<UL><LI><a href="#[7efd038]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fontPrintEx
</UL><P><STRONG><a name="[7a3a970]"></a>gen_ssdp_pkt</STRONG> (ARM, 152 bytes, Stack size 56 bytes, upnp.o(i.gen_ssdp_pkt))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4cece7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_ntoa
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Called By]<UL><LI><a href="#[7a3b248]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_adv_srch
<LI><a href="#[7a3b418]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_send_advertisement
</UL><P><STRONG><a name="[7a3b494]"></a>gen_uuid</STRONG> (ARM, 120 bytes, Stack size 56 bytes, upnp.o(i.gen_uuid))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Called By]<UL><LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[88a1160]"></a>generate_short_name</STRONG> (ARM, 228 bytes, Stack size 600 bytes, WBFAT_LDISK.o(i.generate_short_name))
<BR><BR>[Calls]<UL><LI><a href="#[9baf7d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsHandleToDescriptor
<LI><a href="#[889f6b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;lname_to_sname
<LI><a href="#[887ac64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsAsciiToUpperCase
<LI><a href="#[9baf108]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsFileSeek
<LI><a href="#[9b5e4c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_next_dir_entry
<LI><a href="#[9b5e354]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_sdir_name
<LI><a href="#[889f644]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sname_compare
</UL><BR>[Called By]<UL><LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
</UL><P><STRONG><a name="[5a678b0]"></a>getReplyAll</STRONG> (ARM, 352 bytes, Stack size 56 bytes, libmail.o(i.getReplyAll))
<BR><BR>[Calls]<UL><LI><a href="#[5a6636c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;timeoutRead
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[4dee704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[5a68848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailAck
</UL><P><STRONG><a name="[7810554]"></a>get_back_frame</STRONG> (ARM, 36 bytes, Stack size 8 bytes, input-v4l.o(i.get_back_frame))
<BR><BR>[Calls]<UL><LI><a href="#[780fb4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;deliver_frame_to_stream
<LI><a href="#[780fc3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_frame
<LI><a href="#[780fbc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;exchange_frame
</UL><BR>[Address Reference Count : 1]<UL><LI> input-v4l.o(i.end_block)
</UL><P><STRONG><a name="[7f5fe68]"></a>get_back_frame</STRONG> (ARM, 24 bytes, Stack size 8 bytes, input-oss.o(i.get_back_frame))
<BR><BR>[Calls]<UL><LI><a href="#[780fb4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;deliver_frame_to_stream
</UL><BR>[Address Reference Count : 1]<UL><LI> input-oss.o(i.end_block)
</UL><P><STRONG><a name="[7811e64]"></a>get_framerate</STRONG> (ARM, 24 bytes, Stack size 0 bytes, input-v4l.o(i.get_framerate))
<BR>[Address Reference Count : 1]<UL><LI> input-v4l.o(i.set_output)
</UL><P><STRONG><a name="[7f60b7c]"></a>get_framerate</STRONG> (ARM, 32 bytes, Stack size 0 bytes, input-oss.o(i.get_framerate))
<BR>[Address Reference Count : 1]<UL><LI> input-oss.o(i.set_output)
</UL><P><STRONG><a name="[816403c]"></a>get_framerate</STRONG> (ARM, 16 bytes, Stack size 0 bytes, stream.o(i.get_framerate))
<BR>[Address Reference Count : 1]<UL><LI> stream.o(i.new_convert_stream)
</UL><P><STRONG><a name="[8954448]"></a>get_framerate</STRONG> (ARM, 20 bytes, Stack size 0 bytes, encoder-mpeg4.o(i.get_framerate))
<BR>[Address Reference Count : 1]<UL><LI> encoder-mpeg4.o(i.set_output)
</UL><P><STRONG><a name="[836c178]"></a>get_private_info</STRONG> (ARM, 168 bytes, Stack size 48 bytes, driver_marvell.o(i.get_private_info))
<BR><BR>[Calls]<UL><LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[839b8cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;marvell_init_ioctl_numbers
</UL><P><STRONG><a name="[88a1074]"></a>get_sdir_chksum</STRONG> (ARM, 60 bytes, Stack size 0 bytes, WBFAT_LDISK.o(i.get_sdir_chksum))
<BR>[Called By]<UL><LI><a href="#[9b5e6a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_create_file
<LI><a href="#[889f2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_rename_file
</UL><P><STRONG><a name="[80ea8c8]"></a>get_session</STRONG> (ARM, 64 bytes, Stack size 16 bytes, rtsp.o(i.get_session))
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
</UL><BR>[Called By]<UL><LI><a href="#[80eb4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_PLAY
<LI><a href="#[80eb528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_SETUP
<LI><a href="#[80eb444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_TEARDOWN
</UL><P><STRONG><a name="[801bb84]"></a>get_slot_index</STRONG> (ARM, 72 bytes, Stack size 4 bytes, WBFAT.o(i.get_slot_index))
<BR>[Called By]<UL><LI><a href="#[9baf7d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsHandleToDescriptor
</UL><P><STRONG><a name="[78448dc]"></a>gettimeofday</STRONG> (ARM, 72 bytes, Stack size 16 bytes, http-auth.o(i.gettimeofday))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[7843b10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_digest_response
<LI><a href="#[784465c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_nonce
</UL><P><STRONG><a name="[77e9688]"></a>gettimeofday</STRONG> (ARM, 72 bytes, Stack size 16 bytes, rtp.o(i.gettimeofday))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[77e7a84]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_rtp_endpoint
<LI><a href="#[77e8878]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtcp_send
<LI><a href="#[77e8d74]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_rtcp_read
<LI><a href="#[77e8de8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;udp_rtp_read
</UL><P><STRONG><a name="[80360a8]"></a>gettimeofday</STRONG> (ARM, 72 bytes, Stack size 16 bytes, event.o(i.gettimeofday))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[77e755c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_timer_event
<LI><a href="#[8032144]">&lt&lt</a>&nbsp;&nbsp;&nbsp;time_ago
<LI><a href="#[8031ff4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;time_future
</UL><P><STRONG><a name="[813d274]"></a>gettimeofday</STRONG> (ARM, 72 bytes, Stack size 16 bytes, session.o(i.gettimeofday))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[808c394]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_session
</UL><P><STRONG><a name="[7e47fd0]"></a>gfxInitGE</STRONG> (ARM, 132 bytes, Stack size 0 bytes, openenv.o(i.gfxInitGE))
<BR>[Called By]<UL><LI><a href="#[54d4710]">&lt&lt</a>&nbsp;&nbsp;&nbsp;gfxOpenEnv
</UL><P><STRONG><a name="[895957c]"></a>h263_get_sdp</STRONG> (ARM, 24 bytes, Stack size 16 bytes, rtp-h263.o(i.h263_get_sdp))
<BR><BR>[Calls]<UL><LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
</UL><BR>[Address Reference Count : 1]<UL><LI> rtp-h263.o(i.new_rtp_media_h263_stream)
</UL><P><STRONG><a name="[89595f0]"></a>h263_process_frame</STRONG> (ARM, 104 bytes, Stack size 16 bytes, rtp-h263.o(i.h263_process_frame))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Address Reference Count : 1]<UL><LI> rtp-h263.o(i.new_rtp_media_h263_stream)
</UL><P><STRONG><a name="[8959668]"></a>h263_send</STRONG> (ARM, 228 bytes, Stack size 56 bytes, rtp-h263.o(i.h263_send))
<BR><BR>[Calls]<UL><LI><a href="#[77e73ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_rtp_packet
</UL><BR>[Address Reference Count : 1]<UL><LI> rtp-h263.o(i.new_rtp_media_h263_stream)
</UL><P><STRONG><a name="[80eb59c]"></a>handle_DESCRIBE</STRONG> (ARM, 560 bytes, Stack size 8992 bytes, rtsp.o(i.handle_DESCRIBE))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[80eab3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_rtsp_location
<LI><a href="#[80eb3d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtsp_send_error
<LI><a href="#[7843aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_header
<LI><a href="#[7843b10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;check_digest_response
<LI><a href="#[80eb610]">&gt&gt</a>&nbsp;&nbsp;&nbsp;log_request
<LI><a href="#[80eb680]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtsp_create_reply
<LI><a href="#[7843a24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_digest_challenge
<LI><a href="#[81193d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_send_pmsg
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[80cf404]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_header
<LI><a href="#[81194bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_data
</UL><BR>[Called By]<UL><LI><a href="#[8119448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_handle_msg
</UL><P><STRONG><a name="[80eb4b8]"></a>handle_PLAY</STRONG> (ARM, 788 bytes, Stack size 568 bytes, rtsp.o(i.handle_PLAY))
<BR><BR>[Calls]<UL><LI><a href="#[7843aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_header
<LI><a href="#[80ea8c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_session
<LI><a href="#[80eb3d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtsp_send_error
<LI><a href="#[52aaaac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sscanf
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[80eb680]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtsp_create_reply
<LI><a href="#[80cf404]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_header
<LI><a href="#[4f741d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
<LI><a href="#[80eb610]">&gt&gt</a>&nbsp;&nbsp;&nbsp;log_request
<LI><a href="#[4cece7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_ntoa
<LI><a href="#[8031aec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;event_swap_fd
<LI><a href="#[77e75d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_fd_event
<LI><a href="#[77e74e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_event_enabled
<LI><a href="#[81193d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_send_pmsg
</UL><BR>[Called By]<UL><LI><a href="#[8119448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_handle_msg
</UL><P><STRONG><a name="[80eb528]"></a>handle_SETUP</STRONG> (ARM, 716 bytes, Stack size 304 bytes, rtsp.o(i.handle_SETUP))
<BR><BR>[Calls]<UL><LI><a href="#[80eab3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_rtsp_location
<LI><a href="#[7843aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_header
<LI><a href="#[4cece7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_ntoa
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[80ea8c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_session
<LI><a href="#[80eb3d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtsp_send_error
<LI><a href="#[80eb680]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtsp_create_reply
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[743b184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[80ea84c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtsp_interleave_setup
<LI><a href="#[80ea7d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtsp_udp_setup
<LI><a href="#[80cf150]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free_pmsg
<LI><a href="#[78437f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;random_id
<LI><a href="#[80cf404]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_header
<LI><a href="#[80eb610]">&gt&gt</a>&nbsp;&nbsp;&nbsp;log_request
<LI><a href="#[81193d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_send_pmsg
</UL><BR>[Called By]<UL><LI><a href="#[8119448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_handle_msg
</UL><P><STRONG><a name="[80eb444]"></a>handle_TEARDOWN</STRONG> (ARM, 252 bytes, Stack size 32 bytes, rtsp.o(i.handle_TEARDOWN))
<BR><BR>[Calls]<UL><LI><a href="#[80eab3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_rtsp_location
<LI><a href="#[7843aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_header
<LI><a href="#[80ea8c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_session
<LI><a href="#[80eb3d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtsp_send_error
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[80eb680]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtsp_create_reply
<LI><a href="#[80cf404]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_header
<LI><a href="#[80eb610]">&gt&gt</a>&nbsp;&nbsp;&nbsp;log_request
<LI><a href="#[81193d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_send_pmsg
</UL><BR>[Called By]<UL><LI><a href="#[8119448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_handle_msg
</UL><P><STRONG><a name="[8180598]"></a>handle_request</STRONG> (ARM, 284 bytes, Stack size 24 bytes, tcp.o(i.handle_request))
<BR><BR>[Calls]<UL><LI><a href="#[80cf23c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_pmsg
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[80cf474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;parse_pmsg
<LI><a href="#[80cf150]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free_pmsg
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[8119448]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtsp_handle_msg
<LI><a href="#[81800a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;handle_unknown
</UL><BR>[Called By]<UL><LI><a href="#[8180a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_client_data
</UL><P><STRONG><a name="[81800a8]"></a>handle_unknown</STRONG> (ARM, 228 bytes, Stack size 32 bytes, tcp.o(i.handle_unknown))
<BR><BR>[Calls]<UL><LI><a href="#[7843aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_header
<LI><a href="#[811935c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write_access_log
<LI><a href="#[80cf23c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_pmsg
<LI><a href="#[80cf4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_pmsg_string
<LI><a href="#[80cf31c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;copy_headers
<LI><a href="#[81193d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_send_pmsg
</UL><BR>[Called By]<UL><LI><a href="#[8180598]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_request
</UL><P><STRONG><a name="[9c0d1a0]"></a>hex2num</STRONG> (ARM, 52 bytes, Stack size 0 bytes, common.o(i.hex2num))
<BR>[Called By]<UL><LI><a href="#[9c5ca58]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hexstr2bin
<LI><a href="#[9c5cac8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;hwaddr_aton
</UL><P><STRONG><a name="[78a3774]"></a>iis_init</STRONG> (ARM, 208 bytes, Stack size 8 bytes, W99702_WM8978.o(i.iis_init))
<BR><BR>[Calls]<UL><LI><a href="#[78a4ea0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[789f58c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sysDisableInterrupt
</UL><BR>[Called By]<UL><LI><a href="#[7365758]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StartRecord
</UL><P><STRONG><a name="[5a67034]"></a>initList</STRONG> (ARM, 140 bytes, Stack size 16 bytes, libmail.o(i.initList))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[5a6807c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;splitString
</UL><P><STRONG><a name="[5a66f4c]"></a>insertListnode</STRONG> (ARM, 80 bytes, Stack size 0 bytes, libmail.o(i.insertListnode))
<BR>[Called By]<UL><LI><a href="#[5a6807c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;splitString
</UL><P><STRONG><a name="[7c61098]"></a>iwe_stream_add_point</STRONG> (ARM, 116 bytes, Stack size 24 bytes, wlan_scan.o(i.iwe_stream_add_point))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[52ab09c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_get_scan
</UL><P><STRONG><a name="[8985284]"></a>jpeg_get_payload</STRONG> (ARM, 8 bytes, Stack size 0 bytes, rtp-jpeg.o(i.jpeg_get_payload))
<BR>[Address Reference Count : 1]<UL><LI> rtp-jpeg.o(i.new_rtp_media_jpeg_stream)
</UL><P><STRONG><a name="[8985210]"></a>jpeg_get_sdp</STRONG> (ARM, 36 bytes, Stack size 16 bytes, rtp-jpeg.o(i.jpeg_get_sdp))
<BR><BR>[Calls]<UL><LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
</UL><BR>[Address Reference Count : 1]<UL><LI> rtp-jpeg.o(i.new_rtp_media_jpeg_stream)
</UL><P><STRONG><a name="[89852fc]"></a>jpeg_process_frame</STRONG> (ARM, 380 bytes, Stack size 32 bytes, rtp-jpeg.o(i.jpeg_process_frame))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[8984f94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;parse_SOF
</UL><BR>[Address Reference Count : 1]<UL><LI> rtp-jpeg.o(i.new_rtp_media_jpeg_stream)
</UL><P><STRONG><a name="[8985374]"></a>jpeg_send</STRONG> (ARM, 444 bytes, Stack size 104 bytes, rtp-jpeg.o(i.jpeg_send))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[77e73ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_rtp_packet
</UL><BR>[Address Reference Count : 1]<UL><LI> rtp-jpeg.o(i.new_rtp_media_jpeg_stream)
</UL><P><STRONG><a name="[844d66c]"></a>l2_packet_receive</STRONG> (ARM, 164 bytes, Stack size 544 bytes, l2_packet_none.o(i.l2_packet_receive))
<BR><BR>[Calls]<UL><LI><a href="#[7966dfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fix_size_read
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Address Reference Count : 1]<UL><LI> l2_packet_none.o(i.l2_packet_init)
</UL><P><STRONG><a name="[727eb44]"></a>ledShowState</STRONG> (ARM, 200 bytes, Stack size 40 bytes, PeriodTask_LED.o(i.ledShowState))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4efdec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdLock
<LI><a href="#[4a548fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdDelTask
<LI><a href="#[4a55bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask
<LI><a href="#[4efdf34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdUnlock
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[727b638]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState_Booting
<LI><a href="#[727b5b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState_Booting_LowBattery
<LI><a href="#[727b6b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState_Connecting
<LI><a href="#[727b3ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState_Error
<LI><a href="#[727b4ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState_NetworkReady_LowBattery
<LI><a href="#[4e4dbf0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState_PoweredOn
<LI><a href="#[727b7b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState_Ready
<LI><a href="#[727b9a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState_SetDefault
<LI><a href="#[727b928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState_Streaming
<LI><a href="#[727b828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState_Streaming_LowBattery
<LI><a href="#[727b424]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledShowState_TryConnect_LowBattery
</UL><P><STRONG><a name="[727d158]"></a>ledUpdateStatus</STRONG> (ARM, 232 bytes, Stack size 8 bytes, PeriodTask_LED.o(i.ledUpdateStatus))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[727b3ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState_Error
<LI><a href="#[727b9a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState_SetDefault
<LI><a href="#[727b4ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState_NetworkReady_LowBattery
<LI><a href="#[727b5b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState_Booting_LowBattery
<LI><a href="#[727b828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState_Streaming_LowBattery
<LI><a href="#[727b424]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState_TryConnect_LowBattery
<LI><a href="#[727b7b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState_Ready
<LI><a href="#[727b638]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState_Booting
<LI><a href="#[727b928]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState_Streaming
<LI><a href="#[727b6b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledShowState_Connecting
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[4f292a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledClearError
<LI><a href="#[4e49db0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledClearFactoryDefault
<LI><a href="#[4a54f80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledError
<LI><a href="#[4e4dc6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledSetFactoryDefault
<LI><a href="#[72cf544]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledSetLowBattery
<LI><a href="#[727b338]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ledSetNetwork
</UL><P><STRONG><a name="[8e4c6c8]"></a>level_calculation</STRONG> (ARM, 196 bytes, Stack size 20 bytes, vad1.o(i.level_calculation))
<BR>[Called By]<UL><LI><a href="#[8e4ca24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;filter_bank
</UL><P><STRONG><a name="[808da74]"></a>live_get_sdp</STRONG> (ARM, 232 bytes, Stack size 40 bytes, live.o(i.live_get_sdp))
<BR><BR>[Calls]<UL><LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Address Reference Count : 1]<UL><LI> live.o(i.live_open)
</UL><P><STRONG><a name="[808df88]"></a>live_open</STRONG> (ARM, 132 bytes, Stack size 16 bytes, live.o(i.live_open))
<BR><BR>[Calls]<UL><LI><a href="#[808c394]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_session
</UL><BR>[Address Reference Count : 1]<UL><LI> live.o(i.set_path)
</UL><P><STRONG><a name="[808d924]"></a>live_pause</STRONG> (ARM, 4 bytes, Stack size 0 bytes, live.o(i.live_pause))
<BR>[Address Reference Count : 1]<UL><LI> live.o(i.live_open)
</UL><P><STRONG><a name="[808d994]"></a>live_play</STRONG> (ARM, 172 bytes, Stack size 24 bytes, live.o(i.live_play))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[808c324]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_waiting
</UL><BR>[Address Reference Count : 1]<UL><LI> live.o(i.live_open)
</UL><P><STRONG><a name="[808da04]"></a>live_setup</STRONG> (ARM, 96 bytes, Stack size 16 bytes, live.o(i.live_setup))
<BR><BR>[Calls]<UL><LI><a href="#[77e7a84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_rtp_endpoint
</UL><BR>[Address Reference Count : 1]<UL><LI> live.o(i.live_open)
</UL><P><STRONG><a name="[808d8b0]"></a>live_teardown</STRONG> (ARM, 276 bytes, Stack size 40 bytes, live.o(i.live_teardown))
<BR><BR>[Calls]<UL><LI><a href="#[77e7918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;del_rtp_endpoint
<LI><a href="#[808c324]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_waiting
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[808c2b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;del_session
</UL><BR>[Address Reference Count : 1]<UL><LI> live.o(i.live_open)
</UL><P><STRONG><a name="[8034904]"></a>locked_get_next_event</STRONG> (ARM, 52 bytes, Stack size 12 bytes, event.o(i.locked_get_next_event))
<BR><BR>[Calls]<UL><LI><a href="#[8034638]">&gt&gt</a>&nbsp;&nbsp;&nbsp;remove_from_list
<LI><a href="#[80357e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_to_list
</UL><BR>[Called By]<UL><LI><a href="#[8034124]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sq_run
</UL><P><STRONG><a name="[80eb610]"></a>log_request</STRONG> (ARM, 104 bytes, Stack size 32 bytes, rtsp.o(i.log_request))
<BR><BR>[Calls]<UL><LI><a href="#[7843aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_header
<LI><a href="#[811935c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write_access_log
</UL><BR>[Called By]<UL><LI><a href="#[80eb59c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_DESCRIBE
<LI><a href="#[80eb4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_PLAY
<LI><a href="#[80eb528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_SETUP
<LI><a href="#[80eb444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_TEARDOWN
<LI><a href="#[8119448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_handle_msg
<LI><a href="#[80eb3d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_send_error
</UL><P><STRONG><a name="[5a68848]"></a>mailAck</STRONG> (ARM, 44 bytes, Stack size 8 bytes, libmail.o(i.mailAck))
<BR><BR>[Calls]<UL><LI><a href="#[5a678b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getReplyAll
<LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[5a680ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailLogin
<LI><a href="#[5a64d6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailTalk
<LI><a href="#[5950b40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pushMail
</UL><P><STRONG><a name="[5a680ec]"></a>mailLogin</STRONG> (ARM, 300 bytes, Stack size 752 bytes, libmail.o(i.mailLogin))
<BR><BR>[Calls]<UL><LI><a href="#[5a68848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mailAck
<LI><a href="#[5a64d6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mailTalk
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[5a683cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;base64BufferSize
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[5a64c88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;encodeBase64
</UL><BR>[Called By]<UL><LI><a href="#[5950b40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pushMail
</UL><P><STRONG><a name="[5a688b4]"></a>mailPost</STRONG> (ARM, 40 bytes, Stack size 16 bytes, libmail.o(i.mailPost))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[5a67f98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;postBin
</UL><BR>[Called By]<UL><LI><a href="#[5a64d6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailTalk
<LI><a href="#[5950b40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pushMail
</UL><P><STRONG><a name="[5a66fc0]"></a>mallocListnode</STRONG> (ARM, 64 bytes, Stack size 8 bytes, libmail.o(i.mallocListnode))
<BR><BR>[Calls]<UL><LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[5a6807c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;splitString
</UL><P><STRONG><a name="[836b0e4]"></a>marvell2param</STRONG> (ARM, 208 bytes, Stack size 72 bytes, driver_marvell.o(i.marvell2param))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[836e000]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_associate
<LI><a href="#[836b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_mlme
<LI><a href="#[836df7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_auth_alg
</UL><P><STRONG><a name="[836bc58]"></a>marvell_ioctl</STRONG> (ARM, 212 bytes, Stack size 64 bytes, driver_marvell.o(i.marvell_ioctl))
<BR><BR>[Calls]<UL><LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><BR>[Called By]<UL><LI><a href="#[836b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_mlme
<LI><a href="#[836e218]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_scan
<LI><a href="#[836e4a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_key
<LI><a href="#[836bee0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_wpa_ie
</UL><P><STRONG><a name="[4f2a8e4]"></a>max_n</STRONG> (ARM, 44 bytes, Stack size 0 bytes, MCU.o(i.max_n))
<BR>[Called By]<UL><LI><a href="#[4f29474]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mcuGetBattery
</UL><P><STRONG><a name="[784492c]"></a>md5_hash</STRONG> (ARM, 160 bytes, Stack size 128 bytes, http-auth.o(i.md5_hash))
<BR><BR>[Calls]<UL><LI><a href="#[7843940]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MD5Init
<LI><a href="#[78438d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MD5Update
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7843860]">&gt&gt</a>&nbsp;&nbsp;&nbsp;MD5Final
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
</UL><BR>[Called By]<UL><LI><a href="#[7843b10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_digest_response
<LI><a href="#[784465c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;create_nonce
</UL><P><STRONG><a name="[84e368c]"></a>med3(char*, char*, char*, int (*)(const void*, const void*))</STRONG> (ARM, 128 bytes, Stack size 24 bytes, qsort.o(i.med3__FPcN21PFPCvT1_i))
<BR>[Called By]<UL><LI><a href="#[8401a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;qsort
</UL><P><STRONG><a name="[9b5f360]"></a>modification_time_compare</STRONG> (ARM, 140 bytes, Stack size 0 bytes, WBFAT_FOP.o(i.modification_time_compare))
<BR>[Called By]<UL><LI><a href="#[9b600e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;find_fileEx
</UL><P><STRONG><a name="[87d9178]"></a>mp4DecCompleteISR</STRONG> (ARM, 144 bytes, Stack size 32 bytes, MP4ISR.o(i.mp4DecCompleteISR))
<BR><BR>[Calls]<UL><LI><a href="#[54aca54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4ResetDecoder
</UL><BR>[Called By]<UL><LI><a href="#[7da7848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4Handler
</UL><P><STRONG><a name="[87d91f0]"></a>mp4EncCompleteISR</STRONG> (ARM, 308 bytes, Stack size 8 bytes, MP4ISR.o(i.mp4EncCompleteISR))
<BR><BR>[Calls]<UL><LI><a href="#[87d897c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4Ivtmn8Update
<LI><a href="#[7dc01ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4ForceUpdateIntra
<LI><a href="#[7da812c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4ResetEncoder
</UL><BR>[Called By]<UL><LI><a href="#[7da7848]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4Handler
</UL><P><STRONG><a name="[87cadf4]"></a>mp4GetVOL</STRONG> (ARM, 972 bytes, Stack size 16 bytes, mp4hdr.o(i.mp4GetVOL))
<BR><BR>[Calls]<UL><LI><a href="#[87ca4e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4GetHeaderBit
<LI><a href="#[87ca214]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4GetDefineVOPCE
<LI><a href="#[87ca554]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4GetUserData
</UL><BR>[Called By]<UL><LI><a href="#[7da79a0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mp4DecodeMP4Bitstream
</UL><P><STRONG><a name="[54210d4]"></a>mp4Splitter_DelData</STRONG> (ARM, 80 bytes, Stack size 16 bytes, vp_mp4.o(i.mp4Splitter_DelData))
<BR><BR>[Calls]<UL><LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL><BR>[Called By]<UL><LI><a href="#[54acefc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decPrepare
</UL><P><STRONG><a name="[5421058]"></a>mp4Splitter_GetFrame</STRONG> (ARM, 224 bytes, Stack size 8 bytes, vp_mp4.o(i.mp4Splitter_GetFrame))
<BR>[Called By]<UL><LI><a href="#[54acefc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decPrepare
</UL><P><STRONG><a name="[8954678]"></a>mpeg4_encode</STRONG> (ARM, 16 bytes, Stack size 0 bytes, encoder-mpeg4.o(i.mpeg4_encode))
<BR><BR>[Calls]<UL><LI><a href="#[780fbc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;exchange_frame
</UL><BR>[Address Reference Count : 1]<UL><LI> encoder-mpeg4.o(i.set_input)
</UL><P><STRONG><a name="[898cb48]"></a>mpeg4_get_sdp</STRONG> (ARM, 136 bytes, Stack size 40 bytes, rtp-mpeg4.o(i.mpeg4_get_sdp))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
</UL><BR>[Address Reference Count : 1]<UL><LI> rtp-mpeg4.o(i.new_rtp_media_mpeg4)
</UL><P><STRONG><a name="[895355c]"></a>mpeg4_loop</STRONG> (ARM, 156 bytes, Stack size 24 bytes, encoder-mpeg4.o(i.mpeg4_loop))
<BR><BR>[Calls]<UL><LI><a href="#[780ff60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_next_frame
<LI><a href="#[780fc3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_frame
<LI><a href="#[780feec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;deliver_frame
<LI><a href="#[7ff7e40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;unref_frame
</UL><BR>[Address Reference Count : 1]<UL><LI> encoder-mpeg4.o(i.end_block)
</UL><P><STRONG><a name="[898cbbc]"></a>mpeg4_process_frame</STRONG> (ARM, 128 bytes, Stack size 16 bytes, rtp-mpeg4.o(i.mpeg4_process_frame))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Address Reference Count : 1]<UL><LI> rtp-mpeg4.o(i.new_rtp_media_mpeg4)
</UL><P><STRONG><a name="[898cc34]"></a>mpeg4_send</STRONG> (ARM, 268 bytes, Stack size 288 bytes, rtp-mpeg4.o(i.mpeg4_send))
<BR><BR>[Calls]<UL><LI><a href="#[77e73ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_rtp_packet
</UL><BR>[Address Reference Count : 1]<UL><LI> rtp-mpeg4.o(i.new_rtp_media_mpeg4)
</UL><P><STRONG><a name="[553a690]"></a>mytime</STRONG> (ARM, 44 bytes, Stack size 8 bytes, Register.o(i.mytime))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[4e4a244]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetCheckedTime
<LI><a href="#[55373f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetSystemTimeZone
<LI><a href="#[4e4a1d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;SetCheckedTime
</UL><P><STRONG><a name="[56aaca8]"></a>mytime</STRONG> (ARM, 44 bytes, Stack size 8 bytes, WebCameraLog.o(i.mytime))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[4e4c3e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Config_GetLog
<LI><a href="#[4def390]">&lt&lt</a>&nbsp;&nbsp;&nbsp;WebCameraLog
</UL><P><STRONG><a name="[56debe4]"></a>mytime</STRONG> (ARM, 44 bytes, Stack size 8 bytes, CameraCtl.o(i.mytime))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[4e4a39c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;CameraThread
<LI><a href="#[56dcec0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;FillCameraData
</UL><P><STRONG><a name="[5775c8c]"></a>mytime</STRONG> (ARM, 44 bytes, Stack size 8 bytes, Ntp.o(i.mytime))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[577439c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;NTPC_Process
</UL><P><STRONG><a name="[588b8c8]"></a>mytime</STRONG> (ARM, 44 bytes, Stack size 8 bytes, HttpClient.o(i.mytime))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[5887994]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Process
</UL><P><STRONG><a name="[76883b8]"></a>mytime</STRONG> (ARM, 44 bytes, Stack size 8 bytes, BypassClient.o(i.mytime))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[7686ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_LOCAL_Process
<LI><a href="#[7686d88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Process
</UL><P><STRONG><a name="[5a6815c]"></a>netConnect</STRONG> (ARM, 168 bytes, Stack size 32 bytes, libmail.o(i.netConnect))
<BR><BR>[Calls]<UL><LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[511937c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[5a668cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcpConnectHost
</UL><BR>[Called By]<UL><LI><a href="#[5950b40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pushMail
</UL><P><STRONG><a name="[8163f7c]"></a>new_dest</STRONG> (ARM, 112 bytes, Stack size 24 bytes, stream.o(i.new_dest))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[77e7990]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtspBufIsValid
</UL><BR>[Called By]<UL><LI><a href="#[808c6e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;connect_to_stream
<LI><a href="#[8162a3c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;new_convert_stream
</UL><P><STRONG><a name="[80352cc]"></a>new_event</STRONG> (ARM, 192 bytes, Stack size 24 bytes, event.o(i.new_event))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[77e7990]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtspBufIsValid
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[77e75d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_fd_event
<LI><a href="#[8031cc0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_softqueue_event
<LI><a href="#[77e755c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;add_timer_event
</UL><P><STRONG><a name="[50da3b8]"></a>new_lease</STRONG> (ARM, 672 bytes, Stack size 64 bytes, dhcp_prot.o(i.new_lease))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4c2e4a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_real_time_clock
<LI><a href="#[4c2e51c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_clock_get_resolution
<LI><a href="#[4c2decc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_disable
<LI><a href="#[4c2e2a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_delete
<LI><a href="#[4c2e61c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_clock_to_counter
<LI><a href="#[4c2e3b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_create
<LI><a href="#[4ceceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_bootp_option
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
<LI><a href="#[4c2e1b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_initialize
<LI><a href="#[4c2dfc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_alarm_enable
</UL><BR>[Called By]<UL><LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
</UL><P><STRONG><a name="[808e1f8]"></a>next_live_frame</STRONG> (ARM, 144 bytes, Stack size 16 bytes, live.o(i.next_live_frame))
<BR><BR>[Calls]<UL><LI><a href="#[7ff7e40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;unref_frame
</UL><BR>[Address Reference Count : 1]<UL><LI> live.o(i.set_track)
</UL><P><STRONG><a name="[50da428]"></a>next_timeout</STRONG> (ARM, 108 bytes, Stack size 0 bytes, dhcp_prot.o(i.next_timeout))
<BR>[Called By]<UL><LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
</UL><P><STRONG><a name="[8e4c448]"></a>noise_estimate_update</STRONG> (ARM, 676 bytes, Stack size 40 bytes, vad1.o(i.noise_estimate_update))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[8d54ba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mult_r
</UL><BR>[Called By]<UL><LI><a href="#[8e4c9b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vad_decision
</UL><P><STRONG><a name="[4f77e9c]"></a>ns_nav_thread</STRONG> (ARM, 252 bytes, Stack size 16 bytes, er_ns_nav.o(i.ns_nav_thread))
<BR><BR>[Calls]<UL><LI><a href="#[4bba6e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_io_lookup
<LI><a href="#[4f75930]">&gt&gt</a>&nbsp;&nbsp;&nbsp;dprint_to_socket
<LI><a href="#[4f72f1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;open_ns_port
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[4f750a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;flush_ns_uart
<LI><a href="#[4f75290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;reset_northstar_and_get_version
<LI><a href="#[4f74fa8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_ns_serial_number_and_fw_timestamp
<LI><a href="#[4f75214]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_port_read_blocking
<LI><a href="#[4f72ea0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;nsp_init_path_module
<LI><a href="#[4f74e30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;select_correct_freq_set
<LI><a href="#[4f74c30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_spot_frequencies
<LI><a href="#[4f75828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_new_report_flags_and_start_report
<LI><a href="#[4f731a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_state_machine
<LI><a href="#[4f75428]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_init
<LI><a href="#[4f73540]">&gt&gt</a>&nbsp;&nbsp;&nbsp;NS_get_continuous_reports
</UL><BR>[Address Reference Count : 1]<UL><LI> er_ns_nav.o(i.er_init_ns_nav_priority)
</UL><P><STRONG><a name="[4dd31bc]"></a>onHttpReboot</STRONG> (ARM, 40 bytes, Stack size 8 bytes, System.o(i.onHttpReboot))
<BR><BR>[Calls]<UL><LI><a href="#[4dee308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBodyString
<LI><a href="#[4e4c794]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSetSendDataOverFun
</UL><BR>[Address Reference Count : 1]<UL><LI> System.o(i.RebootOnConnectionOver)
</UL><P><STRONG><a name="[4df0110]"></a>onHttpReboot_Safe</STRONG> (ARM, 24 bytes, Stack size 8 bytes, System.o(i.onHttpReboot_Safe))
<BR><BR>[Calls]<UL><LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4defdb8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;W99802Reboot
</UL><BR>[Address Reference Count : 1]<UL><LI> System.o(i.onHttpReboot)
</UL><P><STRONG><a name="[7f5fdf8]"></a>oss_loop</STRONG> (ARM, 352 bytes, Stack size 40 bytes, input-oss.o(i.oss_loop))
<BR><BR>[Calls]<UL><LI><a href="#[4a03430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_delay
<LI><a href="#[7f5f758]">&gt&gt</a>&nbsp;&nbsp;&nbsp;check_audio_ring
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7f5f6e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;audio_ring_input
</UL><BR>[Address Reference Count : 1]<UL><LI> input-oss.o(i.end_block)
</UL><P><STRONG><a name="[8984f94]"></a>parse_SOF</STRONG> (ARM, 360 bytes, Stack size 16 bytes, rtp-jpeg.o(i.parse_SOF))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[89852fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;jpeg_process_frame
</UL><P><STRONG><a name="[784499c]"></a>parse_auth_header</STRONG> (ARM, 660 bytes, Stack size 48 bytes, http-auth.o(i.parse_auth_header))
<BR><BR>[Calls]<UL><LI><a href="#[743b184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
</UL><BR>[Called By]<UL><LI><a href="#[7843b10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;check_digest_response
</UL><P><STRONG><a name="[8180a88]"></a>parse_client_data</STRONG> (ARM, 220 bytes, Stack size 24 bytes, tcp.o(i.parse_client_data))
<BR><BR>[Calls]<UL><LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[8180598]">&gt&gt</a>&nbsp;&nbsp;&nbsp;handle_request
<LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[743afd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strrchr
<LI><a href="#[71ec834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncmp
</UL><BR>[Called By]<UL><LI><a href="#[81192f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_read
</UL><P><STRONG><a name="[9b80d8c]"></a>parse_partition_records</STRONG> (ARM, 580 bytes, Stack size 112 bytes, WBFAT_DISK.o(i.parse_partition_records))
<BR><BR>[Calls]<UL><LI><a href="#[9b7fb54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsAllocateSector
<LI><a href="#[765d568]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsIORead
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[9b7fdc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_parse_partition
<LI><a href="#[9b80d8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;parse_partition_records
<LI><a href="#[9b7fae0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsFreeSector
</UL><BR>[Called By]<UL><LI><a href="#[7648cd4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fsPhysicalDiskConnected
<LI><a href="#[9b80d8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;parse_partition_records
</UL><P><STRONG><a name="[8a10de4]"></a>pbkdf2_sha1_f</STRONG> (ARM, 256 bytes, Stack size 104 bytes, sha1.o(i.pbkdf2_sha1_f))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8354974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hmac_sha1_vector
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9cf673c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hmac_sha1
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
</UL><BR>[Called By]<UL><LI><a href="#[9c5c614]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1
</UL><P><STRONG><a name="[757fd70]"></a>pllCalcFOUT</STRONG> (ARM, 152 bytes, Stack size 32 bytes, pll.o(i.pllCalcFOUT))
<BR><BR>[Calls]<UL><LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
</UL><BR>[Called By]<UL><LI><a href="#[7580054]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pllTry
</UL><P><STRONG><a name="[757fde0]"></a>pllPatchPLLCON</STRONG> (ARM, 32 bytes, Stack size 0 bytes, pll.o(i.pllPatchPLLCON))
<BR>[Called By]<UL><LI><a href="#[7580054]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pllTry
</UL><P><STRONG><a name="[7580054]"></a>pllTry</STRONG> (ARM, 432 bytes, Stack size 48 bytes, pll.o(i.pllTry))
<BR><BR>[Calls]<UL><LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
<LI><a href="#[757f848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_cmpu
<LI><a href="#[757fde0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pllPatchPLLCON
<LI><a href="#[757fd70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pllCalcFOUT
</UL><BR>[Called By]<UL><LI><a href="#[75802c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__pllEvalPLLCON
</UL><P><STRONG><a name="[8354e90]"></a>pmksa_cache_expire</STRONG> (ARM, 136 bytes, Stack size 40 bytes, pmksa_cache.o(i.pmksa_cache_expire))
<BR><BR>[Calls]<UL><LI><a href="#[7a5ae98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_get_time
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[8356420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_free_entry
<LI><a href="#[83563a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_set_expiration
</UL><BR>[Address Reference Count : 1]<UL><LI> pmksa_cache.o(i.pmksa_cache_set_expiration)
</UL><P><STRONG><a name="[8356420]"></a>pmksa_cache_free_entry</STRONG> (ARM, 48 bytes, Stack size 8 bytes, pmksa_cache.o(i.pmksa_cache_free_entry))
<BR><BR>[Calls]<UL><LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[9cf6560]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_add
<LI><a href="#[8354e90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_expire
</UL><P><STRONG><a name="[8354e18]"></a>pmksa_cache_reauth</STRONG> (ARM, 24 bytes, Stack size 0 bytes, pmksa_cache.o(i.pmksa_cache_reauth))
<BR><BR>[Calls]<UL><LI><a href="#[8354880]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_request_reauth
</UL><BR>[Address Reference Count : 1]<UL><LI> pmksa_cache.o(i.pmksa_cache_set_expiration)
</UL><P><STRONG><a name="[83563a0]"></a>pmksa_cache_set_expiration</STRONG> (ARM, 208 bytes, Stack size 32 bytes, pmksa_cache.o(i.pmksa_cache_set_expiration))
<BR><BR>[Calls]<UL><LI><a href="#[7969720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[7a5ae98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_get_time
<LI><a href="#[79696a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
<LI><a href="#[9cf66c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_get
</UL><BR>[Called By]<UL><LI><a href="#[9cf6560]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_add
<LI><a href="#[9cf6c5c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_deinit
<LI><a href="#[8354e90]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_expire
</UL><P><STRONG><a name="[5a67f98]"></a>postBin</STRONG> (ARM, 240 bytes, Stack size 80 bytes, libmail.o(i.postBin))
<BR><BR>[Calls]<UL><LI><a href="#[4bba3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[5a688b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;mailPost
<LI><a href="#[5950b40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pushMail
</UL><P><STRONG><a name="[4eff19c]"></a>prdRun</STRONG> (ARM, 600 bytes, Stack size 48 bytes, PeriodTask.o(i.prdRun))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4efdec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdLock
<LI><a href="#[4efddd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdBeforeCondWait
<LI><a href="#[4c2bc14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_timed_wait
<LI><a href="#[4efde50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAfterCondWait
<LI><a href="#[4db5224]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listDetach
<LI><a href="#[4efdcf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listAttach
<LI><a href="#[4efdf34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdUnlock
<LI><a href="#[4db5294]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listGetNext
</UL><BR>[Address Reference Count : 1]<UL><LI> PeriodTask.o(i.prdInit)
</UL><P><STRONG><a name="[72cfa18]"></a>prdTask_CheckBattery</STRONG> (ARM, 44 bytes, Stack size 8 bytes, PeriodTask_CheckBattery.o(i.prdTask_CheckBattery))
<BR><BR>[Calls]<UL><LI><a href="#[4f29474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mcuGetBattery
<LI><a href="#[72cf544]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledSetLowBattery
</UL><BR>[Address Reference Count : 1]<UL><LI> PeriodTask_CheckBattery.o(i.prdAddTask_CheckBattery)
</UL><P><STRONG><a name="[5889cd4]"></a>prdTask_CheckDDNS</STRONG> (ARM, 4 bytes, Stack size 0 bytes, HttpClient.o(i.prdTask_CheckDDNS))
<BR><BR>[Calls]<UL><LI><a href="#[4e4cc1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;DDNS_Update
</UL><BR>[Address Reference Count : 1]<UL><LI> HttpClient.o(i.prdAddTask__CheckDDNS)
</UL><P><STRONG><a name="[8019944]"></a>prdTask_CheckNetwork_Active</STRONG> (ARM, 96 bytes, Stack size 16 bytes, PeriodTask_CheckNetwork.o(i.prdTask_CheckNetwork_Active))
<BR><BR>[Calls]<UL><LI><a href="#[4db50b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_getspeed
<LI><a href="#[72a84d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdReset_CheckSuspend
<LI><a href="#[727b338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledSetNetwork
<LI><a href="#[4efdec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdLock
<LI><a href="#[4a548fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdDelTask
<LI><a href="#[4a55bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask
<LI><a href="#[4efdf34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdUnlock
</UL><BR>[Address Reference Count : 1]<UL><LI> PeriodTask_CheckNetwork.o(i.prdTask_CheckNetwork_TryConnectOver)
</UL><P><STRONG><a name="[801a2d8]"></a>prdTask_CheckNetwork_NoActive</STRONG> (ARM, 92 bytes, Stack size 16 bytes, PeriodTask_CheckNetwork.o(i.prdTask_CheckNetwork_NoActive))
<BR><BR>[Calls]<UL><LI><a href="#[4db50b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_getspeed
<LI><a href="#[727b338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledSetNetwork
<LI><a href="#[4efdec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdLock
<LI><a href="#[4a548fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdDelTask
<LI><a href="#[4a55bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask
<LI><a href="#[4efdf34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdUnlock
</UL><BR>[Address Reference Count : 2]<UL><LI> PeriodTask_CheckNetwork.o(i.prdAddTask_CheckNetwork)
<LI> PeriodTask_CheckNetwork.o(i.prdTask_CheckNetwork_Active)
</UL><P><STRONG><a name="[8019e80]"></a>prdTask_CheckNetwork_TryConnect</STRONG> (ARM, 76 bytes, Stack size 16 bytes, PeriodTask_CheckNetwork.o(i.prdTask_CheckNetwork_TryConnect))
<BR><BR>[Calls]<UL><LI><a href="#[4efdec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdLock
<LI><a href="#[4a548fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdDelTask
<LI><a href="#[4a55bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask
<LI><a href="#[4efdf34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdUnlock
<LI><a href="#[72a84d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdReset_CheckSuspend
</UL><BR>[Address Reference Count : 1]<UL><LI> PeriodTask_CheckNetwork.o(i.prdTask_CheckNetwork_NoActive)
</UL><P><STRONG><a name="[8019be0]"></a>prdTask_CheckNetwork_TryConnectOver</STRONG> (ARM, 80 bytes, Stack size 16 bytes, PeriodTask_CheckNetwork.o(i.prdTask_CheckNetwork_TryConnectOver))
<BR><BR>[Calls]<UL><LI><a href="#[727b338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledSetNetwork
<LI><a href="#[4efdec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdLock
<LI><a href="#[4a548fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdDelTask
<LI><a href="#[4a55bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask
<LI><a href="#[4efdf34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdUnlock
</UL><BR>[Address Reference Count : 1]<UL><LI> PeriodTask_CheckNetwork.o(i.prdTask_CheckNetwork_TryConnect)
</UL><P><STRONG><a name="[72a8c54]"></a>prdTask_CheckSuspend</STRONG> (ARM, 4 bytes, Stack size 0 bytes, PeriodTask_CheckSuspend.o(i.prdTask_CheckSuspend))
<BR>[Address Reference Count : 1]<UL><LI> PeriodTask_CheckSuspend.o(i.prdAddTask_CheckSuspend)
</UL><P><STRONG><a name="[7242e18]"></a>prdTask_CheckUSB</STRONG> (ARM, 24 bytes, Stack size 8 bytes, PeriodTask_CheckUSB.o(i.prdTask_CheckUSB))
<BR><BR>[Calls]<UL><LI><a href="#[7242958]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Read_GPIO7
<LI><a href="#[72a84d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdReset_CheckSuspend
</UL><BR>[Address Reference Count : 1]<UL><LI> PeriodTask_CheckUSB.o(i.prdAddTask_CheckUSB)
</UL><P><STRONG><a name="[727beb0]"></a>prdTask_LED</STRONG> (ARM, 172 bytes, Stack size 24 bytes, PeriodTask_LED.o(i.prdTask_LED))
<BR><BR>[Calls]<UL><LI><a href="#[4efdec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdLock
<LI><a href="#[4a548fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdDelTask
<LI><a href="#[4a55bec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask
<LI><a href="#[4efdf34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdUnlock
</UL><BR>[Address Reference Count : 2]<UL><LI> PeriodTask_LED.o(i.ledShowState)
<LI> PeriodTask_LED.o(i.prdTask_LED)
</UL><P><STRONG><a name="[4f2ad58]"></a>prdTask_ReadMCU</STRONG> (ARM, 76 bytes, Stack size 16 bytes, MCU.o(i.prdTask_ReadMCU))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4f2b04c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_mcuRecv
<LI><a href="#[4a548fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdDelTask
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> MCU.o(i.mcuSendCommand_NoResponse)
</UL><P><STRONG><a name="[4e31d48]"></a>prdTask_ResetFlag_FactoryDefault</STRONG> (ARM, 60 bytes, Stack size 8 bytes, LibIPCamera.o(i.prdTask_ResetFlag_FactoryDefault))
<BR><BR>[Calls]<UL><LI><a href="#[4a548fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdDelTask
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4e4dce8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;WriteFlashMemory
<LI><a href="#[4e49db0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledClearFactoryDefault
</UL><BR>[Address Reference Count : 1]<UL><LI> LibIPCamera.o(i.ReadCameraParam)
</UL><P><STRONG><a name="[7f3e8d0]"></a>process_statement</STRONG> (ARM, 248 bytes, Stack size 56 bytes, conf_parse.o(i.process_statement))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[4def4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL><BR>[Called By]<UL><LI><a href="#[7f3e4d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;read_config_file
</UL><P><STRONG><a name="[7a3a280]"></a>process_xml</STRONG> (ARM, 204 bytes, Stack size 16 bytes, upnp.o(i.process_xml))
<BR><BR>[Calls]<UL><LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[7a391f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_serv_xml
<LI><a href="#[7a39184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_port_param
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[7a3a4f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soap_invoke
<LI><a href="#[7a37d28]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gena_send_subscribe
</UL><BR>[Called By]<UL><LI><a href="#[7a3b1d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;recv_xml
</UL><P><STRONG><a name="[89b7cec]"></a>rawaudio_get_payload</STRONG> (ARM, 108 bytes, Stack size 0 bytes, rtp-rawaudio.o(i.rawaudio_get_payload))
<BR>[Address Reference Count : 1]<UL><LI> rtp-rawaudio.o(i.new_rtp_media_rawaudio_stream)
</UL><P><STRONG><a name="[89b7c74]"></a>rawaudio_get_sdp</STRONG> (ARM, 276 bytes, Stack size 40 bytes, rtp-rawaudio.o(i.rawaudio_get_sdp))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
</UL><BR>[Address Reference Count : 1]<UL><LI> rtp-rawaudio.o(i.new_rtp_media_rawaudio_stream)
</UL><P><STRONG><a name="[89b7d68]"></a>rawaudio_process_frame</STRONG> (ARM, 84 bytes, Stack size 16 bytes, rtp-rawaudio.o(i.rawaudio_process_frame))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Address Reference Count : 1]<UL><LI> rtp-rawaudio.o(i.new_rtp_media_rawaudio_stream)
</UL><P><STRONG><a name="[89b7de4]"></a>rawaudio_send</STRONG> (ARM, 232 bytes, Stack size 40 bytes, rtp-rawaudio.o(i.rawaudio_send))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[77e73ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send_rtp_packet
</UL><BR>[Address Reference Count : 1]<UL><LI> rtp-rawaudio.o(i.new_rtp_media_rawaudio_stream)
</UL><P><STRONG><a name="[7a3b1d8]"></a>recv_xml</STRONG> (ARM, 180 bytes, Stack size 40 bytes, upnp.o(i.recv_xml))
<BR><BR>[Calls]<UL><LI><a href="#[50a236c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;recv
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[7a3a280]">&gt&gt</a>&nbsp;&nbsp;&nbsp;process_xml
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[8034638]"></a>remove_from_list</STRONG> (ARM, 56 bytes, Stack size 0 bytes, event.o(i.remove_from_list))
<BR>[Called By]<UL><LI><a href="#[8034904]">&lt&lt</a>&nbsp;&nbsp;&nbsp;locked_get_next_event
<LI><a href="#[8031d38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soft_queue_add
</UL><P><STRONG><a name="[7a3abf4]"></a>req_desc</STRONG> (ARM, 440 bytes, Stack size 40 bytes, upnp.o(i.req_desc))
<BR><BR>[Calls]<UL><LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4d0cf3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_addr
<LI><a href="#[4fc2130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[50a2524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[50a2294]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send
</UL><BR>[Called By]<UL><LI><a href="#[7a3b2bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ssdp_recv_response
</UL><P><STRONG><a name="[7a391f8]"></a>req_serv_xml</STRONG> (ARM, 552 bytes, Stack size 40 bytes, upnp.o(i.req_serv_xml))
<BR><BR>[Calls]<UL><LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[7a38d04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_scpdurl
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[50a2524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[50a2294]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[7a38c8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_control_url
<LI><a href="#[7a38c18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_event_url
</UL><BR>[Called By]<UL><LI><a href="#[7a3a280]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_xml
</UL><P><STRONG><a name="[78a4e30]"></a>reset_gpio</STRONG> (ARM, 48 bytes, Stack size 0 bytes, W99702_WM8978.o(i.reset_gpio))
<BR>[Called By]<UL><LI><a href="#[73652b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;TwoWire_Write_Data
</UL><P><STRONG><a name="[50da49c]"></a>reset_timeout</STRONG> (ARM, 60 bytes, Stack size 0 bytes, dhcp_prot.o(i.reset_timeout))
<BR>[Called By]<UL><LI><a href="#[4d0cd6c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;do_dhcp
</UL><P><STRONG><a name="[8a2f3b0]"></a>rotr</STRONG> (ARM, 8 bytes, Stack size 0 bytes, aes_wrap.o(i.rotr))
<BR>[Called By]<UL><LI><a href="#[8a2c8c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rijndaelDecrypt
<LI><a href="#[8a2c9a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rijndaelKeySetupDec
</UL><P><STRONG><a name="[9c8bc78]"></a>rsn_preauth_eapol_cb</STRONG> (ARM, 248 bytes, Stack size 72 bytes, preauth.o(i.rsn_preauth_eapol_cb))
<BR><BR>[Calls]<UL><LI><a href="#[9cf65d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_get_key
<LI><a href="#[9c5c9e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_key
<LI><a href="#[9cf6560]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_add
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[7968578]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_deinit
<LI><a href="#[9cf696c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_candidate_process
</UL><BR>[Address Reference Count : 1]<UL><LI> preauth.o(i.rsn_preauth_init)
</UL><P><STRONG><a name="[9c8bbfc]"></a>rsn_preauth_eapol_send</STRONG> (ARM, 156 bytes, Stack size 24 bytes, preauth.o(i.rsn_preauth_eapol_send))
<BR><BR>[Calls]<UL><LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[7966b34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;l2_packet_send
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Address Reference Count : 1]<UL><LI> preauth.o(i.rsn_preauth_init)
</UL><P><STRONG><a name="[9c8bcf4]"></a>rsn_preauth_receive</STRONG> (ARM, 212 bytes, Stack size 40 bytes, preauth.o(i.rsn_preauth_receive))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[79680a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_rx_eapol
</UL><BR>[Address Reference Count : 1]<UL><LI> preauth.o(i.rsn_preauth_init)
</UL><P><STRONG><a name="[9c8c180]"></a>rsn_preauth_timeout</STRONG> (ARM, 88 bytes, Stack size 32 bytes, preauth.o(i.rsn_preauth_timeout))
<BR><BR>[Calls]<UL><LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[7968578]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_deinit
<LI><a href="#[9cf696c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_candidate_process
</UL><BR>[Address Reference Count : 2]<UL><LI> preauth.o(i.rsn_preauth_deinit)
<LI> preauth.o(i.rsn_preauth_init)
</UL><P><STRONG><a name="[9cfc958]"></a>rsn_selector_to_bitfield</STRONG> (ARM, 148 bytes, Stack size 8 bytes, wpa.o(i.rsn_selector_to_bitfield))
<BR><BR>[Calls]<UL><LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
</UL><BR>[Called By]<UL><LI><a href="#[9d011e4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie_rsn
</UL><P><STRONG><a name="[77e8d04]"></a>rtcp_fire</STRONG> (ARM, 20 bytes, Stack size 8 bytes, rtp.o(i.rtcp_fire))
<BR><BR>[Calls]<UL><LI><a href="#[77e8878]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtcp_send
</UL><BR>[Address Reference Count : 1]<UL><LI> rtp.o(i.connect_udp_endpoint)
</UL><P><STRONG><a name="[77e8878]"></a>rtcp_send</STRONG> (ARM, 772 bytes, Stack size 16656 bytes, rtp.o(i.rtcp_send))
<BR><BR>[Calls]<UL><LI><a href="#[77e9688]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[4f74974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dflt
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4f73bfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[77e7298]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[50a2294]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
</UL><BR>[Called By]<UL><LI><a href="#[77e8d04]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtcp_fire
<LI><a href="#[77e73ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;send_rtp_packet
</UL><P><STRONG><a name="[5926fe8]"></a>rtpsInitWBDevice</STRONG> (ARM, 4 bytes, Stack size 0 bytes, rtspserver.o(i.rtpsInitWBDevice))
<BR>[Address Reference Count : 1]<UL><LI> rtspserver.o(i.rtsp_start)
</UL><P><STRONG><a name="[5926dfc]"></a>rtspDisableVideoEncoder</STRONG> (ARM, 8 bytes, Stack size 0 bytes, rtspserver.o(i.rtspDisableVideoEncoder))
<BR><BR>[Calls]<UL><LI><a href="#[558f6ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702EnableMP4Encoder
</UL><BR>[Address Reference Count : 1]<UL><LI> rtspserver.o(i.rtsp_start)
</UL><P><STRONG><a name="[5926e78]"></a>rtspEnableVideoEncoder</STRONG> (ARM, 8 bytes, Stack size 0 bytes, rtspserver.o(i.rtspEnableVideoEncoder))
<BR><BR>[Calls]<UL><LI><a href="#[558f6ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702EnableMP4Encoder
</UL><BR>[Address Reference Count : 1]<UL><LI> rtspserver.o(i.rtsp_start)
</UL><P><STRONG><a name="[5926f70]"></a>rtspEndSwapHttpFD</STRONG> (ARM, 4 bytes, Stack size 0 bytes, rtspserver.o(i.rtspEndSwapHttpFD))
<BR><BR>[Calls]<UL><LI><a href="#[59266a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtspTunnelDelete
</UL><BR>[Address Reference Count : 1]<UL><LI> rtspserver.o(i.rtsp_start)
</UL><P><STRONG><a name="[5926c1c]"></a>rtspFreeAudioBuf</STRONG> (ARM, 104 bytes, Stack size 8 bytes, rtspserver.o(i.rtspFreeAudioBuf))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Address Reference Count : 1]<UL><LI> rtspserver.o(i.rtsp_start)
</UL><P><STRONG><a name="[5926c94]"></a>rtspFreeVideoBuf</STRONG> (ARM, 108 bytes, Stack size 8 bytes, rtspserver.o(i.rtspFreeVideoBuf))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
</UL><BR>[Address Reference Count : 1]<UL><LI> rtspserver.o(i.rtsp_start)
</UL><P><STRONG><a name="[5926d0c]"></a>rtspGetBackAudio</STRONG> (ARM, 76 bytes, Stack size 16 bytes, rtspserver.o(i.rtspGetBackAudio))
<BR><BR>[Calls]<UL><LI><a href="#[558f9cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;iothread_EventRead
</UL><BR>[Address Reference Count : 1]<UL><LI> rtspserver.o(i.rtsp_start)
</UL><P><STRONG><a name="[5926d84]"></a>rtspGetBackVideo</STRONG> (ARM, 84 bytes, Stack size 16 bytes, rtspserver.o(i.rtspGetBackVideo))
<BR><BR>[Calls]<UL><LI><a href="#[558f9cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;iothread_EventRead
</UL><BR>[Address Reference Count : 1]<UL><LI> rtspserver.o(i.rtsp_start)
</UL><P><STRONG><a name="[5927558]"></a>rtspHttpReqOver</STRONG> (ARM, 36 bytes, Stack size 8 bytes, rtspserver.o(i.rtspHttpReqOver))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[59266a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtspTunnelDelete
</UL><BR>[Address Reference Count : 1]<UL><LI> rtspserver.o(i.Http_RtspTunnel)
</UL><P><STRONG><a name="[592642c]"></a>rtspRtyRead</STRONG> (ARM, 244 bytes, Stack size 72 bytes, rtspserver.o(i.rtspRtyRead))
<BR><BR>[Calls]<UL><LI><a href="#[4bba3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
</UL><BR>[Called By]<UL><LI><a href="#[5927468]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelSendData
</UL><P><STRONG><a name="[5926ef4]"></a>rtspSwapHttpTunnelFD</STRONG> (ARM, 92 bytes, Stack size 24 bytes, rtspserver.o(i.rtspSwapHttpTunnelFD))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4c2bf24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_wait
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> rtspserver.o(i.rtsp_start)
</UL><P><STRONG><a name="[59274e0]"></a>rtspTunnelCreate</STRONG> (ARM, 400 bytes, Stack size 32 bytes, rtspserver.o(i.rtspTunnelCreate))
<BR><BR>[Calls]<UL><LI><a href="#[5926928]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtspTunnelSearch
<LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
<LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4c2c128]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_init
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
<LI><a href="#[4d0cf3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_addr
<LI><a href="#[4ced0ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bzero
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[50a2524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4bba524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;write
</UL><BR>[Called By]<UL><LI><a href="#[4e4ae94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_RtspTunnel
</UL><P><STRONG><a name="[59266a8]"></a>rtspTunnelDelete</STRONG> (ARM, 72 bytes, Stack size 8 bytes, rtspserver.o(i.rtspTunnelDelete))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4c2c020]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_destroy
<LI><a href="#[4c2c4f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_destroy
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Called By]<UL><LI><a href="#[5926f70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspEndSwapHttpFD
<LI><a href="#[5927558]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspHttpReqOver
</UL><P><STRONG><a name="[5926928]"></a>rtspTunnelSearch</STRONG> (ARM, 144 bytes, Stack size 24 bytes, rtspserver.o(i.rtspTunnelSearch))
<BR><BR>[Calls]<UL><LI><a href="#[49d2698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_lock
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[49d2594]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_scheduler_unlock
</UL><BR>[Called By]<UL><LI><a href="#[59274e0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtspTunnelCreate
</UL><P><STRONG><a name="[5927468]"></a>rtspTunnelSendData</STRONG> (ARM, 244 bytes, Stack size 24 bytes, rtspserver.o(i.rtspTunnelSendData))
<BR><BR>[Calls]<UL><LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[5923ec0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpSwapFD
<LI><a href="#[4c2be18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_signal
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[592642c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtspRtyRead
<LI><a href="#[4e49d40]">&gt&gt</a>&nbsp;&nbsp;&nbsp;httpAddBody
</UL><BR>[Address Reference Count : 1]<UL><LI> rtspserver.o(i.Http_RtspTunnel)
</UL><P><STRONG><a name="[80eb680]"></a>rtsp_create_reply</STRONG> (ARM, 112 bytes, Stack size 16 bytes, rtsp.o(i.rtsp_create_reply))
<BR><BR>[Calls]<UL><LI><a href="#[80cf23c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_pmsg
<LI><a href="#[80cf4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_pmsg_string
<LI><a href="#[80cf31c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;copy_headers
</UL><BR>[Called By]<UL><LI><a href="#[80eb59c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_DESCRIBE
<LI><a href="#[80eb4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_PLAY
<LI><a href="#[80eb528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_SETUP
<LI><a href="#[80eb444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_TEARDOWN
<LI><a href="#[8119448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_handle_msg
<LI><a href="#[80eb3d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_send_error
</UL><P><STRONG><a name="[80ea84c]"></a>rtsp_interleave_setup</STRONG> (ARM, 428 bytes, Stack size 184 bytes, rtsp.o(i.rtsp_interleave_setup))
<BR><BR>[Calls]<UL><LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[4dee704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[77e7460]">&gt&gt</a>&nbsp;&nbsp;&nbsp;connect_interleaved_endpoint
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[80cf404]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_header
</UL><BR>[Called By]<UL><LI><a href="#[80eb528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_SETUP
</UL><P><STRONG><a name="[80eb3d0]"></a>rtsp_send_error</STRONG> (ARM, 88 bytes, Stack size 24 bytes, rtsp.o(i.rtsp_send_error))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[80eb610]">&gt&gt</a>&nbsp;&nbsp;&nbsp;log_request
<LI><a href="#[80eb680]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rtsp_create_reply
<LI><a href="#[81193d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tcp_send_pmsg
</UL><BR>[Called By]<UL><LI><a href="#[80eb59c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_DESCRIBE
<LI><a href="#[80eb4b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_PLAY
<LI><a href="#[80eb528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_SETUP
<LI><a href="#[80eb444]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_TEARDOWN
<LI><a href="#[8119448]">&lt&lt</a>&nbsp;&nbsp;&nbsp;rtsp_handle_msg
</UL><P><STRONG><a name="[80ea760]"></a>rtsp_session_close</STRONG> (ARM, 56 bytes, Stack size 0 bytes, rtsp.o(i.rtsp_session_close))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
</UL><BR>[Address Reference Count : 1]<UL><LI> rtsp.o(i.handle_SETUP)
</UL><P><STRONG><a name="[5926ba8]"></a>rtsp_set_led</STRONG> (ARM, 4 bytes, Stack size 0 bytes, rtspserver.o(i.rtsp_set_led))
<BR>[Address Reference Count : 1]<UL><LI> rtspserver.o(i.rtsp_start)
</UL><P><STRONG><a name="[5927be8]"></a>rtsp_start</STRONG> (ARM, 340 bytes, Stack size 16 bytes, rtspserver.o(i.rtsp_start))
<BR><BR>[Calls]<UL><LI><a href="#[727b338]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ledSetNetwork
<LI><a href="#[4dee9b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;SetWlan
<LI><a href="#[59244b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_upnp
<LI><a href="#[5924444]">&gt&gt</a>&nbsp;&nbsp;&nbsp;BPC_New
<LI><a href="#[59243c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask_CheckNetwork
<LI><a href="#[58875fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdAddTask__CheckDDNS
<LI><a href="#[4eabb34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_auth_id
<LI><a href="#[4eab794]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_auth_enable
<LI><a href="#[4eab71c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_auth_disable
<LI><a href="#[5924358]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_config
<LI><a href="#[59242e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_wbdevice
<LI><a href="#[592426c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Set_Swap_FD_Func
<LI><a href="#[59241f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_encoderenable
<LI><a href="#[592417c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_encoderdisable
<LI><a href="#[5924108]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_get_video
<LI><a href="#[5924094]">&gt&gt</a>&nbsp;&nbsp;&nbsp;init_get_audio
<LI><a href="#[592401c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_unref_buf_video
<LI><a href="#[5923fa4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_unref_buf_audio
<LI><a href="#[5923f30]">&gt&gt</a>&nbsp;&nbsp;&nbsp;RtspServerStart
</UL><BR>[Address Reference Count : 1]<UL><LI> rtspserver.o(i.RtspThreadRun)
</UL><P><STRONG><a name="[80ea7d8]"></a>rtsp_udp_setup</STRONG> (ARM, 248 bytes, Stack size 176 bytes, rtsp.o(i.rtsp_udp_setup))
<BR><BR>[Calls]<UL><LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[4dee704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[77e76b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;connect_udp_endpoint
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[80cf404]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_header
</UL><BR>[Called By]<UL><LI><a href="#[80eb528]">&lt&lt</a>&nbsp;&nbsp;&nbsp;handle_SETUP
</UL><P><STRONG><a name="[77adc4c]"></a>safe_close</STRONG> (ARM, 176 bytes, Stack size 96 bytes, request.o(i.safe_close))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4bba3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[7317b20]">&lt&lt</a>&nbsp;&nbsp;&nbsp;free_request
</UL><P><STRONG><a name="[76311d0]"></a>sd_disk_init</STRONG> (ARM, 8 bytes, Stack size 0 bytes, SDGlue.o(i.sd_disk_init))
<BR>[Address Reference Count : 1]<UL><LI> SDGlue.o(.data)
</UL><P><STRONG><a name="[7631074]"></a>sd_disk_ioctl</STRONG> (ARM, 8 bytes, Stack size 0 bytes, SDGlue.o(i.sd_disk_ioctl))
<BR>[Address Reference Count : 1]<UL><LI> SDGlue.o(.data)
</UL><P><STRONG><a name="[763115c]"></a>sd_disk_read</STRONG> (ARM, 272 bytes, Stack size 40 bytes, SDGlue.o(i.sd_disk_read))
<BR><BR>[Calls]<UL><LI><a href="#[722342c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiLock
<LI><a href="#[73a7cd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSD_Read_in
<LI><a href="#[72233bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiUnLock
<LI><a href="#[73a82bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSDCommand
<LI><a href="#[762f3e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSlowDownSDClock
</UL><BR>[Address Reference Count : 1]<UL><LI> SDGlue.o(.data)
</UL><P><STRONG><a name="[76310e8]"></a>sd_disk_write</STRONG> (ARM, 272 bytes, Stack size 40 bytes, SDGlue.o(i.sd_disk_write))
<BR><BR>[Calls]<UL><LI><a href="#[722342c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiLock
<LI><a href="#[72233bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiUnLock
<LI><a href="#[73a7c60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSD_Write_in
<LI><a href="#[762f3e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSlowDownSDClock
</UL><BR>[Address Reference Count : 1]<UL><LI> SDGlue.o(.data)
</UL><P><STRONG><a name="[89ab654]"></a>search</STRONG> (ARM, 44 bytes, Stack size 0 bytes, g711.o(i.search))
<BR>[Called By]<UL><LI><a href="#[81dd2dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;linear2alaw
<LI><a href="#[81dd26c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;linear2ulaw
</UL><P><STRONG><a name="[8ec7708]"></a>searchFrac</STRONG> (ARM, 244 bytes, Stack size 32 bytes, pitch_fr.o(i.searchFrac))
<BR><BR>[Calls]<UL><LI><a href="#[8ec719c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Interpol_3or6
</UL><BR>[Called By]<UL><LI><a href="#[8d737c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Pitch_fr
</UL><P><STRONG><a name="[88fe6a0]"></a>search_file_in_directroy</STRONG> (ARM, 612 bytes, Stack size 600 bytes, WBFAT_DIR.o(i.search_file_in_directroy))
<BR><BR>[Calls]<UL><LI><a href="#[9b7fb54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsAllocateSector
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[765d568]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsIORead
<LI><a href="#[9b5e444]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_ldir_name
<LI><a href="#[9b5e354]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_sdir_name
<LI><a href="#[9baf664]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeNonCaseCompare
<LI><a href="#[887aaf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsAsciiNonCaseCompare
<LI><a href="#[9b5ebcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_read_fat_table
<LI><a href="#[889f370]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_dire_info
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9b7fae0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsFreeSector
</UL><BR>[Called By]<UL><LI><a href="#[9b5e720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_search_file
</UL><P><STRONG><a name="[88fe620]"></a>search_file_in_fat16_root</STRONG> (ARM, 528 bytes, Stack size 592 bytes, WBFAT_DIR.o(i.search_file_in_fat16_root))
<BR><BR>[Calls]<UL><LI><a href="#[9b7fb54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsAllocateSector
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[765d568]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsIORead
<LI><a href="#[9b7fae0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsFreeSector
<LI><a href="#[9b5e444]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_ldir_name
<LI><a href="#[9b5e354]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_sdir_name
<LI><a href="#[9baf664]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsUnicodeNonCaseCompare
<LI><a href="#[887aaf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fsAsciiNonCaseCompare
<LI><a href="#[889f370]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fs_fat_get_dire_info
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[9b5e720]">&lt&lt</a>&nbsp;&nbsp;&nbsp;fs_fat_search_file
</UL><P><STRONG><a name="[88207dc]"></a>sensor_SetZoom</STRONG> (ARM, 200 bytes, Stack size 16 bytes, dsp_init.o(i.sensor_SetZoom))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[7e91c10]">&lt&lt</a>&nbsp;&nbsp;&nbsp;init_OV9650
</UL><P><STRONG><a name="[5a65ae0]"></a>setFdAttribute</STRONG> (ARM, 268 bytes, Stack size 32 bytes, libmail.o(i.setFdAttribute))
<BR><BR>[Calls]<UL><LI><a href="#[4ced344]">&gt&gt</a>&nbsp;&nbsp;&nbsp;setsockopt
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4bfe664]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fcntl
</UL><BR>[Called By]<UL><LI><a href="#[5a668cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;tcpConnectHost
</UL><P><STRONG><a name="[895542c]"></a>set_bitrate</STRONG> (ARM, 52 bytes, Stack size 8 bytes, encoder-mpeg4.o(i.set_bitrate))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
</UL><BR>[Address Reference Count : 1]<UL><LI> encoder-mpeg4.o(.data)
</UL><P><STRONG><a name="[78139d4]"></a>set_device</STRONG> (ARM, 24 bytes, Stack size 8 bytes, input-v4l.o(i.set_device))
<BR><BR>[Calls]<UL><LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Address Reference Count : 1]<UL><LI> input-v4l.o(.data)
</UL><P><STRONG><a name="[7f61ca4]"></a>set_device</STRONG> (ARM, 24 bytes, Stack size 8 bytes, input-oss.o(i.set_device))
<BR><BR>[Calls]<UL><LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Address Reference Count : 1]<UL><LI> input-oss.o(.data)
</UL><P><STRONG><a name="[891eee4]"></a>set_file</STRONG> (ARM, 132 bytes, Stack size 16 bytes, access_log.o(i.set_file))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[4bba590]">&gt&gt</a>&nbsp;&nbsp;&nbsp;open
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
</UL><BR>[Address Reference Count : 1]<UL><LI> access_log.o(.data)
</UL><P><STRONG><a name="[4dd61dc]"></a>set_flag</STRONG> (ARM, 176 bytes, Stack size 48 bytes, System.o(i.set_flag))
<BR><BR>[Calls]<UL><LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
</UL><BR>[Called By]<UL><LI><a href="#[4e4db00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;InitNetInterface
</UL><P><STRONG><a name="[7813790]"></a>set_framerate_num</STRONG> (ARM, 48 bytes, Stack size 8 bytes, input-v4l.o(i.set_framerate_num))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
</UL><BR>[Address Reference Count : 1]<UL><LI> input-v4l.o(.data)
</UL><P><STRONG><a name="[7813718]"></a>set_framerate_str</STRONG> (ARM, 56 bytes, Stack size 8 bytes, input-v4l.o(i.set_framerate_str))
<BR><BR>[Calls]<UL><LI><a href="#[4def4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
</UL><BR>[Address Reference Count : 1]<UL><LI> input-v4l.o(.data)
</UL><P><STRONG><a name="[78138f0]"></a>set_framesize</STRONG> (ARM, 24 bytes, Stack size 0 bytes, input-v4l.o(i.set_framesize))
<BR>[Address Reference Count : 1]<UL><LI> input-v4l.o(.data)
</UL><P><STRONG><a name="[89554ec]"></a>set_input</STRONG> (ARM, 120 bytes, Stack size 24 bytes, encoder-mpeg4.o(i.set_input))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[808c6e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;connect_to_stream
</UL><BR>[Address Reference Count : 1]<UL><LI> encoder-mpeg4.o(.data)
</UL><P><STRONG><a name="[781387c]"></a>set_inputport</STRONG> (ARM, 16 bytes, Stack size 0 bytes, input-v4l.o(i.set_inputport))
<BR>[Address Reference Count : 1]<UL><LI> input-v4l.o(.data)
</UL><P><STRONG><a name="[7813808]"></a>set_inputtype</STRONG> (ARM, 124 bytes, Stack size 16 bytes, input-v4l.o(i.set_inputtype))
<BR><BR>[Calls]<UL><LI><a href="#[4def4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
</UL><BR>[Address Reference Count : 1]<UL><LI> input-v4l.o(.data)
</UL><P><STRONG><a name="[7813964]"></a>set_output</STRONG> (ARM, 160 bytes, Stack size 16 bytes, input-v4l.o(i.set_output))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[4def4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[780fe7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_stream
</UL><BR>[Address Reference Count : 1]<UL><LI> input-v4l.o(.data)
</UL><P><STRONG><a name="[7f61cf4]"></a>set_output</STRONG> (ARM, 200 bytes, Stack size 16 bytes, input-oss.o(i.set_output))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[4def4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[780fe7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_stream
</UL><BR>[Address Reference Count : 1]<UL><LI> input-oss.o(.data)
</UL><P><STRONG><a name="[895549c]"></a>set_output</STRONG> (ARM, 188 bytes, Stack size 16 bytes, encoder-mpeg4.o(i.set_output))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[4def4e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcasecmp
<LI><a href="#[780fe7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_stream
</UL><BR>[Address Reference Count : 1]<UL><LI> encoder-mpeg4.o(.data)
</UL><P><STRONG><a name="[808fc88]"></a>set_path</STRONG> (ARM, 112 bytes, Stack size 16 bytes, live.o(i.set_path))
<BR><BR>[Calls]<UL><LI><a href="#[808c474]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_rtsp_location
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
</UL><BR>[Address Reference Count : 1]<UL><LI> live.o(.data)
</UL><P><STRONG><a name="[59aef68]"></a>set_room_not_visible</STRONG> (ARM, 24 bytes, Stack size 0 bytes, ns-room-monitor.o(i.set_room_not_visible))
<BR>[Called By]<UL><LI><a href="#[4f73294]">&lt&lt</a>&nbsp;&nbsp;&nbsp;ns_rm_monitor_update
</UL><P><STRONG><a name="[7811df4]"></a>set_running</STRONG> (ARM, 12 bytes, Stack size 0 bytes, input-v4l.o(i.set_running))
<BR>[Address Reference Count : 1]<UL><LI> input-v4l.o(i.set_output)
</UL><P><STRONG><a name="[7f60b2c]"></a>set_running</STRONG> (ARM, 12 bytes, Stack size 0 bytes, input-oss.o(i.set_running))
<BR>[Address Reference Count : 1]<UL><LI> input-oss.o(i.set_output)
</UL><P><STRONG><a name="[8163fec]"></a>set_running</STRONG> (ARM, 8 bytes, Stack size 0 bytes, stream.o(i.set_running))
<BR><BR>[Calls]<UL><LI><a href="#[808c324]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_waiting
</UL><BR>[Address Reference Count : 1]<UL><LI> stream.o(i.new_convert_stream)
</UL><P><STRONG><a name="[89543f8]"></a>set_running</STRONG> (ARM, 72 bytes, Stack size 16 bytes, encoder-mpeg4.o(i.set_running))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[808c324]">&gt&gt</a>&nbsp;&nbsp;&nbsp;set_waiting
</UL><BR>[Address Reference Count : 1]<UL><LI> encoder-mpeg4.o(i.set_output)
</UL><P><STRONG><a name="[7f61c30]"></a>set_samplerate</STRONG> (ARM, 48 bytes, Stack size 8 bytes, input-oss.o(i.set_samplerate))
<BR><BR>[Calls]<UL><LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
</UL><BR>[Address Reference Count : 1]<UL><LI> input-oss.o(.data)
</UL><P><STRONG><a name="[808fcf8]"></a>set_track</STRONG> (ARM, 344 bytes, Stack size 56 bytes, live.o(i.set_track))
<BR><BR>[Calls]<UL><LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[808c6e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;connect_to_stream
<LI><a href="#[808c664]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_rtp_media_rawaudio_stream
<LI><a href="#[808c5e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_rtp_media_h263_stream
<LI><a href="#[808c56c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_rtp_media_mpeg4
<LI><a href="#[808c4ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;new_rtp_media_jpeg_stream
</UL><BR>[Address Reference Count : 1]<UL><LI> live.o(.data)
</UL><P><STRONG><a name="[8ac8c18]"></a>sm_EAP_DISCARD_Enter</STRONG> (ARM, 88 bytes, Stack size 8 bytes, eap.o(i.sm_EAP_DISCARD_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[8aae6b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_set_bool
</UL><BR>[Called By]<UL><LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
</UL><P><STRONG><a name="[8ac8e84]"></a>sm_EAP_FAILURE_Enter</STRONG> (ARM, 120 bytes, Stack size 8 bytes, eap.o(i.sm_EAP_FAILURE_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[8aae6b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_set_bool
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
</UL><BR>[Called By]<UL><LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
</UL><P><STRONG><a name="[8ac8d0c]"></a>sm_EAP_GET_METHOD_Enter</STRONG> (ARM, 640 bytes, Stack size 32 bytes, eap.o(i.sm_EAP_GET_METHOD_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[8ac5fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_get_config
<LI><a href="#[9c5c878]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_allowed_eap_method
<LI><a href="#[8310874]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_sm_get_eap_methods
<LI><a href="#[8aae438]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_deinit_prev_method
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8ac79dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_sm_buildNak
</UL><BR>[Called By]<UL><LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
</UL><P><STRONG><a name="[8ac8d88]"></a>sm_EAP_IDENTITY_Enter</STRONG> (ARM, 160 bytes, Stack size 24 bytes, eap.o(i.sm_EAP_IDENTITY_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[8ac90e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_get_eapReqData
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[8aaeb34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__bswap_16
<LI><a href="#[7968b60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_ascii
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8ac5ec8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_sm_buildIdentity
</UL><BR>[Called By]<UL><LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
</UL><P><STRONG><a name="[8ac8ba0]"></a>sm_EAP_IDLE_Enter</STRONG> (ARM, 56 bytes, Stack size 8 bytes, eap.o(i.sm_EAP_IDLE_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
</UL><P><STRONG><a name="[8ac9160]"></a>sm_EAP_INITIALIZE_Enter</STRONG> (ARM, 296 bytes, Stack size 16 bytes, eap.o(i.sm_EAP_INITIALIZE_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[8aae438]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_deinit_prev_method
<LI><a href="#[8ac8074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_set_int
<LI><a href="#[8aae6b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_set_bool
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
</UL><P><STRONG><a name="[8ac8c94]"></a>sm_EAP_METHOD_Enter</STRONG> (ARM, 372 bytes, Stack size 32 bytes, eap.o(i.sm_EAP_METHOD_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[8ac90e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_get_eapReqData
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8aadecc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_sm_decision_txt
<LI><a href="#[8aade50]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_sm_method_state_txt
</UL><BR>[Called By]<UL><LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
</UL><P><STRONG><a name="[8ac8e04]"></a>sm_EAP_NOTIFICATION_Enter</STRONG> (ARM, 180 bytes, Stack size 24 bytes, eap.o(i.sm_EAP_NOTIFICATION_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[8ac90e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_get_eapReqData
<LI><a href="#[8ac6f18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_sm_processNotify
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[8aaeb34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__bswap_16
</UL><BR>[Called By]<UL><LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
</UL><P><STRONG><a name="[8ac8b20]"></a>sm_EAP_SEND_RESPONSE_Enter</STRONG> (ARM, 200 bytes, Stack size 8 bytes, eap.o(i.sm_EAP_SEND_RESPONSE_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[8aae6b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_set_bool
<LI><a href="#[8ac8074]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_set_int
</UL><BR>[Called By]<UL><LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
</UL><P><STRONG><a name="[8ac8f00]"></a>sm_EAP_SUCCESS_Enter</STRONG> (ARM, 136 bytes, Stack size 16 bytes, eap.o(i.sm_EAP_SUCCESS_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[8aae6b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_set_bool
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
</UL><BR>[Called By]<UL><LI><a href="#[8aae1c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_EAP_Step
</UL><P><STRONG><a name="[8aae1c4]"></a>sm_EAP_Step</STRONG> (ARM, 1272 bytes, Stack size 24 bytes, eap.o(i.sm_EAP_Step))
<BR><BR>[Calls]<UL><LI><a href="#[8aab858]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_get_bool
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[8ac9160]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_EAP_INITIALIZE_Enter
<LI><a href="#[8ac90e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_get_eapReqData
<LI><a href="#[8ac906c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_sm_parseEapReq
<LI><a href="#[8ac8ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_get_int
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[8ac8f7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_success_workaround
<LI><a href="#[8ac8f00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_EAP_SUCCESS_Enter
<LI><a href="#[8ac8e84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_EAP_FAILURE_Enter
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[8ac8e04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_EAP_NOTIFICATION_Enter
<LI><a href="#[8ac8d88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_EAP_IDENTITY_Enter
<LI><a href="#[8ac8d0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_EAP_GET_METHOD_Enter
<LI><a href="#[8ac8c94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_EAP_METHOD_Enter
<LI><a href="#[8ac8c18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_EAP_DISCARD_Enter
<LI><a href="#[8ac8ba0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_EAP_IDLE_Enter
<LI><a href="#[8ac8b20]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_EAP_SEND_RESPONSE_Enter
</UL><BR>[Called By]<UL><LI><a href="#[847a640]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eap_sm_step
</UL><P><STRONG><a name="[83f211c]"></a>sm_KEY_RX_KEY_RECEIVE_Enter</STRONG> (ARM, 72 bytes, Stack size 8 bytes, eapol_sm.o(i.sm_KEY_RX_KEY_RECEIVE_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[83ed500]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_processKey
</UL><BR>[Called By]<UL><LI><a href="#[847a6b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_step
</UL><P><STRONG><a name="[83ed80c]"></a>sm_SUPP_BE_FAIL_Enter</STRONG> (ARM, 64 bytes, Stack size 16 bytes, eapol_sm.o(i.sm_SUPP_BE_FAIL_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[83f20a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_Step
</UL><P><STRONG><a name="[83ed908]"></a>sm_SUPP_BE_IDLE_Enter</STRONG> (ARM, 72 bytes, Stack size 16 bytes, eapol_sm.o(i.sm_SUPP_BE_IDLE_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[83f20a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_Step
</UL><P><STRONG><a name="[83ed984]"></a>sm_SUPP_BE_RECEIVE_Enter</STRONG> (ARM, 80 bytes, Stack size 8 bytes, eapol_sm.o(i.sm_SUPP_BE_RECEIVE_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[83f20a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_Step
</UL><P><STRONG><a name="[83ed888]"></a>sm_SUPP_BE_REQUEST_Enter</STRONG> (ARM, 84 bytes, Stack size 16 bytes, eapol_sm.o(i.sm_SUPP_BE_REQUEST_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[83f20a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_Step
</UL><P><STRONG><a name="[83ed78c]"></a>sm_SUPP_BE_SUCCESS_Enter</STRONG> (ARM, 88 bytes, Stack size 16 bytes, eapol_sm.o(i.sm_SUPP_BE_SUCCESS_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[847a820]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_key_available
</UL><BR>[Called By]<UL><LI><a href="#[83f20a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_Step
</UL><P><STRONG><a name="[83f20a8]"></a>sm_SUPP_BE_Step</STRONG> (ARM, 504 bytes, Stack size 16 bytes, eapol_sm.o(i.sm_SUPP_BE_Step))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8479f10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_sm_abort
<LI><a href="#[83eda04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_txSuppRsp
<LI><a href="#[83ed984]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_RECEIVE_Enter
<LI><a href="#[83ed908]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_IDLE_Enter
<LI><a href="#[83ed888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_REQUEST_Enter
<LI><a href="#[83ed80c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_FAIL_Enter
<LI><a href="#[83ed78c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_BE_SUCCESS_Enter
</UL><BR>[Called By]<UL><LI><a href="#[847a6b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_step
</UL><P><STRONG><a name="[83ecff4]"></a>sm_SUPP_PAE_AUTHENTICATED_Enter</STRONG> (ARM, 68 bytes, Stack size 16 bytes, eapol_sm.o(i.sm_SUPP_PAE_AUTHENTICATED_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[83f219c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_Step
</UL><P><STRONG><a name="[83ecd68]"></a>sm_SUPP_PAE_AUTHENTICATING_Enter</STRONG> (ARM, 92 bytes, Stack size 16 bytes, eapol_sm.o(i.sm_SUPP_PAE_AUTHENTICATING_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[83f219c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_Step
</UL><P><STRONG><a name="[83ecef4]"></a>sm_SUPP_PAE_CONNECTING_Enter</STRONG> (ARM, 112 bytes, Stack size 16 bytes, eapol_sm.o(i.sm_SUPP_PAE_CONNECTING_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[83ef9a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_txStart
</UL><BR>[Called By]<UL><LI><a href="#[83f219c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_Step
</UL><P><STRONG><a name="[83ecdf0]"></a>sm_SUPP_PAE_DISCONNECTED_Enter</STRONG> (ARM, 88 bytes, Stack size 16 bytes, eapol_sm.o(i.sm_SUPP_PAE_DISCONNECTED_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[83f219c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_Step
</UL><P><STRONG><a name="[83ecf78]"></a>sm_SUPP_PAE_HELD_Enter</STRONG> (ARM, 80 bytes, Stack size 8 bytes, eapol_sm.o(i.sm_SUPP_PAE_HELD_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[83f219c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_Step
</UL><P><STRONG><a name="[83ece74]"></a>sm_SUPP_PAE_RESTART_Enter</STRONG> (ARM, 64 bytes, Stack size 16 bytes, eapol_sm.o(i.sm_SUPP_PAE_RESTART_Enter))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[83f219c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_Step
</UL><P><STRONG><a name="[83f219c]"></a>sm_SUPP_PAE_Step</STRONG> (ARM, 832 bytes, Stack size 24 bytes, eapol_sm.o(i.sm_SUPP_PAE_Step))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[83ed078]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_txLogoff
<LI><a href="#[83ecff4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_AUTHENTICATED_Enter
<LI><a href="#[83ecf78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_HELD_Enter
<LI><a href="#[83ecef4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_CONNECTING_Enter
<LI><a href="#[83ece74]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_RESTART_Enter
<LI><a href="#[83ecdf0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_DISCONNECTED_Enter
<LI><a href="#[83ecd68]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sm_SUPP_PAE_AUTHENTICATING_Enter
</UL><BR>[Called By]<UL><LI><a href="#[847a6b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;eapol_sm_step
</UL><P><STRONG><a name="[764b448]"></a>sm_disk_init</STRONG> (ARM, 8 bytes, Stack size 0 bytes, SMGlue.o(i.sm_disk_init))
<BR>[Address Reference Count : 1]<UL><LI> SMGlue.o(.data)
</UL><P><STRONG><a name="[764b2ec]"></a>sm_disk_ioctl</STRONG> (ARM, 8 bytes, Stack size 0 bytes, SMGlue.o(i.sm_disk_ioctl))
<BR>[Address Reference Count : 1]<UL><LI> SMGlue.o(.data)
</UL><P><STRONG><a name="[764b3d4]"></a>sm_disk_read</STRONG> (ARM, 104 bytes, Stack size 24 bytes, SMGlue.o(i.sm_disk_read))
<BR><BR>[Calls]<UL><LI><a href="#[722342c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiLock
<LI><a href="#[76492e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Read
<LI><a href="#[72233bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiUnLock
</UL><BR>[Address Reference Count : 1]<UL><LI> SMGlue.o(.data)
</UL><P><STRONG><a name="[764b360]"></a>sm_disk_write</STRONG> (ARM, 148 bytes, Stack size 24 bytes, SMGlue.o(i.sm_disk_write))
<BR><BR>[Calls]<UL><LI><a href="#[722342c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiLock
<LI><a href="#[72233bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiUnLock
<LI><a href="#[76491f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fmiSM_Write
</UL><BR>[Address Reference Count : 1]<UL><LI> SMGlue.o(.data)
</UL><P><STRONG><a name="[7a3a4f0]"></a>soap_invoke</STRONG> (ARM, 668 bytes, Stack size 144 bytes, upnp.o(i.soap_invoke))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4cece7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_ntoa
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7338e98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[50a2524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[50a2294]">&gt&gt</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[7a3a280]">&lt&lt</a>&nbsp;&nbsp;&nbsp;process_xml
<LI><a href="#[7a3b160]">&lt&lt</a>&nbsp;&nbsp;&nbsp;soap_recv_response
</UL><P><STRONG><a name="[7a3b160]"></a>soap_recv_response</STRONG> (ARM, 312 bytes, Stack size 40 bytes, upnp.o(i.soap_recv_response))
<BR><BR>[Calls]<UL><LI><a href="#[50a236c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;recv
<LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[7a3a4f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soap_invoke
</UL><BR>[Called By]<UL><LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[7a7222c]"></a>spl_any</STRONG> (ARM, 72 bytes, Stack size 16 bytes, synch.o(i.spl_any))
<BR><BR>[Calls]<UL><LI><a href="#[4a0359c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_self
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
</UL><BR>[Called By]<UL><LI><a href="#[5183f2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_splimp
<LI><a href="#[516d12c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_splclock
<LI><a href="#[516d66c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_splnet
<LI><a href="#[7a71558]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_splhigh
<LI><a href="#[5137ccc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_splsoftnet
<LI><a href="#[5daa484]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_splinternal
</UL><P><STRONG><a name="[5a6807c]"></a>splitString</STRONG> (ARM, 312 bytes, Stack size 32 bytes, libmail.o(i.splitString))
<BR><BR>[Calls]<UL><LI><a href="#[5a67034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;initList
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[5a66fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mallocListnode
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[5a66f4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;insertListnode
</UL><BR>[Called By]<UL><LI><a href="#[5950b40]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pushMail
</UL><P><STRONG><a name="[88a1a78]"></a>split_sname</STRONG> (ARM, 88 bytes, Stack size 16 bytes, WBFAT_LDISK.o(i.split_sname))
<BR><BR>[Calls]<UL><LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Called By]<UL><LI><a href="#[889f644]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sname_compare
</UL><P><STRONG><a name="[872eb3c]"></a>spltty</STRONG> (ARM, 112 bytes, Stack size 24 bytes, ppp_io.o(i.spltty))
<BR><BR>[Calls]<UL><LI><a href="#[49dbc7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_init
<LI><a href="#[4a0359c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_self
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
</UL><BR>[Called By]<UL><LI><a href="#[872eba8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppasyncstart
<LI><a href="#[9ac2f24]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppopen
<LI><a href="#[872def8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppclose
<LI><a href="#[9ac27ac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppcheck
<LI><a href="#[9ac25d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppread
<LI><a href="#[9ac289c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppwrite
<LI><a href="#[9ac2e34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_ppptioctl
<LI><a href="#[9ac2734]">&lt&lt</a>&nbsp;&nbsp;&nbsp;cyg_ppp_pppinput
<LI><a href="#[872e964]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppasyncrelinq
<LI><a href="#[872e9d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;pppasyncctlp
</UL><P><STRONG><a name="[8034124]"></a>sq_run</STRONG> (ARM, 260 bytes, Stack size 32 bytes, event.o(i.sq_run))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[77e7828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;remove_event
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[8034904]">&gt&gt</a>&nbsp;&nbsp;&nbsp;locked_get_next_event
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[803350c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strip_events
</UL><BR>[Address Reference Count : 1]<UL><LI> event.o(i.add_softqueue_event)
</UL><P><STRONG><a name="[7a3b248]"></a>ssdp_adv_srch</STRONG> (ARM, 692 bytes, Stack size 192 bytes, upnp.o(i.ssdp_adv_srch))
<BR><BR>[Calls]<UL><LI><a href="#[4cecf64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;recvfrom
<LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[7a3a970]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gen_ssdp_pkt
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4cecfd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sendto
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[71ec834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[7a3ac64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_max_age
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
</UL><BR>[Called By]<UL><LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[7a3b2bc]"></a>ssdp_recv_response</STRONG> (ARM, 492 bytes, Stack size 56 bytes, upnp.o(i.ssdp_recv_response))
<BR><BR>[Calls]<UL><LI><a href="#[4cecf64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;recvfrom
<LI><a href="#[4def22c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;GetPubIPInfo
<LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[7a3acd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_descurl
<LI><a href="#[71ec834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[7a3ac64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;find_max_age
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[7a37858]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_uto_d
<LI><a href="#[4f74974]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dflt
<LI><a href="#[4f74748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4f745fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[7a377e8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_ufrom_d
<LI><a href="#[7a3abf4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;req_desc
</UL><BR>[Called By]<UL><LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[7a3b418]"></a>ssdp_send_advertisement</STRONG> (ARM, 432 bytes, Stack size 160 bytes, upnp.o(i.ssdp_send_advertisement))
<BR><BR>[Calls]<UL><LI><a href="#[4a55fa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[7a3a970]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gen_ssdp_pkt
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4cecfd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sendto
</UL><BR>[Called By]<UL><LI><a href="#[7a3bef4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;upnp_thread
</UL><P><STRONG><a name="[7810f30]"></a>start_block</STRONG> (ARM, 56 bytes, Stack size 0 bytes, input-v4l.o(i.start_block))
<BR>[Address Reference Count : 1]<UL><LI> input-v4l.o(i.v4l_init)
</UL><P><STRONG><a name="[7f60638]"></a>start_block</STRONG> (ARM, 40 bytes, Stack size 0 bytes, input-oss.o(i.start_block))
<BR>[Address Reference Count : 1]<UL><LI> input-oss.o(i.oss_init)
</UL><P><STRONG><a name="[808dce8]"></a>start_block</STRONG> (ARM, 64 bytes, Stack size 0 bytes, live.o(i.start_block))
<BR>[Address Reference Count : 1]<UL><LI> live.o(i.live_init)
</UL><P><STRONG><a name="[8953f50]"></a>start_block</STRONG> (ARM, 32 bytes, Stack size 0 bytes, encoder-mpeg4.o(i.start_block))
<BR>[Address Reference Count : 1]<UL><LI> encoder-mpeg4.o(i.mpeg4_init)
</UL><P><STRONG><a name="[57e875c]"></a>str_replace</STRONG> (ARM, 36 bytes, Stack size 0 bytes, Upload.o(i.str_replace))
<BR>[Called By]<UL><LI><a href="#[4e4af7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;Http_GetFirmware
</UL><P><STRONG><a name="[588b658]"></a>strdup</STRONG> (ARM, 64 bytes, Stack size 16 bytes, HttpClient.o(i.strdup))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Called By]<UL><LI><a href="#[5887924]">&lt&lt</a>&nbsp;&nbsp;&nbsp;HTTPC_Init
</UL><P><STRONG><a name="[7687b4c]"></a>strdup</STRONG> (ARM, 64 bytes, Stack size 16 bytes, BypassClient.o(i.strdup))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Called By]<UL><LI><a href="#[7686d14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;BP_REMOTE_Init
</UL><P><STRONG><a name="[59cd30c]"></a>strdup</STRONG> (ARM, 48 bytes, Stack size 16 bytes, C_String.o(i.strdup))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[785f888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_New
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Called By]<UL><LI><a href="#[59c92f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__CreateXML
<LI><a href="#[5537b50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpSetString
</UL><P><STRONG><a name="[825e50c]"></a>strdup</STRONG> (ARM, 48 bytes, Stack size 16 bytes, C_HttpSupport.o(i.strdup))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[785f888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;Hash_Mem_Pool_New
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
</UL><BR>[Called By]<UL><LI><a href="#[57e7940]">&lt&lt</a>&nbsp;&nbsp;&nbsp;GetBoundary
<LI><a href="#[5537260]">&lt&lt</a>&nbsp;&nbsp;&nbsp;httpParseString
</UL><P><STRONG><a name="[71f1dd8]"></a>string_mac_to_long</STRONG> (ARM, 136 bytes, Stack size 8 bytes, vp_com.o(i.string_mac_to_long))
<BR>[Called By]<UL><LI><a href="#[71ecf64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;systemRequest
</UL><P><STRONG><a name="[803350c]"></a>strip_events</STRONG> (ARM, 208 bytes, Stack size 24 bytes, event.o(i.strip_events))
<BR><BR>[Calls]<UL><LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[8031b60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;event_loop
<LI><a href="#[8034124]">&lt&lt</a>&nbsp;&nbsp;&nbsp;sq_run
</UL><P><STRONG><a name="[84e3708]"></a>swapfunc(char*, char*, int, int)</STRONG> (ARM, 76 bytes, Stack size 0 bytes, qsort.o(i.swapfunc__FPcT1iT3))
<BR>[Called By]<UL><LI><a href="#[8401a14]">&lt&lt</a>&nbsp;&nbsp;&nbsp;qsort
</UL><P><STRONG><a name="[5a668cc]"></a>tcpConnectHost</STRONG> (ARM, 600 bytes, Stack size 160 bytes, libmail.o(i.tcpConnectHost))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4bfe664]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fcntl
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[50a2524]">&gt&gt</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[4bba3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[50a2444]">&gt&gt</a>&nbsp;&nbsp;&nbsp;getsockopt
<LI><a href="#[5a65ae0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;setFdAttribute
</UL><BR>[Called By]<UL><LI><a href="#[5a6815c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;netConnect
</UL><P><STRONG><a name="[8180814]"></a>tcp_listen</STRONG> (ARM, 356 bytes, Stack size 40 bytes, tcp.o(i.tcp_listen))
<BR><BR>[Calls]<UL><LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
<LI><a href="#[4ced344]">&gt&gt</a>&nbsp;&nbsp;&nbsp;setsockopt
<LI><a href="#[4ced118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bind
<LI><a href="#[73179d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listen
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[77e75d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;add_fd_event
</UL><BR>[Called By]<UL><LI><a href="#[7f3e644]">&lt&lt</a>&nbsp;&nbsp;&nbsp;config_port
</UL><P><STRONG><a name="[75f0ad4]"></a>tcp_serial_getc</STRONG> (ARM, 244 bytes, Stack size 72 bytes, tcp_serial.o(i.tcp_serial_getc))
<BR><BR>[Calls]<UL><LI><a href="#[4bba3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Address Reference Count : 1]<UL><LI> tcp_serial.o(.data)
</UL><P><STRONG><a name="[75f0b48]"></a>tcp_serial_putc</STRONG> (ARM, 244 bytes, Stack size 32 bytes, tcp_serial.o(i.tcp_serial_putc))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
<LI><a href="#[75eeb14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_cond_signal
<LI><a href="#[75ee858]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_cond_wait
</UL><BR>[Address Reference Count : 1]<UL><LI> tcp_serial.o(.data)
</UL><P><STRONG><a name="[4a5741c]"></a>test_HS</STRONG> (ARM, 20 bytes, Stack size 8 bytes, CameraTest.o(i.test_HS))
<BR><BR>[Calls]<UL><LI><a href="#[4a548fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;prdDelTask
<LI><a href="#[4a54884]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pwr_power_saving
</UL><BR>[Address Reference Count : 1]<UL><LI> CameraTest.o(i.tsSuspendTestHandler)
</UL><P><STRONG><a name="[5a6636c]"></a>timeoutRead</STRONG> (ARM, 216 bytes, Stack size 72 bytes, libmail.o(i.timeoutRead))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[4bba3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
</UL><BR>[Called By]<UL><LI><a href="#[5a678b0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;getReplyAll
</UL><P><STRONG><a name="[77e8d74]"></a>udp_rtcp_read</STRONG> (ARM, 340 bytes, Stack size 16408 bytes, rtp.o(i.udp_rtcp_read))
<BR><BR>[Calls]<UL><LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[77e9688]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[49e6c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_udiv
<LI><a href="#[77e7220]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_pklost_ratio
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
</UL><BR>[Address Reference Count : 1]<UL><LI> rtp.o(i.connect_udp_endpoint)
</UL><P><STRONG><a name="[77e8de8]"></a>udp_rtp_read</STRONG> (ARM, 184 bytes, Stack size 16392 bytes, rtp.o(i.udp_rtp_read))
<BR><BR>[Calls]<UL><LI><a href="#[4bba36c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[77e9688]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gettimeofday
<LI><a href="#[7317b94]">&gt&gt</a>&nbsp;&nbsp;&nbsp;time
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[7843b8c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;spook_log
</UL><BR>[Address Reference Count : 1]<UL><LI> rtp.o(i.connect_udp_endpoint)
</UL><P><STRONG><a name="[7a3bef4]"></a>upnp_thread</STRONG> (ARM, 2644 bytes, Stack size 112 bytes, upnp.o(i.upnp_thread))
<BR><BR>[Calls]<UL><LI><a href="#[75ee8cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pipe_create
<LI><a href="#[7a379b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;upnp_wait_start
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[7a3b494]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gen_uuid
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4ced344]">&gt&gt</a>&nbsp;&nbsp;&nbsp;setsockopt
<LI><a href="#[4defa4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_uwrite4
<LI><a href="#[4fc2130]">&gt&gt</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[4ced118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bind
<LI><a href="#[73179d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listen
<LI><a href="#[4d0cf3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;inet_addr
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[7a3b418]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ssdp_send_advertisement
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[7a3b3ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;checkip
<LI><a href="#[7a3b334]">&gt&gt</a>&nbsp;&nbsp;&nbsp;flush_upnp_struct
<LI><a href="#[4cecfd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sendto
<LI><a href="#[4bba3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[7a3b2bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ssdp_recv_response
<LI><a href="#[7a3b248]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ssdp_adv_srch
<LI><a href="#[7a37b00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gena_connect_notify
<LI><a href="#[7a37a90]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpro_resp
<LI><a href="#[7a3b1d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;recv_xml
<LI><a href="#[7a3b160]">&gt&gt</a>&nbsp;&nbsp;&nbsp;soap_recv_response
<LI><a href="#[7a37cb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gena_recv_response
<LI><a href="#[7a37b78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gena_recv_notify
<LI><a href="#[7a37a24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;get_cmd
<LI><a href="#[757f848]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ll_cmpu
<LI><a href="#[7a37d28]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gena_send_subscribe
</UL><BR>[Address Reference Count : 1]<UL><LI> upnp.o(i.init_upnp)
</UL><P><STRONG><a name="[5007b20]"></a>usage</STRONG> (ARM, 100 bytes, Stack size 16 bytes, main.o(i.usage))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4a55a8c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_main
</UL><P><STRONG><a name="[72f1f1c]"></a>usbread</STRONG> (ARM, 264 bytes, Stack size 24 bytes, vp_usb.o(i.usbread))
<BR><BR>[Calls]<UL><LI><a href="#[4c2f3bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_mask
<LI><a href="#[4c2f1a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_unmask
<LI><a href="#[4c2d1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_wait
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[72ef418]">&gt&gt</a>&nbsp;&nbsp;&nbsp;callRestDSR
</UL><BR>[Called By]<UL><LI><a href="#[71ed618]">&lt&lt</a>&nbsp;&nbsp;&nbsp;USBRead
</UL><P><STRONG><a name="[8e4c9b0]"></a>vad_decision</STRONG> (ARM, 1024 bytes, Stack size 40 bytes, vad1.o(i.vad_decision))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
<LI><a href="#[8e4c448]">&gt&gt</a>&nbsp;&nbsp;&nbsp;noise_estimate_update
</UL><BR>[Called By]<UL><LI><a href="#[8cc57c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vad1
</UL><P><STRONG><a name="[7561e28]"></a>vauDisplayAllThreads</STRONG> (ARM, 160 bytes, Stack size 64 bytes, vp_audio.o(i.vauDisplayAllThreads))
<BR><BR>[Calls]<UL><LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a038e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_get_info
<LI><a href="#[4c3041c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_get_next
</UL><BR>[Called By]<UL><LI><a href="#[7566420]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vauPlayCallback
</UL><P><STRONG><a name="[7566420]"></a>vauPlayCallback</STRONG> (ARM, 340 bytes, Stack size 24 bytes, vp_audio.o(i.vauPlayCallback))
<BR><BR>[Calls]<UL><LI><a href="#[755fab0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauTryLockInDsr
<LI><a href="#[755e510]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_pc_try_consume
<LI><a href="#[4db5224]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listDetach
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[755fb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauNotificationGet
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4efdcf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listAttach
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[75600b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauUnlock
<LI><a href="#[4a0359c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_thread_self
<LI><a href="#[7561e28]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauDisplayAllThreads
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_audio.o(i.vauStartPlay)
</UL><P><STRONG><a name="[75654d8]"></a>vauRecordCallback</STRONG> (ARM, 124 bytes, Stack size 16 bytes, vp_audio.o(i.vauRecordCallback))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[755fb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msg_try_send
<LI><a href="#[755e588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufEncMsgDecRef
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_audio.o(i.vauStartRecord)
</UL><P><STRONG><a name="[7565e90]"></a>vauThreadEntry</STRONG> (ARM, 36 bytes, Stack size 16 bytes, vp_audio.o(i.vauThreadEntry))
<BR><BR>[Calls]<UL><LI><a href="#[755e5fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msg_recv
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_audio.o(i.vauInit)
</UL><P><STRONG><a name="[7566b94]"></a>vauThread_OnPlay</STRONG> (ARM, 120 bytes, Stack size 32 bytes, vp_audio.o(i.vauThread_OnPlay))
<BR><BR>[Calls]<UL><LI><a href="#[7560048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauLock
<LI><a href="#[7562580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;auSplitter_GetFrame
<LI><a href="#[75600b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauUnlock
<LI><a href="#[755e66c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_pc_produce
<LI><a href="#[7566b1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;auSplitter_DelData
<LI><a href="#[75eeb14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_cond_signal
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_audio.o(i.vauDecode)
</UL><P><STRONG><a name="[75620ac]"></a>vauThread_OnRecord</STRONG> (ARM, 344 bytes, Stack size 24 bytes, vp_audio.o(i.vauThread_OnRecord))
<BR><BR>[Calls]<UL><LI><a href="#[7560048]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauLock
<LI><a href="#[755e49c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufLocalPCMNew
<LI><a href="#[4db5224]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listDetach
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4efdcf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listAttach
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[75600b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vauUnlock
<LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[755e588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufEncMsgDecRef
<LI><a href="#[756144c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vauRecord_AMR_or_PCM
<LI><a href="#[75613d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vauRecord_IMA_ADPCM
<LI><a href="#[7561350]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vauRecord_ALAW_OR_ULAW
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_audio.o(i.vauRecordCallback)
</UL><P><STRONG><a name="[545b340]"></a>vcptGetUVSize</STRONG> (ARM, 24 bytes, Stack size 0 bytes, vp_thread_capture.o(i.vcptGetUVSize))
<BR>[Called By]<UL><LI><a href="#[545e690]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vcptEnable
<LI><a href="#[545dc9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptIrqHandler
<LI><a href="#[5459320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnEncodeJPG
<LI><a href="#[54592a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnRefresh
<LI><a href="#[5459a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_StartEncode
</UL><P><STRONG><a name="[545b3b4]"></a>vcptGetYSize</STRONG> (ARM, 20 bytes, Stack size 0 bytes, vp_thread_capture.o(i.vcptGetYSize))
<BR>[Called By]<UL><LI><a href="#[545e690]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vcptEnable
<LI><a href="#[545dc9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptIrqHandler
<LI><a href="#[5459320]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnEncodeJPG
<LI><a href="#[54592a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnRefresh
<LI><a href="#[5459a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_StartEncode
</UL><P><STRONG><a name="[545dc9c]"></a>vcptIrqHandler</STRONG> (ARM, 192 bytes, Stack size 32 bytes, vp_thread_capture.o(i.vcptIrqHandler))
<BR><BR>[Calls]<UL><LI><a href="#[545b3b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptGetYSize
<LI><a href="#[545b340]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptGetUVSize
<LI><a href="#[5457ad4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptTryLockInDsr
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[545b2b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcpt_DownscaledForDetectMotion_InDsr
<LI><a href="#[755fb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msg_try_send
<LI><a href="#[5457b4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptUnlock
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_thread_capture.o(i.vcptStart)
</UL><P><STRONG><a name="[545e704]"></a>vcptIrqHandler_Null</STRONG> (ARM, 20 bytes, Stack size 0 bytes, vp_thread_capture.o(i.vcptIrqHandler_Null))
<BR>[Address Reference Count : 3]<UL><LI> vp_thread_capture.o(i.vcptSetWindow)
<LI> vp_thread_capture.o(i.vcptStart)
<LI> vp_thread_capture.o(i.vcptStop)
</UL><P><STRONG><a name="[545dd10]"></a>vcptSensorInit</STRONG> (ARM, 36 bytes, Stack size 16 bytes, vp_thread_capture.o(i.vcptSensorInit))
<BR><BR>[Calls]<UL><LI><a href="#[545a790]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_vcptSensorInit
</UL><BR>[Called By]<UL><LI><a href="#[734d438]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptLeavePowerSaving
<LI><a href="#[54573a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStart
</UL><P><STRONG><a name="[545e618]"></a>vcptSensorPowerOff</STRONG> (ARM, 68 bytes, Stack size 0 bytes, vp_thread_capture.o(i.vcptSensorPowerOff))
<BR><BR>[Calls]<UL><LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
</UL><BR>[Called By]<UL><LI><a href="#[734d594]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptEnterPowerSaving
<LI><a href="#[54573a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStart
<LI><a href="#[5457754]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStop
</UL><P><STRONG><a name="[545dd84]"></a>vcptSensorPowerOn</STRONG> (ARM, 176 bytes, Stack size 16 bytes, vp_thread_capture.o(i.vcptSensorPowerOn))
<BR><BR>[Calls]<UL><LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
</UL><BR>[Called By]<UL><LI><a href="#[734d438]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptLeavePowerSaving
<LI><a href="#[54573a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptStart
</UL><P><STRONG><a name="[545da20]"></a>vcptSetSourceRotate</STRONG> (ARM, 252 bytes, Stack size 8 bytes, vp_thread_capture.o(i.vcptSetSourceRotate))
<BR><BR>[Calls]<UL><LI><a href="#[759f08c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cReadI2C_16b
<LI><a href="#[759f178]">&gt&gt</a>&nbsp;&nbsp;&nbsp;i2cWriteI2C_16b
</UL><BR>[Called By]<UL><LI><a href="#[545e690]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__vcptEnable
<LI><a href="#[54572bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptSetWindow
</UL><P><STRONG><a name="[545f034]"></a>vcptThreadCapEntry</STRONG> (ARM, 64 bytes, Stack size 24 bytes, vp_thread_capture.o(i.vcptThreadCapEntry))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[5456d4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msg_timed_recv
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_thread_capture.o(i.vcptInitThread)
</UL><P><STRONG><a name="[545efc0]"></a>vcptThreadEntry</STRONG> (ARM, 36 bytes, Stack size 16 bytes, vp_thread_capture.o(i.vcptThreadEntry))
<BR><BR>[Calls]<UL><LI><a href="#[755e5fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msg_recv
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_thread_capture.o(i.vcptInitThread)
</UL><P><STRONG><a name="[545b238]"></a>vcptThread_OnCapture</STRONG> (ARM, 24 bytes, Stack size 8 bytes, vp_thread_capture.o(i.vcptThread_OnCapture))
<BR><BR>[Calls]<UL><LI><a href="#[5459b04]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptThread_WaitEncode
<LI><a href="#[5459a88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptThread_StartEncode
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_thread_capture.o(i.vcptIrqHandler)
</UL><P><STRONG><a name="[5459224]"></a>vcptThread_OnDetectMotion</STRONG> (ARM, 200 bytes, Stack size 24 bytes, vp_thread_capture.o(i.vcptThread_OnDetectMotion))
<BR><BR>[Calls]<UL><LI><a href="#[5456468]">&gt&gt</a>&nbsp;&nbsp;&nbsp;compare_image
<LI><a href="#[537f184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdLock
<LI><a href="#[537f264]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdUnlock
<LI><a href="#[755e24c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;iothread_EventNotify
<LI><a href="#[537e240]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdDelMotionBuffer
</UL><BR>[Called By]<UL><LI><a href="#[5459a88]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_StartEncode
</UL><P><STRONG><a name="[5459320]"></a>vcptThread_OnEncodeJPG</STRONG> (ARM, 244 bytes, Stack size 16 bytes, vp_thread_capture.o(i.vcptThread_OnEncodeJPG))
<BR><BR>[Calls]<UL><LI><a href="#[5456730]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegLock
<LI><a href="#[545b340]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptGetUVSize
<LI><a href="#[545b3b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptGetYSize
<LI><a href="#[54566ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;encodeJPEGwithThumbnailImage
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[54565c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegAddEncBuffer
<LI><a href="#[545654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegSendEncBuffer
<LI><a href="#[54564dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegUnlock
<LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_thread_capture.o(i.vcptThread_StartEncode)
</UL><P><STRONG><a name="[545939c]"></a>vcptThread_OnEncodeMP4</STRONG> (ARM, 80 bytes, Stack size 16 bytes, vp_thread_capture.o(i.vcptThread_OnEncodeMP4))
<BR><BR>[Calls]<UL><LI><a href="#[54568f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4Lock
<LI><a href="#[5456884]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4encStart
<LI><a href="#[5456810]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4encWaitOK
<LI><a href="#[54567a0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4Unlock
<LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_thread_capture.o(i.vcptThread_StartEncode)
</UL><P><STRONG><a name="[54592a4]"></a>vcptThread_OnRefresh</STRONG> (ARM, 496 bytes, Stack size 112 bytes, vp_thread_capture.o(i.vcptThread_OnRefresh))
<BR><BR>[Calls]<UL><LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[537f018]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufVideoNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[537efa4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufVideoDecRef
<LI><a href="#[537f184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdLock
<LI><a href="#[545b3b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptGetYSize
<LI><a href="#[545b340]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptGetUVSize
<LI><a href="#[537f264]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdUnlock
<LI><a href="#[537ec00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vvpeLock
<LI><a href="#[537eb84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpeFormatConversionDDA
<LI><a href="#[537eb14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vvpeTrigger
<LI><a href="#[537ea9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vvpeWaitProcessOK
<LI><a href="#[537ea2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vvpeUnlock
<LI><a href="#[537e9bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpeRotation
<LI><a href="#[537f110]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdRefreshLcm
<LI><a href="#[4c2ceec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_post
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_thread_capture.o(i.vcptThread_StartEncode)
</UL><P><STRONG><a name="[5459a88]"></a>vcptThread_StartEncode</STRONG> (ARM, 424 bytes, Stack size 40 bytes, vp_thread_capture.o(i.vcptThread_StartEncode))
<BR><BR>[Calls]<UL><LI><a href="#[537ea9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vvpeWaitProcessOK
<LI><a href="#[537ea2c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vvpeUnlock
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[537e14c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdAddMotionBuffer
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[5457b4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptUnlock
<LI><a href="#[537f1f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdGetSettings
<LI><a href="#[5456a08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vinfoDrawContent
<LI><a href="#[508d088]">&gt&gt</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[5456dc4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNum
<LI><a href="#[755f9cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msg_send
<LI><a href="#[755e24c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;iothread_EventNotify
<LI><a href="#[5457bbc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptJpegTimerIsEnable
<LI><a href="#[545b3b4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptGetYSize
<LI><a href="#[545b340]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptGetUVSize
<LI><a href="#[537df6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmIsConfigured
<LI><a href="#[5459224]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnDetectMotion
</UL><BR>[Called By]<UL><LI><a href="#[545b238]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnCapture
</UL><P><STRONG><a name="[5459b04]"></a>vcptThread_WaitEncode</STRONG> (ARM, 172 bytes, Stack size 24 bytes, vp_thread_capture.o(i.vcptThread_WaitEncode))
<BR><BR>[Calls]<UL><LI><a href="#[4c2d1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_semaphore_wait
<LI><a href="#[75c3200]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_get_ticks
<LI><a href="#[4db4ba8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_ticks_to_msec
<LI><a href="#[4db4d10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4encGetQuality
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
</UL><BR>[Called By]<UL><LI><a href="#[545b238]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptThread_OnCapture
</UL><P><STRONG><a name="[545b2b4]"></a>vcpt_DownscaledForDetectMotion_InDsr</STRONG> (ARM, 376 bytes, Stack size 80 bytes, vp_thread_capture.o(i.vcpt_DownscaledForDetectMotion_InDsr))
<BR><BR>[Calls]<UL><LI><a href="#[537f1f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdGetSettings
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[535654c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memNew
<LI><a href="#[4a55580]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_enable
<LI><a href="#[5456be4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vvpeTryLockInDsr
<LI><a href="#[5456b70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpeDownScale
<LI><a href="#[537eb14]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vvpeTrigger
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[545dc9c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vcptIrqHandler
</UL><P><STRONG><a name="[537f4ec]"></a>vdAdjustLCM</STRONG> (ARM, 340 bytes, Stack size 4 bytes, vp_video.o(i.vdAdjustLCM))
<BR>[Called By]<UL><LI><a href="#[537ffb0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdAdjustWindow
</UL><P><STRONG><a name="[537ffb0]"></a>vdAdjustWindow</STRONG> (ARM, 400 bytes, Stack size 24 bytes, vp_video.o(i.vdAdjustWindow))
<BR><BR>[Calls]<UL><LI><a href="#[537f4ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdAdjustLCM
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[537dadc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;EvaluateScalingSize
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[53c2894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdSetSourceVideoSize
<LI><a href="#[53c2af8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdSetWindow
</UL><P><STRONG><a name="[53c2894]"></a>vdSetSourceVideoSize</STRONG> (ARM, 96 bytes, Stack size 48 bytes, vp_video.o(i.vdSetSourceVideoSize))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[537ffb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdAdjustWindow
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[537e7dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdSetLocalSourceWindow
<LI><a href="#[537e670]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdSetRemoteSourceWindow
</UL><P><STRONG><a name="[53c2af8]"></a>vdSetWindow</STRONG> (ARM, 140 bytes, Stack size 56 bytes, vp_video.o(i.vdSetWindow))
<BR><BR>[Calls]<UL><LI><a href="#[4def640]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_lock
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[537ffb0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdAdjustWindow
<LI><a href="#[4def318]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_rmutex_unlock
</UL><BR>[Called By]<UL><LI><a href="#[537e858]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdSetLocalWindow
<LI><a href="#[537e6ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdSetRemoteWindow
</UL><P><STRONG><a name="[53c32d8]"></a>vdThreadEntry</STRONG> (ARM, 36 bytes, Stack size 16 bytes, vp_video.o(i.vdThreadEntry))
<BR><BR>[Calls]<UL><LI><a href="#[755e5fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msg_recv
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_video.o(i.vdInit)
</UL><P><STRONG><a name="[53c3828]"></a>vdThread_OnRefreshLcm</STRONG> (ARM, 4 bytes, Stack size 0 bytes, vp_video.o(i.vdThread_OnRefreshLcm))
<BR><BR>[Calls]<UL><LI><a href="#[5380228]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__vdRefreshLcm
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_video.o(i.vdRefreshLcm)
</UL><P><STRONG><a name="[53c0850]"></a>vdThread_OnUpdateRemote</STRONG> (ARM, 168 bytes, Stack size 24 bytes, vp_video.o(i.vdThread_OnUpdateRemote))
<BR><BR>[Calls]<UL><LI><a href="#[537dfe4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4decGetBuffer
<LI><a href="#[537df6c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vlcmIsConfigured
<LI><a href="#[537def8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4decGetInfo
<LI><a href="#[537e670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdSetRemoteSourceWindow
<LI><a href="#[537de84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vjpegdecGetInfo
<LI><a href="#[537f088]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_video.o(i.vdUpdateRemote)
</UL><P><STRONG><a name="[54d51f8]"></a>vgfxAddRef</STRONG> (ARM, 100 bytes, Stack size 48 bytes, vp_gfx.o(i.vgfxAddRef))
<BR><BR>[Calls]<UL><LI><a href="#[54d4710]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gfxOpenEnv
</UL><BR>[Called By]<UL><LI><a href="#[537ef34]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vgfxLock
</UL><P><STRONG><a name="[5430f94]"></a>vinfoBuildDate</STRONG> (ARM, 204 bytes, Stack size 64 bytes, vp_info.o(i.vinfoBuildDate))
<BR><BR>[Calls]<UL><LI><a href="#[75c3274]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_get_time
<LI><a href="#[544d544]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gmtime_r
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_info.o(.data)
</UL><P><STRONG><a name="[5431008]"></a>vinfoBuildTime</STRONG> (ARM, 120 bytes, Stack size 64 bytes, vp_info.o(i.vinfoBuildTime))
<BR><BR>[Calls]<UL><LI><a href="#[75c3274]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_get_time
<LI><a href="#[544d544]">&gt&gt</a>&nbsp;&nbsp;&nbsp;gmtime_r
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_info.o(.data)
</UL><P><STRONG><a name="[5430f20]"></a>vinfoBuildVer</STRONG> (ARM, 16 bytes, Stack size 0 bytes, vp_info.o(i.vinfoBuildVer))
<BR><BR>[Calls]<UL><LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_info.o(.data)
</UL><P><STRONG><a name="[544ef68]"></a>vinfoDrawYUV</STRONG> (ARM, 120 bytes, Stack size 12 bytes, vp_info.o(i.vinfoDrawYUV))
<BR>[Address Reference Count : 1]<UL><LI> vp_info.o(i.vinfoDrawContent)
</UL><P><STRONG><a name="[544ec74]"></a>vinfoRegetXY</STRONG> (ARM, 216 bytes, Stack size 40 bytes, vp_info.o(i.vinfoRegetXY))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d2c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_sdiv
</UL><BR>[Called By]<UL><LI><a href="#[5456a08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoDrawContent
</UL><P><STRONG><a name="[544ece8]"></a>vinfoReplaceKeyWord</STRONG> (ARM, 488 bytes, Stack size 304 bytes, vp_info.o(i.vinfoReplaceKeyWord))
<BR><BR>[Calls]<UL><LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
</UL><BR>[Called By]<UL><LI><a href="#[5456a08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vinfoDrawContent
</UL><P><STRONG><a name="[5422c2c]"></a>vmp4AddRef</STRONG> (ARM, 48 bytes, Stack size 0 bytes, vp_mp4.o(i.vmp4AddRef))
<BR><BR>[Calls]<UL><LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
</UL><BR>[Called By]<UL><LI><a href="#[54ad508]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decAddRef
<LI><a href="#[54ad8ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encAddRef
</UL><P><STRONG><a name="[5422bb4]"></a>vmp4Callback_Null</STRONG> (ARM, 4 bytes, Stack size 0 bytes, vp_mp4.o(i.vmp4Callback_Null))
<BR>[Address Reference Count : 3]<UL><LI> vp_mp4.o(i.vmp4decDecRef)
<LI> vp_mp4.o(i.vmp4encAddRef)
<LI> vp_mp4.o(i.vmp4encDecRef)
</UL><P><STRONG><a name="[542284c]"></a>vmp4DecRef</STRONG> (ARM, 76 bytes, Stack size 8 bytes, vp_mp4.o(i.vmp4DecRef))
<BR><BR>[Calls]<UL><LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
</UL><BR>[Called By]<UL><LI><a href="#[54ad494]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4decDecRef
<LI><a href="#[54ad57c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vmp4encDecRef
</UL><P><STRONG><a name="[54225d0]"></a>vmp4decDoneCallback</STRONG> (ARM, 24 bytes, Stack size 0 bytes, vp_mp4.o(i.vmp4decDoneCallback))
<BR><BR>[Calls]<UL><LI><a href="#[755e510]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_pc_try_consume
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_mp4.o(i.vmp4decAddRef)
</UL><P><STRONG><a name="[54224dc]"></a>vmp4decErrorCallback</STRONG> (ARM, 56 bytes, Stack size 8 bytes, vp_mp4.o(i.vmp4decErrorCallback))
<BR><BR>[Calls]<UL><LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[54ad238]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4ResumeDecoder
<LI><a href="#[755e510]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_pc_try_consume
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_mp4.o(i.vmp4decAddRef)
</UL><P><STRONG><a name="[53c354c]"></a>vmp4decGetUVSize</STRONG> (ARM, 20 bytes, Stack size 0 bytes, vp_video.o(i.vmp4decGetUVSize))
<BR>[Called By]<UL><LI><a href="#[537f088]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vdThread_OnUpdateRemote_OnRefresh
</UL><P><STRONG><a name="[5422558]"></a>vmp4decWaitCallback</STRONG> (ARM, 56 bytes, Stack size 8 bytes, vp_mp4.o(i.vmp4decWaitCallback))
<BR><BR>[Calls]<UL><LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[54aca54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4ResetDecoder
<LI><a href="#[755e510]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_pc_try_consume
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_mp4.o(i.vmp4decAddRef)
</UL><P><STRONG><a name="[5422b3c]"></a>vmp4encDoneCallback</STRONG> (ARM, 256 bytes, Stack size 24 bytes, vp_mp4.o(i.vmp4encDoneCallback))
<BR><BR>[Calls]<UL><LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[54acb3c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;mp4GetEncBitStreamLength
<LI><a href="#[54acac8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_divtest
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4efdcf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listAttach
<LI><a href="#[54ad728]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufMP4BitstreamDecRef
<LI><a href="#[755e510]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_pc_try_consume
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_mp4.o(i.vmp4encAddRef)
</UL><P><STRONG><a name="[5422ac0]"></a>vmp4encErrorCallback</STRONG> (ARM, 108 bytes, Stack size 16 bytes, vp_mp4.o(i.vmp4encErrorCallback))
<BR><BR>[Calls]<UL><LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[54ad728]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bufMP4BitstreamDecRef
<LI><a href="#[755e510]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_pc_try_consume
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_mp4.o(i.vmp4encAddRef)
</UL><P><STRONG><a name="[4db5f78]"></a>vp_bitrate_control_change</STRONG> (ARM, 252 bytes, Stack size 112 bytes, vp_bitrate_control.o(i.vp_bitrate_control_change))
<BR><BR>[Calls]<UL><LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[4db4e08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vcptGetWindow
<LI><a href="#[4db4d88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoDynamicBitrate
<LI><a href="#[4db4d10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vmp4encGetQuality
<LI><a href="#[4db4f54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fflt
<LI><a href="#[4db4ca4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[4db4e7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[4db4c20]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wb702SetVideoDynamicFramerate
</UL><BR>[Called By]<UL><LI><a href="#[4d87408]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_entry
</UL><P><STRONG><a name="[4d87408]"></a>vp_bitrate_control_entry</STRONG> (ARM, 80 bytes, Stack size 16 bytes, vp_bitrate_control.o(i.vp_bitrate_control_entry))
<BR><BR>[Calls]<UL><LI><a href="#[4d84430]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_msleep
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4db5ff8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_linkstat
<LI><a href="#[4db5f78]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_change
<LI><a href="#[4db5ef4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_linkrefresh
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_bitrate_control.o(i.vp_bitrate_control_init)
</UL><P><STRONG><a name="[4db5ef4]"></a>vp_bitrate_control_linkrefresh</STRONG> (ARM, 152 bytes, Stack size 32 bytes, vp_bitrate_control.o(i.vp_bitrate_control_linkrefresh))
<BR><BR>[Calls]<UL><LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4db5294]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listGetNext
<LI><a href="#[4db4ba8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_ticks_to_msec
<LI><a href="#[4d846e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_udiv
<LI><a href="#[4db5224]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listDetach
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[4d87408]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_entry
</UL><P><STRONG><a name="[4db5ff8]"></a>vp_bitrate_control_linkstat</STRONG> (ARM, 144 bytes, Stack size 24 bytes, vp_bitrate_control.o(i.vp_bitrate_control_linkstat))
<BR><BR>[Calls]<UL><LI><a href="#[4db5294]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listGetNext
<LI><a href="#[4db4f54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_fflt
<LI><a href="#[4db4ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_frdiv
<LI><a href="#[4db4e7c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;_ffix
</UL><BR>[Called By]<UL><LI><a href="#[4d87408]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_entry
</UL><P><STRONG><a name="[4db6c38]"></a>vp_bitrate_control_linkupdate</STRONG> (ARM, 248 bytes, Stack size 24 bytes, vp_bitrate_control.o(i.vp_bitrate_control_linkupdate))
<BR><BR>[Calls]<UL><LI><a href="#[4db5294]">&gt&gt</a>&nbsp;&nbsp;&nbsp;listGetNext
<LI><a href="#[4db4fc0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__NoPrintf
<LI><a href="#[4a555fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_interrupt_disable
<LI><a href="#[4c2e42c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_current_time
<LI><a href="#[4d322e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
</UL><BR>[Called By]<UL><LI><a href="#[4db5138]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vp_bitrate_control_write
</UL><P><STRONG><a name="[541d6ec]"></a>vvpeAddRef</STRONG> (ARM, 44 bytes, Stack size 8 bytes, vp_vpe.o(i.vvpeAddRef))
<BR><BR>[Calls]<UL><LI><a href="#[541bdd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;vpeInit
</UL><BR>[Called By]<UL><LI><a href="#[4d84278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeInit
<LI><a href="#[537ec00]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeLock
<LI><a href="#[5456be4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeTryLockInDsr
</UL><P><STRONG><a name="[541d608]"></a>vvpeDecRef</STRONG> (ARM, 20 bytes, Stack size 0 bytes, vp_vpe.o(i.vvpeDecRef))
<BR>[Called By]<UL><LI><a href="#[4d84278]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeInit
<LI><a href="#[537ea2c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;vvpeUnlock
</UL><P><STRONG><a name="[541d678]"></a>vvpeOnProcessOK</STRONG> (ARM, 16 bytes, Stack size 0 bytes, vp_vpe.o(i.vvpeOnProcessOK))
<BR><BR>[Calls]<UL><LI><a href="#[755e510]">&gt&gt</a>&nbsp;&nbsp;&nbsp;tt_pc_try_consume
</UL><BR>[Address Reference Count : 1]<UL><LI> vp_vpe.o(i.vvpeInit)
</UL><P><STRONG><a name="[860c8bc]"></a>w99702_serial_getc</STRONG> (ARM, 48 bytes, Stack size 0 bytes, w99702_serial_with_ints.o(i.w99702_serial_getc))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d668]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hi_uart_log_read
</UL><BR>[Address Reference Count : 1]<UL><LI> w99702_serial_with_ints.o(.data)
</UL><P><STRONG><a name="[860c934]"></a>w99702_serial_putc</STRONG> (ARM, 64 bytes, Stack size 8 bytes, w99702_serial_with_ints.o(i.w99702_serial_putc))
<BR><BR>[Calls]<UL><LI><a href="#[4e4d5f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hi_uart_log_write
</UL><BR>[Address Reference Count : 1]<UL><LI> w99702_serial_with_ints.o(.data)
</UL><P><STRONG><a name="[78a4080]"></a>wait_buf_empty</STRONG> (ARM, 496 bytes, Stack size 40 bytes, W99702_WM8978.o(i.wait_buf_empty))
<BR>[Called By]<UL><LI><a href="#[73658b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wm8978StopPlay
</UL><P><STRONG><a name="[796d5fc]"></a>wpa_alloc_eapol</STRONG> (ARM, 136 bytes, Stack size 32 bytes, wpa_supplicant.o(i.wpa_alloc_eapol))
<BR><BR>[Calls]<UL><LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL><BR>[Called By]<UL><LI><a href="#[796dadc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_wpa_alloc_eapol
<LI><a href="#[796e4b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_eapol_send
</UL><P><STRONG><a name="[7975508]"></a>wpa_blacklist_del</STRONG> (ARM, 152 bytes, Stack size 40 bytes, wpa_supplicant.o(i.wpa_blacklist_del))
<BR><BR>[Calls]<UL><LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[7968dd0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_auth_timeout
</UL><P><STRONG><a name="[9cfe1d4]"></a>wpa_cipher_txt</STRONG> (ARM, 76 bytes, Stack size 0 bytes, wpa.o(i.wpa_cipher_txt))
<BR>[Called By]<UL><LI><a href="#[9cf8490]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_check_group_cipher
<LI><a href="#[9cfb280]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_key_neg_complete
<LI><a href="#[9d00334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
</UL><P><STRONG><a name="[79b1fcc]"></a>wpa_config_get_line</STRONG> (ARM, 288 bytes, Stack size 40 bytes, config_file.o(i.wpa_config_get_line))
<BR><BR>[Calls]<UL><LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[743afd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strrchr
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[79b06dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;bf_fgets
</UL><BR>[Called By]<UL><LI><a href="#[79b05f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read
<LI><a href="#[79b2044]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_blob
<LI><a href="#[79b20c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_network
</UL><P><STRONG><a name="[9c67c68]"></a>wpa_config_parse_auth_alg</STRONG> (ARM, 332 bytes, Stack size 56 bytes, config.o(i.wpa_config_parse_auth_alg))
<BR><BR>[Calls]<UL><LI><a href="#[79b03a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_strdup
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c6824c]"></a>wpa_config_parse_bssid</STRONG> (ARM, 104 bytes, Stack size 24 bytes, config.o(i.wpa_config_parse_bssid))
<BR><BR>[Calls]<UL><LI><a href="#[9c5cac8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hwaddr_aton
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c62450]"></a>wpa_config_parse_cipher</STRONG> (ARM, 348 bytes, Stack size 40 bytes, config.o(i.wpa_config_parse_cipher))
<BR><BR>[Calls]<UL><LI><a href="#[79b03a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_strdup
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[9c67d64]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_group
<LI><a href="#[9c67e60]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_pairwise
</UL><P><STRONG><a name="[9c67b6c]"></a>wpa_config_parse_eap</STRONG> (ARM, 432 bytes, Stack size 56 bytes, config.o(i.wpa_config_parse_eap))
<BR><BR>[Calls]<UL><LI><a href="#[79b03a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_strdup
<LI><a href="#[7404e10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[9c5c970]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_get_type
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c67d64]"></a>wpa_config_parse_group</STRONG> (ARM, 104 bytes, Stack size 16 bytes, config.o(i.wpa_config_parse_group))
<BR><BR>[Calls]<UL><LI><a href="#[9c62450]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_cipher
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c68344]"></a>wpa_config_parse_int</STRONG> (ARM, 180 bytes, Stack size 24 bytes, config.o(i.wpa_config_parse_int))
<BR><BR>[Calls]<UL><LI><a href="#[4dee704]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c67f60]"></a>wpa_config_parse_key_mgmt</STRONG> (ARM, 380 bytes, Stack size 56 bytes, config.o(i.wpa_config_parse_key_mgmt))
<BR><BR>[Calls]<UL><LI><a href="#[79b03a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_strdup
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c67e60]"></a>wpa_config_parse_pairwise</STRONG> (ARM, 104 bytes, Stack size 16 bytes, config.o(i.wpa_config_parse_pairwise))
<BR><BR>[Calls]<UL><LI><a href="#[9c62450]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_cipher
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c6805c]"></a>wpa_config_parse_proto</STRONG> (ARM, 332 bytes, Stack size 56 bytes, config.o(i.wpa_config_parse_proto))
<BR><BR>[Calls]<UL><LI><a href="#[79b03a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_strdup
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c68154]"></a>wpa_config_parse_psk</STRONG> (ARM, 348 bytes, Stack size 32 bytes, config.o(i.wpa_config_parse_psk))
<BR><BR>[Calls]<UL><LI><a href="#[743afd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strrchr
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[9c5cb38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_ascii_key
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9c5ca58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hexstr2bin
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[9c5c9e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_key
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[82c8604]"></a>wpa_config_parse_str</STRONG> (ARM, 272 bytes, Stack size 40 bytes, config.o(i.wpa_config_parse_str))
<BR><BR>[Calls]<UL><LI><a href="#[9c63ef8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_string
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[9c5cb38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_ascii_key
<LI><a href="#[7968b60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_ascii
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c63ef8]"></a>wpa_config_parse_string</STRONG> (ARM, 184 bytes, Stack size 24 bytes, config.o(i.wpa_config_parse_string))
<BR><BR>[Calls]<UL><LI><a href="#[743afd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strrchr
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[79b03a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_strdup
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[9c5ca58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hexstr2bin
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[82c8604]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_str
<LI><a href="#[9c612dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_wep_key
</UL><P><STRONG><a name="[9c612dc]"></a>wpa_config_parse_wep_key</STRONG> (ARM, 196 bytes, Stack size 56 bytes, config.o(i.wpa_config_parse_wep_key))
<BR><BR>[Calls]<UL><LI><a href="#[9c63ef8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_string
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
<LI><a href="#[9c5c9e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_key
</UL><BR>[Called By]<UL><LI><a href="#[9c67a70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_wep_key0
<LI><a href="#[9c67970]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_wep_key1
<LI><a href="#[9c67870]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_wep_key2
<LI><a href="#[9c67770]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_wep_key3
</UL><P><STRONG><a name="[9c67a70]"></a>wpa_config_parse_wep_key0</STRONG> (ARM, 40 bytes, Stack size 8 bytes, config.o(i.wpa_config_parse_wep_key0))
<BR><BR>[Calls]<UL><LI><a href="#[9c612dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_wep_key
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c67970]"></a>wpa_config_parse_wep_key1</STRONG> (ARM, 40 bytes, Stack size 8 bytes, config.o(i.wpa_config_parse_wep_key1))
<BR><BR>[Calls]<UL><LI><a href="#[9c612dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_wep_key
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c67870]"></a>wpa_config_parse_wep_key2</STRONG> (ARM, 40 bytes, Stack size 8 bytes, config.o(i.wpa_config_parse_wep_key2))
<BR><BR>[Calls]<UL><LI><a href="#[9c612dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_wep_key
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c67770]"></a>wpa_config_parse_wep_key3</STRONG> (ARM, 40 bytes, Stack size 8 bytes, config.o(i.wpa_config_parse_wep_key3))
<BR><BR>[Calls]<UL><LI><a href="#[9c612dc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_parse_wep_key
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[79b2044]"></a>wpa_config_read_blob</STRONG> (ARM, 316 bytes, Stack size 304 bytes, config_file.o(i.wpa_config_read_blob))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7404e10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[79b1fcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_get_line
<LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[79b03a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_strdup
<LI><a href="#[79aff88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;base64_decode
<LI><a href="#[79aff0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_free_blob
</UL><BR>[Called By]<UL><LI><a href="#[79b05f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read
</UL><P><STRONG><a name="[79b20c0]"></a>wpa_config_read_network</STRONG> (ARM, 340 bytes, Stack size 304 bytes, config_file.o(i.wpa_config_read_network))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[79b00ec]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_set_network_defaults
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4dee698]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[79b0078]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_set
<LI><a href="#[79b1fcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_get_line
<LI><a href="#[79b164c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_validate_network
<LI><a href="#[79afffc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_free_ssid
</UL><BR>[Called By]<UL><LI><a href="#[79b05f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read
</UL><P><STRONG><a name="[79b164c]"></a>wpa_config_validate_network</STRONG> (ARM, 176 bytes, Stack size 16 bytes, config_file.o(i.wpa_config_validate_network))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[79afe1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_update_psk
</UL><BR>[Called By]<UL><LI><a href="#[79b20c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_read_network
</UL><P><STRONG><a name="[9c67be8]"></a>wpa_config_write_auth_alg</STRONG> (ARM, 228 bytes, Stack size 40 bytes, config.o(i.wpa_config_write_auth_alg))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c681d0]"></a>wpa_config_write_bssid</STRONG> (ARM, 116 bytes, Stack size 32 bytes, config.o(i.wpa_config_write_bssid))
<BR><BR>[Calls]<UL><LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c621c4]"></a>wpa_config_write_cipher</STRONG> (ARM, 328 bytes, Stack size 40 bytes, config.o(i.wpa_config_write_cipher))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
</UL><BR>[Called By]<UL><LI><a href="#[9c67ce8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_group
<LI><a href="#[9c67de0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_pairwise
</UL><P><STRONG><a name="[9c67af0]"></a>wpa_config_write_eap</STRONG> (ARM, 184 bytes, Stack size 40 bytes, config.o(i.wpa_config_write_eap))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[9c5c8fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eap_get_name
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c67ce8]"></a>wpa_config_write_group</STRONG> (ARM, 8 bytes, Stack size 0 bytes, config.o(i.wpa_config_write_group))
<BR><BR>[Calls]<UL><LI><a href="#[9c621c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_cipher
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c682c8]"></a>wpa_config_write_int</STRONG> (ARM, 64 bytes, Stack size 16 bytes, config.o(i.wpa_config_write_int))
<BR><BR>[Calls]<UL><LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c67ee0]"></a>wpa_config_write_key_mgmt</STRONG> (ARM, 348 bytes, Stack size 40 bytes, config.o(i.wpa_config_write_key_mgmt))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c67de0]"></a>wpa_config_write_pairwise</STRONG> (ARM, 8 bytes, Stack size 0 bytes, config.o(i.wpa_config_write_pairwise))
<BR><BR>[Calls]<UL><LI><a href="#[9c621c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_cipher
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c67fe0]"></a>wpa_config_write_proto</STRONG> (ARM, 148 bytes, Stack size 32 bytes, config.o(i.wpa_config_write_proto))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[4defbf8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;snprintf
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c680d8]"></a>wpa_config_write_psk</STRONG> (ARM, 68 bytes, Stack size 8 bytes, config.o(i.wpa_config_write_psk))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[9c62f9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_string_ascii
<LI><a href="#[9c62f1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_string_hex
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[82c8588]"></a>wpa_config_write_str</STRONG> (ARM, 72 bytes, Stack size 8 bytes, config.o(i.wpa_config_write_str))
<BR><BR>[Calls]<UL><LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[9c63c70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_string
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c63c70]"></a>wpa_config_write_string</STRONG> (ARM, 56 bytes, Stack size 0 bytes, config.o(i.wpa_config_write_string))
<BR><BR>[Calls]<UL><LI><a href="#[9c62f9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_string_ascii
<LI><a href="#[9c62f1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_string_hex
</UL><BR>[Called By]<UL><LI><a href="#[82c8588]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_str
<LI><a href="#[9c60a1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_wep_key
</UL><P><STRONG><a name="[9c62f9c]"></a>wpa_config_write_string_ascii</STRONG> (ARM, 76 bytes, Stack size 24 bytes, config.o(i.wpa_config_write_string_ascii))
<BR><BR>[Calls]<UL><LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[9c680d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_psk
<LI><a href="#[9c63c70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_string
</UL><P><STRONG><a name="[9c62f1c]"></a>wpa_config_write_string_hex</STRONG> (ARM, 64 bytes, Stack size 24 bytes, config.o(i.wpa_config_write_string_hex))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[9c5c520]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_snprintf_hex
</UL><BR>[Called By]<UL><LI><a href="#[9c680d8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_psk
<LI><a href="#[9c63c70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_string
</UL><P><STRONG><a name="[9c60a1c]"></a>wpa_config_write_wep_key</STRONG> (ARM, 36 bytes, Stack size 0 bytes, config.o(i.wpa_config_write_wep_key))
<BR><BR>[Calls]<UL><LI><a href="#[9c63c70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_string
</UL><BR>[Called By]<UL><LI><a href="#[9c679f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_wep_key0
<LI><a href="#[9c678f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_wep_key1
<LI><a href="#[9c677f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_wep_key2
<LI><a href="#[9c676f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_wep_key3
</UL><P><STRONG><a name="[9c679f0]"></a>wpa_config_write_wep_key0</STRONG> (ARM, 12 bytes, Stack size 0 bytes, config.o(i.wpa_config_write_wep_key0))
<BR><BR>[Calls]<UL><LI><a href="#[9c60a1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_wep_key
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c678f0]"></a>wpa_config_write_wep_key1</STRONG> (ARM, 12 bytes, Stack size 0 bytes, config.o(i.wpa_config_write_wep_key1))
<BR><BR>[Calls]<UL><LI><a href="#[9c60a1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_wep_key
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c677f0]"></a>wpa_config_write_wep_key2</STRONG> (ARM, 12 bytes, Stack size 0 bytes, config.o(i.wpa_config_write_wep_key2))
<BR><BR>[Calls]<UL><LI><a href="#[9c60a1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_wep_key
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[9c676f0]"></a>wpa_config_write_wep_key3</STRONG> (ARM, 12 bytes, Stack size 0 bytes, config.o(i.wpa_config_write_wep_key3))
<BR><BR>[Calls]<UL><LI><a href="#[9c60a1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_write_wep_key
</UL><BR>[Address Reference Count : 1]<UL><LI> config.o(.constdata)
</UL><P><STRONG><a name="[836e000]"></a>wpa_driver_marvell_associate</STRONG> (ARM, 272 bytes, Stack size 32 bytes, driver_marvell.o(i.wpa_driver_marvell_associate))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[836b0e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;marvell2param
<LI><a href="#[839b84c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_mode
<LI><a href="#[839b9c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_wpa
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[836bee0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_wpa_ie
<LI><a href="#[839b7cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_freq
<LI><a href="#[839b74c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_ssid
</UL><BR>[Address Reference Count : 1]<UL><LI> driver_marvell.o(.data)
</UL><P><STRONG><a name="[836e108]"></a>wpa_driver_marvell_deauthenticate</STRONG> (ARM, 56 bytes, Stack size 16 bytes, driver_marvell.o(i.wpa_driver_marvell_deauthenticate))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[836b584]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_mlme
</UL><BR>[Address Reference Count : 1]<UL><LI> driver_marvell.o(.data)
</UL><P><STRONG><a name="[836e3ac]"></a>wpa_driver_marvell_deinit</STRONG> (ARM, 76 bytes, Stack size 8 bytes, driver_marvell.o(i.wpa_driver_marvell_deinit))
<BR><BR>[Calls]<UL><LI><a href="#[839b9c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_wpa
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[839b2f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_deinit
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Address Reference Count : 1]<UL><LI> driver_marvell.o(.data)
</UL><P><STRONG><a name="[836e084]"></a>wpa_driver_marvell_disassociate</STRONG> (ARM, 56 bytes, Stack size 16 bytes, driver_marvell.o(i.wpa_driver_marvell_disassociate))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[836b584]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_mlme
</UL><BR>[Address Reference Count : 1]<UL><LI> driver_marvell.o(.data)
</UL><P><STRONG><a name="[836e528]"></a>wpa_driver_marvell_get_bssid</STRONG> (ARM, 8 bytes, Stack size 0 bytes, driver_marvell.o(i.wpa_driver_marvell_get_bssid))
<BR><BR>[Calls]<UL><LI><a href="#[839b54c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_bssid
</UL><BR>[Address Reference Count : 1]<UL><LI> driver_marvell.o(.data)
</UL><P><STRONG><a name="[836e190]"></a>wpa_driver_marvell_get_scan_results</STRONG> (ARM, 8 bytes, Stack size 0 bytes, driver_marvell.o(i.wpa_driver_marvell_get_scan_results))
<BR><BR>[Calls]<UL><LI><a href="#[839b4c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_get_scan_results
</UL><BR>[Address Reference Count : 1]<UL><LI> driver_marvell.o(.data)
</UL><P><STRONG><a name="[836e42c]"></a>wpa_driver_marvell_init</STRONG> (ARM, 164 bytes, Stack size 16 bytes, driver_marvell.o(i.wpa_driver_marvell_init))
<BR><BR>[Calls]<UL><LI><a href="#[839b8cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;marvell_init_ioctl_numbers
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[839b3c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[839b2f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_deinit
</UL><BR>[Address Reference Count : 1]<UL><LI> driver_marvell.o(.data)
</UL><P><STRONG><a name="[836b584]"></a>wpa_driver_marvell_mlme</STRONG> (ARM, 280 bytes, Stack size 48 bytes, driver_marvell.o(i.wpa_driver_marvell_mlme))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[836b0e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;marvell2param
<LI><a href="#[836bc58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;marvell_ioctl
<LI><a href="#[836e4a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_key
<LI><a href="#[839b9c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_wpa
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
</UL><BR>[Called By]<UL><LI><a href="#[836e108]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_deauthenticate
<LI><a href="#[836e084]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_disassociate
</UL><P><STRONG><a name="[836e218]"></a>wpa_driver_marvell_scan</STRONG> (ARM, 188 bytes, Stack size 56 bytes, driver_marvell.o(i.wpa_driver_marvell_scan))
<BR><BR>[Calls]<UL><LI><a href="#[839b6d0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_scan
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[836bc58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;marvell_ioctl
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[79696a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
</UL><BR>[Address Reference Count : 1]<UL><LI> driver_marvell.o(.data)
</UL><P><STRONG><a name="[836df7c]"></a>wpa_driver_marvell_set_auth_alg</STRONG> (ARM, 160 bytes, Stack size 24 bytes, driver_marvell.o(i.wpa_driver_marvell_set_auth_alg))
<BR><BR>[Calls]<UL><LI><a href="#[839b9c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_wpa
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[836b0e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;marvell2param
</UL><BR>[Address Reference Count : 1]<UL><LI> driver_marvell.o(.data)
</UL><P><STRONG><a name="[836e320]"></a>wpa_driver_marvell_set_countermeasures</STRONG> (ARM, 108 bytes, Stack size 16 bytes, driver_marvell.o(i.wpa_driver_marvell_set_countermeasures))
<BR><BR>[Calls]<UL><LI><a href="#[839b9c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_wpa
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Address Reference Count : 1]<UL><LI> driver_marvell.o(.data)
</UL><P><STRONG><a name="[836e294]"></a>wpa_driver_marvell_set_drop_unencrypted</STRONG> (ARM, 32 bytes, Stack size 8 bytes, driver_marvell.o(i.wpa_driver_marvell_set_drop_unencrypted))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Address Reference Count : 1]<UL><LI> driver_marvell.o(.data)
</UL><P><STRONG><a name="[836e4a8]"></a>wpa_driver_marvell_set_key</STRONG> (ARM, 476 bytes, Stack size 80 bytes, driver_marvell.o(i.wpa_driver_marvell_set_key))
<BR><BR>[Calls]<UL><LI><a href="#[836bc58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;marvell_ioctl
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[4ced1f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memset
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[836b584]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_mlme
</UL><BR>[Address Reference Count : 1]<UL><LI> driver_marvell.o(.data)
</UL><P><STRONG><a name="[836de74]"></a>wpa_driver_marvell_set_mode</STRONG> (ARM, 8 bytes, Stack size 0 bytes, driver_marvell.o(i.wpa_driver_marvell_set_mode))
<BR><BR>[Calls]<UL><LI><a href="#[839b84c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_mode
</UL><BR>[Address Reference Count : 1]<UL><LI> driver_marvell.o(.data)
</UL><P><STRONG><a name="[836def4]"></a>wpa_driver_marvell_set_operstate</STRONG> (ARM, 8 bytes, Stack size 0 bytes, driver_marvell.o(i.wpa_driver_marvell_set_operstate))
<BR><BR>[Calls]<UL><LI><a href="#[839b440]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_operstate
</UL><BR>[Address Reference Count : 1]<UL><LI> driver_marvell.o(.data)
</UL><P><STRONG><a name="[836bee0]"></a>wpa_driver_marvell_set_wpa_ie</STRONG> (ARM, 80 bytes, Stack size 16 bytes, driver_marvell.o(i.wpa_driver_marvell_set_wpa_ie))
<BR><BR>[Calls]<UL><LI><a href="#[836bc58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;marvell_ioctl
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[836e000]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_associate
<LI><a href="#[839b9c8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_marvell_set_wpa
</UL><P><STRONG><a name="[8403ccc]"></a>wpa_driver_wext_event_link</STRONG> (ARM, 136 bytes, Stack size 128 bytes, driver_wext.o(i.wpa_driver_wext_event_link))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7968bd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event
</UL><BR>[Called By]<UL><LI><a href="#[8406d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_receive
<LI><a href="#[8403d4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_rtm_newlink
</UL><P><STRONG><a name="[8406d48]"></a>wpa_driver_wext_event_receive</STRONG> (ARM, 560 bytes, Stack size 8304 bytes, driver_wext.o(i.wpa_driver_wext_event_receive))
<BR><BR>[Calls]<UL><LI><a href="#[7966dfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fix_size_read
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[8403d4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_rtm_newlink
<LI><a href="#[8403ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_link
<LI><a href="#[4bba3d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;select
</UL><BR>[Address Reference Count : 1]<UL><LI> driver_wext.o(i.wpa_driver_wext_init)
</UL><P><STRONG><a name="[8403d4c]"></a>wpa_driver_wext_event_rtm_newlink</STRONG> (ARM, 324 bytes, Stack size 40 bytes, driver_wext.o(i.wpa_driver_wext_event_rtm_newlink))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[8406c44]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_send_oper_ifla
<LI><a href="#[84029a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless
<LI><a href="#[8403ccc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_link
</UL><BR>[Called By]<UL><LI><a href="#[8406d48]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_receive
</UL><P><STRONG><a name="[84029a4]"></a>wpa_driver_wext_event_wireless</STRONG> (ARM, 976 bytes, Stack size 176 bytes, driver_wext.o(i.wpa_driver_wext_event_wireless))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[8402700]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless_custom
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8402670]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless_pmkidcand
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[7968bd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event
<LI><a href="#[84025d8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless_michaelmicfailure
<LI><a href="#[7969720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
</UL><BR>[Called By]<UL><LI><a href="#[8403d4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_rtm_newlink
</UL><P><STRONG><a name="[8402700]"></a>wpa_driver_wext_event_wireless_custom</STRONG> (ARM, 380 bytes, Stack size 128 bytes, driver_wext.o(i.wpa_driver_wext_event_wireless_custom))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[71ec834]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[71ed28c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[7968bd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event
<LI><a href="#[558f384]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strspn
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[9c5ca58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hexstr2bin
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[84029a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless
</UL><P><STRONG><a name="[84025d8]"></a>wpa_driver_wext_event_wireless_michaelmicfailure</STRONG> (ARM, 132 bytes, Stack size 136 bytes, driver_wext.o(i.wpa_driver_wext_event_wireless_michaelmicfailure))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[7968bd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event
</UL><BR>[Called By]<UL><LI><a href="#[84029a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless
</UL><P><STRONG><a name="[8402670]"></a>wpa_driver_wext_event_wireless_pmkidcand</STRONG> (ARM, 160 bytes, Stack size 144 bytes, driver_wext.o(i.wpa_driver_wext_event_wireless_pmkidcand))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[7968bd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event
</UL><BR>[Called By]<UL><LI><a href="#[84029a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_wireless
</UL><P><STRONG><a name="[83acfc8]"></a>wpa_driver_wext_flush_pmkid</STRONG> (ARM, 16 bytes, Stack size 0 bytes, driver_wext.o(i.wpa_driver_wext_flush_pmkid))
<BR><BR>[Calls]<UL><LI><a href="#[8406fd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_pmksa
</UL><BR>[Called By]<UL><LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
</UL><P><STRONG><a name="[8406cc8]"></a>wpa_driver_wext_get_range</STRONG> (ARM, 340 bytes, Stack size 56 bytes, driver_wext.o(i.wpa_driver_wext_get_range))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
</UL><P><STRONG><a name="[8406fd8]"></a>wpa_driver_wext_pmksa</STRONG> (ARM, 200 bytes, Stack size 96 bytes, driver_wext.o(i.wpa_driver_wext_pmksa))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4defac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;perror
</UL><BR>[Called By]<UL><LI><a href="#[83acfc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_flush_pmkid
</UL><P><STRONG><a name="[8406c44]"></a>wpa_driver_wext_send_oper_ifla</STRONG> (ARM, 284 bytes, Stack size 56 bytes, driver_wext.o(i.wpa_driver_wext_send_oper_ifla))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[796840c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fix_size_write
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
</UL><BR>[Called By]<UL><LI><a href="#[839b2f8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_deinit
<LI><a href="#[8403d4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_event_rtm_newlink
<LI><a href="#[839b3c4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_init
<LI><a href="#[839b440]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_driver_wext_set_operstate
</UL><P><STRONG><a name="[7976600]"></a>wpa_drv_get_bssid</STRONG> (ARM, 28 bytes, Stack size 0 bytes, wpa_supplicant.o(i.wpa_drv_get_bssid))
<BR>[Called By]<UL><LI><a href="#[796e4b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_eapol_send
<LI><a href="#[796dc4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_bssid
<LI><a href="#[7968c54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_ssid
</UL><P><STRONG><a name="[79768d4]"></a>wpa_drv_get_capa</STRONG> (ARM, 28 bytes, Stack size 0 bytes, wpa_supplicant.o(i.wpa_drv_get_capa))
<BR>[Called By]<UL><LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[7967fac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_driver_init
<LI><a href="#[79733ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface2
</UL><P><STRONG><a name="[797383c]"></a>wpa_drv_get_mac_addr</STRONG> (ARM, 144 bytes, Stack size 40 bytes, wpa_supplicant.o(i.wpa_drv_get_mac_addr))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced420]">&gt&gt</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[4bfe888]">&gt&gt</a>&nbsp;&nbsp;&nbsp;ioctl
<LI><a href="#[4d32274]">&gt&gt</a>&nbsp;&nbsp;&nbsp;printf
<LI><a href="#[4bba4b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;close
</UL><BR>[Called By]<UL><LI><a href="#[7967fac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_driver_init
</UL><P><STRONG><a name="[7977630]"></a>wpa_drv_mlme_setprotection</STRONG> (ARM, 28 bytes, Stack size 0 bytes, wpa_supplicant.o(i.wpa_drv_mlme_setprotection))
<BR>[Called By]<UL><LI><a href="#[7969630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_clear_keys
<LI><a href="#[796d8cc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_mlme_setprotection
</UL><P><STRONG><a name="[7973748]"></a>wpa_drv_set_countermeasures</STRONG> (ARM, 28 bytes, Stack size 0 bytes, wpa_supplicant.o(i.wpa_drv_set_countermeasures))
<BR>[Called By]<UL><LI><a href="#[797336c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deinit_iface
<LI><a href="#[7967fac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_driver_init
</UL><P><STRONG><a name="[8311b00]"></a>wpa_drv_set_countermeasures</STRONG> (ARM, 28 bytes, Stack size 0 bytes, events.o(i.wpa_drv_set_countermeasures))
<BR>[Called By]<UL><LI><a href="#[8312c08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_michael_mic_failure
<LI><a href="#[8311a78]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_stop_countermeasures
</UL><P><STRONG><a name="[797694c]"></a>wpa_drv_set_drop_unencrypted</STRONG> (ARM, 28 bytes, Stack size 0 bytes, wpa_supplicant.o(i.wpa_drv_set_drop_unencrypted))
<BR>[Called By]<UL><LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[797336c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deinit_iface
<LI><a href="#[7967fac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_driver_init
</UL><P><STRONG><a name="[79776b0]"></a>wpa_drv_set_key</STRONG> (ARM, 104 bytes, Stack size 48 bytes, wpa_supplicant.o(i.wpa_drv_set_key))
<BR>[Called By]<UL><LI><a href="#[7969630]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_clear_keys
<LI><a href="#[796e438]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_set_wep_key
<LI><a href="#[7976a54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_set_wep_key
<LI><a href="#[796dd4c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_key
<LI><a href="#[79769d0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_wpa_none_key
</UL><P><STRONG><a name="[7976b40]"></a>wpa_drv_set_mode</STRONG> (ARM, 28 bytes, Stack size 0 bytes, wpa_supplicant.o(i.wpa_drv_set_mode))
<BR>[Called By]<UL><LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
</UL><P><STRONG><a name="[7977eb8]"></a>wpa_drv_set_operstate</STRONG> (ARM, 28 bytes, Stack size 0 bytes, wpa_supplicant.o(i.wpa_drv_set_operstate))
<BR>[Called By]<UL><LI><a href="#[7969b0c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
</UL><P><STRONG><a name="[79737c8]"></a>wpa_drv_set_wpa</STRONG> (ARM, 28 bytes, Stack size 0 bytes, wpa_supplicant.o(i.wpa_drv_set_wpa))
<BR>[Called By]<UL><LI><a href="#[797336c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deinit_iface
<LI><a href="#[7967fac]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_driver_init
</UL><P><STRONG><a name="[9d005cc]"></a>wpa_eapol_key_dump</STRONG> (ARM, 356 bytes, Stack size 56 bytes, wpa.o(i.wpa_eapol_key_dump))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
</UL><BR>[Called By]<UL><LI><a href="#[796802c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
</UL><P><STRONG><a name="[9cfc2bc]"></a>wpa_eapol_key_mic</STRONG> (ARM, 96 bytes, Stack size 32 bytes, wpa.o(i.wpa_eapol_key_mic))
<BR><BR>[Calls]<UL><LI><a href="#[9cf67ac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hmac_md5
<LI><a href="#[9cf673c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;hmac_sha1
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[9d00e70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
<LI><a href="#[9d00544]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_verify_eapol_key_mic
</UL><P><STRONG><a name="[9d00e70]"></a>wpa_eapol_key_send</STRONG> (ARM, 268 bytes, Stack size 72 bytes, wpa.o(i.wpa_eapol_key_send))
<BR><BR>[Calls]<UL><LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[9d00f60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_get_bssid
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[9cfc2bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_mic
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[9cfc244]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_ether_send
<LI><a href="#[9cf69f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_tx_eapol_key
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[9cf6ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_key_request
<LI><a href="#[9cfb304]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_2
<LI><a href="#[9cfbdc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_4
<LI><a href="#[9cfb8a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_4_of_4
</UL><P><STRONG><a name="[796e438]"></a>wpa_eapol_set_wep_key</STRONG> (ARM, 116 bytes, Stack size 32 bytes, wpa_supplicant.o(i.wpa_eapol_set_wep_key))
<BR><BR>[Calls]<UL><LI><a href="#[79776b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_key
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_eapol)
</UL><P><STRONG><a name="[796d588]"></a>wpa_ether_send</STRONG> (ARM, 84 bytes, Stack size 8 bytes, wpa_supplicant.o(i.wpa_ether_send))
<BR><BR>[Calls]<UL><LI><a href="#[7966b34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;l2_packet_send
</UL><BR>[Called By]<UL><LI><a href="#[796dbd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_wpa_ether_send
<LI><a href="#[796e4b4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_eapol_send
</UL><P><STRONG><a name="[831229c]"></a>wpa_find_assoc_pmkid</STRONG> (ARM, 156 bytes, Stack size 56 bytes, events.o(i.wpa_find_assoc_pmkid))
<BR><BR>[Calls]<UL><LI><a href="#[796748c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_parse_own_wpa_ie
<LI><a href="#[7968edc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_set_current
<LI><a href="#[7968e58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_pmkid_attempt
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[8312afc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_associnfo
</UL><P><STRONG><a name="[9cfdf44]"></a>wpa_gen_wpa_ie_rsn</STRONG> (ARM, 384 bytes, Stack size 40 bytes, wpa.o(i.wpa_gen_wpa_ie_rsn))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[79691c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie_default
</UL><P><STRONG><a name="[9cfdecc]"></a>wpa_gen_wpa_ie_wpa</STRONG> (ARM, 356 bytes, Stack size 40 bytes, wpa.o(i.wpa_gen_wpa_ie_wpa))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[79691c0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie_default
</UL><P><STRONG><a name="[796c6cc]"></a>wpa_get_beacon_ie</STRONG> (ARM, 240 bytes, Stack size 40 bytes, wpa_supplicant.o(i.wpa_get_beacon_ie))
<BR><BR>[Calls]<UL><LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[796952c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_wpa_ie
<LI><a href="#[79694b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_rsn_ie
</UL><BR>[Called By]<UL><LI><a href="#[796db54]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_beacon_ie
</UL><P><STRONG><a name="[9d011e4]"></a>wpa_parse_wpa_ie_rsn</STRONG> (ARM, 684 bytes, Stack size 40 bytes, wpa.o(i.wpa_parse_wpa_ie_rsn))
<BR><BR>[Calls]<UL><LI><a href="#[9cfc958]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rsn_selector_to_bitfield
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
</UL><BR>[Called By]<UL><LI><a href="#[7969244]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie
</UL><P><STRONG><a name="[9d01260]"></a>wpa_parse_wpa_ie_wpa</STRONG> (ARM, 652 bytes, Stack size 40 bytes, wpa.o(i.wpa_parse_wpa_ie_wpa))
<BR><BR>[Calls]<UL><LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[9cfcbe4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_selector_to_bitfield
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[7969244]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie
</UL><P><STRONG><a name="[9cfbe48]"></a>wpa_pmk_to_ptk</STRONG> (ARM, 276 bytes, Stack size 144 bytes, wpa.o(i.wpa_pmk_to_ptk))
<BR><BR>[Calls]<UL><LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9cf681c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;sha1_prf
<LI><a href="#[9c5c9e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_key
</UL><BR>[Called By]<UL><LI><a href="#[9d003b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4
</UL><P><STRONG><a name="[9cf8200]"></a>wpa_report_ie_mismatch</STRONG> (ARM, 300 bytes, Stack size 48 bytes, wpa.o(i.wpa_report_ie_mismatch))
<BR><BR>[Calls]<UL><LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[9cfb928]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_validate_ie
</UL><P><STRONG><a name="[8406594]"></a>wpa_scan_result_compar</STRONG> (ARM, 216 bytes, Stack size 4 bytes, driver_wext.o(i.wpa_scan_result_compar))
<BR>[Address Reference Count : 1]<UL><LI> driver_wext.o(i.wpa_driver_wext_get_scan_results)
</UL><P><STRONG><a name="[9cfcbe4]"></a>wpa_selector_to_bitfield</STRONG> (ARM, 148 bytes, Stack size 8 bytes, wpa.o(i.wpa_selector_to_bitfield))
<BR><BR>[Calls]<UL><LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
</UL><BR>[Called By]<UL><LI><a href="#[9d01260]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie_wpa
</UL><P><STRONG><a name="[7976a54]"></a>wpa_set_wep_key</STRONG> (ARM, 72 bytes, Stack size 32 bytes, wpa_supplicant.o(i.wpa_set_wep_key))
<BR><BR>[Calls]<UL><LI><a href="#[79776b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_key
</UL><BR>[Called By]<UL><LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
</UL><P><STRONG><a name="[9d00ee8]"></a>wpa_sm_alloc_eapol</STRONG> (ARM, 52 bytes, Stack size 16 bytes, wpa.o(i.wpa_sm_alloc_eapol))
<BR>[Called By]<UL><LI><a href="#[9cf6ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_key_request
<LI><a href="#[9cfbebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_pmk
<LI><a href="#[9cfb304]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_2
<LI><a href="#[9cfbdc8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_4
<LI><a href="#[9cfb8a8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_4_of_4
</UL><P><STRONG><a name="[9cfc244]"></a>wpa_sm_ether_send</STRONG> (ARM, 40 bytes, Stack size 8 bytes, wpa.o(i.wpa_sm_ether_send))
<BR>[Called By]<UL><LI><a href="#[9d00e70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
<LI><a href="#[9cfbebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_pmk
</UL><P><STRONG><a name="[9d00f60]"></a>wpa_sm_get_bssid</STRONG> (ARM, 16 bytes, Stack size 0 bytes, wpa.o(i.wpa_sm_get_bssid))
<BR>[Called By]<UL><LI><a href="#[9d00e70]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
<LI><a href="#[9cf6ebc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_key_request
</UL><P><STRONG><a name="[9cff6a8]"></a>wpa_sm_get_state</STRONG> (ARM, 16 bytes, Stack size 0 bytes, wpa.o(i.wpa_sm_get_state))
<BR>[Called By]<UL><LI><a href="#[7968874]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_notify_disassoc
<LI><a href="#[9d00334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
</UL><P><STRONG><a name="[9cfb7a8]"></a>wpa_sm_mlme_setprotection</STRONG> (ARM, 16 bytes, Stack size 0 bytes, wpa.o(i.wpa_sm_mlme_setprotection))
<BR>[Called By]<UL><LI><a href="#[9d0043c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
</UL><P><STRONG><a name="[9cffdbc]"></a>wpa_sm_pmksa_free_cb</STRONG> (ARM, 160 bytes, Stack size 16 bytes, wpa.o(i.wpa_sm_pmksa_free_cb))
<BR><BR>[Calls]<UL><LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa.o(i.wpa_sm_init)
</UL><P><STRONG><a name="[9cf89cc]"></a>wpa_sm_set_key</STRONG> (ARM, 80 bytes, Stack size 40 bytes, wpa.o(i.wpa_sm_set_key))
<BR>[Called By]<UL><LI><a href="#[9cfb384]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_gtk
<LI><a href="#[9cfb828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_ptk
</UL><P><STRONG><a name="[9cfbfb8]"></a>wpa_sm_set_state</STRONG> (ARM, 12 bytes, Stack size 0 bytes, wpa.o(i.wpa_sm_set_state))
<BR>[Called By]<UL><LI><a href="#[9cfb280]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_key_neg_complete
<LI><a href="#[9d00334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
<LI><a href="#[9d003b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4
<LI><a href="#[9d0043c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
</UL><P><STRONG><a name="[9cffb3c]"></a>wpa_sm_start_preauth</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wpa.o(i.wpa_sm_start_preauth))
<BR><BR>[Calls]<UL><LI><a href="#[9cf696c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_candidate_process
</UL><BR>[Address Reference Count : 2]<UL><LI> wpa.o(i.wpa_sm_deinit)
<LI> wpa.o(i.wpa_supplicant_key_neg_complete)
</UL><P><STRONG><a name="[796e2ac]"></a>wpa_supplicant_aborted_cached</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wpa_supplicant.o(i.wpa_supplicant_aborted_cached))
<BR><BR>[Calls]<UL><LI><a href="#[7966c20]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_aborted_cached
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_eapol)
</UL><P><STRONG><a name="[796d9d4]"></a>wpa_supplicant_add_pmkid</STRONG> (ARM, 28 bytes, Stack size 0 bytes, wpa_supplicant.o(i.wpa_supplicant_add_pmkid))
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_wpa)
</UL><P><STRONG><a name="[9cf8490]"></a>wpa_supplicant_check_group_cipher</STRONG> (ARM, 236 bytes, Stack size 16 bytes, wpa.o(i.wpa_supplicant_check_group_cipher))
<BR><BR>[Calls]<UL><LI><a href="#[9cfe1d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_cipher_txt
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[9cfb728]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_pairwise_gtk
<LI><a href="#[9cfb48c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_rsn
<LI><a href="#[9cfb404]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_wpa
</UL><P><STRONG><a name="[796ef34]"></a>wpa_supplicant_cleanup</STRONG> (ARM, 220 bytes, Stack size 16 bytes, wpa_supplicant.o(i.wpa_supplicant_cleanup))
<BR><BR>[Calls]<UL><LI><a href="#[79670cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_scard_ctx
<LI><a href="#[796704c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_register_scard_ctx
<LI><a href="#[7966fd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;l2_packet_deinit
<LI><a href="#[796866c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_deinit
<LI><a href="#[79b025c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_free
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[79671c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_eapol
<LI><a href="#[7966f60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_deinit
<LI><a href="#[7968578]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_deinit
<LI><a href="#[7966ee4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_candidate_free
<LI><a href="#[7966e70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_deinit
<LI><a href="#[79687fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_blacklist_clear
<LI><a href="#[796904c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_scan
<LI><a href="#[7968dd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_auth_timeout
</UL><BR>[Called By]<UL><LI><a href="#[797336c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deinit_iface
</UL><P><STRONG><a name="[8468094]"></a>wpa_supplicant_ctrl_iface_msg_cb</STRONG> (ARM, 12 bytes, Stack size 0 bytes, ctrl_iface_udp.o(i.wpa_supplicant_ctrl_iface_msg_cb))
<BR>[Address Reference Count : 1]<UL><LI> ctrl_iface_udp.o(i.wpa_supplicant_ctrl_iface_init)
</UL><P><STRONG><a name="[846811c]"></a>wpa_supplicant_ctrl_iface_receive</STRONG> (ARM, 16 bytes, Stack size 8 bytes, ctrl_iface_udp.o(i.wpa_supplicant_ctrl_iface_receive))
<BR>[Address Reference Count : 1]<UL><LI> ctrl_iface_udp.o(i.wpa_supplicant_ctrl_iface_init)
</UL><P><STRONG><a name="[7972984]"></a>wpa_supplicant_daemon</STRONG> (ARM, 32 bytes, Stack size 8 bytes, wpa_supplicant.o(i.wpa_supplicant_daemon))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7967324]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_daemonize
</UL><BR>[Called By]<UL><LI><a href="#[5007624]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
<LI><a href="#[500752c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_run
</UL><P><STRONG><a name="[9d004c0]"></a>wpa_supplicant_decrypt_key_data</STRONG> (ARM, 332 bytes, Stack size 64 bytes, wpa.o(i.wpa_supplicant_decrypt_key_data))
<BR><BR>[Calls]<UL><LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9cf68fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rc4_skip
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[79b07bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[9cf688c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;aes_unwrap
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[9c5c9e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_key
</UL><BR>[Called By]<UL><LI><a href="#[796802c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
</UL><P><STRONG><a name="[797336c]"></a>wpa_supplicant_deinit_iface</STRONG> (ARM, 136 bytes, Stack size 8 bytes, wpa_supplicant.o(i.wpa_supplicant_deinit_iface))
<BR><BR>[Calls]<UL><LI><a href="#[7968388]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deauthenticate
<LI><a href="#[79737c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_wpa
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[797694c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_drop_unencrypted
<LI><a href="#[7973748]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_countermeasures
<LI><a href="#[7969630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_clear_keys
<LI><a href="#[796ef34]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
</UL><BR>[Called By]<UL><LI><a href="#[50075a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_add_iface
<LI><a href="#[7967dcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_remove_iface
</UL><P><STRONG><a name="[8312008]"></a>wpa_supplicant_dynamic_keys</STRONG> (ARM, 64 bytes, Stack size 0 bytes, events.o(i.wpa_supplicant_dynamic_keys))
<BR>[Called By]<UL><LI><a href="#[8312d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[8312c98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_disassoc
</UL><P><STRONG><a name="[796e4b4]"></a>wpa_supplicant_eapol_send</STRONG> (ARM, 400 bytes, Stack size 56 bytes, wpa_supplicant.o(i.wpa_supplicant_eapol_send))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7966c9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_get_current
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[7976600]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_get_bssid
<LI><a href="#[796d5fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_alloc_eapol
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[796d588]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_ether_send
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_eapol)
</UL><P><STRONG><a name="[8312d1c]"></a>wpa_supplicant_event_assoc</STRONG> (ARM, 496 bytes, Stack size 40 bytes, events.o(i.wpa_supplicant_event_assoc))
<BR><BR>[Calls]<UL><LI><a href="#[8312afc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_associnfo
<LI><a href="#[7969b0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[8312008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_dynamic_keys
<LI><a href="#[7969630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_clear_keys
<LI><a href="#[8311f84]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_config
<LI><a href="#[7968a64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_disassociate
<LI><a href="#[83108f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scard_init
<LI><a href="#[9cf6be4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_notify_assoc
<LI><a href="#[83107f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;l2_packet_notify_auth_start
<LI><a href="#[7968308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portEnabled
<LI><a href="#[7968288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portValid
<LI><a href="#[796999c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_eap_success
<LI><a href="#[7968dd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_auth_timeout
<LI><a href="#[796979c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_auth_timeout
<LI><a href="#[796904c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_scan
</UL><BR>[Called By]<UL><LI><a href="#[7968bd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event
</UL><P><STRONG><a name="[8312afc]"></a>wpa_supplicant_event_associnfo</STRONG> (ARM, 576 bytes, Stack size 40 bytes, events.o(i.wpa_supplicant_event_associnfo))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[7969434]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie
<LI><a href="#[831229c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_find_assoc_pmkid
<LI><a href="#[796952c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_wpa_ie
<LI><a href="#[79694b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_rsn_ie
</UL><BR>[Called By]<UL><LI><a href="#[7968bd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event
<LI><a href="#[8312d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
</UL><P><STRONG><a name="[8312c98]"></a>wpa_supplicant_event_disassoc</STRONG> (ARM, 208 bytes, Stack size 16 bytes, events.o(i.wpa_supplicant_event_disassoc))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[7968ae4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[79688f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_blacklist_add
<LI><a href="#[7968874]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_notify_disassoc
<LI><a href="#[8312008]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_dynamic_keys
<LI><a href="#[7969630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_clear_keys
<LI><a href="#[79689e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_mark_disassoc
</UL><BR>[Called By]<UL><LI><a href="#[7968bd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event
</UL><P><STRONG><a name="[8312a70]"></a>wpa_supplicant_event_interface_status</STRONG> (ARM, 160 bytes, Stack size 16 bytes, events.o(i.wpa_supplicant_event_interface_status))
<BR><BR>[Calls]<UL><LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[79689e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_mark_disassoc
<LI><a href="#[7966fd4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;l2_packet_deinit
<LI><a href="#[7967fac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_driver_init
</UL><BR>[Called By]<UL><LI><a href="#[7968bd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event
</UL><P><STRONG><a name="[8312c08]"></a>wpa_supplicant_event_michael_mic_failure</STRONG> (ARM, 212 bytes, Stack size 24 bytes, events.o(i.wpa_supplicant_event_michael_mic_failure))
<BR><BR>[Calls]<UL><LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[9cf6ebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_key_request
<LI><a href="#[7a5ae98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_get_time
<LI><a href="#[7967e4c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_sleep
<LI><a href="#[8311b00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_countermeasures
<LI><a href="#[7968388]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deauthenticate
<LI><a href="#[7969720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[79696a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
</UL><BR>[Called By]<UL><LI><a href="#[7968bd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event
</UL><P><STRONG><a name="[83129e4]"></a>wpa_supplicant_event_pmkid_candidate</STRONG> (ARM, 120 bytes, Stack size 40 bytes, events.o(i.wpa_supplicant_event_pmkid_candidate))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[9c8aa08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_candidate_add
</UL><BR>[Called By]<UL><LI><a href="#[7968bd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event
</UL><P><STRONG><a name="[8312b80]"></a>wpa_supplicant_event_scan_results</STRONG> (ARM, 424 bytes, Stack size 40 bytes, events.o(i.wpa_supplicant_event_scan_results))
<BR><BR>[Calls]<UL><LI><a href="#[7968204]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_scan_results
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[8312530]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_bss
<LI><a href="#[79687fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_blacklist_clear
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[83108f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scard_init
<LI><a href="#[7968fcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[9c8a904]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rsn_preauth_scan_results
<LI><a href="#[7968ae4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
</UL><BR>[Called By]<UL><LI><a href="#[7968bd8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event
</UL><P><STRONG><a name="[796db54]"></a>wpa_supplicant_get_beacon_ie</STRONG> (ARM, 52 bytes, Stack size 8 bytes, wpa_supplicant.o(i.wpa_supplicant_get_beacon_ie))
<BR><BR>[Calls]<UL><LI><a href="#[796c6cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_get_beacon_ie
<LI><a href="#[7968204]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_scan_results
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_wpa)
</UL><P><STRONG><a name="[796dc4c]"></a>wpa_supplicant_get_bssid</STRONG> (ARM, 52 bytes, Stack size 8 bytes, wpa_supplicant.o(i.wpa_supplicant_get_bssid))
<BR><BR>[Calls]<UL><LI><a href="#[7976600]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_get_bssid
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_wpa)
</UL><P><STRONG><a name="[796e330]"></a>wpa_supplicant_get_config_blob</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wpa_supplicant.o(i.wpa_supplicant_get_config_blob))
<BR><BR>[Calls]<UL><LI><a href="#[7966ba8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_get_blob
</UL><BR>[Address Reference Count : 2]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_eapol)
<LI> wpa_supplicant.o(i.wpa_supplicant_init_wpa)
</UL><P><STRONG><a name="[9cfbebc]"></a>wpa_supplicant_get_pmk</STRONG> (ARM, 588 bytes, Stack size 40 bytes, wpa.o(i.wpa_supplicant_get_pmk))
<BR><BR>[Calls]<UL><LI><a href="#[9cf66c8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_get
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[79690cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_pmk_from_pmksa
<LI><a href="#[9c5c9e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_key
<LI><a href="#[9cf664c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_cached
<LI><a href="#[9cf65d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_get_key
<LI><a href="#[9cf6560]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pmksa_cache_add
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[9d00ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_alloc_eapol
<LI><a href="#[9cfc244]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_ether_send
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
</UL><BR>[Called By]<UL><LI><a href="#[9d003b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4
</UL><P><STRONG><a name="[84679b8]"></a>wpa_supplicant_global_ctrl_iface_receive</STRONG> (ARM, 4 bytes, Stack size 0 bytes, ctrl_iface_udp.o(i.wpa_supplicant_global_ctrl_iface_receive))
<BR>[Address Reference Count : 1]<UL><LI> ctrl_iface_udp.o(i.wpa_supplicant_global_ctrl_iface_init)
</UL><P><STRONG><a name="[9cf8518]"></a>wpa_supplicant_gtk_tx_bit_workaround</STRONG> (ARM, 44 bytes, Stack size 8 bytes, wpa.o(i.wpa_supplicant_gtk_tx_bit_workaround))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[9cfb728]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_pairwise_gtk
<LI><a href="#[9cfb48c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_rsn
<LI><a href="#[9cfb404]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_wpa
</UL><P><STRONG><a name="[796f2b8]"></a>wpa_supplicant_init_eapol</STRONG> (ARM, 184 bytes, Stack size 16 bytes, wpa_supplicant.o(i.wpa_supplicant_init_eapol))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[7966d88]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_init
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[79733ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface2
</UL><P><STRONG><a name="[797346c]"></a>wpa_supplicant_init_iface</STRONG> (ARM, 440 bytes, Stack size 24 bytes, wpa_supplicant.o(i.wpa_supplicant_init_iface))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[796f598]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_driver
<LI><a href="#[79672b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_rel2abs_path
<LI><a href="#[79b05f8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_read
<LI><a href="#[4db51b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[79b03a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_strdup
<LI><a href="#[79b057c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_alloc_empty
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
</UL><BR>[Called By]<UL><LI><a href="#[50075a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_add_iface
</UL><P><STRONG><a name="[79733ec]"></a>wpa_supplicant_init_iface2</STRONG> (ARM, 584 bytes, Stack size 40 bytes, wpa_supplicant.o(i.wpa_supplicant_init_iface2))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[796f2b8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_eapol
<LI><a href="#[7968308]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portEnabled
<LI><a href="#[7968288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portValid
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4d31fc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[796f23c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_wpa
<LI><a href="#[7967238]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ifname
<LI><a href="#[79685f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_fast_reauth
<LI><a href="#[79671c0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_eapol
<LI><a href="#[79693bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_param
<LI><a href="#[7967fac]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_driver_init
<LI><a href="#[7967148]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_own_addr
<LI><a href="#[79684f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ctrl_iface_init
<LI><a href="#[79768d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_get_capa
</UL><BR>[Called By]<UL><LI><a href="#[50075a4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_add_iface
</UL><P><STRONG><a name="[796f23c]"></a>wpa_supplicant_init_wpa</STRONG> (ARM, 216 bytes, Stack size 8 bytes, wpa_supplicant.o(i.wpa_supplicant_init_wpa))
<BR><BR>[Calls]<UL><LI><a href="#[500769c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[7966d18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_init
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[79733ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface2
</UL><P><STRONG><a name="[9cfb384]"></a>wpa_supplicant_install_gtk</STRONG> (ARM, 296 bytes, Stack size 72 bytes, wpa.o(i.wpa_supplicant_install_gtk))
<BR><BR>[Calls]<UL><LI><a href="#[9c5c9e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_key
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[9cf89cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_key
</UL><BR>[Called By]<UL><LI><a href="#[9cfb728]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_pairwise_gtk
<LI><a href="#[9d00334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
</UL><P><STRONG><a name="[9cfb828]"></a>wpa_supplicant_install_ptk</STRONG> (ARM, 248 bytes, Stack size 56 bytes, wpa.o(i.wpa_supplicant_install_ptk))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[9cf89cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_key
</UL><BR>[Called By]<UL><LI><a href="#[9d0043c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
</UL><P><STRONG><a name="[9cfb280]"></a>wpa_supplicant_key_neg_complete</STRONG> (ARM, 296 bytes, Stack size 48 bytes, wpa.o(i.wpa_supplicant_key_neg_complete))
<BR><BR>[Calls]<UL><LI><a href="#[9cfe1d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_cipher_txt
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[7969720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[9cfbfb8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_state
<LI><a href="#[7968288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portValid
<LI><a href="#[796999c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_eap_success
<LI><a href="#[79696a4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[9cfb728]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_pairwise_gtk
<LI><a href="#[9d00334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
</UL><P><STRONG><a name="[796d8cc]"></a>wpa_supplicant_mlme_setprotection</STRONG> (ARM, 4 bytes, Stack size 0 bytes, wpa_supplicant.o(i.wpa_supplicant_mlme_setprotection))
<BR><BR>[Calls]<UL><LI><a href="#[7977630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_mlme_setprotection
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_wpa)
</UL><P><STRONG><a name="[796e534]"></a>wpa_supplicant_notify_eapol_done</STRONG> (ARM, 76 bytes, Stack size 8 bytes, wpa_supplicant.o(i.wpa_supplicant_notify_eapol_done))
<BR><BR>[Calls]<UL><LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[7969720]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[7968dd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_auth_timeout
<LI><a href="#[7969b0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_eapol)
</UL><P><STRONG><a name="[9cfb728]"></a>wpa_supplicant_pairwise_gtk</STRONG> (ARM, 248 bytes, Stack size 80 bytes, wpa.o(i.wpa_supplicant_pairwise_gtk))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[9c5c9e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_key
<LI><a href="#[9cf8518]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_gtk_tx_bit_workaround
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9cf8490]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_check_group_cipher
<LI><a href="#[9cfb384]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_gtk
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[9cfb280]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_key_neg_complete
</UL><BR>[Called By]<UL><LI><a href="#[9d0043c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
</UL><P><STRONG><a name="[9cf9290]"></a>wpa_supplicant_parse_generic</STRONG> (ARM, 268 bytes, Stack size 24 bytes, wpa.o(i.wpa_supplicant_parse_generic))
<BR><BR>[Calls]<UL><LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
</UL><BR>[Called By]<UL><LI><a href="#[9cfbf38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_parse_ies
</UL><P><STRONG><a name="[9cfbf38]"></a>wpa_supplicant_parse_ies</STRONG> (ARM, 276 bytes, Stack size 40 bytes, wpa.o(i.wpa_supplicant_parse_ies))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[9c5c9e4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_key
<LI><a href="#[9cf9290]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_parse_generic
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
</UL><BR>[Called By]<UL><LI><a href="#[9cfb48c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_rsn
<LI><a href="#[9d003b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4
<LI><a href="#[9d0043c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
</UL><P><STRONG><a name="[9d00334]"></a>wpa_supplicant_process_1_of_2</STRONG> (ARM, 396 bytes, Stack size 104 bytes, wpa.o(i.wpa_supplicant_process_1_of_2))
<BR><BR>[Calls]<UL><LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[9cff6a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_get_state
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[9cfb48c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_rsn
<LI><a href="#[9cfb404]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_wpa
<LI><a href="#[9cfbfb8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_state
<LI><a href="#[9cfb384]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_gtk
<LI><a href="#[9cfb304]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_2
<LI><a href="#[9cfe1d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_cipher_txt
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[9cfb280]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_key_neg_complete
</UL><BR>[Called By]<UL><LI><a href="#[796802c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
</UL><P><STRONG><a name="[9cfb48c]"></a>wpa_supplicant_process_1_of_2_rsn</STRONG> (ARM, 280 bytes, Stack size 64 bytes, wpa.o(i.wpa_supplicant_process_1_of_2_rsn))
<BR><BR>[Calls]<UL><LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[9cfbf38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_parse_ies
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[9cf8490]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_check_group_cipher
<LI><a href="#[9cf8518]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_gtk_tx_bit_workaround
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL><BR>[Called By]<UL><LI><a href="#[9d00334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
</UL><P><STRONG><a name="[9cfb404]"></a>wpa_supplicant_process_1_of_2_wpa</STRONG> (ARM, 412 bytes, Stack size 96 bytes, wpa.o(i.wpa_supplicant_process_1_of_2_wpa))
<BR><BR>[Calls]<UL><LI><a href="#[9cf8490]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_check_group_cipher
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9cf68fc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;rc4_skip
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[9cf688c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;aes_unwrap
<LI><a href="#[9cf8518]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_gtk_tx_bit_workaround
</UL><BR>[Called By]<UL><LI><a href="#[9d00334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
</UL><P><STRONG><a name="[9d003b8]"></a>wpa_supplicant_process_1_of_4</STRONG> (ARM, 532 bytes, Stack size 104 bytes, wpa.o(i.wpa_supplicant_process_1_of_4))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[9cfbfb8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_state
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[9cfbf38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_parse_ies
<LI><a href="#[9cfbebc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_pmk
<LI><a href="#[7a5ad64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;os_get_random
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[9cfbe48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_pmk_to_ptk
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9cfbdc8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_4
</UL><BR>[Called By]<UL><LI><a href="#[796802c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
</UL><P><STRONG><a name="[9d0043c]"></a>wpa_supplicant_process_3_of_4</STRONG> (ARM, 584 bytes, Stack size 88 bytes, wpa.o(i.wpa_supplicant_process_3_of_4))
<BR><BR>[Calls]<UL><LI><a href="#[9cfbfb8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_state
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[9cfbf38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_parse_ies
<LI><a href="#[9cfb928]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_validate_ie
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[9cfb8a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_4_of_4
<LI><a href="#[9cfb828]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_ptk
<LI><a href="#[9cfb7a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_mlme_setprotection
<LI><a href="#[7968288]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_notify_portValid
<LI><a href="#[9cfb728]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_pairwise_gtk
</UL><BR>[Called By]<UL><LI><a href="#[796802c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
</UL><P><STRONG><a name="[7972630]"></a>wpa_supplicant_reconfig</STRONG> (ARM, 64 bytes, Stack size 8 bytes, wpa_supplicant.o(i.wpa_supplicant_reconfig))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[79686f4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configuration
<LI><a href="#[7967418]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_terminate
</UL><BR>[Called By]<UL><LI><a href="#[796facc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reconfig_receiver
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_run)
</UL><P><STRONG><a name="[796facc]"></a>wpa_supplicant_reconfig_receiver</STRONG> (ARM, 240 bytes, Stack size 32 bytes, wpa_supplicant.o(i.wpa_supplicant_reconfig_receiver))
<BR><BR>[Calls]<UL><LI><a href="#[7966dfc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fix_size_read
<LI><a href="#[49dbb9c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_lock
<LI><a href="#[4a56250]">&gt&gt</a>&nbsp;&nbsp;&nbsp;diag_printf
<LI><a href="#[49dbb24]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_mutex_unlock
<LI><a href="#[7972630]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reconfig
<LI><a href="#[58d2ac0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wsp_set_ip_addr
<LI><a href="#[4c2be18]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_cond_signal
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_register_reconfig)
</UL><P><STRONG><a name="[79725a8]"></a>wpa_supplicant_register_reconfig</STRONG> (ARM, 148 bytes, Stack size 24 bytes, wpa_supplicant.o(i.wpa_supplicant_register_reconfig))
<BR><BR>[Calls]<UL><LI><a href="#[75ee8cc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;pipe_create
<LI><a href="#[4bfec70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;cyg_error_get_errno_p
<LI><a href="#[4d0cc10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[4d0cba4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[4d0cb38]">&gt&gt</a>&nbsp;&nbsp;&nbsp;fputs
<LI><a href="#[7967398]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_register_read_sock
</UL><BR>[Called By]<UL><LI><a href="#[500752c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_run
</UL><P><STRONG><a name="[796d954]"></a>wpa_supplicant_remove_pmkid</STRONG> (ARM, 28 bytes, Stack size 0 bytes, wpa_supplicant.o(i.wpa_supplicant_remove_pmkid))
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_wpa)
</UL><P><STRONG><a name="[7976e14]"></a>wpa_supplicant_scan</STRONG> (ARM, 756 bytes, Stack size 120 bytes, wpa_supplicant.o(i.wpa_supplicant_scan))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7969b0c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[7968c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_ssid
<LI><a href="#[7969a1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_initiate_eapol
<LI><a href="#[4ced184]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[7968bd8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event
<LI><a href="#[7968fcc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[7968b60]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_ascii
<LI><a href="#[7968ae4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
</UL><BR>[Address Reference Count : 4]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_cancel_scan)
<LI> wpa_supplicant.o(i.wpa_supplicant_init_wpa)
<LI> wpa_supplicant.o(i.wpa_supplicant_notify_eapol_done)
<LI> wpa_supplicant.o(i.wpa_supplicant_req_scan)
</UL><P><STRONG><a name="[8312530]"></a>wpa_supplicant_select_bss</STRONG> (ARM, 1040 bytes, Stack size 88 bytes, events.o(i.wpa_supplicant_select_bss))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7968f58]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_ssid_txt
<LI><a href="#[7968968]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_blacklist_get
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[8310b98]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ssid_bss_match
</UL><BR>[Called By]<UL><LI><a href="#[8312b80]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_scan_results
</UL><P><STRONG><a name="[8311f84]"></a>wpa_supplicant_select_config</STRONG> (ARM, 232 bytes, Stack size 104 bytes, events.o(i.wpa_supplicant_select_config))
<BR><BR>[Calls]<UL><LI><a href="#[7968c54]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_ssid
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[79692bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
<LI><a href="#[79695a8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_non_wpa_policy
<LI><a href="#[7968d48]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eapol_sm_invalidate_cached_session
<LI><a href="#[7968cd0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_config
<LI><a href="#[7969a1c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_initiate_eapol
</UL><BR>[Called By]<UL><LI><a href="#[8312d1c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
</UL><P><STRONG><a name="[9cfb304]"></a>wpa_supplicant_send_2_of_2</STRONG> (ARM, 260 bytes, Stack size 48 bytes, wpa.o(i.wpa_supplicant_send_2_of_2))
<BR><BR>[Calls]<UL><LI><a href="#[9d00ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_alloc_eapol
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[9d00e70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
</UL><BR>[Called By]<UL><LI><a href="#[9d00334]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
</UL><P><STRONG><a name="[9cfbdc8]"></a>wpa_supplicant_send_2_of_4</STRONG> (ARM, 348 bytes, Stack size 80 bytes, wpa.o(i.wpa_supplicant_send_2_of_4))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[9d00ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_alloc_eapol
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[9d00e70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
</UL><BR>[Called By]<UL><LI><a href="#[9d003b8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4
</UL><P><STRONG><a name="[9cfb8a8]"></a>wpa_supplicant_send_4_of_4</STRONG> (ARM, 316 bytes, Stack size 80 bytes, wpa.o(i.wpa_supplicant_send_4_of_4))
<BR><BR>[Calls]<UL><LI><a href="#[7968118]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_hexdump
<LI><a href="#[9d00ee8]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_alloc_eapol
<LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[9d00e70]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
</UL><BR>[Called By]<UL><LI><a href="#[9d0043c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
</UL><P><STRONG><a name="[796e3b4]"></a>wpa_supplicant_set_config_blob</STRONG> (ARM, 8 bytes, Stack size 0 bytes, wpa_supplicant.o(i.wpa_supplicant_set_config_blob))
<BR><BR>[Calls]<UL><LI><a href="#[79b0414]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_config_set_blob
</UL><BR>[Address Reference Count : 2]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_eapol)
<LI> wpa_supplicant.o(i.wpa_supplicant_init_wpa)
</UL><P><STRONG><a name="[796f598]"></a>wpa_supplicant_set_driver</STRONG> (ARM, 140 bytes, Stack size 24 bytes, wpa_supplicant.o(i.wpa_supplicant_set_driver))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4a55eb4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcmp
</UL><BR>[Called By]<UL><LI><a href="#[797346c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_iface
</UL><P><STRONG><a name="[796dd4c]"></a>wpa_supplicant_set_key</STRONG> (ARM, 72 bytes, Stack size 40 bytes, wpa_supplicant.o(i.wpa_supplicant_set_key))
<BR><BR>[Calls]<UL><LI><a href="#[79776b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_key
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_init_wpa)
</UL><P><STRONG><a name="[79769d0]"></a>wpa_supplicant_set_wpa_none_key</STRONG> (ARM, 236 bytes, Stack size 72 bytes, wpa_supplicant.o(i.wpa_supplicant_set_wpa_none_key))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
<LI><a href="#[79776b0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_key
</UL><BR>[Called By]<UL><LI><a href="#[7968fcc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
</UL><P><STRONG><a name="[8310b98]"></a>wpa_supplicant_ssid_bss_match</STRONG> (ARM, 344 bytes, Stack size 48 bytes, events.o(i.wpa_supplicant_ssid_bss_match))
<BR><BR>[Calls]<UL><LI><a href="#[7969244]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[8312530]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_bss
</UL><P><STRONG><a name="[8311a78]"></a>wpa_supplicant_stop_countermeasures</STRONG> (ARM, 76 bytes, Stack size 8 bytes, events.o(i.wpa_supplicant_stop_countermeasures))
<BR><BR>[Calls]<UL><LI><a href="#[8311b00]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_countermeasures
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[7968ae4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
</UL><BR>[Address Reference Count : 1]<UL><LI> events.o(i.wpa_supplicant_event_michael_mic_failure)
</UL><P><STRONG><a name="[79770ec]"></a>wpa_supplicant_suites_from_ai</STRONG> (ARM, 180 bytes, Stack size 24 bytes, wpa_supplicant.o(i.wpa_supplicant_suites_from_ai))
<BR><BR>[Calls]<UL><LI><a href="#[796748c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_parse_own_wpa_ie
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
</UL><BR>[Called By]<UL><LI><a href="#[79692bc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
</UL><P><STRONG><a name="[79726ac]"></a>wpa_supplicant_terminate</STRONG> (ARM, 60 bytes, Stack size 16 bytes, wpa_supplicant.o(i.wpa_supplicant_terminate))
<BR><BR>[Calls]<UL><LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[7967418]">&gt&gt</a>&nbsp;&nbsp;&nbsp;eloop_terminate
</UL><BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_run)
</UL><P><STRONG><a name="[7977978]"></a>wpa_supplicant_timeout</STRONG> (ARM, 152 bytes, Stack size 32 bytes, wpa_supplicant.o(i.wpa_supplicant_timeout))
<BR><BR>[Calls]<UL><LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[7969aa0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_msg
<LI><a href="#[79688f0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_blacklist_add
<LI><a href="#[7968874]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_sm_notify_disassoc
<LI><a href="#[7968a64]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_disassociate
<LI><a href="#[7968ae4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
</UL><BR>[Address Reference Count : 2]<UL><LI> wpa_supplicant.o(i.wpa_supplicant_cancel_auth_timeout)
<LI> wpa_supplicant.o(i.wpa_supplicant_req_auth_timeout)
</UL><P><STRONG><a name="[9cfb928]"></a>wpa_supplicant_validate_ie</STRONG> (ARM, 384 bytes, Stack size 32 bytes, wpa.o(i.wpa_supplicant_validate_ie))
<BR><BR>[Calls]<UL><LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[9cf8200]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_report_ie_mismatch
</UL><BR>[Called By]<UL><LI><a href="#[9d0043c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
</UL><P><STRONG><a name="[9d00544]"></a>wpa_supplicant_verify_eapol_key_mic</STRONG> (ARM, 304 bytes, Stack size 56 bytes, wpa.o(i.wpa_supplicant_verify_eapol_key_mic))
<BR><BR>[Calls]<UL><LI><a href="#[4a561e0]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ced2d4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[9cfc2bc]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_mic
<LI><a href="#[4dee62c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[79b050c]">&gt&gt</a>&nbsp;&nbsp;&nbsp;wpa_printf
<LI><a href="#[4d32034]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__rt_memcpy_w
</UL><BR>[Called By]<UL><LI><a href="#[796802c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
</UL><P><STRONG><a name="[819b314]"></a>yy_get_next_buffer</STRONG> (ARM, 500 bytes, Stack size 32 bytes, conf_scan.o(i.yy_get_next_buffer))
<BR><BR>[Calls]<UL><LI><a href="#[8199a10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;scanner_error
<LI><a href="#[7404e10]">&gt&gt</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[4deeb08]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4ced268]">&gt&gt</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[8199758]">&gt&gt</a>&nbsp;&nbsp;&nbsp;yyrestart
</UL><BR>[Called By]<UL><LI><a href="#[81996ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yylex
</UL><P><STRONG><a name="[819b404]"></a>yy_get_previous_state</STRONG> (ARM, 180 bytes, Stack size 28 bytes, conf_scan.o(i.yy_get_previous_state))
<BR>[Called By]<UL><LI><a href="#[81996ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yylex
</UL><P><STRONG><a name="[819b38c]"></a>yy_try_NUL_trans</STRONG> (ARM, 160 bytes, Stack size 8 bytes, conf_scan.o(i.yy_try_NUL_trans))
<BR>[Called By]<UL><LI><a href="#[81996ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;yylex
</UL><P><STRONG><a name="[8f60d6c]"></a>d2f_main</STRONG> (ARM, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f))
<BR>[Called By]<UL><LI><a href="#[4f74894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_d2f
</UL><P><STRONG><a name="[8f60bc4]"></a>d2f_roundeven</STRONG> (ARM, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f))
<BR>[Called By]<UL><LI><a href="#[4f74894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_d2f
</UL><P><STRONG><a name="[8f60c38]"></a>d2f_roundup</STRONG> (ARM, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f))
<BR>[Called By]<UL><LI><a href="#[4f74894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_d2f
</UL><P><STRONG><a name="[8f60b54]"></a>d2f_rounded</STRONG> (ARM, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f))
<BR>[Called By]<UL><LI><a href="#[4f74894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_d2f
</UL><P><STRONG><a name="[8f60ae0]"></a>d2f_underflow</STRONG> (ARM, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f))
<BR>[Called By]<UL><LI><a href="#[4f74894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_d2f
</UL><P><STRONG><a name="[8f60a6c]"></a>d2f_overflow</STRONG> (ARM, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f))
<BR>[Called By]<UL><LI><a href="#[4f74894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_d2f
</UL><P><STRONG><a name="[8f60ca8]"></a>d2f_uncommon</STRONG> (ARM, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f))
<BR>[Called By]<UL><LI><a href="#[4f74894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_d2f
</UL><P><STRONG><a name="[8f6098c]"></a>d2f_renorm</STRONG> (ARM, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f))
<BR>[Called By]<UL><LI><a href="#[4f74894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_d2f
</UL><P><STRONG><a name="[8f609fc]"></a>d2f_naninf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f))
<BR>[Called By]<UL><LI><a href="#[4f74894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_d2f
</UL><P><STRONG><a name="[8f5fc8c]"></a>_dadd1</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f994]"></a>dadd_swapped</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5fcf8]"></a>dadd_doadd</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5fe58]"></a>dadd_nocarry</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5fde4]"></a>dadd_roundeven</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5fd68]"></a>dadd_check_overflow_inx</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f8ac]"></a>dadd_bigshift</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f83c]"></a>dadd_carry</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f7bc]"></a>dadd_check_overflow_exact</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f920]"></a>dadd_uncommon</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f74c]"></a>dadd_bzero</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5fa74]"></a>dadd_naninf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f668]"></a>dadd_twoinf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f5f8]"></a>drsb_naninf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5fa08]"></a>_dsub1</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f514]"></a>dsub_swapped</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5fba8]"></a>dsub_dosub</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5fc18]"></a>dsub_noborrow</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f42c]"></a>dsub_bigshift</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f3bc]"></a>dsub_borrow</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f2d0]"></a>dsub_renormalize</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f1ec]"></a>dsub_renormbig</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f178]"></a>dsub_renormed</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f348]"></a>dsub_hugeshift</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f260]"></a>dsub_ex_one</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f4a0]"></a>dsub_uncommon</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f020]"></a>dsub_both_denorm</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f098]"></a>dsub_bzero</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5fb34]"></a>dsub_retzero</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f108]"></a>dsub_denorm</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f6d8]"></a>daddsub_denorm</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5f588]"></a>dsub_naninf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f5efb0]"></a>dsub_twoinf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, daddsub_clz.o(x$fpl$dadd))
<BR>[Called By]<UL><LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd
</UL><P><STRONG><a name="[8f70654]"></a>dcheck_except</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dcheck.o(x$fpl$dcheck))
<BR>[Called By]<UL><LI><a href="#[8f5ef38]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL><P><STRONG><a name="[8f6fd74]"></a>dcmp_neg</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dcmpin.o(x$fpl$dcmpinfnan))
<BR>[Called By]<UL><LI><a href="#[8f5c2ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL><P><STRONG><a name="[8f6fd00]"></a>dcmp_clear_v</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dcmpin.o(x$fpl$dcmpinfnan))
<BR>[Called By]<UL><LI><a href="#[8f5c2ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL><P><STRONG><a name="[8f6fde4]"></a>dcmp_found_NaN</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dcmpin.o(x$fpl$dcmpinfnan))
<BR>[Called By]<UL><LI><a href="#[8f5c2ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL><P><STRONG><a name="[8f6d654]"></a>fcmp_neg</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<BR>[Called By]<UL><LI><a href="#[8f6d56c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_inf_fcmp
</UL><P><STRONG><a name="[8f6d5e0]"></a>fcmp_clear_v</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<BR>[Called By]<UL><LI><a href="#[8f6d56c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_inf_fcmp
</UL><P><STRONG><a name="[8f6d6c4]"></a>fcmp_found_NaN</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fcmpin.o(x$fpl$dcmpinfnan))
<BR><BR>[Calls]<UL><LI><a href="#[8f60918]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
<LI><a href="#[8f564c4]">&gt&gt</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL><BR>[Called By]<UL><LI><a href="#[8f6d4f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__32__fpl_fcmp_InfNaN
</UL><P><STRONG><a name="[8f5d9bc]"></a>ddiv_entry</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv))
<BR>[Called By]<UL><LI><a href="#[5cc9f44]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_drdiv
</UL><P><STRONG><a name="[8f5daf0]"></a>ddiv_normalised</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv))
<BR>[Called By]<UL><LI><a href="#[4f73bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL><P><STRONG><a name="[8f5d868]"></a>ddiv_exact</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv))
<BR>[Called By]<UL><LI><a href="#[4f73bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL><P><STRONG><a name="[8f5db64]"></a>ddiv_rounded</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv))
<BR>[Called By]<UL><LI><a href="#[4f73bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL><P><STRONG><a name="[8f5d7f4]"></a>ddiv_outflow</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv))
<BR>[Called By]<UL><LI><a href="#[4f73bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL><P><STRONG><a name="[8f5d8d8]"></a>ddiv_zerodenorm</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv))
<BR>[Called By]<UL><LI><a href="#[4f73bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL><P><STRONG><a name="[8f5da7c]"></a>ddiv_done_op2</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv))
<BR>[Called By]<UL><LI><a href="#[4f73bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL><P><STRONG><a name="[8f5d784]"></a>ddiv_azero</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv))
<BR>[Called By]<UL><LI><a href="#[4f73bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL><P><STRONG><a name="[8f5d710]"></a>ddiv_divbyzero</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv))
<BR>[Called By]<UL><LI><a href="#[4f73bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL><P><STRONG><a name="[8f5d628]"></a>ddiv_renorm_op1</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv))
<BR>[Called By]<UL><LI><a href="#[4f73bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL><P><STRONG><a name="[8f5d69c]"></a>ddiv_renorm_op2</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv))
<BR>[Called By]<UL><LI><a href="#[4f73bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL><P><STRONG><a name="[8f5d94c]"></a>ddiv_naninf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv))
<BR>[Called By]<UL><LI><a href="#[4f73bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL><P><STRONG><a name="[8f5d540]"></a>ddiv_xoverinf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv))
<BR>[Called By]<UL><LI><a href="#[4f73bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL><P><STRONG><a name="[8f5d5b4]"></a>ddiv_ivo_pop</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv))
<BR>[Called By]<UL><LI><a href="#[4f73bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL><P><STRONG><a name="[8f5d4d0]"></a>ddiv_ivo</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ddiv.o(x$fpl$ddiv))
<BR>[Called By]<UL><LI><a href="#[4f73bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL><P><STRONG><a name="[8f5c458]"></a>_dcmpeq_check_NaNInf_pos</STRONG> (ARM, 0 bytes, Stack size 0 bytes, deqf.o(x$fpl$deqf))
<BR>[Called By]<UL><LI><a href="#[74125ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL><P><STRONG><a name="[8f5c4d8]"></a>_dcmpeq_negative</STRONG> (ARM, 0 bytes, Stack size 0 bytes, deqf.o(x$fpl$deqf))
<BR>[Called By]<UL><LI><a href="#[74125ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL><P><STRONG><a name="[8f5c364]"></a>_dcmpeq_check_NaNInf_neg</STRONG> (ARM, 0 bytes, Stack size 0 bytes, deqf.o(x$fpl$deqf))
<BR>[Called By]<UL><LI><a href="#[74125ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL><P><STRONG><a name="[8f5c3e4]"></a>dcmpeq_InfNaN</STRONG> (ARM, 0 bytes, Stack size 0 bytes, deqf.o(x$fpl$deqf))
<BR>[Called By]<UL><LI><a href="#[74125ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL><P><STRONG><a name="[8f5bd54]"></a>dfix_negative</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dfix.o(x$fpl$dfix))
<BR>[Called By]<UL><LI><a href="#[4e4cde8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dfix
</UL><P><STRONG><a name="[8f5bce4]"></a>dfix_ivo</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dfix.o(x$fpl$dfix))
<BR>[Called By]<UL><LI><a href="#[4e4cde8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dfix
</UL><P><STRONG><a name="[8f5b184]"></a>dfixu_negative</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dfixu.o(x$fpl$dfixu))
<BR>[Called By]<UL><LI><a href="#[77e7298]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dfixu
</UL><P><STRONG><a name="[8f5b114]"></a>dfixu_ivo</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dfixu.o(x$fpl$dfixu))
<BR>[Called By]<UL><LI><a href="#[77e7298]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dfixu
</UL><P><STRONG><a name="[8f59500]"></a>dfltll_normalise</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dfltll_clz.o(x$fpl$dfltll))
<BR>[Called By]<UL><LI><a href="#[7a37858]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_uto_d
</UL><P><STRONG><a name="[8f58f3c]"></a>_dcmpge_check_NaNInf_pos</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dgeqf.o(x$fpl$dgeqf))
<BR>[Called By]<UL><LI><a href="#[4f741d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL><P><STRONG><a name="[8f58fbc]"></a>_dcmpge_negative</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dgeqf.o(x$fpl$dgeqf))
<BR>[Called By]<UL><LI><a href="#[4f741d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL><P><STRONG><a name="[8f58e48]"></a>_dcmpge_check_NaNInf_neg</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dgeqf.o(x$fpl$dgeqf))
<BR>[Called By]<UL><LI><a href="#[4f741d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL><P><STRONG><a name="[8f58ec8]"></a>dcmpge_InfNaN</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dgeqf.o(x$fpl$dgeqf))
<BR>[Called By]<UL><LI><a href="#[4f741d4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL><P><STRONG><a name="[8f5889c]"></a>_dcmple_check_NaNInf_pos</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf))
<BR>[Called By]<UL><LI><a href="#[4f73d50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL><P><STRONG><a name="[8f5891c]"></a>_dcmple_negative</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf))
<BR>[Called By]<UL><LI><a href="#[4f73d50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL><P><STRONG><a name="[8f587a8]"></a>_dcmple_check_NaNInf_neg</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf))
<BR>[Called By]<UL><LI><a href="#[4f73d50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL><P><STRONG><a name="[8f58828]"></a>dcmple_InfNaN</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf))
<BR>[Called By]<UL><LI><a href="#[4f73d50]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL><P><STRONG><a name="[8f58258]"></a>dmul_normalised</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dmul_mull.o(x$fpl$dmul))
<BR>[Called By]<UL><LI><a href="#[4f74748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dmul
</UL><P><STRONG><a name="[8f58040]"></a>dmul_exact</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dmul_mull.o(x$fpl$dmul))
<BR>[Called By]<UL><LI><a href="#[4f74748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dmul
</UL><P><STRONG><a name="[8f582cc]"></a>dmul_rounded</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dmul_mull.o(x$fpl$dmul))
<BR>[Called By]<UL><LI><a href="#[4f74748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dmul
</UL><P><STRONG><a name="[8f57fcc]"></a>dmul_outflow</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dmul_mull.o(x$fpl$dmul))
<BR>[Called By]<UL><LI><a href="#[4f74748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dmul
</UL><P><STRONG><a name="[8f580b0]"></a>dmul_zerodenorm</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dmul_mull.o(x$fpl$dmul))
<BR>[Called By]<UL><LI><a href="#[4f74748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dmul
</UL><P><STRONG><a name="[8f581e4]"></a>dmul_done_op2</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dmul_mull.o(x$fpl$dmul))
<BR>[Called By]<UL><LI><a href="#[4f74748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dmul
</UL><P><STRONG><a name="[8f57f5c]"></a>dmul_zero</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dmul_mull.o(x$fpl$dmul))
<BR>[Called By]<UL><LI><a href="#[4f74748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dmul
</UL><P><STRONG><a name="[8f57e74]"></a>dmul_renorm_op1</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dmul_mull.o(x$fpl$dmul))
<BR>[Called By]<UL><LI><a href="#[4f74748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dmul
</UL><P><STRONG><a name="[8f57ee8]"></a>dmul_renorm_op2</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dmul_mull.o(x$fpl$dmul))
<BR>[Called By]<UL><LI><a href="#[4f74748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dmul
</UL><P><STRONG><a name="[8f58124]"></a>dmul_naninf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dmul_mull.o(x$fpl$dmul))
<BR>[Called By]<UL><LI><a href="#[4f74748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dmul
</UL><P><STRONG><a name="[8f57e04]"></a>dmul_ivo</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dmul_mull.o(x$fpl$dmul))
<BR>[Called By]<UL><LI><a href="#[4f74748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dmul
</UL><P><STRONG><a name="[8f6f4cc]"></a>dunder_hiloword</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dunder.o(x$fpl$dunder))
<BR>[Called By]<UL><LI><a href="#[8f5eec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__dunder
</UL><P><STRONG><a name="[8f6f540]"></a>dunder_hiword</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dunder.o(x$fpl$dunder))
<BR>[Called By]<UL><LI><a href="#[8f5eec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__dunder
</UL><P><STRONG><a name="[8f6f5b4]"></a>dunder_roundbit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dunder.o(x$fpl$dunder))
<BR>[Called By]<UL><LI><a href="#[8f5eec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__dunder
</UL><P><STRONG><a name="[8f6f628]"></a>dunder_stickyonly</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dunder.o(x$fpl$dunder))
<BR>[Called By]<UL><LI><a href="#[8f5eec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__dunder
</UL><P><STRONG><a name="[8f6f458]"></a>dunder_round</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dunder.o(x$fpl$dunder))
<BR>[Called By]<UL><LI><a href="#[8f5eec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__dunder
</UL><P><STRONG><a name="[8f6f7d8]"></a>dunder_roundup</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dunder.o(x$fpl$dunder))
<BR>[Called By]<UL><LI><a href="#[8f5eec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__dunder
</UL><P><STRONG><a name="[8f6f760]"></a>dunder_rerounded</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dunder.o(x$fpl$dunder))
<BR>[Called By]<UL><LI><a href="#[8f5eec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__dunder
</UL><P><STRONG><a name="[8f6f3e0]"></a>dunder_roundeven</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dunder.o(x$fpl$dunder))
<BR>[Called By]<UL><LI><a href="#[8f5eec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__dunder
</UL><P><STRONG><a name="[8f6f6a0]"></a>dunder_trap</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dunder.o(x$fpl$dunder))
<BR>[Called By]<UL><LI><a href="#[8f5eec8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__dunder
</UL><P><STRONG><a name="[8f6ea18]"></a>overflow</STRONG> (ARM, 0 bytes, Stack size 0 bytes, except.o(x$fpl$exception))
<BR>[Called By]<UL><LI><a href="#[8f60918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
</UL><P><STRONG><a name="[8f6ea88]"></a>underflow</STRONG> (ARM, 0 bytes, Stack size 0 bytes, except.o(x$fpl$exception))
<BR>[Called By]<UL><LI><a href="#[8f60918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
</UL><P><STRONG><a name="[8f6e938]"></a>divide_by_zero</STRONG> (ARM, 0 bytes, Stack size 0 bytes, except.o(x$fpl$exception))
<BR>[Called By]<UL><LI><a href="#[8f60918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
</UL><P><STRONG><a name="[8f6e9ac]"></a>inexact</STRONG> (ARM, 0 bytes, Stack size 0 bytes, except.o(x$fpl$exception))
<BR>[Called By]<UL><LI><a href="#[8f60918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
</UL><P><STRONG><a name="[8f6e7e4]"></a>return_result</STRONG> (ARM, 0 bytes, Stack size 0 bytes, except.o(x$fpl$exception))
<BR>[Called By]<UL><LI><a href="#[8f60918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
</UL><P><STRONG><a name="[8f6e858]"></a>ovf_return</STRONG> (ARM, 0 bytes, Stack size 0 bytes, except.o(x$fpl$exception))
<BR>[Called By]<UL><LI><a href="#[8f60918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
</UL><P><STRONG><a name="[8f6e774]"></a>return_Inf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, except.o(x$fpl$exception))
<BR>[Called By]<UL><LI><a href="#[8f60918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
</UL><P><STRONG><a name="[8f6e8c8]"></a>return_NaN</STRONG> (ARM, 0 bytes, Stack size 0 bytes, except.o(x$fpl$exception))
<BR>[Called By]<UL><LI><a href="#[8f60918]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_exception
</UL><P><STRONG><a name="[8f573fc]"></a>_f2d_uncommon</STRONG> (ARM, 0 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d))
<BR>[Called By]<UL><LI><a href="#[4f74828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_f2d
</UL><P><STRONG><a name="[8f57388]"></a>_f2d_Inf_or_NaN</STRONG> (ARM, 0 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d))
<BR>[Called By]<UL><LI><a href="#[4f74828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_f2d
</UL><P><STRONG><a name="[8f56ca4]"></a>_fadd1</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f56d10]"></a>fadd_doadd</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f56df0]"></a>fadd_roundeven</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f56d80]"></a>fadd_ovf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f569b4]"></a>fadd_carry</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f56a24]"></a>fadd_uncommon</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f56c34]"></a>fsub_bzero</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f56944]"></a>fadd_bzero</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f56b04]"></a>fadd_naninf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f568d4]"></a>fadd_twoinf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f56864]"></a>frsb_naninf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f56a98]"></a>_fsub1</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f56bc4]"></a>fsub_dosub</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f5670c]"></a>fsub_renorm_0</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f56620]"></a>fsub_roundeven</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f56694]"></a>fsub_renorm_orunder</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f565ac]"></a>fsub_underflow</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f56780]"></a>fsub_uncommon</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f567f4]"></a>fsub_naninf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f5653c]"></a>fsub_twoinf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR>[Called By]<UL><LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd
</UL><P><STRONG><a name="[8f752ec]"></a>fdiv_tab</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<P><STRONG><a name="[8f751c0]"></a>_fdiv1</STRONG> (ARM, 0 bytes, Stack size 4 bytes, fdiv.o(x$fpl$fdiv))
<BR>[Called By]<UL><LI><a href="#[4db4ee8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_frdiv
</UL><P><STRONG><a name="[8f7527c]"></a>fdiv_div</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR>[Called By]<UL><LI><a href="#[5a87954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fdiv
</UL><P><STRONG><a name="[8f750d8]"></a>fdiv_overflow</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR>[Called By]<UL><LI><a href="#[5a87954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fdiv
</UL><P><STRONG><a name="[8f7514c]"></a>fdiv_uncommon</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR>[Called By]<UL><LI><a href="#[5a87954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fdiv
</UL><P><STRONG><a name="[8f74f80]"></a>fdiv_div1</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<P><STRONG><a name="[8f75064]"></a>fdiv_inf_NaN</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR>[Called By]<UL><LI><a href="#[5a87954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fdiv
</UL><P><STRONG><a name="[8f74ff0]"></a>fdiv_divbyzero</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR>[Called By]<UL><LI><a href="#[5a87954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fdiv
</UL><P><STRONG><a name="[8f7459c]"></a>ffix_negative</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix))
<BR>[Called By]<UL><LI><a href="#[4db4e7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ffix
</UL><P><STRONG><a name="[8f7452c]"></a>ffix_ivo</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix))
<BR>[Called By]<UL><LI><a href="#[4db4e7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ffix
</UL><P><STRONG><a name="[8f73aa4]"></a>ffixu_negative</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu))
<BR>[Called By]<UL><LI><a href="#[82cae94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ffixu
</UL><P><STRONG><a name="[8f73a34]"></a>ffixu_ivo</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu))
<BR>[Called By]<UL><LI><a href="#[82cae94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ffixu
</UL><P><STRONG><a name="[8f72ac8]"></a>_fcmpge_NaNInf_check_pos</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fgeqf.o(x$fpl$fgeqf))
<BR>[Called By]<UL><LI><a href="#[4f73e98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fcmpge
</UL><P><STRONG><a name="[8f72b48]"></a>_fcmpge_negative</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fgeqf.o(x$fpl$fgeqf))
<BR>[Called By]<UL><LI><a href="#[4f73e98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fcmpge
</UL><P><STRONG><a name="[8f729d4]"></a>_fcmpge_NaNInf_check_neg</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fgeqf.o(x$fpl$fgeqf))
<BR>[Called By]<UL><LI><a href="#[4f73e98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fcmpge
</UL><P><STRONG><a name="[8f72a54]"></a>fcmpge_InfNaN</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fgeqf.o(x$fpl$fgeqf))
<BR>[Called By]<UL><LI><a href="#[4f73e98]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fcmpge
</UL><P><STRONG><a name="[8f723d4]"></a>_fcmple_NaNInf_check_pos</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fleqf.o(x$fpl$fleqf))
<BR>[Called By]<UL><LI><a href="#[4f73f7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL><P><STRONG><a name="[8f72454]"></a>_fcmple_negative</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fleqf.o(x$fpl$fleqf))
<BR>[Called By]<UL><LI><a href="#[4f73f7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL><P><STRONG><a name="[8f722e0]"></a>_fcmple_NaNInf_check_neg</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fleqf.o(x$fpl$fleqf))
<BR>[Called By]<UL><LI><a href="#[4f73f7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL><P><STRONG><a name="[8f72360]"></a>fcmple_InfNaN</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fleqf.o(x$fpl$fleqf))
<BR>[Called By]<UL><LI><a href="#[4f73f7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL><P><STRONG><a name="[8f71e2c]"></a>fmul_mul</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fmul_mull.o(x$fpl$fmul), UNUSED)
<P><STRONG><a name="[8f71cf4]"></a>fmul_overflow</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fmul_mull.o(x$fpl$fmul))
<BR>[Called By]<UL><LI><a href="#[4db4ca4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fmul
</UL><P><STRONG><a name="[8f71d68]"></a>fmul_uncommon</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fmul_mull.o(x$fpl$fmul))
<BR>[Called By]<UL><LI><a href="#[4db4ca4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fmul
</UL><P><STRONG><a name="[8f71c80]"></a>fmul_inf_NaN</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fmul_mull.o(x$fpl$fmul))
<BR>[Called By]<UL><LI><a href="#[4db4ca4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fmul
</UL><P><STRONG><a name="[8f6d038]"></a>fnorm_b</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fnorm2_clz.o(x$fpl$fnorm2))
<BR>[Called By]<UL><LI><a href="#[8f74f08]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_normalise2
</UL><P><STRONG><a name="[8f6cac8]"></a>_funder_rerounded</STRONG> (ARM, 0 bytes, Stack size 0 bytes, funder.o(x$fpl$funder))
<BR>[Called By]<UL><LI><a href="#[8f60830]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__funder
</UL><P><STRONG><a name="[8f6cb40]"></a>_funder_exact</STRONG> (ARM, 0 bytes, Stack size 0 bytes, funder.o(x$fpl$funder))
<BR>[Called By]<UL><LI><a href="#[8f60830]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__funder
</UL><P><STRONG><a name="[8f6cbb4]"></a>_funder_lostmant</STRONG> (ARM, 0 bytes, Stack size 0 bytes, funder.o(x$fpl$funder))
<BR>[Called By]<UL><LI><a href="#[8f60830]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__funder
</UL><P><STRONG><a name="[8f6ca50]"></a>_funder_returninx</STRONG> (ARM, 0 bytes, Stack size 0 bytes, funder.o(x$fpl$funder))
<BR>[Called By]<UL><LI><a href="#[8f60830]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__funder
</UL><P><STRONG><a name="[8f6cc2c]"></a>funder_trap</STRONG> (ARM, 0 bytes, Stack size 0 bytes, funder.o(x$fpl$funder))
<BR>[Called By]<UL><LI><a href="#[8f60830]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__funder
</UL><P><STRONG><a name="[8f5a580]"></a>ll_ufrom_d_neg</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dfixull.o(x$fpl$llufromd))
<BR>[Called By]<UL><LI><a href="#[7a377e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_ufrom_d
</UL><P><STRONG><a name="[8f5a50c]"></a>ll_ufrom_d_ivo</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dfixull.o(x$fpl$llufromd))
<BR>[Called By]<UL><LI><a href="#[7a377e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_ufrom_d
</UL><P><STRONG><a name="[8f6ad38]"></a>return_zero</STRONG> (ARM, 0 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR>[Called By]<UL><LI><a href="#[8f705dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL><P><STRONG><a name="[8f6acc4]"></a>return_umaxint</STRONG> (ARM, 0 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR>[Called By]<UL><LI><a href="#[8f705dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL><P><STRONG><a name="[8f6ada8]"></a>return_fpnan</STRONG> (ARM, 0 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR>[Called By]<UL><LI><a href="#[8f705dc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL><P><STRONG><a name="[8f6c204]"></a>cmp_specflags_unordered</STRONG> (ARM, 0 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR>[Called By]<UL><LI><a href="#[8f6c120]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL><P><STRONG><a name="[8f6c280]"></a>cmp_generic</STRONG> (ARM, 0 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR>[Called By]<UL><LI><a href="#[8f6c120]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL><P><STRONG><a name="[8f6c2f0]"></a>cmp_boolean</STRONG> (ARM, 0 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR>[Called By]<UL><LI><a href="#[8f6c120]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL><P><STRONG><a name="[4d31d78]"></a>INIT_WBFAT_FS</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[4d33580]">&lt&lt</a>&nbsp;&nbsp;&nbsp;wlan_init_thread (Weak Reference)
</UL><P><STRONG><a name="[8f4818c]"></a>__cpp_finalise_ddtors</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR>[Called By]<UL><LI><a href="#[4c8d178]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__cpp_finalise (Weak Reference)
</UL><P><STRONG><a name="[8f60748]"></a>__fpl_infinity</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[4f74894]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_d2f (Weak Reference)
<LI><a href="#[4f745fc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dadd (Weak Reference)
<LI><a href="#[8f5c2ec]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN (Weak Reference)
<LI><a href="#[8f6d4f0]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__32__fpl_fcmp_InfNaN (Weak Reference)
<LI><a href="#[4f73bfc]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ddiv (Weak Reference)
<LI><a href="#[4e4cde8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dfix (Weak Reference)
<LI><a href="#[77e7298]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dfixu (Weak Reference)
<LI><a href="#[4f74748]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_dmul (Weak Reference)
<LI><a href="#[4f74828]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_f2d (Weak Reference)
<LI><a href="#[5a878e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fadd (Weak Reference)
<LI><a href="#[5a87954]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fdiv (Weak Reference)
<LI><a href="#[4db4e7c]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ffix (Weak Reference)
<LI><a href="#[82cae94]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ffixu (Weak Reference)
<LI><a href="#[4db4ca4]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fmul (Weak Reference)
<LI><a href="#[7a377e8]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_ll_ufrom_d (Weak Reference)
</UL><P><STRONG><a name="[8f6a780]"></a>__sigvec_lookup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[8f6b204]">&lt&lt</a>&nbsp;&nbsp;&nbsp;__raise (Weak Reference)
</UL><P><STRONG><a name="[8f6bb6c]"></a>_fp_trap_big</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR>[Called By]<UL><LI><a href="#[8f6c194]">&lt&lt</a>&nbsp;&nbsp;&nbsp;_fp_trap (Weak Reference)
</UL><HR></body></html>